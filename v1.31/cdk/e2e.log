  I0104 12:08:37.814786      18 e2e.go:109] Starting e2e run "facbb43a-61d8-4a43-a758-221eb71ccef9" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1735992517 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0104 12:08:38.054461 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:08:38.057922 18 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0104 12:08:38.100345 18 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0104 12:08:38.104836 18 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0104 12:08:38.104891 18 e2e.go:245] e2e test version: v1.31.4
  I0104 12:08:38.106257 18 e2e.go:254] kube-apiserver version: v1.31.4
  I0104 12:08:38.106491 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:08:38.110885 18 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.057 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/04/25 12:08:38.334
  I0104 12:08:38.334149 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename disruption @ 01/04/25 12:08:38.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:08:38.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:08:38.357
  STEP: creating the pdb @ 01/04/25 12:08:38.36
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:08:38.364
  STEP: updating the pdb @ 01/04/25 12:08:40.371
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:08:40.385
  STEP: patching the pdb @ 01/04/25 12:08:42.389
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:08:42.401
  STEP: Waiting for the pdb to be deleted @ 01/04/25 12:08:42.415
  I0104 12:08:42.423172 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4762" for this suite. @ 01/04/25 12:08:42.426
• [4.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/04/25 12:08:42.433
  I0104 12:08:42.433986 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:08:42.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:08:42.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:08:42.455
  STEP: Setting up server cert @ 01/04/25 12:08:42.477
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:08:42.793
  STEP: Deploying the webhook pod @ 01/04/25 12:08:42.805
  STEP: Wait for the deployment to be ready @ 01/04/25 12:08:42.82
  I0104 12:08:42.831629 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0104 12:08:44.845065 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 8, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 8, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 8, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 8, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/04/25 12:08:46.85
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:08:46.864
  I0104 12:08:47.864996 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/04/25 12:08:47.876
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/04/25 12:08:47.895
  STEP: Creating a configMap that should not be mutated @ 01/04/25 12:08:47.904
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/04/25 12:08:47.916
  STEP: Creating a configMap that should be mutated @ 01/04/25 12:08:47.925
  I0104 12:08:48.001322 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3040" for this suite. @ 01/04/25 12:08:48.006
  STEP: Destroying namespace "webhook-markers-2646" for this suite. @ 01/04/25 12:08:48.016
• [5.592 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/04/25 12:08:48.025
  I0104 12:08:48.025941 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 12:08:48.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:08:48.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:08:48.048
  STEP: Counting existing ResourceQuota @ 01/04/25 12:08:48.051
  STEP: Creating a ResourceQuota @ 01/04/25 12:08:53.058
  STEP: Ensuring resource quota status is calculated @ 01/04/25 12:08:53.065
  STEP: Creating a ReplicaSet @ 01/04/25 12:08:55.071
  STEP: Ensuring resource quota status captures replicaset creation @ 01/04/25 12:08:55.084
  STEP: Deleting a ReplicaSet @ 01/04/25 12:08:57.091
  STEP: Ensuring resource quota status released usage @ 01/04/25 12:08:57.101
  I0104 12:08:59.106834 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1369" for this suite. @ 01/04/25 12:08:59.112
• [11.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/04/25 12:08:59.123
  I0104 12:08:59.123542 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:08:59.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:08:59.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:08:59.146
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:08:59.149
  STEP: Saw pod success @ 01/04/25 12:09:03.176
  I0104 12:09:03.182088 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-7297024d-a907-445c-8884-842277f2ca64 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:09:03.2
  I0104 12:09:03.223285 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8127" for this suite. @ 01/04/25 12:09:03.228
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/04/25 12:09:03.235
  I0104 12:09:03.235991 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename subjectreview @ 01/04/25 12:09:03.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:03.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:03.256
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1659" @ 01/04/25 12:09:03.259
  I0104 12:09:03.266029 18 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1659:e2e"
  I0104 12:09:03.266055 18 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1659"}
  I0104 12:09:03.266062 18 subjectreviews.go:71] saUID: "38b6393c-c0bf-4115-8265-7f32a614c7b5"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1659:e2e" @ 01/04/25 12:09:03.266
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1659:e2e" @ 01/04/25 12:09:03.266
  I0104 12:09:03.268129 18 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1659:e2e" api 'list' configmaps in "subjectreview-1659" namespace @ 01/04/25 12:09:03.268
  I0104 12:09:03.269907 18 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1659:e2e" @ 01/04/25 12:09:03.269
  I0104 12:09:03.271887 18 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0104 12:09:03.271909 18 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0104 12:09:03.272045 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1659" for this suite. @ 01/04/25 12:09:03.275
• [0.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/04/25 12:09:03.282
  I0104 12:09:03.282939 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubelet-test @ 01/04/25 12:09:03.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:03.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:03.301
  I0104 12:09:05.338811 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3742" for this suite. @ 01/04/25 12:09:05.344
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 01/04/25 12:09:05.354
  I0104 12:09:05.354502 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 12:09:05.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:05.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:05.374
  STEP: Creating a test headless service @ 01/04/25 12:09:05.378
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-525 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-525;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-525 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-525;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-525.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-525.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-525.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-525.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-525.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-525.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-525.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-525.svc;check="$$(dig +notcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_udp@PTR;check="$$(dig +tcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_tcp@PTR;sleep 1; done
   @ 01/04/25 12:09:05.398
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-525 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-525;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-525 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-525;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-525.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-525.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-525.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-525.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-525.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-525.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-525.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-525.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-525.svc;check="$$(dig +notcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_udp@PTR;check="$$(dig +tcp +noall +answer +search 17.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.17_tcp@PTR;sleep 1; done
   @ 01/04/25 12:09:05.398
  STEP: creating a pod to probe DNS @ 01/04/25 12:09:05.398
  STEP: submitting the pod to kubernetes @ 01/04/25 12:09:05.398
  STEP: retrieving the pod @ 01/04/25 12:09:11.435
  STEP: looking for the results for each expected name from probers @ 01/04/25 12:09:11.438
  I0104 12:09:11.445316 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.450774 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.454425 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-525 from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.460177 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-525 from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.465611 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.469573 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.475336 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.481066 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.506820 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.511931 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.515557 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-525 from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.520849 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-525 from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.526412 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.530445 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.535482 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.541196 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-525.svc from pod dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13: the server could not find the requested resource (get pods dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13)
  I0104 12:09:11.561080 18 dns_common.go:489] Lookups using dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-525 wheezy_tcp@dns-test-service.dns-525 wheezy_udp@dns-test-service.dns-525.svc wheezy_tcp@dns-test-service.dns-525.svc wheezy_udp@_http._tcp.dns-test-service.dns-525.svc wheezy_tcp@_http._tcp.dns-test-service.dns-525.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-525 jessie_tcp@dns-test-service.dns-525 jessie_udp@dns-test-service.dns-525.svc jessie_tcp@dns-test-service.dns-525.svc jessie_udp@_http._tcp.dns-test-service.dns-525.svc jessie_tcp@_http._tcp.dns-test-service.dns-525.svc]

  I0104 12:09:11.579054 18 dns_common.go:495] Pod client logs for webserver: 
  I0104 12:09:11.587873 18 dns_common.go:495] Pod client logs for querier: 
  I0104 12:09:11.593641 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0104 12:09:16.562003 18 dns_common.go:527] DNS probes using dns-525/dns-test-23cc271b-1e90-4b8d-ab9d-ab01c7efec13 succeeded

  STEP: deleting the pod @ 01/04/25 12:09:16.562
  STEP: deleting the test service @ 01/04/25 12:09:16.589
  STEP: deleting the test headless service @ 01/04/25 12:09:16.612
  I0104 12:09:16.629966 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-525" for this suite. @ 01/04/25 12:09:16.635
• [11.288 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/04/25 12:09:16.642
  I0104 12:09:16.642547 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/04/25 12:09:16.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:16.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:16.663
  STEP: creating @ 01/04/25 12:09:16.666
  STEP: getting @ 01/04/25 12:09:16.688
  STEP: listing in namespace @ 01/04/25 12:09:16.693
  STEP: patching @ 01/04/25 12:09:16.695
  STEP: deleting @ 01/04/25 12:09:16.713
  I0104 12:09:16.726869 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9783" for this suite. @ 01/04/25 12:09:16.731
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/04/25 12:09:16.739
  I0104 12:09:16.739455 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 12:09:16.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:16.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:16.76
  STEP: Creating a pod to test substitution in container's args @ 01/04/25 12:09:16.762
  STEP: Saw pod success @ 01/04/25 12:09:20.785
  I0104 12:09:20.790408 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod var-expansion-02401ce9-bd0a-4ff1-b774-a83368f7fddc container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 12:09:20.799
  I0104 12:09:20.820629 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5026" for this suite. @ 01/04/25 12:09:20.825
• [4.094 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/04/25 12:09:20.833
  I0104 12:09:20.833541 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 12:09:20.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:20.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:20.854
  I0104 12:09:22.879136 18 delete.go:62] Deleting pod "var-expansion-a6c9fe2a-cadf-4e2b-8b3b-565f5e9653d5" in namespace "var-expansion-263"
  I0104 12:09:22.888906 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-a6c9fe2a-cadf-4e2b-8b3b-565f5e9653d5" to be fully deleted
  I0104 12:09:24.898418 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-263" for this suite. @ 01/04/25 12:09:24.903
• [4.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/04/25 12:09:24.913
  I0104 12:09:24.913625 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/04/25 12:09:24.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:24.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:24.933
  I0104 12:09:24.936247 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:09:25.485920 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3217" for this suite. @ 01/04/25 12:09:25.493
• [0.591 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 01/04/25 12:09:25.505
  I0104 12:09:25.505070 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:09:25.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:25.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:25.525
  I0104 12:09:25.528420 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 create -f -'
  I0104 12:09:25.627131 18 builder.go:146] stderr: ""
  I0104 12:09:25.627167 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0104 12:09:25.627228 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 create -f -'
  I0104 12:09:25.722159 18 builder.go:146] stderr: ""
  I0104 12:09:25.722204 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/04/25 12:09:25.722
  I0104 12:09:26.728359 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 12:09:26.728397 18 framework.go:733] Found 1 / 1
  I0104 12:09:26.728412 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0104 12:09:26.733414 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 12:09:26.733434 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0104 12:09:26.733600 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 describe pod agnhost-primary-4c27s'
  I0104 12:09:26.798351 18 builder.go:146] stderr: ""
  I0104 12:09:26.798418 18 builder.go:147] stdout: "Name:             agnhost-primary-4c27s\nNamespace:        kubectl-8655\nPriority:         0\nService Account:  default\nNode:             ip-172-31-8-94/172.31.8.94\nStart Time:       Sat, 04 Jan 2025 12:09:25 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.104.133\nIPs:\n  IP:           192.168.104.133\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a954b21b4cdb6150eb5d7818b6348c7e73901b4e1460cce204d93d5431729aa6\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 04 Jan 2025 12:09:26 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-wxcxz (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-wxcxz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8655/agnhost-primary-4c27s to ip-172-31-8-94\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0104 12:09:26.798478 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 describe rc agnhost-primary'
  I0104 12:09:26.859568 18 builder.go:146] stderr: ""
  I0104 12:09:26.859625 18 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8655\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-4c27s\n"
  I0104 12:09:26.859694 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 describe service agnhost-primary'
  I0104 12:09:26.919453 18 builder.go:146] stderr: ""
  I0104 12:09:26.919498 18 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8655\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.20\nIPs:                      10.152.183.20\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.104.133:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0104 12:09:26.924891 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 describe node ip-172-31-18-169'
  I0104 12:09:27.027309 18 builder.go:146] stderr: ""
  I0104 12:09:27.027462 18 builder.go:147] stdout: "Name:               ip-172-31-18-169\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-18-169\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 04 Jan 2025 11:52:46 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-18-169\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 04 Jan 2025 12:09:25 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 04 Jan 2025 12:04:01 +0000   Sat, 04 Jan 2025 12:04:01 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 04 Jan 2025 12:08:45 +0000   Sat, 04 Jan 2025 11:52:46 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 04 Jan 2025 12:08:45 +0000   Sat, 04 Jan 2025 11:52:46 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 04 Jan 2025 12:08:45 +0000   Sat, 04 Jan 2025 11:52:46 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 04 Jan 2025 12:08:45 +0000   Sat, 04 Jan 2025 11:57:33 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.18.169\n  Hostname:    ip-172-31-18-169\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967632Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865232Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec283f0d9dd03b43c1d6cf4f8a977e34\n  System UUID:                     ec283f0d-9dd0-3b43-c1d6-cf4f8a977e34\n  Boot ID:                         e5846a5c-2130-4462-a348-9e45692a51b4\n  Kernel Version:                  6.8.0-1021-aws\n  OS Image:                        Ubuntu 22.04.5 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.31.4\n  Kube-Proxy Version:              v1.31.4\nNon-terminated Pods:               (8 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-9kbc6           0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m\n  kube-system                      calico-node-7jxjd                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         5m28s\n  kube-system                      coredns-5b4857d7c8-znj7g                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     16m\n  kube-system                      kube-state-metrics-5d7bdccd49-w7r9q                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\n  kube-system                      metrics-server-v0.7.1-6c77d69467-j4g8b                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     16m\n  kubernetes-dashboard             dashboard-metrics-scraper-64757cf48d-j7szt                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\n  kubernetes-dashboard             kubernetes-dashboard-7b6b7bcb5d-sprml                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-nzqp5    0 (0%)        0 (0%)      0 (0%)           0 (0%)         59s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                355m (17%)  100m (5%)\n  memory             120Mi (1%)  470Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 16m                kube-proxy       \n  Normal   Starting                 7m21s              kube-proxy       \n  Normal   Starting                 11m                kube-proxy       \n  Normal   Starting                 15m                kube-proxy       \n  Normal   Starting                 15m                kube-proxy       \n  Normal   NodeAllocatableEnforced  16m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     16m (x2 over 16m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  16m (x2 over 16m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    16m (x2 over 16m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasNoDiskPressure\n  Normal   Starting                 16m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      16m                kubelet          invalid capacity 0 on image filesystem\n  Normal   RegisteredNode           16m                node-controller  Node ip-172-31-18-169 event: Registered Node ip-172-31-18-169 in Controller\n  Normal   NodeAllocatableEnforced  16m                kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 16m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      16m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     16m (x7 over 16m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    16m (x7 over 16m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  16m (x8 over 16m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientMemory  15m (x2 over 15m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     15m (x2 over 15m)  kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           13m                node-controller  Node ip-172-31-18-169 event: Registered Node ip-172-31-18-169 in Controller\n  Normal   RegisteredNode           12m                node-controller  Node ip-172-31-18-169 event: Registered Node ip-172-31-18-169 in Controller\n  Normal   Starting                 11m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  11m                kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    11m                kubelet          Node ip-172-31-18-169 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     11m                kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  11m                kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      11m                kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 7m22s              kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      7m22s              kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  7m22s              kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  7m22s              kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    7m22s              kubelet          Node ip-172-31-18-169 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     7m22s              kubelet          Node ip-172-31-18-169 status is now: NodeHasSufficientPID\n"
  I0104 12:09:27.027724 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8655 describe namespace kubectl-8655'
  I0104 12:09:27.086829 18 builder.go:146] stderr: ""
  I0104 12:09:27.086877 18 builder.go:147] stdout: "Name:         kubectl-8655\nLabels:       e2e-framework=kubectl\n              e2e-run=facbb43a-61d8-4a43-a758-221eb71ccef9\n              kubernetes.io/metadata.name=kubectl-8655\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0104 12:09:27.086999 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8655" for this suite. @ 01/04/25 12:09:27.091
• [1.594 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/04/25 12:09:27.099
  I0104 12:09:27.099151 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename proxy @ 01/04/25 12:09:27.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:27.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:27.12
  I0104 12:09:27.123131 18 proxy.go:387] Creating pod...
  I0104 12:09:29.146251 18 proxy.go:411] Creating service...
  I0104 12:09:29.162175 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=DELETE
  I0104 12:09:29.171538 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0104 12:09:29.171575 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=OPTIONS
  I0104 12:09:29.175598 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0104 12:09:29.175635 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=PATCH
  I0104 12:09:29.181268 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0104 12:09:29.181328 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=POST
  I0104 12:09:29.186885 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0104 12:09:29.186910 18 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=PUT
  I0104 12:09:29.190749 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0104 12:09:29.190782 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=DELETE
  I0104 12:09:29.199041 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0104 12:09:29.199074 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0104 12:09:29.208398 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0104 12:09:29.208425 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=PATCH
  I0104 12:09:29.213662 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0104 12:09:29.213713 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=POST
  I0104 12:09:29.222792 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0104 12:09:29.222822 18 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=PUT
  I0104 12:09:29.233598 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0104 12:09:29.233639 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=GET
  I0104 12:09:29.236459 18 proxy.go:487] http.Client request:GET StatusCode:301
  I0104 12:09:29.236478 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=GET
  I0104 12:09:29.242377 18 proxy.go:487] http.Client request:GET StatusCode:301
  I0104 12:09:29.242403 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/pods/agnhost/proxy?method=HEAD
  I0104 12:09:29.246583 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0104 12:09:29.246607 18 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8451/services/e2e-proxy-test-service/proxy?method=HEAD
  I0104 12:09:29.253638 18 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0104 12:09:29.253819 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8451" for this suite. @ 01/04/25 12:09:29.257
• [2.166 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/04/25 12:09:29.264
  I0104 12:09:29.264866 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename security-context @ 01/04/25 12:09:29.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:29.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:29.284
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/04/25 12:09:29.29
  STEP: Saw pod success @ 01/04/25 12:09:33.316
  I0104 12:09:33.321447 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod security-context-0fe3e472-b378-4ec2-a6ae-96f67cfc35ce container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:09:33.329
  I0104 12:09:33.350659 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2557" for this suite. @ 01/04/25 12:09:33.355
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/04/25 12:09:33.362
  I0104 12:09:33.362888 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 12:09:33.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:33.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:33.382
  I0104 12:09:33.403722 18 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/04/25 12:09:33.411
  I0104 12:09:33.416756 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:33.416785 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/04/25 12:09:33.416
  I0104 12:09:33.440171 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:33.440195 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:09:34.436988 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:34.437022 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:09:35.438591 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:35.438627 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:09:36.440467 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0104 12:09:36.440502 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/04/25 12:09:36.445
  I0104 12:09:36.467641 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0104 12:09:36.467662 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0104 12:09:37.463700 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:37.463732 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/04/25 12:09:37.463
  I0104 12:09:37.478124 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:37.478151 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:09:38.477113 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:38.477146 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:09:39.477748 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0104 12:09:39.477782 18 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/04/25 12:09:39.485
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2042, will wait for the garbage collector to delete the pods @ 01/04/25 12:09:39.485
  I0104 12:09:39.549134 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.887385ms
  I0104 12:09:39.649808 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.670045ms
  I0104 12:09:41.353654 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:09:41.353712 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0104 12:09:41.359755 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4522"},"items":null}

  I0104 12:09:41.364924 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4522"},"items":null}

  I0104 12:09:41.393110 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2042" for this suite. @ 01/04/25 12:09:41.397
• [8.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 01/04/25 12:09:41.405
  I0104 12:09:41.405081 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 12:09:41.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:09:41.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:09:41.429
  STEP: Creating service test in namespace statefulset-542 @ 01/04/25 12:09:41.432
  STEP: Creating statefulset ss in namespace statefulset-542 @ 01/04/25 12:09:41.441
  I0104 12:09:41.454594 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0104 12:09:51.458249 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/04/25 12:09:51.468
  STEP: updating a scale subresource @ 01/04/25 12:09:51.471
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/04/25 12:09:51.48
  STEP: Patch a scale subresource @ 01/04/25 12:09:51.489
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/04/25 12:09:51.509
  I0104 12:09:51.514844 18 statefulset.go:138] Deleting all statefulset in ns statefulset-542
  I0104 12:09:51.521397 18 rest.go:150] Scaling statefulset ss to 0
  I0104 12:10:01.543098 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 12:10:01.548387 18 rest.go:88] Deleting statefulset ss
  I0104 12:10:01.565877 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-542" for this suite. @ 01/04/25 12:10:01.569
• [20.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/04/25 12:10:01.577
  I0104 12:10:01.577484 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename security-context-test @ 01/04/25 12:10:01.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:10:01.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:10:01.598
  I0104 12:10:05.639471 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1590" for this suite. @ 01/04/25 12:10:05.644
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/04/25 12:10:05.654
  I0104 12:10:05.654231 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:10:05.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:10:05.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:10:05.671
  STEP: Setting up server cert @ 01/04/25 12:10:05.699
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:10:05.872
  STEP: Deploying the webhook pod @ 01/04/25 12:10:05.882
  STEP: Wait for the deployment to be ready @ 01/04/25 12:10:05.899
  I0104 12:10:05.910931 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:10:07.924
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:10:07.937
  I0104 12:10:08.938793 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/04/25 12:10:09.029
  STEP: Creating a configMap that should be mutated @ 01/04/25 12:10:09.041
  STEP: Deleting the collection of validation webhooks @ 01/04/25 12:10:09.073
  STEP: Creating a configMap that should not be mutated @ 01/04/25 12:10:09.138
  I0104 12:10:09.195821 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1078" for this suite. @ 01/04/25 12:10:09.199
  STEP: Destroying namespace "webhook-markers-257" for this suite. @ 01/04/25 12:10:09.21
• [3.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/04/25 12:10:09.218
  I0104 12:10:09.218891 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:10:09.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:10:09.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:10:09.24
  STEP: Creating secret with name s-test-opt-del-2a7a485d-6999-438d-a37c-e780be837583 @ 01/04/25 12:10:09.248
  STEP: Creating secret with name s-test-opt-upd-3e660fe2-f9de-4975-9eea-354ff03ac861 @ 01/04/25 12:10:09.253
  STEP: Creating the pod @ 01/04/25 12:10:09.259
  STEP: Deleting secret s-test-opt-del-2a7a485d-6999-438d-a37c-e780be837583 @ 01/04/25 12:10:11.312
  STEP: Updating secret s-test-opt-upd-3e660fe2-f9de-4975-9eea-354ff03ac861 @ 01/04/25 12:10:11.319
  STEP: Creating secret with name s-test-opt-create-898cfbaa-ca26-4d39-b555-dbeb85e2afb2 @ 01/04/25 12:10:11.326
  STEP: waiting to observe update in volume @ 01/04/25 12:10:11.332
  I0104 12:11:37.801187 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4257" for this suite. @ 01/04/25 12:11:37.806
• [88.595 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/04/25 12:11:37.814
  I0104 12:11:37.814075 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename certificates @ 01/04/25 12:11:37.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:37.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:37.837
  STEP: getting /apis @ 01/04/25 12:11:38.249
  STEP: getting /apis/certificates.k8s.io @ 01/04/25 12:11:38.254
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/04/25 12:11:38.255
  STEP: creating @ 01/04/25 12:11:38.256
  STEP: getting @ 01/04/25 12:11:38.278
  STEP: listing @ 01/04/25 12:11:38.283
  STEP: watching @ 01/04/25 12:11:38.288
  I0104 12:11:38.288573 18 certificates.go:316] starting watch
  STEP: patching @ 01/04/25 12:11:38.29
  STEP: updating @ 01/04/25 12:11:38.296
  I0104 12:11:38.303715 18 certificates.go:332] waiting for watch events with expected annotations
  I0104 12:11:38.303753 18 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/04/25 12:11:38.303
  STEP: patching /approval @ 01/04/25 12:11:38.308
  STEP: updating /approval @ 01/04/25 12:11:38.314
  STEP: getting /status @ 01/04/25 12:11:38.322
  STEP: patching /status @ 01/04/25 12:11:38.327
  STEP: updating /status @ 01/04/25 12:11:38.334
  STEP: deleting @ 01/04/25 12:11:38.342
  STEP: deleting a collection @ 01/04/25 12:11:38.359
  I0104 12:11:38.379661 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5336" for this suite. @ 01/04/25 12:11:38.384
• [0.578 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/04/25 12:11:38.392
  I0104 12:11:38.392302 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 12:11:38.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:38.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:38.412
  STEP: Creating a pod to test substitution in volume subpath @ 01/04/25 12:11:38.415
  STEP: Saw pod success @ 01/04/25 12:11:42.446
  I0104 12:11:42.452229 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod var-expansion-d29d8f59-d06d-4756-b03c-02d63403334d container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 12:11:42.462
  I0104 12:11:42.486961 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-913" for this suite. @ 01/04/25 12:11:42.492
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 01/04/25 12:11:42.502
  I0104 12:11:42.502534 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:11:42.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:42.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:42.521
  STEP: creating an Endpoint @ 01/04/25 12:11:42.526
  STEP: waiting for available Endpoint @ 01/04/25 12:11:42.532
  STEP: listing all Endpoints @ 01/04/25 12:11:42.534
  STEP: updating the Endpoint @ 01/04/25 12:11:42.539
  STEP: fetching the Endpoint @ 01/04/25 12:11:42.545
  STEP: patching the Endpoint @ 01/04/25 12:11:42.549
  STEP: fetching the Endpoint @ 01/04/25 12:11:42.558
  STEP: deleting the Endpoint by Collection @ 01/04/25 12:11:42.561
  STEP: waiting for Endpoint deletion @ 01/04/25 12:11:42.571
  STEP: fetching the Endpoint @ 01/04/25 12:11:42.573
  I0104 12:11:42.577438 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8256" for this suite. @ 01/04/25 12:11:42.582
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/04/25 12:11:42.591
  I0104 12:11:42.591795 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename disruption @ 01/04/25 12:11:42.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:42.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:42.612
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:11:42.62
  STEP: Waiting for all pods to be running @ 01/04/25 12:11:42.653
  I0104 12:11:42.658923 18 disruption.go:691] running pods: 0 < 3
  I0104 12:11:44.663295 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1150" for this suite. @ 01/04/25 12:11:44.666
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/04/25 12:11:44.676
  I0104 12:11:44.676173 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:11:44.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:44.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:44.693
  STEP: Creating secret with name secret-test-d2a30959-280f-4f1d-89c0-61c6071007bb @ 01/04/25 12:11:44.716
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:11:44.724
  STEP: Saw pod success @ 01/04/25 12:11:48.755
  I0104 12:11:48.760587 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-secrets-448d3608-f496-404b-89a7-a1509cff0b21 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:11:48.768
  I0104 12:11:48.790910 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4421" for this suite. @ 01/04/25 12:11:48.795
  STEP: Destroying namespace "secret-namespace-3689" for this suite. @ 01/04/25 12:11:48.803
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 01/04/25 12:11:48.811
  I0104 12:11:48.811580 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 12:11:48.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:48.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:48.831
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6961.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6961.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 01/04/25 12:11:48.834
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6961.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6961.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/04/25 12:11:48.834
  STEP: creating a pod to probe /etc/hosts @ 01/04/25 12:11:48.834
  STEP: submitting the pod to kubernetes @ 01/04/25 12:11:48.834
  STEP: retrieving the pod @ 01/04/25 12:11:54.868
  STEP: looking for the results for each expected name from probers @ 01/04/25 12:11:54.871
  I0104 12:11:54.893168 18 dns_common.go:527] DNS probes using dns-6961/dns-test-a0d77a2e-1f45-4b8d-8a4f-f02396b9292f succeeded

  STEP: deleting the pod @ 01/04/25 12:11:54.893
  I0104 12:11:54.910246 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6961" for this suite. @ 01/04/25 12:11:54.913
• [6.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/04/25 12:11:54.922
  I0104 12:11:54.922925 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/04/25 12:11:54.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:54.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:54.941
  I0104 12:11:54.951586 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2595" for this suite. @ 01/04/25 12:11:54.956
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/04/25 12:11:54.966
  I0104 12:11:54.966146 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sysctl @ 01/04/25 12:11:54.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:54.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:54.986
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/04/25 12:11:54.989
  I0104 12:11:54.994930 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4863" for this suite. @ 01/04/25 12:11:54.999
• [0.043 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/04/25 12:11:55.009
  I0104 12:11:55.009724 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/04/25 12:11:55.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:11:55.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:11:55.029
  I0104 12:11:55.031812 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0104 12:12:55.032390 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0104 12:12:55.038811 18 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/04/25 12:12:55.038
  I0104 12:12:55.261310 18 taints.go:463] Pod1 is running on ip-172-31-8-94. Tainting Node
  I0104 12:12:57.485267 18 taints.go:471] Pod2 is running on ip-172-31-8-94. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/04/25 12:12:57.485
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/04/25 12:12:57.494
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/04/25 12:12:57.501
  I0104 12:13:03.147269 18 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0104 12:13:23.181212 18 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/04/25 12:13:23.192
  I0104 12:13:23.196025 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1304" for this suite. @ 01/04/25 12:13:23.202
• [88.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/04/25 12:13:23.211
  I0104 12:13:23.211478 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:13:23.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:23.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:23.235
  STEP: Creating configMap with name cm-test-opt-del-59784b7d-13d2-4705-89e5-0b596b37ea53 @ 01/04/25 12:13:23.245
  STEP: Creating configMap with name cm-test-opt-upd-1c848069-fabe-4d8c-b959-df918b752332 @ 01/04/25 12:13:23.251
  STEP: Creating the pod @ 01/04/25 12:13:23.257
  STEP: Deleting configmap cm-test-opt-del-59784b7d-13d2-4705-89e5-0b596b37ea53 @ 01/04/25 12:13:25.313
  STEP: Updating configmap cm-test-opt-upd-1c848069-fabe-4d8c-b959-df918b752332 @ 01/04/25 12:13:25.322
  STEP: Creating configMap with name cm-test-opt-create-472a0a70-5d94-4aa9-8728-35add04f1daf @ 01/04/25 12:13:25.326
  STEP: waiting to observe update in volume @ 01/04/25 12:13:25.333
  I0104 12:13:29.377605 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6568" for this suite. @ 01/04/25 12:13:29.38
• [6.179 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/04/25 12:13:29.39
  I0104 12:13:29.390639 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename namespaces @ 01/04/25 12:13:29.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:29.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:29.412
  STEP: Creating namespace "e2e-ns-2n5lx" @ 01/04/25 12:13:29.414
  I0104 12:13:29.432302 18 namespace.go:411] Namespace "e2e-ns-2n5lx-2193" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-2n5lx-2193" @ 01/04/25 12:13:29.432
  I0104 12:13:29.443088 18 namespace.go:434] Namespace "e2e-ns-2n5lx-2193" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-2n5lx-2193" @ 01/04/25 12:13:29.443
  I0104 12:13:29.453219 18 namespace.go:463] Namespace "e2e-ns-2n5lx-2193" has []v1.FinalizerName{"kubernetes"}
  I0104 12:13:29.453306 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5072" for this suite. @ 01/04/25 12:13:29.458
  STEP: Destroying namespace "e2e-ns-2n5lx-2193" for this suite. @ 01/04/25 12:13:29.467
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/04/25 12:13:29.474
  I0104 12:13:29.474966 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 12:13:29.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:29.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:29.494
  STEP: create the deployment @ 01/04/25 12:13:29.497
  W0104 12:13:29.504520      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/04/25 12:13:29.504
  STEP: delete the deployment @ 01/04/25 12:13:29.51
  STEP: wait for all rs to be garbage collected @ 01/04/25 12:13:29.524
  STEP: expected 0 rs, got 1 rs @ 01/04/25 12:13:29.53
  STEP: expected 0 pods, got 2 pods @ 01/04/25 12:13:29.535
  STEP: Gathering metrics @ 01/04/25 12:13:30.04
  W0104 12:13:30.045405      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0104 12:13:30.045434 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0104 12:13:30.045554 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-30" for this suite. @ 01/04/25 12:13:30.05
• [0.584 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/04/25 12:13:30.059
  I0104 12:13:30.059110 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 12:13:30.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:30.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:30.086
  STEP: create the rc1 @ 01/04/25 12:13:30.094
  STEP: create the rc2 @ 01/04/25 12:13:30.101
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/04/25 12:13:36.112
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/04/25 12:13:36.614
  STEP: wait for the rc to be deleted @ 01/04/25 12:13:36.623
  I0104 12:13:41.636231 18 garbage_collector.go:762] 65 pods remaining
  I0104 12:13:41.636258 18 garbage_collector.go:769] 65 pods has nil DeletionTimestamp
  I0104 12:13:41.636264 18 garbage_collector.go:770] 
  STEP: Gathering metrics @ 01/04/25 12:13:46.637
  W0104 12:13:46.644662      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0104 12:13:46.644711 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0104 12:13:46.644762 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2b4gc" in namespace "gc-7352"
  I0104 12:13:46.663121 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2dhdh" in namespace "gc-7352"
  I0104 12:13:46.680691 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2g9p7" in namespace "gc-7352"
  I0104 12:13:46.701743 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2grvj" in namespace "gc-7352"
  I0104 12:13:46.714745 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-44xmp" in namespace "gc-7352"
  I0104 12:13:46.730969 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4brtw" in namespace "gc-7352"
  I0104 12:13:46.748503 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zpx6" in namespace "gc-7352"
  I0104 12:13:46.767501 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56fl6" in namespace "gc-7352"
  I0104 12:13:46.784730 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5djwv" in namespace "gc-7352"
  I0104 12:13:46.799466 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jllz" in namespace "gc-7352"
  I0104 12:13:46.812926 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wlpv" in namespace "gc-7352"
  I0104 12:13:46.832975 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64ljc" in namespace "gc-7352"
  I0104 12:13:46.851474 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6brhp" in namespace "gc-7352"
  I0104 12:13:46.868003 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mmtp" in namespace "gc-7352"
  I0104 12:13:46.889099 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vns8" in namespace "gc-7352"
  I0104 12:13:46.902928 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xm6p" in namespace "gc-7352"
  I0104 12:13:46.919790 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xx4r" in namespace "gc-7352"
  I0104 12:13:46.938515 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6z64r" in namespace "gc-7352"
  I0104 12:13:46.959926 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jx74" in namespace "gc-7352"
  I0104 12:13:46.973938 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lrw8" in namespace "gc-7352"
  I0104 12:13:46.995617 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7wcx8" in namespace "gc-7352"
  I0104 12:13:47.020952 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8g4pr" in namespace "gc-7352"
  I0104 12:13:47.041353 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rnk6" in namespace "gc-7352"
  I0104 12:13:47.066046 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8wqr2" in namespace "gc-7352"
  I0104 12:13:47.090638 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9272d" in namespace "gc-7352"
  I0104 12:13:47.116430 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-96qg2" in namespace "gc-7352"
  I0104 12:13:47.133480 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cgts" in namespace "gc-7352"
  I0104 12:13:47.156246 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ddtt" in namespace "gc-7352"
  I0104 12:13:47.175443 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dxjk" in namespace "gc-7352"
  I0104 12:13:47.198176 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pmgm" in namespace "gc-7352"
  I0104 12:13:47.217130 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9srxn" in namespace "gc-7352"
  I0104 12:13:47.234060 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b4xw5" in namespace "gc-7352"
  I0104 12:13:47.256037 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bb8z8" in namespace "gc-7352"
  I0104 12:13:47.276546 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbngm" in namespace "gc-7352"
  I0104 12:13:47.295535 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bnd7p" in namespace "gc-7352"
  I0104 12:13:47.311477 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqlqx" in namespace "gc-7352"
  I0104 12:13:47.328668 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btmb5" in namespace "gc-7352"
  I0104 12:13:47.343798 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwdt8" in namespace "gc-7352"
  I0104 12:13:47.355765 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2v8w" in namespace "gc-7352"
  I0104 12:13:47.370991 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdk2z" in namespace "gc-7352"
  I0104 12:13:47.389769 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdq56" in namespace "gc-7352"
  I0104 12:13:47.403226 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ctn9b" in namespace "gc-7352"
  I0104 12:13:47.432401 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7trv" in namespace "gc-7352"
  I0104 12:13:47.452524 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dkwpf" in namespace "gc-7352"
  I0104 12:13:47.468743 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dw4zp" in namespace "gc-7352"
  I0104 12:13:47.488421 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fhdc9" in namespace "gc-7352"
  I0104 12:13:47.511615 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fj65c" in namespace "gc-7352"
  I0104 12:13:47.528166 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkm7d" in namespace "gc-7352"
  I0104 12:13:47.544932 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-frxrm" in namespace "gc-7352"
  I0104 12:13:47.561993 18 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fx44j" in namespace "gc-7352"
  I0104 12:13:47.576080 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7352" for this suite. @ 01/04/25 12:13:47.581
• [17.531 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/04/25 12:13:47.59
  I0104 12:13:47.590358 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:13:47.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:47.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:47.615
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3612 @ 01/04/25 12:13:47.621
  STEP: changing the ExternalName service to type=ClusterIP @ 01/04/25 12:13:47.626
  STEP: creating replication controller externalname-service in namespace services-3612 @ 01/04/25 12:13:47.647
  I0104 12:13:47.658804      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3612, replica count: 2
  I0104 12:13:50.710808      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 12:13:50.710843 18 resource.go:361] Creating new exec pod
  I0104 12:13:53.733172 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-3612 exec execpod5dlbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0104 12:13:53.836367 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0104 12:13:53.836409 18 builder.go:147] stdout: ""
  I0104 12:13:54.733361 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-3612 exec execpod5dlbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0104 12:13:54.814843 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0104 12:13:54.814893 18 builder.go:147] stdout: "externalname-service-v8m86"
  I0104 12:13:54.814975 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-3612 exec execpod5dlbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.186 80'
  I0104 12:13:54.910323 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.186 80\nConnection to 10.152.183.186 80 port [tcp/http] succeeded!\n"
  I0104 12:13:54.910364 18 builder.go:147] stdout: "externalname-service-v8m86"
  I0104 12:13:54.910464 18 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0104 12:13:54.936011 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3612" for this suite. @ 01/04/25 12:13:54.942
• [7.360 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/04/25 12:13:54.95
  I0104 12:13:54.950202 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:13:54.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:54.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:54.97
  STEP: Creating configMap with name projected-configmap-test-volume-40d849d7-fc4e-4568-ace7-2747bf3d8f66 @ 01/04/25 12:13:54.974
  STEP: Creating a pod to test consume configMaps @ 01/04/25 12:13:54.979
  STEP: Saw pod success @ 01/04/25 12:13:59.006
  I0104 12:13:59.010565 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-projected-configmaps-797721cf-7674-4dc3-9b4f-091939ce9ddf container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:13:59.024
  I0104 12:13:59.041872 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6255" for this suite. @ 01/04/25 12:13:59.046
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/04/25 12:13:59.055
  I0104 12:13:59.055419 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 12:13:59.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:13:59.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:13:59.076
  STEP: Creating pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078 @ 01/04/25 12:13:59.08
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 12:14:01.105
  I0104 12:14:01.109696 18 container_probe.go:1749] Initial restart count of pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 is 0
  I0104 12:14:01.112279 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:03.115615 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:05.119892 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:07.126351 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:09.132008 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:11.137903 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:13.144156 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:15.148401 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:17.154930 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:19.159562 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:21.165691 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:21.165729 18 container_probe.go:1763] Restart count of pod container-probe-8078/liveness-59d005dc-84c2-45c2-b685-78d9344246f2 is now 1 (20.056006637s elapsed)
  I0104 12:14:23.172603 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:25.176889 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:27.183386 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:29.189709 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:31.196354 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:33.203638 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:35.209075 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:37.215533 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:39.221340 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:41.225659 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:41.225716 18 container_probe.go:1763] Restart count of pod container-probe-8078/liveness-59d005dc-84c2-45c2-b685-78d9344246f2 is now 2 (40.115993222s elapsed)
  I0104 12:14:43.230389 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:45.235989 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:47.240770 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:49.247619 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:51.253581 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:53.257844 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:55.264172 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:57.270286 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:14:59.275749 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:01.280372 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:01.280411 18 container_probe.go:1763] Restart count of pod container-probe-8078/liveness-59d005dc-84c2-45c2-b685-78d9344246f2 is now 3 (1m0.170688501s elapsed)
  I0104 12:15:03.287045 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:05.293876 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:07.301452 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:09.307012 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:11.311992 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:13.318285 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:15.324538 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:17.333233 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:19.340193 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:21.345219 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:21.345257 18 container_probe.go:1763] Restart count of pod container-probe-8078/liveness-59d005dc-84c2-45c2-b685-78d9344246f2 is now 4 (1m20.235535659s elapsed)
  I0104 12:15:23.351293 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:25.357636 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:27.363552 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:29.367526 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:31.373728 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:33.380242 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:35.387021 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:37.393535 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:39.399736 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:41.403897 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:43.411011 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:45.418695 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:47.423804 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:49.430382 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:51.435567 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:53.442471 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:55.450299 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:57.456593 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:15:59.463178 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:01.467888 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:03.472757 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:05.480360 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:07.486209 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:09.493335 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:11.499640 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:13.504210 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:15.511571 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:17.515811 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:19.522214 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:21.527800 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:23.532921 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:25.539903 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:27.545574 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:29.552322 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:31.559285 18 container_probe.go:1759] Get pod liveness-59d005dc-84c2-45c2-b685-78d9344246f2 in namespace container-probe-8078
  I0104 12:16:31.559324 18 container_probe.go:1763] Restart count of pod container-probe-8078/liveness-59d005dc-84c2-45c2-b685-78d9344246f2 is now 5 (2m30.449600717s elapsed)
  STEP: deleting the pod @ 01/04/25 12:16:31.559
  I0104 12:16:31.577866 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8078" for this suite. @ 01/04/25 12:16:31.583
• [152.536 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/04/25 12:16:31.591
  I0104 12:16:31.591365 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:16:31.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:31.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:31.614
  STEP: Creating secret with name projected-secret-test-ce257956-59b7-43c6-ae42-ebdc60d552f3 @ 01/04/25 12:16:31.617
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:16:31.622
  STEP: Saw pod success @ 01/04/25 12:16:35.649
  I0104 12:16:35.655291 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-secrets-00c82d69-beaf-4b5d-b0e5-c4d925632a18 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:16:35.676
  I0104 12:16:35.699493 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7102" for this suite. @ 01/04/25 12:16:35.704
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/04/25 12:16:35.714
  I0104 12:16:35.714180 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename watch @ 01/04/25 12:16:35.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:35.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:35.736
  STEP: creating a watch on configmaps @ 01/04/25 12:16:35.739
  STEP: creating a new configmap @ 01/04/25 12:16:35.74
  STEP: modifying the configmap once @ 01/04/25 12:16:35.746
  STEP: closing the watch once it receives two notifications @ 01/04/25 12:16:35.756
  I0104 12:16:35.756267 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2880  8126f78d-0fdd-4aee-8b92-843b3f5a92f8 9143 0 2025-01-04 12:16:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-04 12:16:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:16:35.756384 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2880  8126f78d-0fdd-4aee-8b92-843b3f5a92f8 9144 0 2025-01-04 12:16:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-04 12:16:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/04/25 12:16:35.756
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/04/25 12:16:35.765
  STEP: deleting the configmap @ 01/04/25 12:16:35.766
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/04/25 12:16:35.777
  I0104 12:16:35.777661 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2880  8126f78d-0fdd-4aee-8b92-843b3f5a92f8 9145 0 2025-01-04 12:16:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-04 12:16:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:16:35.777794 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2880  8126f78d-0fdd-4aee-8b92-843b3f5a92f8 9146 0 2025-01-04 12:16:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-04 12:16:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:16:35.777876 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2880" for this suite. @ 01/04/25 12:16:35.782
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 01/04/25 12:16:35.793
  I0104 12:16:35.793314 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 12:16:35.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:35.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:35.815
  STEP: Creating a test headless service @ 01/04/25 12:16:35.818
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6196.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6196.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 01/04/25 12:16:35.823
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6196.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6196.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/04/25 12:16:35.823
  STEP: creating a pod to probe DNS @ 01/04/25 12:16:35.823
  STEP: submitting the pod to kubernetes @ 01/04/25 12:16:35.823
  STEP: retrieving the pod @ 01/04/25 12:16:37.846
  STEP: looking for the results for each expected name from probers @ 01/04/25 12:16:37.851
  I0104 12:16:37.872890 18 dns_common.go:527] DNS probes using dns-6196/dns-test-0e1328e7-57fd-42b2-afd7-d2f54b25f331 succeeded

  STEP: deleting the pod @ 01/04/25 12:16:37.872
  STEP: deleting the test headless service @ 01/04/25 12:16:37.895
  I0104 12:16:37.916544 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6196" for this suite. @ 01/04/25 12:16:37.919
• [2.135 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/04/25 12:16:37.928
  I0104 12:16:37.928571 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 12:16:37.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:37.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:37.946
  STEP: Counting existing ResourceQuota @ 01/04/25 12:16:37.949
  STEP: Creating a ResourceQuota @ 01/04/25 12:16:42.953
  STEP: Ensuring resource quota status is calculated @ 01/04/25 12:16:42.96
  STEP: Creating a Pod that fits quota @ 01/04/25 12:16:44.966
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/04/25 12:16:44.983
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/04/25 12:16:46.99
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/04/25 12:16:46.992
  STEP: Ensuring a pod cannot update its resource requirements @ 01/04/25 12:16:46.994
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/04/25 12:16:46.998
  STEP: Deleting the pod @ 01/04/25 12:16:49.004
  STEP: Ensuring resource quota status released the pod usage @ 01/04/25 12:16:49.021
  I0104 12:16:51.026927 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9523" for this suite. @ 01/04/25 12:16:51.032
• [13.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 01/04/25 12:16:51.043
  I0104 12:16:51.043090 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:16:51.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:51.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:51.066
  STEP: creating Agnhost RC @ 01/04/25 12:16:51.069
  I0104 12:16:51.069750 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-1171 create -f -'
  I0104 12:16:51.161163 18 builder.go:146] stderr: ""
  I0104 12:16:51.161201 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/04/25 12:16:51.161
  I0104 12:16:52.166017 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 12:16:52.166049 18 framework.go:733] Found 0 / 1
  I0104 12:16:53.167534 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 12:16:53.167573 18 framework.go:733] Found 1 / 1
  I0104 12:16:53.167587 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/04/25 12:16:53.167
  I0104 12:16:53.171267 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 12:16:53.171289 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0104 12:16:53.171338 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-1171 patch pod agnhost-primary-pslrd -p {"metadata":{"annotations":{"x":"y"}}}'
  I0104 12:16:53.227813 18 builder.go:146] stderr: ""
  I0104 12:16:53.227851 18 builder.go:147] stdout: "pod/agnhost-primary-pslrd patched\n"
  STEP: checking annotations @ 01/04/25 12:16:53.227
  I0104 12:16:53.231172 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 12:16:53.231196 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0104 12:16:53.231308 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1171" for this suite. @ 01/04/25 12:16:53.235
• [2.199 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/04/25 12:16:53.242
  I0104 12:16:53.242596 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:16:53.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:53.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:53.261
  STEP: Creating secret with name secret-test-f5047ffd-4268-41a6-b12e-6f4c12fd21b9 @ 01/04/25 12:16:53.264
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:16:53.268
  STEP: Saw pod success @ 01/04/25 12:16:55.294
  I0104 12:16:55.299522 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-secrets-956ffc23-c4ea-4286-b925-8623009c54e1 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:16:55.32
  I0104 12:16:55.343608 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1024" for this suite. @ 01/04/25 12:16:55.348
• [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/04/25 12:16:55.355
  I0104 12:16:55.355283 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename runtimeclass @ 01/04/25 12:16:55.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:55.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:55.378
  I0104 12:16:57.419332 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2684" for this suite. @ 01/04/25 12:16:57.422
• [2.077 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/04/25 12:16:57.431
  I0104 12:16:57.431993 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/04/25 12:16:57.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:16:57.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:16:57.453
  STEP: Creating 50 configmaps @ 01/04/25 12:16:57.456
  STEP: Creating RC which spawns configmap-volume pods @ 01/04/25 12:16:57.738
  I0104 12:16:57.820636 18 resource.go:87] Pod name wrapped-volume-race-2111e22b-58fc-4dea-9b7d-1d71c1a282c5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/04/25 12:16:57.82
  STEP: Creating RC which spawns configmap-volume pods @ 01/04/25 12:16:59.891
  I0104 12:16:59.904035 18 resource.go:87] Pod name wrapped-volume-race-a0608e23-ca0b-4b26-ab88-819c30eff212: Found 0 pods out of 5
  I0104 12:17:04.912302 18 resource.go:87] Pod name wrapped-volume-race-a0608e23-ca0b-4b26-ab88-819c30eff212: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/04/25 12:17:04.912
  STEP: Creating RC which spawns configmap-volume pods @ 01/04/25 12:17:04.944
  I0104 12:17:04.964290 18 resource.go:87] Pod name wrapped-volume-race-716d2ea9-b697-4a33-8159-95219e6bc56e: Found 0 pods out of 5
  I0104 12:17:09.975916 18 resource.go:87] Pod name wrapped-volume-race-716d2ea9-b697-4a33-8159-95219e6bc56e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/04/25 12:17:09.975
  STEP: deleting ReplicationController wrapped-volume-race-716d2ea9-b697-4a33-8159-95219e6bc56e in namespace emptydir-wrapper-3178, will wait for the garbage collector to delete the pods @ 01/04/25 12:17:09.997
  I0104 12:17:10.063933 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-716d2ea9-b697-4a33-8159-95219e6bc56e took: 10.138284ms
  I0104 12:17:10.164560 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-716d2ea9-b697-4a33-8159-95219e6bc56e pods took: 100.604574ms
  STEP: deleting ReplicationController wrapped-volume-race-a0608e23-ca0b-4b26-ab88-819c30eff212 in namespace emptydir-wrapper-3178, will wait for the garbage collector to delete the pods @ 01/04/25 12:17:11.965
  I0104 12:17:12.031038 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-a0608e23-ca0b-4b26-ab88-819c30eff212 took: 9.888248ms
  I0104 12:17:12.131971 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-a0608e23-ca0b-4b26-ab88-819c30eff212 pods took: 100.929749ms
  STEP: deleting ReplicationController wrapped-volume-race-2111e22b-58fc-4dea-9b7d-1d71c1a282c5 in namespace emptydir-wrapper-3178, will wait for the garbage collector to delete the pods @ 01/04/25 12:17:14.132
  I0104 12:17:14.198625 18 resources.go:139] Deleting ReplicationController wrapped-volume-race-2111e22b-58fc-4dea-9b7d-1d71c1a282c5 took: 9.279596ms
  I0104 12:17:14.299577 18 resources.go:163] Terminating ReplicationController wrapped-volume-race-2111e22b-58fc-4dea-9b7d-1d71c1a282c5 pods took: 100.947575ms
  STEP: Cleaning up the configMaps @ 01/04/25 12:17:15.4
  I0104 12:17:15.797251 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3178" for this suite. @ 01/04/25 12:17:15.802
• [18.377 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/04/25 12:17:15.809
  I0104 12:17:15.809289 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 12:17:15.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:17:15.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:17:15.829
  I0104 12:17:15.832242 18 deployment.go:1645] Creating simple deployment test-new-deployment
  I0104 12:17:15.849571 18 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/04/25 12:17:17.869
  STEP: updating a scale subresource @ 01/04/25 12:17:17.874
  STEP: verifying the deployment Spec.Replicas was modified @ 01/04/25 12:17:17.882
  STEP: Patch a scale subresource @ 01/04/25 12:17:17.889
  I0104 12:17:17.947131 18 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7224",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3128bc41-18a7-4ae6-aee2-45a2617da809",
      ResourceVersion: (string) (len=4) "9917",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 12:17:17.958344 18 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7224",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab5d0814-9742-4b4f-bcdf-72a6bc63d1ef",
      ResourceVersion: (string) (len=4) "9926",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "3128bc41-18a7-4ae6-aee2-45a2617da809",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 31 32 38 62 63  34 31 2d 31 38 61 37 2d  |\"3128bc41-18a7-|
              00000120  34 61 65 36 2d 61 65 65  32 2d 34 35 61 32 36 31  |4ae6-aee2-45a261|
              00000130  37 64 61 38 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7da809\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:17:17.964656 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-868cw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-868cw",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7224",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6154ca92-74e5-4d02-88db-37b50fec3a0e",
      ResourceVersion: (string) (len=4) "9925",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "ab5d0814-9742-4b4f-bcdf-72a6bc63d1ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  35 64 30 38 31 34 2d 39  |d\":\"ab5d0814-9|
              00000090  37 34 32 2d 34 62 34 66  2d 62 63 64 66 2d 37 32  |742-4b4f-bcdf-72|
              000000a0  61 36 62 63 36 33 64 31  65 66 5c 22 7d 22 3a 7b  |a6bc63d1ef\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wmx4z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wmx4z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:17:17.965637 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-gqds8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-gqds8",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7224",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb1390e3-5b97-409e-82a5-a095d43f1f01",
      ResourceVersion: (string) (len=4) "9918",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "ab5d0814-9742-4b4f-bcdf-72a6bc63d1ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  35 64 30 38 31 34 2d 39  |d\":\"ab5d0814-9|
              00000090  37 34 32 2d 34 62 34 66  2d 62 63 64 66 2d 37 32  |742-4b4f-bcdf-72|
              000000a0  61 36 62 63 36 33 64 31  65 66 5c 22 7d 22 3a 7b  |a6bc63d1ef\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-47l7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-47l7r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-47l7r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:17:17.966828 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-mftw5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-mftw5",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7224",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6467dd04-3f6b-4e99-9ab2-333a6d934d54",
      ResourceVersion: (string) (len=4) "9924",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "ab5d0814-9742-4b4f-bcdf-72a6bc63d1ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  35 64 30 38 31 34 2d 39  |d\":\"ab5d0814-9|
              00000090  37 34 32 2d 34 62 34 66  2d 62 63 64 66 2d 37 32  |742-4b4f-bcdf-72|
              000000a0  61 36 62 63 36 33 64 31  65 66 5c 22 7d 22 3a 7b  |a6bc63d1ef\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44c8d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44c8d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:17:17.969120 18 deployment.go:67] Pod "test-new-deployment-64bcfc6446-mk828" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-mk828",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7224",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c7779ca-b568-4a49-a8b9-2f5e9ff058f8",
      ResourceVersion: (string) (len=4) "9902",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "ab5d0814-9742-4b4f-bcdf-72a6bc63d1ef",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  35 64 30 38 31 34 2d 39  |d\":\"ab5d0814-9|
              00000090  37 34 32 2d 34 62 34 66  2d 62 63 64 66 2d 37 32  |742-4b4f-bcdf-72|
              000000a0  61 36 62 63 36 33 64 31  65 66 5c 22 7d 22 3a 7b  |a6bc63d1ef\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 33 34 5c 22 7d  |2.168.104.134\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r62kq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r62kq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871589835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871589835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871589836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7d487708081a888c8f81944f76000ee80a10125218aed42b28bae1e2e3a85c88",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r62kq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:17:17.970773 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7224" for this suite. @ 01/04/25 12:17:17.976
• [2.176 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/04/25 12:17:17.985
  I0104 12:17:17.985057 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:17:17.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:17:18.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:17:18.004
  STEP: creating service in namespace services-8050 @ 01/04/25 12:17:18.008
  STEP: creating service affinity-clusterip in namespace services-8050 @ 01/04/25 12:17:18.008
  STEP: creating replication controller affinity-clusterip in namespace services-8050 @ 01/04/25 12:17:18.021
  I0104 12:17:18.032099      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-8050, replica count: 3
  I0104 12:17:21.082980      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 12:17:21.095189 18 resource.go:361] Creating new exec pod
  I0104 12:17:24.107814 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-8050 exec execpod-affinitythqm7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0104 12:17:24.195606 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0104 12:17:24.195771 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:17:24.195888 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-8050 exec execpod-affinitythqm7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.44 80'
  I0104 12:17:24.280638 18 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.44 80\nConnection to 10.152.183.44 80 port [tcp/http] succeeded!\n"
  I0104 12:17:24.280726 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:17:24.280788 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-8050 exec execpod-affinitythqm7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.44:80/ ; done'
  I0104 12:17:24.412512 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.44:80/\n"
  I0104 12:17:24.412562 18 builder.go:147] stdout: "\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk\naffinity-clusterip-6p6wk"
  I0104 12:17:24.412579 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412588 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412598 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412604 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412611 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412618 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412625 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412631 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412637 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412643 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412649 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412716 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412723 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412730 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412739 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412746 18 service.go:242] Received response from host: affinity-clusterip-6p6wk
  I0104 12:17:24.412817 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8050, will wait for the garbage collector to delete the pods @ 01/04/25 12:17:24.432
  I0104 12:17:24.496179 18 resources.go:139] Deleting ReplicationController affinity-clusterip took: 8.213189ms
  I0104 12:17:24.597454 18 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.269228ms
  I0104 12:17:28.019968 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8050" for this suite. @ 01/04/25 12:17:28.025
• [10.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/04/25 12:17:28.032
  I0104 12:17:28.032707 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:17:28.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:17:28.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:17:28.055
  STEP: Creating a pod to test downward api env vars @ 01/04/25 12:17:28.058
  STEP: Saw pod success @ 01/04/25 12:17:30.08
  I0104 12:17:30.085188 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downward-api-bd30ac3f-c161-4c93-89d5-95e12e37ea9f container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 12:17:30.093
  I0104 12:17:30.117049 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4055" for this suite. @ 01/04/25 12:17:30.122
• [2.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/04/25 12:17:30.129
  I0104 12:17:30.129699 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-runtime @ 01/04/25 12:17:30.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:17:30.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:17:30.148
  STEP: create the container @ 01/04/25 12:17:30.151
  W0104 12:17:30.160414      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/04/25 12:17:30.16
  STEP: get the container status @ 01/04/25 12:17:32.178
  STEP: the container should be terminated @ 01/04/25 12:17:32.183
  STEP: the termination message should be set @ 01/04/25 12:17:32.183
  I0104 12:17:32.183875 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/04/25 12:17:32.183
  I0104 12:17:32.208038 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5575" for this suite. @ 01/04/25 12:17:32.213
• [2.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/04/25 12:17:32.22
  I0104 12:17:32.220963 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename cronjob @ 01/04/25 12:17:32.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:17:32.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:17:32.24
  STEP: Creating a ForbidConcurrent cronjob @ 01/04/25 12:17:32.243
  STEP: Ensuring a job is scheduled @ 01/04/25 12:17:32.25
  STEP: Ensuring exactly one is scheduled @ 01/04/25 12:18:00.257
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/04/25 12:18:00.262
  STEP: Ensuring no more jobs are scheduled @ 01/04/25 12:18:00.265
  STEP: Removing cronjob @ 01/04/25 12:18:00.268
  I0104 12:18:00.278529 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4307" for this suite. @ 01/04/25 12:18:00.284
• [28.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/04/25 12:18:00.292
  I0104 12:18:00.292188 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/04/25 12:18:00.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:00.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:00.319
  STEP: create the container to handle the HTTPGet hook request. @ 01/04/25 12:18:00.328
  STEP: create the pod with lifecycle hook @ 01/04/25 12:18:02.354
  STEP: check poststart hook @ 01/04/25 12:18:04.382
  STEP: delete the pod with lifecycle hook @ 01/04/25 12:18:04.403
  I0104 12:18:06.425160 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8878" for this suite. @ 01/04/25 12:18:06.43
• [6.152 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/04/25 12:18:06.443
  I0104 12:18:06.443737 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:18:06.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:06.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:06.464
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:18:06.467
  STEP: Saw pod success @ 01/04/25 12:18:10.493
  I0104 12:18:10.498802 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-82b30d12-ea82-452d-845f-80597951331e container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:18:10.506
  I0104 12:18:10.528711 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8883" for this suite. @ 01/04/25 12:18:10.532
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/04/25 12:18:10.544
  I0104 12:18:10.544030 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename security-context-test @ 01/04/25 12:18:10.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:10.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:10.564
  I0104 12:18:14.605753 18 security_context.go:538] Got logs for pod "busybox-privileged-false-0ec618ff-daad-494a-97f6-28981826252b": "ip: RTNETLINK answers: Operation not permitted\n"
  I0104 12:18:14.605880 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-937" for this suite. @ 01/04/25 12:18:14.609
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/04/25 12:18:14.616
  I0104 12:18:14.616808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:18:14.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:14.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:14.637
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:18:14.64
  STEP: Saw pod success @ 01/04/25 12:18:18.674
  I0104 12:18:18.679353 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-6bf5db45-2ecb-4765-9c20-45cfcfd668ca container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:18:18.689
  I0104 12:18:18.716177 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5566" for this suite. @ 01/04/25 12:18:18.721
• [4.116 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 01/04/25 12:18:18.732
  I0104 12:18:18.732458 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename containers @ 01/04/25 12:18:18.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:18.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:18.75
  STEP: Creating a pod to test override command @ 01/04/25 12:18:18.753
  STEP: Saw pod success @ 01/04/25 12:18:22.783
  I0104 12:18:22.786666 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod client-containers-d5a83b8c-bc58-4460-868b-ad17aa2d2003 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:18:22.795
  I0104 12:18:22.815949 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1325" for this suite. @ 01/04/25 12:18:22.821
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/04/25 12:18:22.831
  I0104 12:18:22.831701 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:18:22.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:22.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:22.849
  STEP: create deployment with httpd image @ 01/04/25 12:18:22.852
  I0104 12:18:22.852346 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7236 create -f -'
  I0104 12:18:22.929571 18 builder.go:146] stderr: ""
  I0104 12:18:22.929619 18 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/04/25 12:18:22.929
  I0104 12:18:22.929717 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7236 diff -f -'
  I0104 12:18:27.247549 18 builder.go:135] rc: 1
  I0104 12:18:27.247768 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7236 delete -f -'
  I0104 12:18:27.302267 18 builder.go:146] stderr: ""
  I0104 12:18:27.302306 18 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0104 12:18:27.302436 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7236" for this suite. @ 01/04/25 12:18:27.308
• [4.485 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 01/04/25 12:18:27.316
  I0104 12:18:27.316366 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/04/25 12:18:27.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:27.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:27.335
  STEP: getting /apis @ 01/04/25 12:18:27.345
  STEP: getting /apis/admissionregistration.k8s.io @ 01/04/25 12:18:27.348
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/04/25 12:18:27.349
  STEP: creating @ 01/04/25 12:18:27.35
  STEP: getting @ 01/04/25 12:18:27.367
  STEP: listing @ 01/04/25 12:18:27.372
  STEP: watching @ 01/04/25 12:18:27.375
  I0104 12:18:27.375210 18 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 01/04/25 12:18:27.376
  STEP: updating @ 01/04/25 12:18:27.383
  I0104 12:18:27.392364 18 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 01/04/25 12:18:27.392
  STEP: deleting a collection @ 01/04/25 12:18:27.408
  I0104 12:18:27.433812 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1383" for this suite. @ 01/04/25 12:18:27.437
• [0.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/04/25 12:18:27.447
  I0104 12:18:27.447827 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/04/25 12:18:27.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:27.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:27.468
  STEP: creating a policy with variables @ 01/04/25 12:18:27.475
  STEP: waiting until the marker is denied @ 01/04/25 12:18:27.497
  STEP: testing a replicated Deployment to be allowed @ 01/04/25 12:18:27.607
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/04/25 12:18:27.625
  I0104 12:18:27.709740 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9236" for this suite. @ 01/04/25 12:18:27.721
• [0.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 01/04/25 12:18:27.732
  I0104 12:18:27.732292 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 12:18:27.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:27.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:27.757
  STEP: Creating a suspended job @ 01/04/25 12:18:27.763
  STEP: Patching the Job @ 01/04/25 12:18:27.772
  STEP: Watching for Job to be patched @ 01/04/25 12:18:27.788
  I0104 12:18:27.790594 18 job.go:1330] Event ADDED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-job-label:e2e-5hgt4] and annotations: map[]
  I0104 12:18:27.790623 18 job.go:1330] Event MODIFIED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-job-label:e2e-5hgt4] and annotations: map[]
  I0104 12:18:27.790636 18 job.go:1333] Event MODIFIED found for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[]
  STEP: Updating the job @ 01/04/25 12:18:27.79
  STEP: Watching for Job to be updated @ 01/04/25 12:18:27.802
  I0104 12:18:27.804420 18 job.go:1333] Event MODIFIED found for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  I0104 12:18:27.804457 18 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/04/25 12:18:27.804
  I0104 12:18:27.809149 18 job.go:1233] Job: e2e-5hgt4 as labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4]
  STEP: Waiting for job to complete @ 01/04/25 12:18:27.809
  STEP: Delete a job collection with a labelselector @ 01/04/25 12:18:37.82
  STEP: Watching for Job to be deleted @ 01/04/25 12:18:37.832
  I0104 12:18:37.834078 18 job.go:1330] Event MODIFIED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  I0104 12:18:37.834117 18 job.go:1330] Event MODIFIED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  I0104 12:18:37.834135 18 job.go:1330] Event MODIFIED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  I0104 12:18:37.834189 18 job.go:1330] Event MODIFIED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  I0104 12:18:37.834243 18 job.go:1330] Event MODIFIED observed for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  I0104 12:18:37.834258 18 job.go:1333] Event DELETED found for Job e2e-5hgt4 in namespace job-1164 with labels: map[e2e-5hgt4:patched e2e-job-label:e2e-5hgt4] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/04/25 12:18:37.834
  I0104 12:18:37.840405 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1164" for this suite. @ 01/04/25 12:18:37.852
• [10.136 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/04/25 12:18:37.868
  I0104 12:18:37.868538 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename namespaces @ 01/04/25 12:18:37.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:37.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:37.886
  STEP: Creating a test namespace @ 01/04/25 12:18:37.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:37.907
  STEP: Creating a service in the namespace @ 01/04/25 12:18:37.91
  STEP: Deleting the namespace @ 01/04/25 12:18:37.922
  STEP: Waiting for the namespace to be removed. @ 01/04/25 12:18:37.933
  STEP: Recreating the namespace @ 01/04/25 12:18:43.938
  STEP: Verifying there is no service in the namespace @ 01/04/25 12:18:43.954
  I0104 12:18:43.958348 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1669" for this suite. @ 01/04/25 12:18:43.961
  STEP: Destroying namespace "nsdeletetest-387" for this suite. @ 01/04/25 12:18:43.97
  I0104 12:18:43.976832 18 framework.go:370] Namespace nsdeletetest-387 was already deleted
  STEP: Destroying namespace "nsdeletetest-2849" for this suite. @ 01/04/25 12:18:43.976
• [6.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/04/25 12:18:43.984
  I0104 12:18:43.984121 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename init-container @ 01/04/25 12:18:43.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:18:44.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:18:44.005
  STEP: creating the pod @ 01/04/25 12:18:44.008
  I0104 12:18:44.008606 18 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0104 12:19:25.167176 18 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-49385ef5-84c8-4ca7-8340-34c8cec1935d", GenerateName:"", Namespace:"init-container-2800", SelfLink:"", UID:"b0817fd7-7cb8-48ab-b6b2-5f5b0373e894", ResourceVersion:"11106", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"8597751"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041ba060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 12, 19, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0041ba108), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-b4qtp", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0040d0020), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b4qtp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b4qtp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-b4qtp", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0036220d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-8-94", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00350e080), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0036223f0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003622410)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003622418), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00362241c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000dce030), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 4, 12, 18, 45, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.8.94", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.8.94"}}, PodIP:"192.168.104.159", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.104.159"}}, StartTime:time.Date(2025, time.January, 4, 12, 18, 44, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003550070)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0035500e0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://f8a310413cfb289570d41a4f4966bae2f398234b6c5eeb446c2a737b8baed227", Started:(*bool)(0xc0036224ca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b4qtp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000dce050)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0040d00a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0036224dd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b4qtp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000dce060)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0040d0080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00362249f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-b4qtp", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000dce040)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0104 12:19:25.167488 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2800" for this suite. @ 01/04/25 12:19:25.173
• [41.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/04/25 12:19:25.182
  I0104 12:19:25.182065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:19:25.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:19:25.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:19:25.2
  STEP: Creating configMap with name configmap-test-volume-dded3097-bb89-4aca-9708-6e8306d2e38f @ 01/04/25 12:19:25.203
  STEP: Creating a pod to test consume configMaps @ 01/04/25 12:19:25.21
  STEP: Saw pod success @ 01/04/25 12:19:29.236
  I0104 12:19:29.242120 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-configmaps-86ce143b-db0a-455e-9873-a205304ba3cd container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:19:29.254
  I0104 12:19:29.274134 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9693" for this suite. @ 01/04/25 12:19:29.277
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/04/25 12:19:29.288
  I0104 12:19:29.288958 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:19:29.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:19:29.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:19:29.314
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9918 @ 01/04/25 12:19:29.317
  STEP: changing the ExternalName service to type=NodePort @ 01/04/25 12:19:29.325
  STEP: creating replication controller externalname-service in namespace services-9918 @ 01/04/25 12:19:29.359
  I0104 12:19:29.369201      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9918, replica count: 2
  I0104 12:19:32.420000      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 12:19:32.420066 18 resource.go:361] Creating new exec pod
  I0104 12:19:35.442797 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9918 exec execpodknppl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0104 12:19:35.538106 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0104 12:19:35.538155 18 builder.go:147] stdout: "externalname-service-d4p52"
  I0104 12:19:35.538286 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9918 exec execpodknppl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I0104 12:19:35.620113 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  I0104 12:19:35.620163 18 builder.go:147] stdout: ""
  I0104 12:19:36.538382 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9918 exec execpodknppl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I0104 12:19:36.628515 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  I0104 12:19:36.628558 18 builder.go:147] stdout: "externalname-service-nwtvn"
  I0104 12:19:36.628645 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9918 exec execpodknppl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.169 31950'
  I0104 12:19:36.713255 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.169 31950\nConnection to 172.31.18.169 31950 port [tcp/*] succeeded!\n"
  I0104 12:19:36.713296 18 builder.go:147] stdout: ""
  I0104 12:19:37.629040 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9918 exec execpodknppl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.169 31950'
  I0104 12:19:37.710383 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.169 31950\nConnection to 172.31.18.169 31950 port [tcp/*] succeeded!\n"
  I0104 12:19:37.710422 18 builder.go:147] stdout: "externalname-service-d4p52"
  I0104 12:19:37.710773 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9918 exec execpodknppl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.94 31950'
  I0104 12:19:37.797310 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.94 31950\nConnection to 172.31.8.94 31950 port [tcp/*] succeeded!\n"
  I0104 12:19:37.797370 18 builder.go:147] stdout: "externalname-service-d4p52"
  I0104 12:19:37.797453 18 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0104 12:19:37.829741 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9918" for this suite. @ 01/04/25 12:19:37.835
• [8.555 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/04/25 12:19:37.845
  I0104 12:19:37.845191 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sysctl @ 01/04/25 12:19:37.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:19:37.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:19:37.865
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/04/25 12:19:37.868
  STEP: Watching for error events or started pod @ 01/04/25 12:19:37.877
  STEP: Waiting for pod completion @ 01/04/25 12:19:39.884
  STEP: Checking that the pod succeeded @ 01/04/25 12:19:41.901
  STEP: Getting logs from the pod @ 01/04/25 12:19:41.901
  STEP: Checking that the sysctl is actually updated @ 01/04/25 12:19:41.909
  I0104 12:19:41.909926 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6322" for this suite. @ 01/04/25 12:19:41.913
• [4.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 01/04/25 12:19:41.921
  I0104 12:19:41.921563 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 12:19:41.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:19:41.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:19:41.939
  STEP: Creating a job @ 01/04/25 12:19:41.942
  STEP: Ensuring job reaches completions @ 01/04/25 12:19:41.949
  I0104 12:19:53.961181 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2644" for this suite. @ 01/04/25 12:19:53.966
• [12.057 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/04/25 12:19:53.978
  I0104 12:19:53.978898 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubelet-test @ 01/04/25 12:19:53.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:19:53.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:19:53.998
  STEP: Waiting for pod completion @ 01/04/25 12:19:54.01
  I0104 12:19:58.049520 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7437" for this suite. @ 01/04/25 12:19:58.053
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/04/25 12:19:58.063
  I0104 12:19:58.063101 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 12:19:58.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:19:58.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:19:58.083
  STEP: Creating a pod to test substitution in container's command @ 01/04/25 12:19:58.086
  STEP: Saw pod success @ 01/04/25 12:20:02.114
  I0104 12:20:02.118089 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod var-expansion-eebe3411-7354-4565-8a3a-5d55f110c2d1 container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 12:20:02.128
  I0104 12:20:02.152664 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4979" for this suite. @ 01/04/25 12:20:02.158
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/04/25 12:20:02.166
  I0104 12:20:02.166099 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/04/25 12:20:02.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:20:02.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:20:02.189
  I0104 12:20:02.192755 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:20:05.274566 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6726" for this suite. @ 01/04/25 12:20:05.278
• [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/04/25 12:20:05.287
  I0104 12:20:05.287202 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:20:05.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:20:05.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:20:05.31
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/04/25 12:20:05.313
  STEP: Saw pod success @ 01/04/25 12:20:09.342
  I0104 12:20:09.347077 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-bf434f8e-7ed2-4364-9300-51644841ff04 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:20:09.354
  I0104 12:20:09.373289 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3122" for this suite. @ 01/04/25 12:20:09.378
• [4.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/04/25 12:20:09.388
  I0104 12:20:09.388177 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:20:09.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:20:09.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:20:09.419
  STEP: Setting up server cert @ 01/04/25 12:20:09.447
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:20:09.581
  STEP: Deploying the webhook pod @ 01/04/25 12:20:09.593
  STEP: Wait for the deployment to be ready @ 01/04/25 12:20:09.61
  I0104 12:20:09.621845 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0104 12:20:11.636897 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 20, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 20, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 20, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 20, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/04/25 12:20:13.643
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:20:13.656
  I0104 12:20:14.656660 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/04/25 12:20:14.664
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/04/25 12:20:14.677
  I0104 12:20:14.677914 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:20:14.744771 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8248" for this suite. @ 01/04/25 12:20:14.748
  STEP: Destroying namespace "webhook-markers-3891" for this suite. @ 01/04/25 12:20:14.756
• [5.375 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 01/04/25 12:20:14.763
  I0104 12:20:14.763723 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:20:14.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:20:14.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:20:14.783
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/04/25 12:20:14.786
  I0104 12:20:14.786956 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9502 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0104 12:20:14.844664 18 builder.go:146] stderr: ""
  I0104 12:20:14.844720 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/04/25 12:20:14.844
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/04/25 12:20:19.896
  I0104 12:20:19.898258 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9502 get pod e2e-test-httpd-pod -o json'
  I0104 12:20:19.950352 18 builder.go:146] stderr: ""
  I0104 12:20:19.950513 18 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-01-04T12:20:14Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9502\",\n        \"resourceVersion\": \"11732\",\n        \"uid\": \"4cb16217-9fc0-4507-a9db-cdf0a4fd277b\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nlv8p\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-8-94\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-nlv8p\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-04T12:20:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-04T12:20:14Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-04T12:20:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-04T12:20:16Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-04T12:20:14Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://7da86a456b83adaef16136a27578bbc8ae9f2724f9a31259bccb8fbb1e922ae8\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-04T12:20:15Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-nlv8p\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.8.94\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.8.94\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.104.146\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.104.146\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-04T12:20:14Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/04/25 12:20:19.95
  I0104 12:20:19.950617 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9502 replace -f -'
  I0104 12:20:20.043499 18 builder.go:146] stderr: ""
  I0104 12:20:20.043540 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/04/25 12:20:20.043
  I0104 12:20:20.048323 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9502 delete pods e2e-test-httpd-pod'
  I0104 12:20:21.329125 18 builder.go:146] stderr: ""
  I0104 12:20:21.329169 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0104 12:20:21.329281 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9502" for this suite. @ 01/04/25 12:20:21.334
• [6.580 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/04/25 12:20:21.344
  I0104 12:20:21.344065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:20:21.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:20:21.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:20:21.365
  STEP: Creating configMap with name configmap-test-upd-45fb5151-283d-484a-8f57-7426477dbd42 @ 01/04/25 12:20:21.373
  STEP: Creating the pod @ 01/04/25 12:20:21.379
  STEP: Waiting for pod with text data @ 01/04/25 12:20:23.399
  STEP: Waiting for pod with binary data @ 01/04/25 12:20:23.405
  I0104 12:20:23.414642 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4035" for this suite. @ 01/04/25 12:20:23.419
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/04/25 12:20:23.43
  I0104 12:20:23.430713 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:20:23.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:20:23.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:20:23.451
  STEP: Creating configMap with name configmap-test-upd-875d0a66-2ca9-4623-894f-9a27d6b8e95b @ 01/04/25 12:20:23.457
  STEP: Creating the pod @ 01/04/25 12:20:23.464
  STEP: Updating configmap configmap-test-upd-875d0a66-2ca9-4623-894f-9a27d6b8e95b @ 01/04/25 12:20:25.502
  STEP: waiting to observe update in volume @ 01/04/25 12:20:25.51
  I0104 12:21:47.951773 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7600" for this suite. @ 01/04/25 12:21:47.955
• [84.533 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/04/25 12:21:47.963
  I0104 12:21:47.963599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename apf @ 01/04/25 12:21:47.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:21:47.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:21:47.986
  STEP: getting /apis @ 01/04/25 12:21:47.989
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/04/25 12:21:47.993
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/04/25 12:21:47.994
  STEP: creating @ 01/04/25 12:21:47.995
  STEP: getting @ 01/04/25 12:21:48.016
  STEP: listing @ 01/04/25 12:21:48.019
  STEP: watching @ 01/04/25 12:21:48.023
  I0104 12:21:48.023917 18 flowcontrol.go:620] starting watch
  STEP: patching @ 01/04/25 12:21:48.025
  STEP: updating @ 01/04/25 12:21:48.032
  I0104 12:21:48.042220 18 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/04/25 12:21:48.042
  STEP: patching /status @ 01/04/25 12:21:48.047
  STEP: updating /status @ 01/04/25 12:21:48.055
  STEP: deleting @ 01/04/25 12:21:48.068
  STEP: deleting a collection @ 01/04/25 12:21:48.084
  I0104 12:21:48.110270 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1015" for this suite. @ 01/04/25 12:21:48.115
• [0.161 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 01/04/25 12:21:48.124
  I0104 12:21:48.124832 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 12:21:48.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:21:48.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:21:48.144
  STEP: Creating a test headless service @ 01/04/25 12:21:48.147
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 178.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.178_udp@PTR;check="$$(dig +tcp +noall +answer +search 178.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.178_tcp@PTR;sleep 1; done
   @ 01/04/25 12:21:48.169
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 178.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.178_udp@PTR;check="$$(dig +tcp +noall +answer +search 178.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.178_tcp@PTR;sleep 1; done
   @ 01/04/25 12:21:48.169
  STEP: creating a pod to probe DNS @ 01/04/25 12:21:48.169
  STEP: submitting the pod to kubernetes @ 01/04/25 12:21:48.169
  STEP: retrieving the pod @ 01/04/25 12:21:50.196
  STEP: looking for the results for each expected name from probers @ 01/04/25 12:21:50.202
  I0104 12:21:50.207669 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.214091 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.219979 18 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.225009 18 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.253796 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.257965 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.263720 18 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.269917 18 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local from pod dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030: the server could not find the requested resource (get pods dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030)
  I0104 12:21:50.289889 18 dns_common.go:489] Lookups using dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030 failed for: [wheezy_udp@dns-test-service.dns-5091.svc.cluster.local wheezy_tcp@dns-test-service.dns-5091.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local jessie_udp@dns-test-service.dns-5091.svc.cluster.local jessie_tcp@dns-test-service.dns-5091.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5091.svc.cluster.local]

  I0104 12:21:50.305081 18 dns_common.go:495] Pod client logs for webserver: 
  I0104 12:21:50.312786 18 dns_common.go:495] Pod client logs for querier: 
  I0104 12:21:50.321093 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0104 12:21:55.292591 18 dns_common.go:527] DNS probes using dns-5091/dns-test-b891c3e5-7322-4851-ad84-5bdf61a58030 succeeded

  STEP: deleting the pod @ 01/04/25 12:21:55.292
  STEP: deleting the test service @ 01/04/25 12:21:55.316
  STEP: deleting the test headless service @ 01/04/25 12:21:55.345
  I0104 12:21:55.360477 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5091" for this suite. @ 01/04/25 12:21:55.368
• [7.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 01/04/25 12:21:55.377
  I0104 12:21:55.377364 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 12:21:55.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:21:55.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:21:55.399
  STEP: Creating a test headless service @ 01/04/25 12:21:55.402
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-115.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-115.svc.cluster.local;sleep 1; done
   @ 01/04/25 12:21:55.408
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-115.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-115.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-115.svc.cluster.local;sleep 1; done
   @ 01/04/25 12:21:55.408
  STEP: creating a pod to probe DNS @ 01/04/25 12:21:55.408
  STEP: submitting the pod to kubernetes @ 01/04/25 12:21:55.408
  STEP: retrieving the pod @ 01/04/25 12:21:57.44
  STEP: looking for the results for each expected name from probers @ 01/04/25 12:21:57.444
  I0104 12:21:57.451893 18 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.456624 18 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.462165 18 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.467243 18 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.471253 18 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.476427 18 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.481484 18 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.484938 18 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-115.svc.cluster.local from pod dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d: the server could not find the requested resource (get pods dns-test-93ed1938-827f-4382-8cb1-5662d91d053d)
  I0104 12:21:57.484961 18 dns_common.go:489] Lookups using dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local wheezy_udp@dns-test-service-2.dns-115.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-115.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-115.svc.cluster.local jessie_udp@dns-test-service-2.dns-115.svc.cluster.local jessie_tcp@dns-test-service-2.dns-115.svc.cluster.local]

  I0104 12:21:57.496428 18 dns_common.go:495] Pod client logs for webserver: 
  I0104 12:21:57.505954 18 dns_common.go:495] Pod client logs for querier: 
  I0104 12:21:57.515942 18 dns_common.go:495] Pod client logs for jessie-querier: 
  I0104 12:22:02.490578 18 dns_common.go:527] DNS probes using dns-115/dns-test-93ed1938-827f-4382-8cb1-5662d91d053d succeeded

  STEP: deleting the pod @ 01/04/25 12:22:02.49
  STEP: deleting the test headless service @ 01/04/25 12:22:02.512
  I0104 12:22:02.529587 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-115" for this suite. @ 01/04/25 12:22:02.534
• [7.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/04/25 12:22:02.543
  I0104 12:22:02.543878 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename csi-storageclass @ 01/04/25 12:22:02.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:22:02.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:22:02.564
  STEP: Creating a StorageClass @ 01/04/25 12:22:02.566
  STEP: Get StorageClass "e2e-95zzg" @ 01/04/25 12:22:02.571
  STEP: Patching the StorageClass "e2e-95zzg" @ 01/04/25 12:22:02.575
  STEP: Delete StorageClass "e2e-95zzg" @ 01/04/25 12:22:02.582
  STEP: Confirm deletion of StorageClass "e2e-95zzg" @ 01/04/25 12:22:02.59
  STEP: Create a replacement StorageClass @ 01/04/25 12:22:02.595
  STEP: Updating StorageClass "e2e-v2-576wj" @ 01/04/25 12:22:02.599
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-576wj=updated" @ 01/04/25 12:22:02.61
  STEP: Deleting StorageClass "e2e-v2-576wj" via DeleteCollection @ 01/04/25 12:22:02.613
  STEP: Confirm deletion of StorageClass "e2e-v2-576wj" @ 01/04/25 12:22:02.624
  I0104 12:22:02.629120 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-760" for this suite. @ 01/04/25 12:22:02.634
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/04/25 12:22:02.646
  I0104 12:22:02.646452 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 12:22:02.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:22:02.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:22:02.665
  STEP: create the rc @ 01/04/25 12:22:02.673
  W0104 12:22:02.679418      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/04/25 12:22:08.714
  STEP: wait for the rc to be deleted @ 01/04/25 12:22:08.727
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/04/25 12:22:13.733
  STEP: Gathering metrics @ 01/04/25 12:22:43.742
  W0104 12:22:43.749263      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0104 12:22:43.749293 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0104 12:22:43.749377 18 delete.go:95] Deleting pod "simpletest.rc-24sx4" in namespace "gc-7428"
  I0104 12:22:43.766571 18 delete.go:95] Deleting pod "simpletest.rc-267vn" in namespace "gc-7428"
  I0104 12:22:43.778215 18 delete.go:95] Deleting pod "simpletest.rc-2cmqh" in namespace "gc-7428"
  I0104 12:22:43.793477 18 delete.go:95] Deleting pod "simpletest.rc-2g24v" in namespace "gc-7428"
  I0104 12:22:43.808849 18 delete.go:95] Deleting pod "simpletest.rc-2t5rw" in namespace "gc-7428"
  I0104 12:22:43.822230 18 delete.go:95] Deleting pod "simpletest.rc-2w4dw" in namespace "gc-7428"
  I0104 12:22:43.841579 18 delete.go:95] Deleting pod "simpletest.rc-4cpcd" in namespace "gc-7428"
  I0104 12:22:43.855463 18 delete.go:95] Deleting pod "simpletest.rc-55zjb" in namespace "gc-7428"
  I0104 12:22:43.878745 18 delete.go:95] Deleting pod "simpletest.rc-5755j" in namespace "gc-7428"
  I0104 12:22:43.905939 18 delete.go:95] Deleting pod "simpletest.rc-5jgfh" in namespace "gc-7428"
  I0104 12:22:43.923524 18 delete.go:95] Deleting pod "simpletest.rc-5sb7z" in namespace "gc-7428"
  I0104 12:22:43.942735 18 delete.go:95] Deleting pod "simpletest.rc-62fqg" in namespace "gc-7428"
  I0104 12:22:43.958192 18 delete.go:95] Deleting pod "simpletest.rc-64khn" in namespace "gc-7428"
  I0104 12:22:43.970936 18 delete.go:95] Deleting pod "simpletest.rc-6bcp9" in namespace "gc-7428"
  I0104 12:22:43.989497 18 delete.go:95] Deleting pod "simpletest.rc-6blff" in namespace "gc-7428"
  I0104 12:22:44.010638 18 delete.go:95] Deleting pod "simpletest.rc-6xggn" in namespace "gc-7428"
  I0104 12:22:44.022200 18 delete.go:95] Deleting pod "simpletest.rc-7b7l9" in namespace "gc-7428"
  I0104 12:22:44.040152 18 delete.go:95] Deleting pod "simpletest.rc-7f7zm" in namespace "gc-7428"
  I0104 12:22:44.059962 18 delete.go:95] Deleting pod "simpletest.rc-7jbg8" in namespace "gc-7428"
  I0104 12:22:44.080759 18 delete.go:95] Deleting pod "simpletest.rc-7s8db" in namespace "gc-7428"
  I0104 12:22:44.098511 18 delete.go:95] Deleting pod "simpletest.rc-7vgbk" in namespace "gc-7428"
  I0104 12:22:44.118239 18 delete.go:95] Deleting pod "simpletest.rc-7zfs9" in namespace "gc-7428"
  I0104 12:22:44.134624 18 delete.go:95] Deleting pod "simpletest.rc-84rd7" in namespace "gc-7428"
  I0104 12:22:44.151109 18 delete.go:95] Deleting pod "simpletest.rc-8558n" in namespace "gc-7428"
  I0104 12:22:44.171574 18 delete.go:95] Deleting pod "simpletest.rc-8j5v2" in namespace "gc-7428"
  I0104 12:22:44.189280 18 delete.go:95] Deleting pod "simpletest.rc-8ztpr" in namespace "gc-7428"
  I0104 12:22:44.202895 18 delete.go:95] Deleting pod "simpletest.rc-94jf4" in namespace "gc-7428"
  I0104 12:22:44.219247 18 delete.go:95] Deleting pod "simpletest.rc-9pr8w" in namespace "gc-7428"
  I0104 12:22:44.240464 18 delete.go:95] Deleting pod "simpletest.rc-9r9hv" in namespace "gc-7428"
  I0104 12:22:44.256595 18 delete.go:95] Deleting pod "simpletest.rc-9zngw" in namespace "gc-7428"
  I0104 12:22:44.272576 18 delete.go:95] Deleting pod "simpletest.rc-bcmtn" in namespace "gc-7428"
  I0104 12:22:44.290635 18 delete.go:95] Deleting pod "simpletest.rc-bspb6" in namespace "gc-7428"
  I0104 12:22:44.306365 18 delete.go:95] Deleting pod "simpletest.rc-bw26l" in namespace "gc-7428"
  I0104 12:22:44.325195 18 delete.go:95] Deleting pod "simpletest.rc-c5hjx" in namespace "gc-7428"
  I0104 12:22:44.344955 18 delete.go:95] Deleting pod "simpletest.rc-cjgsw" in namespace "gc-7428"
  I0104 12:22:44.364800 18 delete.go:95] Deleting pod "simpletest.rc-cjph5" in namespace "gc-7428"
  I0104 12:22:44.380111 18 delete.go:95] Deleting pod "simpletest.rc-cw72m" in namespace "gc-7428"
  I0104 12:22:44.397712 18 delete.go:95] Deleting pod "simpletest.rc-dbvnw" in namespace "gc-7428"
  I0104 12:22:44.414866 18 delete.go:95] Deleting pod "simpletest.rc-dr7hj" in namespace "gc-7428"
  I0104 12:22:44.434635 18 delete.go:95] Deleting pod "simpletest.rc-f58sk" in namespace "gc-7428"
  I0104 12:22:44.453117 18 delete.go:95] Deleting pod "simpletest.rc-f77hk" in namespace "gc-7428"
  I0104 12:22:44.472058 18 delete.go:95] Deleting pod "simpletest.rc-fhd2p" in namespace "gc-7428"
  I0104 12:22:44.484075 18 delete.go:95] Deleting pod "simpletest.rc-fndzp" in namespace "gc-7428"
  I0104 12:22:44.512561 18 delete.go:95] Deleting pod "simpletest.rc-fv68v" in namespace "gc-7428"
  I0104 12:22:44.532553 18 delete.go:95] Deleting pod "simpletest.rc-fxdz6" in namespace "gc-7428"
  I0104 12:22:44.550254 18 delete.go:95] Deleting pod "simpletest.rc-g2lrr" in namespace "gc-7428"
  I0104 12:22:44.563894 18 delete.go:95] Deleting pod "simpletest.rc-g4t2t" in namespace "gc-7428"
  I0104 12:22:44.581859 18 delete.go:95] Deleting pod "simpletest.rc-g6s27" in namespace "gc-7428"
  I0104 12:22:44.605550 18 delete.go:95] Deleting pod "simpletest.rc-gd28g" in namespace "gc-7428"
  I0104 12:22:44.624940 18 delete.go:95] Deleting pod "simpletest.rc-ghkq5" in namespace "gc-7428"
  I0104 12:22:44.639700 18 delete.go:95] Deleting pod "simpletest.rc-gt68n" in namespace "gc-7428"
  I0104 12:22:44.655307 18 delete.go:95] Deleting pod "simpletest.rc-gwwj7" in namespace "gc-7428"
  I0104 12:22:44.670451 18 delete.go:95] Deleting pod "simpletest.rc-gz6jm" in namespace "gc-7428"
  I0104 12:22:44.690253 18 delete.go:95] Deleting pod "simpletest.rc-hbccs" in namespace "gc-7428"
  I0104 12:22:44.707801 18 delete.go:95] Deleting pod "simpletest.rc-hxkcr" in namespace "gc-7428"
  I0104 12:22:44.728523 18 delete.go:95] Deleting pod "simpletest.rc-hxxtw" in namespace "gc-7428"
  I0104 12:22:44.746303 18 delete.go:95] Deleting pod "simpletest.rc-j5kr8" in namespace "gc-7428"
  I0104 12:22:44.759884 18 delete.go:95] Deleting pod "simpletest.rc-jmsxl" in namespace "gc-7428"
  I0104 12:22:44.776741 18 delete.go:95] Deleting pod "simpletest.rc-l5mzk" in namespace "gc-7428"
  I0104 12:22:44.791562 18 delete.go:95] Deleting pod "simpletest.rc-l6ln7" in namespace "gc-7428"
  I0104 12:22:44.812922 18 delete.go:95] Deleting pod "simpletest.rc-lfxkt" in namespace "gc-7428"
  I0104 12:22:44.830188 18 delete.go:95] Deleting pod "simpletest.rc-lkfkf" in namespace "gc-7428"
  I0104 12:22:44.856114 18 delete.go:95] Deleting pod "simpletest.rc-ltn55" in namespace "gc-7428"
  I0104 12:22:44.870168 18 delete.go:95] Deleting pod "simpletest.rc-m4cf8" in namespace "gc-7428"
  I0104 12:22:44.901811 18 delete.go:95] Deleting pod "simpletest.rc-m9cd6" in namespace "gc-7428"
  I0104 12:22:44.919902 18 delete.go:95] Deleting pod "simpletest.rc-mddgx" in namespace "gc-7428"
  I0104 12:22:44.938269 18 delete.go:95] Deleting pod "simpletest.rc-mtzb4" in namespace "gc-7428"
  I0104 12:22:44.954445 18 delete.go:95] Deleting pod "simpletest.rc-n655t" in namespace "gc-7428"
  I0104 12:22:44.970120 18 delete.go:95] Deleting pod "simpletest.rc-np92c" in namespace "gc-7428"
  I0104 12:22:44.985781 18 delete.go:95] Deleting pod "simpletest.rc-phspg" in namespace "gc-7428"
  I0104 12:22:45.005865 18 delete.go:95] Deleting pod "simpletest.rc-pnbcf" in namespace "gc-7428"
  I0104 12:22:45.025207 18 delete.go:95] Deleting pod "simpletest.rc-pzpq6" in namespace "gc-7428"
  I0104 12:22:45.038656 18 delete.go:95] Deleting pod "simpletest.rc-q4g5z" in namespace "gc-7428"
  I0104 12:22:45.055268 18 delete.go:95] Deleting pod "simpletest.rc-qb6nd" in namespace "gc-7428"
  I0104 12:22:45.073224 18 delete.go:95] Deleting pod "simpletest.rc-qcjxb" in namespace "gc-7428"
  I0104 12:22:45.104222 18 delete.go:95] Deleting pod "simpletest.rc-qw4dr" in namespace "gc-7428"
  I0104 12:22:45.156918 18 delete.go:95] Deleting pod "simpletest.rc-qx9gc" in namespace "gc-7428"
  I0104 12:22:45.204422 18 delete.go:95] Deleting pod "simpletest.rc-rjrd8" in namespace "gc-7428"
  I0104 12:22:45.252509 18 delete.go:95] Deleting pod "simpletest.rc-rkm4g" in namespace "gc-7428"
  I0104 12:22:45.304237 18 delete.go:95] Deleting pod "simpletest.rc-rm7q7" in namespace "gc-7428"
  I0104 12:22:45.351057 18 delete.go:95] Deleting pod "simpletest.rc-rmzvp" in namespace "gc-7428"
  I0104 12:22:45.401395 18 delete.go:95] Deleting pod "simpletest.rc-rrml8" in namespace "gc-7428"
  I0104 12:22:45.451483 18 delete.go:95] Deleting pod "simpletest.rc-s4l8p" in namespace "gc-7428"
  I0104 12:22:45.499141 18 delete.go:95] Deleting pod "simpletest.rc-sb6zv" in namespace "gc-7428"
  I0104 12:22:45.554354 18 delete.go:95] Deleting pod "simpletest.rc-sfcbr" in namespace "gc-7428"
  I0104 12:22:45.603785 18 delete.go:95] Deleting pod "simpletest.rc-shq87" in namespace "gc-7428"
  I0104 12:22:45.650064 18 delete.go:95] Deleting pod "simpletest.rc-sw9n4" in namespace "gc-7428"
  I0104 12:22:45.708658 18 delete.go:95] Deleting pod "simpletest.rc-tgphz" in namespace "gc-7428"
  I0104 12:22:45.757899 18 delete.go:95] Deleting pod "simpletest.rc-tl8ns" in namespace "gc-7428"
  I0104 12:22:45.799295 18 delete.go:95] Deleting pod "simpletest.rc-v9prt" in namespace "gc-7428"
  I0104 12:22:45.847897 18 delete.go:95] Deleting pod "simpletest.rc-vrhn7" in namespace "gc-7428"
  I0104 12:22:45.901011 18 delete.go:95] Deleting pod "simpletest.rc-vrp8l" in namespace "gc-7428"
  I0104 12:22:45.953099 18 delete.go:95] Deleting pod "simpletest.rc-wb279" in namespace "gc-7428"
  I0104 12:22:45.999968 18 delete.go:95] Deleting pod "simpletest.rc-whm6c" in namespace "gc-7428"
  I0104 12:22:46.050280 18 delete.go:95] Deleting pod "simpletest.rc-wm54c" in namespace "gc-7428"
  I0104 12:22:46.099018 18 delete.go:95] Deleting pod "simpletest.rc-xrrhv" in namespace "gc-7428"
  I0104 12:22:46.155839 18 delete.go:95] Deleting pod "simpletest.rc-z7m9w" in namespace "gc-7428"
  I0104 12:22:46.202981 18 delete.go:95] Deleting pod "simpletest.rc-zllzq" in namespace "gc-7428"
  I0104 12:22:46.253392 18 delete.go:95] Deleting pod "simpletest.rc-zlwq5" in namespace "gc-7428"
  I0104 12:22:46.299362 18 delete.go:95] Deleting pod "simpletest.rc-ztntx" in namespace "gc-7428"
  I0104 12:22:46.354364 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7428" for this suite. @ 01/04/25 12:22:46.39
• [43.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/04/25 12:22:46.443
  I0104 12:22:46.443808 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 12:22:46.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:22:46.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:22:46.471
  I0104 12:22:46.550776 18 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0104 12:22:46.558551 18 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0104 12:22:46.570925 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:46.571035 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:46.578328 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:22:46.578708 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:22:47.566944 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:47.566998 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:47.582018 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:22:47.582099 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:22:48.563556 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:48.563610 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:48.567951 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:22:48.568203 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:22:49.563603 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:49.563653 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:49.568802 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:22:49.568864 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:22:50.565079 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:50.565128 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:50.570163 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 12:22:50.570197 18 fixtures.go:130] Node ip-172-31-76-68 is running 0 daemon pod, expected 1
  I0104 12:22:51.562352 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:51.562400 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:51.565750 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 12:22:51.565769 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0104 12:22:51.565783 18 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0104 12:22:51.577113 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I0104 12:22:52.591648 18 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0104 12:22:52.601354 18 daemon_set.go:102] Updating DaemonSet daemon-set
  I0104 12:22:52.601394 18 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0104 12:22:52.606870 18 daemon_set.go:1193] Wrong image for pod: daemon-set-jwrwt. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0104 12:22:52.606887 18 daemon_set.go:1198] Pod daemon-set-jwrwt is not available
  I0104 12:22:52.614508 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:52.614547 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:53.610365 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:53.610411 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:54.606858 18 daemon_set.go:1198] Pod daemon-set-wkzw5 is not available
  I0104 12:22:54.612126 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:22:54.612153 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 01/04/25 12:22:54.62
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8599, will wait for the garbage collector to delete the pods @ 01/04/25 12:22:54.62
  I0104 12:22:54.685486 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.315329ms
  I0104 12:22:54.785638 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.144819ms
  I0104 12:22:56.391346 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:22:56.391403 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0104 12:22:56.396160 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14842"},"items":null}

  I0104 12:22:56.400878 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14842"},"items":null}

  I0104 12:22:56.417607 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8599" for this suite. @ 01/04/25 12:22:56.42
• [9.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/04/25 12:22:56.428
  I0104 12:22:56.428469 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/04/25 12:22:56.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:22:56.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:22:56.453
  STEP: create the container to handle the HTTPGet hook request. @ 01/04/25 12:22:56.461
  STEP: create the pod with lifecycle hook @ 01/04/25 12:22:58.49
  STEP: delete the pod with lifecycle hook @ 01/04/25 12:23:00.515
  STEP: check prestop hook @ 01/04/25 12:23:02.533
  I0104 12:23:02.549617 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5109" for this suite. @ 01/04/25 12:23:02.553
• [6.134 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 01/04/25 12:23:02.562
  I0104 12:23:02.562437 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 12:23:02.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:02.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:02.585
  STEP: Creating a pod to test service account token:  @ 01/04/25 12:23:02.588
  STEP: Saw pod success @ 01/04/25 12:23:06.613
  I0104 12:23:06.618550 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod test-pod-48e6d550-b811-4fd5-a0e5-88e4214e3e8d container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:23:06.628
  I0104 12:23:06.650478 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1072" for this suite. @ 01/04/25 12:23:06.655
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/04/25 12:23:06.666
  I0104 12:23:06.666100 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename namespaces @ 01/04/25 12:23:06.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:06.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:06.685
  STEP: creating a Namespace @ 01/04/25 12:23:06.687
  STEP: patching the Namespace @ 01/04/25 12:23:06.704
  STEP: get the Namespace and ensuring it has the label @ 01/04/25 12:23:06.712
  I0104 12:23:06.714901 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8369" for this suite. @ 01/04/25 12:23:06.718
  STEP: Destroying namespace "nspatchtest-28a71793-a337-4744-bfc9-643323405cbc-5852" for this suite. @ 01/04/25 12:23:06.729
• [0.070 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/04/25 12:23:06.736
  I0104 12:23:06.736535 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:23:06.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:06.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:06.756
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:23:06.759
  STEP: Saw pod success @ 01/04/25 12:23:08.782
  I0104 12:23:08.786969 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-59e8bc73-75d3-4c52-af69-d293786070e9 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:23:08.796
  I0104 12:23:08.829696 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2704" for this suite. @ 01/04/25 12:23:08.834
• [2.109 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/04/25 12:23:08.845
  I0104 12:23:08.845707 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:23:08.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:08.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:08.864
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:23:08.867
  STEP: Saw pod success @ 01/04/25 12:23:10.889
  I0104 12:23:10.894199 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-f286d9d8-7cf2-446b-8795-b75af40d8c6e container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:23:10.901
  I0104 12:23:10.921664 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5149" for this suite. @ 01/04/25 12:23:10.926
• [2.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/04/25 12:23:10.935
  I0104 12:23:10.935329 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename podtemplate @ 01/04/25 12:23:10.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:10.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:10.954
  STEP: Create a pod template @ 01/04/25 12:23:10.957
  STEP: Replace a pod template @ 01/04/25 12:23:10.963
  I0104 12:23:10.972144 18 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0104 12:23:10.972275 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2752" for this suite. @ 01/04/25 12:23:10.977
• [0.050 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/04/25 12:23:10.985
  I0104 12:23:10.985840 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:23:10.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:11.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:11.005
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/04/25 12:23:11.008
  STEP: Saw pod success @ 01/04/25 12:23:15.039
  I0104 12:23:15.042666 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-ca72e620-7ba7-44a8-b034-3103e17364ff container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:23:15.05
  I0104 12:23:15.072226 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1531" for this suite. @ 01/04/25 12:23:15.077
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/04/25 12:23:15.086
  I0104 12:23:15.086257 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:23:15.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:15.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:15.107
  STEP: Creating projection with secret that has name projected-secret-test-map-7c04c45c-e0c0-4a56-aaa9-6b5bf610fa7f @ 01/04/25 12:23:15.11
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:23:15.114
  STEP: Saw pod success @ 01/04/25 12:23:19.146
  I0104 12:23:19.149247 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-secrets-4bd1de0c-43b5-4444-9f48-46cb7777c4a1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:23:19.158
  I0104 12:23:19.181083 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7205" for this suite. @ 01/04/25 12:23:19.184
• [4.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/04/25 12:23:19.196
  I0104 12:23:19.196308 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl-logs @ 01/04/25 12:23:19.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:19.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:19.213
  STEP: creating a pod @ 01/04/25 12:23:19.216
  I0104 12:23:19.216505 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0104 12:23:19.269214 18 builder.go:146] stderr: ""
  I0104 12:23:19.269251 18 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/04/25 12:23:19.269
  I0104 12:23:19.269347 18 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0104 12:23:21.279497 18 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/04/25 12:23:21.279
  I0104 12:23:21.279603 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 logs logs-generator logs-generator'
  I0104 12:23:21.336931 18 builder.go:146] stderr: ""
  I0104 12:23:21.336986 18 builder.go:147] stdout: "I0104 12:23:19.894967       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/cwk 463\nI0104 12:23:20.095087       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/j46 510\nI0104 12:23:20.296367       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/pzg 567\nI0104 12:23:20.495600       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/4qc8 573\nI0104 12:23:20.695946       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/bqkg 504\nI0104 12:23:20.895296       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/7xg 387\nI0104 12:23:21.095628       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j5p 452\nI0104 12:23:21.295840       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sxmj 497\n"
  STEP: limiting log lines @ 01/04/25 12:23:21.337
  I0104 12:23:21.337080 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 logs logs-generator logs-generator --tail=1'
  I0104 12:23:21.391483 18 builder.go:146] stderr: ""
  I0104 12:23:21.391521 18 builder.go:147] stdout: "I0104 12:23:21.295840       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sxmj 497\n"
  I0104 12:23:21.391531 18 logs.go:180] got output "I0104 12:23:21.295840       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sxmj 497\n"
  STEP: limiting log bytes @ 01/04/25 12:23:21.391
  I0104 12:23:21.391610 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 logs logs-generator logs-generator --limit-bytes=1'
  I0104 12:23:21.446565 18 builder.go:146] stderr: ""
  I0104 12:23:21.446601 18 builder.go:147] stdout: "I"
  I0104 12:23:21.446610 18 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/04/25 12:23:21.446
  I0104 12:23:21.446705 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 logs logs-generator logs-generator --tail=1 --timestamps'
  I0104 12:23:21.500507 18 builder.go:146] stderr: ""
  I0104 12:23:21.500546 18 builder.go:147] stdout: "2025-01-04T12:23:21.495188689Z I0104 12:23:21.495059       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/ts4 595\n"
  I0104 12:23:21.500558 18 logs.go:192] got output "2025-01-04T12:23:21.495188689Z I0104 12:23:21.495059       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/ts4 595\n"
  STEP: restricting to a time range @ 01/04/25 12:23:21.5
  I0104 12:23:24.001304 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 logs logs-generator logs-generator --since=1s'
  I0104 12:23:24.055152 18 builder.go:146] stderr: ""
  I0104 12:23:24.055219 18 builder.go:147] stdout: "I0104 12:23:23.095752       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/g9qb 442\nI0104 12:23:23.295052       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/zrf 599\nI0104 12:23:23.495369       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/6hnv 429\nI0104 12:23:23.695586       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/fzc 416\nI0104 12:23:23.895941       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/ccr7 426\n"
  I0104 12:23:24.055266 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 logs logs-generator logs-generator --since=24h'
  I0104 12:23:24.110398 18 builder.go:146] stderr: ""
  I0104 12:23:24.110460 18 builder.go:147] stdout: "I0104 12:23:19.894967       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/cwk 463\nI0104 12:23:20.095087       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/j46 510\nI0104 12:23:20.296367       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/pzg 567\nI0104 12:23:20.495600       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/4qc8 573\nI0104 12:23:20.695946       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/bqkg 504\nI0104 12:23:20.895296       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/7xg 387\nI0104 12:23:21.095628       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j5p 452\nI0104 12:23:21.295840       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/sxmj 497\nI0104 12:23:21.495059       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/ts4 595\nI0104 12:23:21.695375       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/t45 251\nI0104 12:23:21.895729       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/kzn5 307\nI0104 12:23:22.095058       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/qjs 326\nI0104 12:23:22.295665       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/884 545\nI0104 12:23:22.495982       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/h7w 229\nI0104 12:23:22.695346       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/h4q8 575\nI0104 12:23:22.895738       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/l24z 597\nI0104 12:23:23.095752       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/g9qb 442\nI0104 12:23:23.295052       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/zrf 599\nI0104 12:23:23.495369       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/6hnv 429\nI0104 12:23:23.695586       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/fzc 416\nI0104 12:23:23.895941       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/ccr7 426\nI0104 12:23:24.095116       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/cxjz 399\n"
  I0104 12:23:24.110580 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-logs-6207 delete pod logs-generator'
  I0104 12:23:24.627790 18 builder.go:146] stderr: ""
  I0104 12:23:24.627838 18 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0104 12:23:24.627950 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6207" for this suite. @ 01/04/25 12:23:24.633
• [5.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/04/25 12:23:24.641
  I0104 12:23:24.641907 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:23:24.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:24.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:24.667
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/04/25 12:23:24.67
  STEP: Saw pod success @ 01/04/25 12:23:28.697
  I0104 12:23:28.704718 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-374155d2-ff90-4e0e-81ca-0aef6cd537fb container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:23:28.713
  I0104 12:23:28.736172 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6716" for this suite. @ 01/04/25 12:23:28.739
• [4.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/04/25 12:23:28.747
  I0104 12:23:28.747055 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:23:28.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:28.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:28.769
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:23:28.772
  STEP: Saw pod success @ 01/04/25 12:23:30.791
  I0104 12:23:30.796893 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-85a20633-ff87-4e13-a8bb-4e6359b484df container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:23:30.806
  I0104 12:23:30.825883 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8303" for this suite. @ 01/04/25 12:23:30.83
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/04/25 12:23:30.837
  I0104 12:23:30.837968 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:23:30.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:30.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:30.856
  STEP: Creating secret with name secret-test-fa4e7665-8125-4627-b305-93cba2cd9960 @ 01/04/25 12:23:30.86
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:23:30.866
  STEP: Saw pod success @ 01/04/25 12:23:32.886
  I0104 12:23:32.891112 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-secrets-51c8dd64-d61d-4535-b6e6-3365b30314ed container secret-env-test: <nil>
  STEP: delete the pod @ 01/04/25 12:23:32.899
  I0104 12:23:32.921409 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3889" for this suite. @ 01/04/25 12:23:32.926
• [2.099 seconds]
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/04/25 12:23:32.937
  I0104 12:23:32.937186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename events @ 01/04/25 12:23:32.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:32.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:32.956
  STEP: creating a test event @ 01/04/25 12:23:32.959
  STEP: listing events in all namespaces @ 01/04/25 12:23:32.963
  STEP: listing events in test namespace @ 01/04/25 12:23:32.975
  STEP: listing events with field selection filtering on source @ 01/04/25 12:23:32.98
  STEP: listing events with field selection filtering on reportingController @ 01/04/25 12:23:32.985
  STEP: getting the test event @ 01/04/25 12:23:32.988
  STEP: patching the test event @ 01/04/25 12:23:32.992
  STEP: getting the test event @ 01/04/25 12:23:33.002
  STEP: updating the test event @ 01/04/25 12:23:33.006
  STEP: getting the test event @ 01/04/25 12:23:33.015
  STEP: deleting the test event @ 01/04/25 12:23:33.02
  STEP: listing events in all namespaces @ 01/04/25 12:23:33.03
  STEP: listing events in test namespace @ 01/04/25 12:23:33.042
  I0104 12:23:33.045878 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3753" for this suite. @ 01/04/25 12:23:33.05
• [0.125 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/04/25 12:23:33.062
  I0104 12:23:33.062341 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename subpath @ 01/04/25 12:23:33.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:33.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:33.086
  STEP: Setting up data @ 01/04/25 12:23:33.089
  STEP: Creating pod pod-subpath-test-configmap-vh87 @ 01/04/25 12:23:33.098
  STEP: Creating a pod to test atomic-volume-subpath @ 01/04/25 12:23:33.098
  STEP: Saw pod success @ 01/04/25 12:23:57.193
  I0104 12:23:57.196846 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-subpath-test-configmap-vh87 container test-container-subpath-configmap-vh87: <nil>
  STEP: delete the pod @ 01/04/25 12:23:57.205
  STEP: Deleting pod pod-subpath-test-configmap-vh87 @ 01/04/25 12:23:57.227
  I0104 12:23:57.227468 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-vh87" in namespace "subpath-1634"
  I0104 12:23:57.232270 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1634" for this suite. @ 01/04/25 12:23:57.237
• [24.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/04/25 12:23:57.248
  I0104 12:23:57.248841 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replicaset @ 01/04/25 12:23:57.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:23:57.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:23:57.269
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/04/25 12:23:57.272
  STEP: When a replicaset with a matching selector is created @ 01/04/25 12:23:59.298
  STEP: Then the orphan pod is adopted @ 01/04/25 12:23:59.306
  STEP: When the matched label of one of its pods change @ 01/04/25 12:24:00.32
  I0104 12:24:00.330138 18 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/04/25 12:24:00.349
  I0104 12:24:01.370590 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3879" for this suite. @ 01/04/25 12:24:01.374
• [4.133 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/04/25 12:24:01.382
  I0104 12:24:01.382244 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:24:01.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:24:01.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:24:01.403
  STEP: Creating the pod @ 01/04/25 12:24:01.406
  I0104 12:24:03.956251 18 pod_client.go:173] Successfully updated pod "labelsupdate6e165617-0530-470e-a2f6-07fc296b28f1"
  I0104 12:24:07.982635 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4135" for this suite. @ 01/04/25 12:24:07.988
• [6.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 01/04/25 12:24:07.998
  I0104 12:24:07.998489 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 12:24:07.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:24:08.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:24:08.019
  STEP: Creating service test in namespace statefulset-4655 @ 01/04/25 12:24:08.022
  STEP: Creating stateful set ss in namespace statefulset-4655 @ 01/04/25 12:24:08.026
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4655 @ 01/04/25 12:24:08.038
  I0104 12:24:08.045163 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0104 12:24:18.043953 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/04/25 12:24:18.043
  I0104 12:24:18.049251 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:24:18.142945 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:24:18.142986 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:24:18.142996 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:24:18.147113 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0104 12:24:28.147968 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:24:28.148009 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0104 12:24:28.175728 18 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0104 12:24:28.175791 18 resource.go:175] ss-0  ip-172-31-8-94  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:08 +0000 UTC  }]
  I0104 12:24:28.175799 18 resource.go:175] ss-2                  Pending         []
  I0104 12:24:28.175804 18 resource.go:178] 
  I0104 12:24:28.175810 18 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 2
  I0104 12:24:29.181446 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.989427494s
  I0104 12:24:30.187464 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.983784734s
  I0104 12:24:31.194817 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.976907796s
  I0104 12:24:32.199292 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.970343034s
  I0104 12:24:33.206381 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.965216897s
  I0104 12:24:34.212536 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.958864979s
  I0104 12:24:35.218690 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.952712353s
  I0104 12:24:36.224245 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.945585015s
  I0104 12:24:37.230814 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 940.939173ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4655 @ 01/04/25 12:24:38.231
  I0104 12:24:38.238073 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:24:38.334006 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 12:24:38.334052 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:24:38.334063 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:24:38.334115 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:24:38.425793 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0104 12:24:38.425834 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:24:38.425846 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:24:38.425901 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:24:38.515330 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0104 12:24:38.515376 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:24:38.515385 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:24:38.520648 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:24:38.520689 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:24:38.520697 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/04/25 12:24:38.52
  I0104 12:24:38.524114 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:24:38.608283 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:24:38.608323 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:24:38.608334 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:24:38.608451 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:24:38.690594 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:24:38.690635 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:24:38.690644 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:24:38.690715 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4655 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:24:38.774460 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:24:38.774500 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:24:38.774510 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:24:38.774520 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0104 12:24:38.780182 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0104 12:24:48.784306 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:24:48.784332 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:24:48.784340 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:24:48.802620 18 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0104 12:24:48.802694 18 resource.go:175] ss-0  ip-172-31-8-94    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:08 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:08 +0000 UTC  }]
  I0104 12:24:48.802713 18 resource.go:175] ss-1  ip-172-31-18-169  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:28 +0000 UTC  }]
  I0104 12:24:48.802730 18 resource.go:175] ss-2  ip-172-31-76-68   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 12:24:28 +0000 UTC  }]
  I0104 12:24:48.802736 18 resource.go:178] 
  I0104 12:24:48.802743 18 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0104 12:24:49.807466 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.993756698s
  I0104 12:24:50.813631 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.98999055s
  I0104 12:24:51.819548 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.98379096s
  I0104 12:24:52.824597 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.977515268s
  I0104 12:24:53.832559 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.972824038s
  I0104 12:24:54.838715 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.964839112s
  I0104 12:24:55.843569 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.957763861s
  I0104 12:24:56.849999 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.953754735s
  I0104 12:24:57.856365 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 946.456762ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4655 @ 01/04/25 12:24:58.857
  I0104 12:24:58.862801 18 rest.go:150] Scaling statefulset ss to 0
  I0104 12:24:58.868904 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 12:24:58.873724 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4655
  I0104 12:24:58.878581 18 rest.go:150] Scaling statefulset ss to 0
  I0104 12:24:58.886657 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 12:24:58.891525 18 rest.go:88] Deleting statefulset ss
  I0104 12:24:58.906821 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4655" for this suite. @ 01/04/25 12:24:58.909
• [50.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/04/25 12:24:58.919
  I0104 12:24:58.919088 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename endpointslice @ 01/04/25 12:24:58.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:24:58.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:24:58.944
  I0104 12:24:58.957204 18 endpointslice.go:1045] Endpoints addresses: [172.31.24.196 172.31.34.148] , ports: [6443]
  I0104 12:24:58.957231 18 endpointslice.go:1075] EndpointSlices addresses: [172.31.24.196 172.31.34.148] , ports: [6443]
  I0104 12:24:58.957423 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5482" for this suite. @ 01/04/25 12:24:58.962
• [0.052 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/04/25 12:24:58.97
  I0104 12:24:58.970974 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:24:58.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:24:58.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:24:58.988
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:24:58.991
  STEP: Saw pod success @ 01/04/25 12:25:01.011
  I0104 12:25:01.016873 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-ef29e093-ac4d-4417-8156-32bde75d0d10 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:25:01.024
  I0104 12:25:01.051314 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9016" for this suite. @ 01/04/25 12:25:01.055
• [2.092 seconds]
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 01/04/25 12:25:01.062
  I0104 12:25:01.062669 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 12:25:01.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:01.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:01.084
  STEP: Creating a job @ 01/04/25 12:25:01.087
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/04/25 12:25:01.095
  STEP: patching /status @ 01/04/25 12:25:03.101
  STEP: updating /status @ 01/04/25 12:25:03.11
  STEP: get /status @ 01/04/25 12:25:03.121
  I0104 12:25:03.124916 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-63" for this suite. @ 01/04/25 12:25:03.129
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/04/25 12:25:03.137
  I0104 12:25:03.137150 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:25:03.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:03.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:03.154
  STEP: Creating secret with name secret-test-map-cace8428-ff69-4db1-aabb-697286e88d49 @ 01/04/25 12:25:03.157
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:25:03.163
  STEP: Saw pod success @ 01/04/25 12:25:07.193
  I0104 12:25:07.196868 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-secrets-3e039e49-d45b-49df-89ff-38cca6177f5b container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:25:07.206
  I0104 12:25:07.228833 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4137" for this suite. @ 01/04/25 12:25:07.232
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 01/04/25 12:25:07.239
  I0104 12:25:07.239140 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 12:25:07.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:07.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:07.261
  STEP: Creating ServiceAccount "e2e-sa-ln7v6"  @ 01/04/25 12:25:07.263
  I0104 12:25:07.267516 18 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-ln7v6"  @ 01/04/25 12:25:07.267
  I0104 12:25:07.277755 18 service_accounts.go:839] AutomountServiceAccountToken: true
  I0104 12:25:07.277884 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5042" for this suite. @ 01/04/25 12:25:07.282
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/04/25 12:25:07.291
  I0104 12:25:07.291050 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replication-controller @ 01/04/25 12:25:07.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:07.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:07.308
  STEP: Creating ReplicationController "e2e-rc-bqvfw" @ 01/04/25 12:25:07.311
  I0104 12:25:07.316468 18 rc.go:792] Get Replication Controller "e2e-rc-bqvfw" to confirm replicas
  I0104 12:25:08.317042 18 rc.go:792] Get Replication Controller "e2e-rc-bqvfw" to confirm replicas
  I0104 12:25:08.322412 18 rc.go:801] Found 1 replicas for "e2e-rc-bqvfw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-bqvfw" @ 01/04/25 12:25:08.322
  STEP: Updating a scale subresource @ 01/04/25 12:25:08.332
  STEP: Verifying replicas where modified for replication controller "e2e-rc-bqvfw" @ 01/04/25 12:25:08.339
  I0104 12:25:08.339132 18 rc.go:792] Get Replication Controller "e2e-rc-bqvfw" to confirm replicas
  I0104 12:25:09.339260 18 rc.go:792] Get Replication Controller "e2e-rc-bqvfw" to confirm replicas
  I0104 12:25:09.344260 18 rc.go:801] Found 2 replicas for "e2e-rc-bqvfw" replication controller
  I0104 12:25:09.344383 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3853" for this suite. @ 01/04/25 12:25:09.349
• [2.065 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/04/25 12:25:09.356
  I0104 12:25:09.356599 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 12:25:09.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:09.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:09.378
  STEP: create the deployment @ 01/04/25 12:25:09.381
  W0104 12:25:09.390242      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/04/25 12:25:09.39
  STEP: delete the deployment @ 01/04/25 12:25:09.501
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/04/25 12:25:09.512
  STEP: Gathering metrics @ 01/04/25 12:25:10.033
  W0104 12:25:10.041076      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0104 12:25:10.041107 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0104 12:25:10.041247 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4322" for this suite. @ 01/04/25 12:25:10.044
• [0.697 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/04/25 12:25:10.053
  I0104 12:25:10.053666 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 12:25:10.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:10.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:10.074
  I0104 12:25:10.077310 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: creating the pod @ 01/04/25 12:25:10.077
  STEP: submitting the pod to kubernetes @ 01/04/25 12:25:10.077
  I0104 12:25:12.120389 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7825" for this suite. @ 01/04/25 12:25:12.125
• [2.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 01/04/25 12:25:12.133
  I0104 12:25:12.133505 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:25:12.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:12.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:12.16
  STEP: validating cluster-info @ 01/04/25 12:25:12.167
  I0104 12:25:12.167720 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-5045 cluster-info'
  I0104 12:25:12.213896 18 builder.go:146] stderr: ""
  I0104 12:25:12.213943 18 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0104 12:25:12.214044 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5045" for this suite. @ 01/04/25 12:25:12.218
• [0.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/04/25 12:25:12.225
  I0104 12:25:12.225886 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename hostport @ 01/04/25 12:25:12.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:12.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:12.257
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/04/25 12:25:12.266
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.76.68 on the node which pod1 resides and expect scheduled @ 01/04/25 12:25:14.29
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.76.68 but use UDP protocol on the node which pod2 resides @ 01/04/25 12:25:16.31
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/04/25 12:25:30.385
  I0104 12:25:30.385901 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.76.68 http://127.0.0.1:54323/hostname] Namespace:hostport-1730 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:25:30.385930 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:25:30.386421 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:25:30.386470 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1730/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.76.68+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.76.68, port: 54323 @ 01/04/25 12:25:30.427
  I0104 12:25:30.427955 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.76.68:54323/hostname] Namespace:hostport-1730 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:25:30.427972 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:25:30.428357 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:25:30.428407 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1730/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.76.68%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.76.68, port: 54323 UDP @ 01/04/25 12:25:30.466
  I0104 12:25:30.466433 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.76.68 54323] Namespace:hostport-1730 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:25:30.466447 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:25:30.466825 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:25:30.466873 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-1730/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.76.68+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0104 12:25:35.503126 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1730" for this suite. @ 01/04/25 12:25:35.509
• [23.292 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/04/25 12:25:35.517
  I0104 12:25:35.517926 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:25:35.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:35.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:35.54
  STEP: Creating configMap with name projected-configmap-test-volume-map-a6fec8dd-0d20-49f4-89fd-3e7e95dde846 @ 01/04/25 12:25:35.543
  STEP: Creating a pod to test consume configMaps @ 01/04/25 12:25:35.55
  STEP: Saw pod success @ 01/04/25 12:25:39.581
  I0104 12:25:39.585216 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-configmaps-7a9cbc1b-0f8f-441b-9fdd-8c62347133f7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:25:39.595
  I0104 12:25:39.616896 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4919" for this suite. @ 01/04/25 12:25:39.62
• [4.111 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/04/25 12:25:39.629
  I0104 12:25:39.629048 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:25:39.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:39.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:39.648
  STEP: Creating configMap with name configmap-test-volume-map-5b469f5a-192f-4ada-8e6a-b8eceb6efd8f @ 01/04/25 12:25:39.651
  STEP: Creating a pod to test consume configMaps @ 01/04/25 12:25:39.657
  STEP: Saw pod success @ 01/04/25 12:25:43.685
  I0104 12:25:43.692933 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-d04002c8-815a-47b1-8798-7d79585d7dd1 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:25:43.703
  I0104 12:25:43.723982 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2725" for this suite. @ 01/04/25 12:25:43.729
• [4.110 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/04/25 12:25:43.739
  I0104 12:25:43.739467 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:25:43.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:43.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:43.762
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/04/25 12:25:43.765
  STEP: Saw pod success @ 01/04/25 12:25:47.793
  I0104 12:25:47.796147 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-03373990-7c47-4906-bc7c-4504569460ed container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:25:47.805
  I0104 12:25:47.828136 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2536" for this suite. @ 01/04/25 12:25:47.833
• [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/04/25 12:25:47.841
  I0104 12:25:47.841611 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:25:47.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:47.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:47.865
  STEP: creating service endpoint-test2 in namespace services-9311 @ 01/04/25 12:25:47.868
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9311 to expose endpoints map[] @ 01/04/25 12:25:47.879
  I0104 12:25:47.893155 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9311 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9311 @ 01/04/25 12:25:47.893
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9311 to expose endpoints map[pod1:[80]] @ 01/04/25 12:25:49.921
  I0104 12:25:49.935913 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9311 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/04/25 12:25:49.935
  I0104 12:25:49.935980 18 resource.go:361] Creating new exec pod
  I0104 12:25:52.952913 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9311 exec execpodf2p4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0104 12:25:53.042014 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0104 12:25:53.042229 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:25:53.042381 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9311 exec execpodf2p4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  I0104 12:25:53.126885 18 builder.go:146] stderr: "+ + ncecho hostName -v\n -t -w 2 10.152.183.140 80\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  I0104 12:25:53.126936 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9311 @ 01/04/25 12:25:53.126
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9311 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/04/25 12:25:55.151
  I0104 12:25:55.168285 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9311 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/04/25 12:25:55.168
  I0104 12:25:56.168820 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9311 exec execpodf2p4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0104 12:25:56.255368 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0104 12:25:56.255412 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:25:56.255486 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9311 exec execpodf2p4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  I0104 12:25:56.341760 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.140 80\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  I0104 12:25:56.341816 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9311 @ 01/04/25 12:25:56.341
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9311 to expose endpoints map[pod2:[80]] @ 01/04/25 12:25:56.367
  I0104 12:25:56.384575 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9311 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/04/25 12:25:56.384
  I0104 12:25:57.385541 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9311 exec execpodf2p4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0104 12:25:57.472593 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0104 12:25:57.472637 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:25:57.472772 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-9311 exec execpodf2p4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  I0104 12:25:57.565034 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.140 80\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  I0104 12:25:57.565076 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9311 @ 01/04/25 12:25:57.565
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9311 to expose endpoints map[] @ 01/04/25 12:25:57.587
  I0104 12:25:57.602581 18 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9311 exposes endpoints map[]
  I0104 12:25:57.628378 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9311" for this suite. @ 01/04/25 12:25:57.633
• [9.798 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/04/25 12:25:57.64
  I0104 12:25:57.640128 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename endpointslice @ 01/04/25 12:25:57.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:57.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:57.66
  I0104 12:25:57.717927 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5305" for this suite. @ 01/04/25 12:25:57.724
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/04/25 12:25:57.737
  I0104 12:25:57.738047 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 12:25:57.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:25:57.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:25:57.757
  I0104 12:25:57.771904 18 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0104 12:26:02.777142 18 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/04/25 12:26:02.777
  I0104 12:26:02.777334 18 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/04/25 12:26:02.79
  I0104 12:26:02.811599 18 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c77f9414-7ebf-4774-9a1f-237467ce20d3",
      ResourceVersion: (string) (len=5) "16670",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590362,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 12:26:02.819403 18 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7630232-e85b-427a-8f91-85449bd12cd9",
      ResourceVersion: (string) (len=5) "16673",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590362,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c77f9414-7ebf-4774-9a1f-237467ce20d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 37 37 66 39 34  31 34 2d 37 65 62 66 2d  |\"c77f9414-7ebf-|
              00000120  34 37 37 34 2d 39 61 31  66 2d 32 33 37 34 36 37  |4774-9a1f-237467|
              00000130  63 65 32 30 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ce20d3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:26:02.819869 18 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0104 12:26:02.820048 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9921d1f-d191-4912-a3cd-b3adf46463a8",
      ResourceVersion: (string) (len=5) "16672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c77f9414-7ebf-4774-9a1f-237467ce20d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 37 37 66 39 34 31  |"uid\":\"c77f941|
              00000040  34 2d 37 65 62 66 2d 34  37 37 34 2d 39 61 31 66  |4-7ebf-4774-9a1f|
              00000050  2d 32 33 37 34 36 37 63  65 32 30 64 33 5c 22 7d  |-237467ce20d3\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:26:02.825902 18 deployment.go:67] Pod "test-cleanup-controller-zw6nj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-zw6nj",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65f8f1f9-77f7-417f-9713-e1691726793d",
      ResourceVersion: (string) (len=5) "16650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "c9921d1f-d191-4912-a3cd-b3adf46463a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 39 39 32 31 64 31 66  |uid\":\"c9921d1f|
              00000080  2d 64 31 39 31 2d 34 39  31 32 2d 61 33 63 64 2d  |-d191-4912-a3cd-|
              00000090  62 33 61 64 66 34 36 34  36 33 61 38 5c 22 7d 22  |b3adf46463a8\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 36 34 5c 22 7d  |2.168.104.164\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-md256",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-md256",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590357,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871590358,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3922d13192d3ad981ed31af7dd1b2398f5b4fe3e8bcc9597943bdf48dc9dff4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-md256",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:26:02.827516 18 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-h5ddb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-h5ddb",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-4050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f64e7d24-a072-4628-a45c-850c92d762a9",
      ResourceVersion: (string) (len=5) "16676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590362,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "d7630232-e85b-427a-8f91-85449bd12cd9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  36 33 30 32 33 32 2d 65  |d\":\"d7630232-e|
              00000090  38 35 62 2d 34 32 37 61  2d 38 66 39 31 2d 38 35  |85b-427a-8f91-85|
              000000a0  34 34 39 62 64 31 32 63  64 39 5c 22 7d 22 3a 7b  |449bd12cd9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh599",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh599",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:26:02.828208 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4050" for this suite. @ 01/04/25 12:26:02.848
• [5.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/04/25 12:26:02.863
  I0104 12:26:02.863507 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 12:26:02.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:26:02.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:26:02.888
  STEP: reading a file in the container @ 01/04/25 12:26:04.925
  I0104 12:26:04.925405 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7629 pod-service-account-07aa78c2-7925-44fb-8cfb-7136cd477df8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/04/25 12:26:05.007
  I0104 12:26:05.007299 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7629 pod-service-account-07aa78c2-7925-44fb-8cfb-7136cd477df8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/04/25 12:26:05.1
  I0104 12:26:05.100740 18 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7629 pod-service-account-07aa78c2-7925-44fb-8cfb-7136cd477df8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0104 12:26:05.188707 18 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-7629"
  I0104 12:26:05.190804 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7629" for this suite. @ 01/04/25 12:26:05.195
• [2.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 01/04/25 12:26:05.204
  I0104 12:26:05.204184 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename containers @ 01/04/25 12:26:05.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:26:05.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:26:05.225
  STEP: Creating a pod to test override arguments @ 01/04/25 12:26:05.228
  STEP: Saw pod success @ 01/04/25 12:26:07.25
  I0104 12:26:07.254906 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod client-containers-cdc48958-a27c-40b4-98f8-e9fb1f24bc88 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:26:07.263
  I0104 12:26:07.286830 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1655" for this suite. @ 01/04/25 12:26:07.294
• [2.100 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/04/25 12:26:07.303
  I0104 12:26:07.303845 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:26:07.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:26:07.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:26:07.335
  STEP: Creating the pod @ 01/04/25 12:26:07.342
  I0104 12:26:09.897724 18 pod_client.go:173] Successfully updated pod "annotationupdate3b98adfc-9c6f-4768-a5c7-9005f56b0d25"
  I0104 12:26:11.915546 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5708" for this suite. @ 01/04/25 12:26:11.92
• [4.626 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/04/25 12:26:11.93
  I0104 12:26:11.930051 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename cronjob @ 01/04/25 12:26:11.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:26:11.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:26:11.956
  STEP: Creating a ReplaceConcurrent cronjob @ 01/04/25 12:26:11.959
  STEP: Ensuring a job is scheduled @ 01/04/25 12:26:11.967
  STEP: Ensuring exactly one is scheduled @ 01/04/25 12:27:01.973
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/04/25 12:27:01.979
  STEP: Ensuring the job is replaced with a new one @ 01/04/25 12:27:01.982
  STEP: Removing cronjob @ 01/04/25 12:28:01.987
  I0104 12:28:01.998540 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2998" for this suite. @ 01/04/25 12:28:02.003
• [110.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/04/25 12:28:02.014
  I0104 12:28:02.014164 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 12:28:02.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:02.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:02.038
  I0104 12:28:02.041349 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  W0104 12:28:04.581550      18 warnings.go:70] unknown field "alpha"
  W0104 12:28:04.581574      18 warnings.go:70] unknown field "beta"
  W0104 12:28:04.581578      18 warnings.go:70] unknown field "delta"
  W0104 12:28:04.581581      18 warnings.go:70] unknown field "epsilon"
  W0104 12:28:04.581584      18 warnings.go:70] unknown field "gamma"
  I0104 12:28:05.131608 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5383" for this suite. @ 01/04/25 12:28:05.137
• [3.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 01/04/25 12:28:05.145
  I0104 12:28:05.145793 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:28:05.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:05.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:05.164
  STEP: Starting the proxy @ 01/04/25 12:28:05.166
  I0104 12:28:05.167196 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-4087 proxy --unix-socket=/tmp/kubectl-proxy-unix1857842220/test'
  STEP: retrieving proxy /api/ output @ 01/04/25 12:28:05.201
  I0104 12:28:05.202126 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4087" for this suite. @ 01/04/25 12:28:05.207
• [0.071 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/04/25 12:28:05.216
  I0104 12:28:05.216776 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:28:05.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:05.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:05.238
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/04/25 12:28:05.241
  STEP: Saw pod success @ 01/04/25 12:28:07.265
  I0104 12:28:07.269594 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-d1900a30-7148-40b5-947b-fc0b979b2ef4 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:28:07.291
  I0104 12:28:07.310196 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6797" for this suite. @ 01/04/25 12:28:07.314
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/04/25 12:28:07.325
  I0104 12:28:07.325180 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 12:28:07.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:07.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:07.344
  STEP: Create a pod @ 01/04/25 12:28:07.348
  STEP: patching /status @ 01/04/25 12:28:09.362
  I0104 12:28:09.372826 18 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0104 12:28:09.372948 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2407" for this suite. @ 01/04/25 12:28:09.378
• [2.062 seconds]
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 01/04/25 12:28:09.386
  I0104 12:28:09.386984 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:28:09.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:09.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:09.406
  STEP: creating a collection of services @ 01/04/25 12:28:09.409
  I0104 12:28:09.409896 18 service.go:3655] Creating e2e-svc-a-6pmvx
  I0104 12:28:09.419345 18 service.go:3655] Creating e2e-svc-b-vnnbs
  I0104 12:28:09.430799 18 service.go:3655] Creating e2e-svc-c-2grhk
  STEP: deleting service collection @ 01/04/25 12:28:09.447
  I0104 12:28:09.483049 18 service.go:3690] Collection of services has been deleted
  I0104 12:28:09.483169 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1044" for this suite. @ 01/04/25 12:28:09.486
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/04/25 12:28:09.494
  I0104 12:28:09.494601 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:28:09.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:09.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:09.514
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:28:09.517
  STEP: Saw pod success @ 01/04/25 12:28:13.546
  I0104 12:28:13.549813 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod downwardapi-volume-068d06c3-6e10-4847-94d0-5759b537a2eb container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:28:13.569
  I0104 12:28:13.592325 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5815" for this suite. @ 01/04/25 12:28:13.596
• [4.113 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/04/25 12:28:13.607
  I0104 12:28:13.607526 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:28:13.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:13.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:13.625
  STEP: creating a replication controller @ 01/04/25 12:28:13.628
  I0104 12:28:13.628574 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 create -f -'
  I0104 12:28:13.719971 18 builder.go:146] stderr: ""
  I0104 12:28:13.720013 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/04/25 12:28:13.72
  I0104 12:28:13.720095 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 12:28:13.775292 18 builder.go:146] stderr: ""
  I0104 12:28:13.775331 18 builder.go:147] stdout: "update-demo-nautilus-9j5ps update-demo-nautilus-n9stt "
  I0104 12:28:13.775397 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 12:28:13.821611 18 builder.go:146] stderr: ""
  I0104 12:28:13.821652 18 builder.go:147] stdout: ""
  I0104 12:28:13.821662 18 kubectl.go:2502] update-demo-nautilus-9j5ps is created but not running
  I0104 12:28:18.821862 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 12:28:18.869767 18 builder.go:146] stderr: ""
  I0104 12:28:18.869812 18 builder.go:147] stdout: "update-demo-nautilus-9j5ps update-demo-nautilus-n9stt "
  I0104 12:28:18.869857 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 12:28:18.915339 18 builder.go:146] stderr: ""
  I0104 12:28:18.915376 18 builder.go:147] stdout: "true"
  I0104 12:28:18.915427 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 12:28:18.962065 18 builder.go:146] stderr: ""
  I0104 12:28:18.962104 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 12:28:18.962116 18 kubectl.go:2393] validating pod update-demo-nautilus-9j5ps
  I0104 12:28:18.969796 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 12:28:18.969857 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 12:28:18.969869 18 kubectl.go:2520] update-demo-nautilus-9j5ps is verified up and running
  I0104 12:28:18.969940 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-n9stt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 12:28:19.016342 18 builder.go:146] stderr: ""
  I0104 12:28:19.016389 18 builder.go:147] stdout: "true"
  I0104 12:28:19.016445 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-n9stt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 12:28:19.061862 18 builder.go:146] stderr: ""
  I0104 12:28:19.061907 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 12:28:19.061920 18 kubectl.go:2393] validating pod update-demo-nautilus-n9stt
  I0104 12:28:19.067466 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 12:28:19.067516 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 12:28:19.067528 18 kubectl.go:2520] update-demo-nautilus-n9stt is verified up and running
  STEP: scaling down the replication controller @ 01/04/25 12:28:19.067
  I0104 12:28:19.068335 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0104 12:28:19.068370 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0104 12:28:20.133498 18 builder.go:146] stderr: ""
  I0104 12:28:20.133537 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/04/25 12:28:20.133
  I0104 12:28:20.133641 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 12:28:20.185838 18 builder.go:146] stderr: ""
  I0104 12:28:20.185898 18 builder.go:147] stdout: "update-demo-nautilus-9j5ps update-demo-nautilus-n9stt "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/04/25 12:28:20.185
  I0104 12:28:25.186372 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 12:28:25.233854 18 builder.go:146] stderr: ""
  I0104 12:28:25.233893 18 builder.go:147] stdout: "update-demo-nautilus-9j5ps "
  I0104 12:28:25.233941 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 12:28:25.281530 18 builder.go:146] stderr: ""
  I0104 12:28:25.281579 18 builder.go:147] stdout: "true"
  I0104 12:28:25.281649 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 12:28:25.329293 18 builder.go:146] stderr: ""
  I0104 12:28:25.329331 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 12:28:25.329344 18 kubectl.go:2393] validating pod update-demo-nautilus-9j5ps
  I0104 12:28:25.335705 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 12:28:25.335748 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 12:28:25.335759 18 kubectl.go:2520] update-demo-nautilus-9j5ps is verified up and running
  STEP: scaling up the replication controller @ 01/04/25 12:28:25.335
  I0104 12:28:25.336470 18 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0104 12:28:25.336501 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0104 12:28:26.407992 18 builder.go:146] stderr: ""
  I0104 12:28:26.408040 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/04/25 12:28:26.408
  I0104 12:28:26.408129 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 12:28:26.456862 18 builder.go:146] stderr: ""
  I0104 12:28:26.456901 18 builder.go:147] stdout: "update-demo-nautilus-9j5ps update-demo-nautilus-rvnsb "
  I0104 12:28:26.456950 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 12:28:26.502746 18 builder.go:146] stderr: ""
  I0104 12:28:26.502784 18 builder.go:147] stdout: "true"
  I0104 12:28:26.502854 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-9j5ps -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 12:28:26.549227 18 builder.go:146] stderr: ""
  I0104 12:28:26.549266 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 12:28:26.549278 18 kubectl.go:2393] validating pod update-demo-nautilus-9j5ps
  I0104 12:28:26.555386 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 12:28:26.555424 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 12:28:26.555438 18 kubectl.go:2520] update-demo-nautilus-9j5ps is verified up and running
  I0104 12:28:26.555488 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-rvnsb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 12:28:26.601278 18 builder.go:146] stderr: ""
  I0104 12:28:26.601318 18 builder.go:147] stdout: "true"
  I0104 12:28:26.601367 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods update-demo-nautilus-rvnsb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 12:28:26.646913 18 builder.go:146] stderr: ""
  I0104 12:28:26.646957 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 12:28:26.646967 18 kubectl.go:2393] validating pod update-demo-nautilus-rvnsb
  I0104 12:28:26.654214 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 12:28:26.654269 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 12:28:26.654281 18 kubectl.go:2520] update-demo-nautilus-rvnsb is verified up and running
  STEP: using delete to clean up resources @ 01/04/25 12:28:26.654
  I0104 12:28:26.654370 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 delete --grace-period=0 --force -f -'
  I0104 12:28:26.709235 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 12:28:26.709285 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0104 12:28:26.709337 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get rc,svc -l name=update-demo --no-headers'
  I0104 12:28:26.763034 18 builder.go:146] stderr: "No resources found in kubectl-7711 namespace.\n"
  I0104 12:28:26.763080 18 builder.go:147] stdout: ""
  I0104 12:28:26.763135 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7711 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0104 12:28:26.813735 18 builder.go:146] stderr: ""
  I0104 12:28:26.813786 18 builder.go:147] stdout: ""
  I0104 12:28:26.813987 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7711" for this suite. @ 01/04/25 12:28:26.819
• [13.220 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/04/25 12:28:26.828
  I0104 12:28:26.828142 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename taint-single-pod @ 01/04/25 12:28:26.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:28:26.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:28:26.847
  I0104 12:28:26.850260 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0104 12:29:26.850531 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0104 12:29:26.854617 18 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/04/25 12:29:26.854
  I0104 12:29:27.074569 18 taints.go:294] Pod is running on ip-172-31-8-94. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/04/25 12:29:27.074
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/04/25 12:29:27.084
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/04/25 12:29:27.089
  I0104 12:29:27.089049 18 taints.go:313] Pod wasn't evicted. Proceeding
  I0104 12:29:27.089064 18 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/04/25 12:29:27.104
  STEP: Waiting some time to make sure that toleration time passed. @ 01/04/25 12:29:27.113
  I0104 12:30:42.115489 18 taints.go:329] Pod wasn't evicted. Test successful
  I0104 12:30:42.115669 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4191" for this suite. @ 01/04/25 12:30:42.122
• [135.306 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/04/25 12:30:42.134
  I0104 12:30:42.134729 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:30:42.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:42.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:42.158
  STEP: Setting up server cert @ 01/04/25 12:30:42.186
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:30:42.377
  STEP: Deploying the webhook pod @ 01/04/25 12:30:42.388
  STEP: Wait for the deployment to be ready @ 01/04/25 12:30:42.402
  I0104 12:30:42.414284 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:30:44.432
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:30:44.441
  I0104 12:30:45.442147 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/04/25 12:30:45.449
  STEP: create the configmap with a random name @ 01/04/25 12:30:45.471
  STEP: verify the configmap is mutated @ 01/04/25 12:30:45.481
  STEP: create the configmap with 'skip-me' name @ 01/04/25 12:30:45.482
  I0104 12:30:45.555353 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9054" for this suite. @ 01/04/25 12:30:45.558
  STEP: Destroying namespace "webhook-markers-4707" for this suite. @ 01/04/25 12:30:45.566
• [3.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/04/25 12:30:45.575
  I0104 12:30:45.575185 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename namespaces @ 01/04/25 12:30:45.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:45.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:45.593
  STEP: Read namespace status @ 01/04/25 12:30:45.596
  I0104 12:30:45.603456 18 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/04/25 12:30:45.603
  I0104 12:30:45.610399 18 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/04/25 12:30:45.61
  I0104 12:30:45.621804 18 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0104 12:30:45.621923 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7076" for this suite. @ 01/04/25 12:30:45.626
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/04/25 12:30:45.635
  I0104 12:30:45.635627 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:30:45.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:45.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:45.654
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:30:45.657
  STEP: Saw pod success @ 01/04/25 12:30:47.679
  I0104 12:30:47.684881 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-b55dbd79-b908-434a-9337-ecfad2cfc8ea container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:30:47.699
  I0104 12:30:47.725009 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-785" for this suite. @ 01/04/25 12:30:47.728
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/04/25 12:30:47.737
  I0104 12:30:47.737275 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/04/25 12:30:47.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:47.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:47.759
  I0104 12:30:47.762531 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:30:54.017938 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1963" for this suite. @ 01/04/25 12:30:54.023
• [6.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/04/25 12:30:54.033
  I0104 12:30:54.033797 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 12:30:54.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:54.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:54.059
  I0104 12:30:54.062909 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/04/25 12:30:55.497
  I0104 12:30:55.497829 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-7353 --namespace=crd-publish-openapi-7353 create -f -'
  I0104 12:30:57.572935 18 builder.go:146] stderr: ""
  I0104 12:30:57.572984 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6007-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0104 12:30:57.573038 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-7353 --namespace=crd-publish-openapi-7353 delete e2e-test-crd-publish-openapi-6007-crds test-cr'
  I0104 12:30:57.636298 18 builder.go:146] stderr: ""
  I0104 12:30:57.636340 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6007-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0104 12:30:57.636438 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-7353 --namespace=crd-publish-openapi-7353 apply -f -'
  I0104 12:30:57.698398 18 builder.go:146] stderr: ""
  I0104 12:30:57.698445 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6007-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0104 12:30:57.698497 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-7353 --namespace=crd-publish-openapi-7353 delete e2e-test-crd-publish-openapi-6007-crds test-cr'
  I0104 12:30:57.755702 18 builder.go:146] stderr: ""
  I0104 12:30:57.755747 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6007-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/04/25 12:30:57.755
  I0104 12:30:57.755882 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-7353 explain e2e-test-crd-publish-openapi-6007-crds'
  I0104 12:30:57.802628 18 builder.go:146] stderr: ""
  I0104 12:30:57.802697 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6007-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0104 12:30:59.077037 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7353" for this suite. @ 01/04/25 12:30:59.085
• [5.062 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/04/25 12:30:59.095
  I0104 12:30:59.095985 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/04/25 12:30:59.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:59.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:59.111
  I0104 12:30:59.118725 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3817" for this suite. @ 01/04/25 12:30:59.121
• [0.036 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/04/25 12:30:59.132
  I0104 12:30:59.132387 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:30:59.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:30:59.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:30:59.15
  STEP: Creating the pod @ 01/04/25 12:30:59.154
  I0104 12:31:01.710591 18 pod_client.go:173] Successfully updated pod "annotationupdatee249e797-e32b-4e75-bcf8-28ddac5df288"
  I0104 12:31:03.728184 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9048" for this suite. @ 01/04/25 12:31:03.733
• [4.611 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/04/25 12:31:03.742
  I0104 12:31:03.742947 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:31:03.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:03.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:03.762
  STEP: Setting up server cert @ 01/04/25 12:31:03.791
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:31:04.087
  STEP: Deploying the webhook pod @ 01/04/25 12:31:04.094
  STEP: Wait for the deployment to be ready @ 01/04/25 12:31:04.111
  I0104 12:31:04.129901 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:31:06.144
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:31:06.157
  I0104 12:31:07.157776 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/04/25 12:31:07.167
  STEP: verifying the validating webhook match conditions @ 01/04/25 12:31:07.174
  STEP: updating the validating webhook match conditions @ 01/04/25 12:31:07.179
  STEP: verifying the validating webhook match conditions @ 01/04/25 12:31:07.188
  I0104 12:31:07.245817 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8232" for this suite. @ 01/04/25 12:31:07.253
  STEP: Destroying namespace "webhook-markers-2021" for this suite. @ 01/04/25 12:31:07.26
• [3.526 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/04/25 12:31:07.269
  I0104 12:31:07.269723 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 12:31:07.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:07.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:07.293
  I0104 12:31:07.296301 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/04/25 12:31:08.635
  I0104 12:31:08.635403 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 create -f -'
  I0104 12:31:10.717768 18 builder.go:146] stderr: ""
  I0104 12:31:10.717811 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-456-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0104 12:31:10.717865 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 delete e2e-test-crd-publish-openapi-456-crds test-foo'
  I0104 12:31:10.774582 18 builder.go:146] stderr: ""
  I0104 12:31:10.774626 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-456-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0104 12:31:10.774739 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 apply -f -'
  I0104 12:31:10.833768 18 builder.go:146] stderr: ""
  I0104 12:31:10.833810 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-456-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0104 12:31:10.833866 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 delete e2e-test-crd-publish-openapi-456-crds test-foo'
  I0104 12:31:10.889978 18 builder.go:146] stderr: ""
  I0104 12:31:10.890020 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-456-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/04/25 12:31:10.89
  I0104 12:31:10.890101 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 create -f -'
  I0104 12:31:10.939139 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/04/25 12:31:10.939
  I0104 12:31:10.939261 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 create -f -'
  I0104 12:31:10.985054 18 builder.go:135] rc: 1
  I0104 12:31:10.985141 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 apply -f -'
  I0104 12:31:11.044604 18 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/04/25 12:31:11.044
  I0104 12:31:11.044764 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 create -f -'
  I0104 12:31:11.098077 18 builder.go:135] rc: 1
  I0104 12:31:11.098167 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 --namespace=crd-publish-openapi-2812 apply -f -'
  I0104 12:31:11.155797 18 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/04/25 12:31:11.155
  I0104 12:31:11.155915 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 explain e2e-test-crd-publish-openapi-456-crds'
  I0104 12:31:11.200478 18 builder.go:146] stderr: ""
  I0104 12:31:11.200563 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-456-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/04/25 12:31:11.2
  I0104 12:31:11.200930 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 explain e2e-test-crd-publish-openapi-456-crds.metadata'
  I0104 12:31:11.247445 18 builder.go:146] stderr: ""
  I0104 12:31:11.247568 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-456-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0104 12:31:11.247863 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 explain e2e-test-crd-publish-openapi-456-crds.spec'
  I0104 12:31:11.293972 18 builder.go:146] stderr: ""
  I0104 12:31:11.294023 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-456-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0104 12:31:11.294175 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 explain e2e-test-crd-publish-openapi-456-crds.spec.bars'
  I0104 12:31:11.339247 18 builder.go:146] stderr: ""
  I0104 12:31:11.339296 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-456-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/04/25 12:31:11.339
  I0104 12:31:11.339534 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-2812 explain e2e-test-crd-publish-openapi-456-crds.spec.bars2'
  I0104 12:31:11.385822 18 builder.go:135] rc: 1
  I0104 12:31:12.620423 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2812" for this suite. @ 01/04/25 12:31:12.629
• [5.368 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/04/25 12:31:12.637
  I0104 12:31:12.637332 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:31:12.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:12.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:12.661
  STEP: Setting up server cert @ 01/04/25 12:31:12.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:31:12.927
  STEP: Deploying the webhook pod @ 01/04/25 12:31:12.938
  STEP: Wait for the deployment to be ready @ 01/04/25 12:31:12.953
  I0104 12:31:12.974489 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:31:14.992
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:31:15.004
  I0104 12:31:16.005004 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/04/25 12:31:16.013
  STEP: create a pod that should be updated by the webhook @ 01/04/25 12:31:16.028
  I0104 12:31:16.119240 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-595" for this suite. @ 01/04/25 12:31:16.124
  STEP: Destroying namespace "webhook-markers-2762" for this suite. @ 01/04/25 12:31:16.131
• [3.502 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/04/25 12:31:16.139
  I0104 12:31:16.139912 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename runtimeclass @ 01/04/25 12:31:16.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:16.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:16.16
  STEP: getting /apis @ 01/04/25 12:31:16.162
  STEP: getting /apis/node.k8s.io @ 01/04/25 12:31:16.166
  STEP: getting /apis/node.k8s.io/v1 @ 01/04/25 12:31:16.167
  STEP: creating @ 01/04/25 12:31:16.168
  STEP: watching @ 01/04/25 12:31:16.191
  I0104 12:31:16.191751 18 runtimeclass.go:275] starting watch
  STEP: getting @ 01/04/25 12:31:16.197
  STEP: listing @ 01/04/25 12:31:16.202
  STEP: patching @ 01/04/25 12:31:16.207
  STEP: updating @ 01/04/25 12:31:16.212
  I0104 12:31:16.218433 18 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/04/25 12:31:16.218
  STEP: deleting a collection @ 01/04/25 12:31:16.235
  I0104 12:31:16.257008 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2006" for this suite. @ 01/04/25 12:31:16.26
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/04/25 12:31:16.272
  I0104 12:31:16.272621 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 12:31:16.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:16.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:16.291
  I0104 12:31:18.317754 18 delete.go:62] Deleting pod "var-expansion-572f7fb4-8006-4c97-95f2-f0fea98c95cf" in namespace "var-expansion-6470"
  I0104 12:31:18.328888 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-572f7fb4-8006-4c97-95f2-f0fea98c95cf" to be fully deleted
  I0104 12:31:20.336956 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6470" for this suite. @ 01/04/25 12:31:20.342
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/04/25 12:31:20.352
  I0104 12:31:20.352717 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:31:20.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:20.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:20.376
  STEP: creating service nodeport-test with type=NodePort in namespace services-5493 @ 01/04/25 12:31:20.379
  STEP: creating replication controller nodeport-test in namespace services-5493 @ 01/04/25 12:31:20.399
  I0104 12:31:20.410107      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5493, replica count: 2
  I0104 12:31:23.461814      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 12:31:23.461855 18 resource.go:361] Creating new exec pod
  I0104 12:31:26.484918 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5493 exec execpodzsjn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0104 12:31:26.576579 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0104 12:31:26.576621 18 builder.go:147] stdout: ""
  I0104 12:31:27.485862 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5493 exec execpodzsjn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0104 12:31:27.572103 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0104 12:31:27.572146 18 builder.go:147] stdout: "nodeport-test-74sbn"
  I0104 12:31:27.572229 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5493 exec execpodzsjn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.193 80'
  I0104 12:31:27.663174 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.193 80\nConnection to 10.152.183.193 80 port [tcp/http] succeeded!\n"
  I0104 12:31:27.663216 18 builder.go:147] stdout: "nodeport-test-74sbn"
  I0104 12:31:27.663320 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5493 exec execpodzsjn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.94 30115'
  I0104 12:31:27.751503 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.94 30115\nConnection to 172.31.8.94 30115 port [tcp/*] succeeded!\n"
  I0104 12:31:27.751543 18 builder.go:147] stdout: "nodeport-test-74sbn"
  I0104 12:31:27.751633 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5493 exec execpodzsjn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.169 30115'
  I0104 12:31:27.844341 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.169 30115\nConnection to 172.31.18.169 30115 port [tcp/*] succeeded!\n"
  I0104 12:31:27.844386 18 builder.go:147] stdout: ""
  I0104 12:31:28.752199 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5493 exec execpodzsjn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.169 30115'
  I0104 12:31:28.838534 18 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.18.169 30115\necho hostName\nConnection to 172.31.18.169 30115 port [tcp/*] succeeded!\n"
  I0104 12:31:28.838585 18 builder.go:147] stdout: "nodeport-test-gfqmn"
  I0104 12:31:28.838780 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5493" for this suite. @ 01/04/25 12:31:28.844
• [8.500 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 01/04/25 12:31:28.852
  I0104 12:31:28.852824 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 12:31:28.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:31:28.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:31:28.874
  STEP: Creating service test in namespace statefulset-1954 @ 01/04/25 12:31:28.877
  STEP: Creating a new StatefulSet @ 01/04/25 12:31:28.884
  I0104 12:31:28.902590 18 wait.go:40] Found 0 stateful pods, waiting for 3
  I0104 12:31:38.905413 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:31:38.905451 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:31:38.905460 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/04/25 12:31:38.919
  I0104 12:31:38.931324 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 01/04/25 12:31:38.931
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/04/25 12:31:48.939
  STEP: Performing a canary update @ 01/04/25 12:31:48.939
  I0104 12:31:48.954391 18 statefulset.go:2507] Updating stateful set ss2
  I0104 12:31:48.961036 18 wait.go:74] Waiting for Pod statefulset-1954/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/04/25 12:31:58.966
  I0104 12:31:59.016833 18 wait.go:40] Found 1 stateful pods, waiting for 3
  I0104 12:32:09.012709 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:32:09.012745 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:32:09.012754 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/04/25 12:32:09.022
  I0104 12:32:09.034956 18 statefulset.go:2507] Updating stateful set ss2
  I0104 12:32:09.049501 18 wait.go:74] Waiting for Pod statefulset-1954/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0104 12:32:19.057087 18 statefulset.go:2507] Updating stateful set ss2
  I0104 12:32:19.065833 18 wait.go:56] Waiting for StatefulSet statefulset-1954/ss2 to complete update
  I0104 12:32:19.065877 18 wait.go:63] Waiting for Pod statefulset-1954/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0104 12:32:29.067157 18 statefulset.go:138] Deleting all statefulset in ns statefulset-1954
  I0104 12:32:29.072336 18 rest.go:150] Scaling statefulset ss2 to 0
  I0104 12:32:39.091874 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 12:32:39.095235 18 rest.go:88] Deleting statefulset ss2
  I0104 12:32:39.118328 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1954" for this suite. @ 01/04/25 12:32:39.124
• [70.281 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/04/25 12:32:39.133
  I0104 12:32:39.133687 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:32:39.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:32:39.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:32:39.154
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/04/25 12:32:39.157
  STEP: Saw pod success @ 01/04/25 12:32:43.183
  I0104 12:32:43.186698 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-a9c026bc-0b65-41aa-abaa-162e8f352446 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:32:43.199
  I0104 12:32:43.218193 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6582" for this suite. @ 01/04/25 12:32:43.223
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/04/25 12:32:43.233
  I0104 12:32:43.233134 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:32:43.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:32:43.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:32:43.253
  STEP: Setting up server cert @ 01/04/25 12:32:43.28
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:32:43.468
  STEP: Deploying the webhook pod @ 01/04/25 12:32:43.481
  STEP: Wait for the deployment to be ready @ 01/04/25 12:32:43.495
  I0104 12:32:43.517076 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:32:45.533
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:32:45.543
  I0104 12:32:46.544785 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/04/25 12:32:46.555
  STEP: create a pod that should be denied by the webhook @ 01/04/25 12:32:46.571
  STEP: create a pod that causes the webhook to hang @ 01/04/25 12:32:46.58
  STEP: create a configmap that should be denied by the webhook @ 01/04/25 12:32:56.588
  STEP: create a configmap that should be admitted by the webhook @ 01/04/25 12:32:56.618
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/04/25 12:32:56.629
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/04/25 12:32:56.64
  STEP: create a namespace that bypass the webhook @ 01/04/25 12:32:56.646
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/04/25 12:32:56.66
  I0104 12:32:56.736154 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3192" for this suite. @ 01/04/25 12:32:56.74
  STEP: Destroying namespace "webhook-markers-238" for this suite. @ 01/04/25 12:32:56.747
  STEP: Destroying namespace "exempted-namespace-3417" for this suite. @ 01/04/25 12:32:56.756
• [13.532 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 01/04/25 12:32:56.764
  I0104 12:32:56.764874 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:32:56.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:32:56.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:32:56.783
  STEP: creating a Service @ 01/04/25 12:32:56.791
  STEP: watching for the Service to be added @ 01/04/25 12:32:56.809
  I0104 12:32:56.811515 18 service.go:3445] Found Service test-service-pzwq8 in namespace services-7464 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31741}]
  I0104 12:32:56.811546 18 service.go:3452] Service test-service-pzwq8 created
  STEP: Getting /status @ 01/04/25 12:32:56.811
  I0104 12:32:56.816371 18 service.go:3463] Service test-service-pzwq8 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/04/25 12:32:56.816
  STEP: watching for the Service to be patched @ 01/04/25 12:32:56.824
  I0104 12:32:56.825639 18 service.go:3486] observed Service test-service-pzwq8 in namespace services-7464 with annotations: map[] & LoadBalancer: {[]}
  I0104 12:32:56.825667 18 service.go:3489] Found Service test-service-pzwq8 in namespace services-7464 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000de97c0 []}]}
  I0104 12:32:56.825694 18 service.go:3496] Service test-service-pzwq8 has service status patched
  STEP: updating the ServiceStatus @ 01/04/25 12:32:56.825
  I0104 12:32:56.835432 18 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/04/25 12:32:56.835
  I0104 12:32:56.836863 18 service.go:3527] Observed Service test-service-pzwq8 in namespace services-7464 with annotations: map[] & Conditions: []
  I0104 12:32:56.836890 18 service.go:3538] Observed Service test-service-pzwq8 in namespace services-7464 with annotations: map[patchedstatus:true] & Conditions: []
  I0104 12:32:56.836912 18 service.go:3534] Found Service test-service-pzwq8 in namespace services-7464 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0104 12:32:56.836920 18 service.go:3545] Service test-service-pzwq8 has service status updated
  STEP: patching the service @ 01/04/25 12:32:56.836
  STEP: watching for the Service to be patched @ 01/04/25 12:32:56.847
  I0104 12:32:56.849161 18 service.go:3568] observed Service test-service-pzwq8 in namespace services-7464 with labels: map[test-service-static:true]
  I0104 12:32:56.849203 18 service.go:3568] observed Service test-service-pzwq8 in namespace services-7464 with labels: map[test-service-static:true]
  I0104 12:32:56.849259 18 service.go:3568] observed Service test-service-pzwq8 in namespace services-7464 with labels: map[test-service-static:true]
  I0104 12:32:56.849272 18 service.go:3571] Found Service test-service-pzwq8 in namespace services-7464 with labels: map[test-service:patched test-service-static:true]
  I0104 12:32:56.849347 18 service.go:3578] Service test-service-pzwq8 patched
  STEP: deleting the service @ 01/04/25 12:32:56.849
  STEP: watching for the Service to be deleted @ 01/04/25 12:32:56.872
  I0104 12:32:56.874197 18 service.go:3602] Observed event: ADDED
  I0104 12:32:56.874227 18 service.go:3602] Observed event: MODIFIED
  I0104 12:32:56.874236 18 service.go:3602] Observed event: MODIFIED
  I0104 12:32:56.874270 18 service.go:3602] Observed event: MODIFIED
  I0104 12:32:56.874287 18 service.go:3598] Found Service test-service-pzwq8 in namespace services-7464 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0104 12:32:56.874295 18 service.go:3607] Service test-service-pzwq8 deleted
  I0104 12:32:56.874384 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7464" for this suite. @ 01/04/25 12:32:56.879
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/04/25 12:32:56.888
  I0104 12:32:56.888715 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-pred @ 01/04/25 12:32:56.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:32:56.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:32:56.907
  I0104 12:32:56.910628 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0104 12:32:56.918590 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0104 12:32:56.923330 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-169 before test
  I0104 12:32:56.929690 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9kbc6 from ingress-nginx-kubernetes-worker started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.929709 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:32:56.929717 18 predicates.go:957] calico-node-7jxjd from kube-system started at 2025-01-04 12:03:59 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.929722 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:32:56.929729 18 predicates.go:957] coredns-5b4857d7c8-znj7g from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.929737 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0104 12:32:56.929743 18 predicates.go:957] kube-state-metrics-5d7bdccd49-w7r9q from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.929753 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0104 12:32:56.929758 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-j4g8b from kube-system started at 2025-01-04 11:57:17 +0000 UTC (2 container statuses recorded)
  I0104 12:32:56.929763 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0104 12:32:56.929768 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0104 12:32:56.929774 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-j7szt from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.929829 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0104 12:32:56.929838 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-sprml from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.929844 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0104 12:32:56.929865 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-nzqp5 from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:32:56.929871 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:32:56.929877 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 12:32:56.929883 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-76-68 before test
  I0104 12:32:56.936074 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qxvn4 from ingress-nginx-kubernetes-worker started at 2025-01-04 12:03:24 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.936092 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:32:56.936100 18 predicates.go:957] calico-node-hkpq9 from kube-system started at 2025-01-04 12:02:54 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.936105 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:32:56.936111 18 predicates.go:957] sonobuoy-e2e-job-ed454467d82848bc from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:32:56.936116 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0104 12:32:56.936121 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:32:56.936128 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-qpfkm from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:32:56.936134 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:32:56.936139 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 12:32:56.936149 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-94 before test
  I0104 12:32:56.942923 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9vf2x from ingress-nginx-kubernetes-worker started at 2025-01-04 12:29:38 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.942943 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:32:56.942950 18 predicates.go:957] calico-node-wq2kk from kube-system started at 2025-01-04 12:03:48 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.942971 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:32:56.942978 18 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-04 12:08:26 +0000 UTC (1 container statuses recorded)
  I0104 12:32:56.942982 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0104 12:32:56.942988 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-xs6sh from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:32:56.942994 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:32:56.942999 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-18-169 @ 01/04/25 12:32:56.959
  STEP: verifying the node has the label node ip-172-31-76-68 @ 01/04/25 12:32:56.971
  STEP: verifying the node has the label node ip-172-31-8-94 @ 01/04/25 12:32:56.984
  I0104 12:32:56.994860 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-9kbc6 requesting resource cpu=0m on Node ip-172-31-18-169
  I0104 12:32:56.994910 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-9vf2x requesting resource cpu=0m on Node ip-172-31-8-94
  I0104 12:32:56.994919 18 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-qxvn4 requesting resource cpu=0m on Node ip-172-31-76-68
  I0104 12:32:56.994927 18 predicates.go:372] Pod calico-node-7jxjd requesting resource cpu=250m on Node ip-172-31-18-169
  I0104 12:32:56.994935 18 predicates.go:372] Pod calico-node-hkpq9 requesting resource cpu=250m on Node ip-172-31-76-68
  I0104 12:32:56.994942 18 predicates.go:372] Pod calico-node-wq2kk requesting resource cpu=250m on Node ip-172-31-8-94
  I0104 12:32:56.994949 18 predicates.go:372] Pod coredns-5b4857d7c8-znj7g requesting resource cpu=100m on Node ip-172-31-18-169
  I0104 12:32:56.994955 18 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-w7r9q requesting resource cpu=0m on Node ip-172-31-18-169
  I0104 12:32:56.994963 18 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-j4g8b requesting resource cpu=5m on Node ip-172-31-18-169
  I0104 12:32:56.995239 18 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-j7szt requesting resource cpu=0m on Node ip-172-31-18-169
  I0104 12:32:56.995253 18 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-sprml requesting resource cpu=0m on Node ip-172-31-18-169
  I0104 12:32:56.995329 18 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-8-94
  I0104 12:32:56.995337 18 predicates.go:372] Pod sonobuoy-e2e-job-ed454467d82848bc requesting resource cpu=0m on Node ip-172-31-76-68
  I0104 12:32:56.995466 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-nzqp5 requesting resource cpu=0m on Node ip-172-31-18-169
  I0104 12:32:56.995474 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-qpfkm requesting resource cpu=0m on Node ip-172-31-76-68
  I0104 12:32:56.995480 18 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-xs6sh requesting resource cpu=0m on Node ip-172-31-8-94
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/04/25 12:32:56.995
  I0104 12:32:56.995512 18 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-18-169
  I0104 12:32:57.007748 18 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-76-68
  I0104 12:32:57.016532 18 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-8-94
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/04/25 12:32:59.052
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-315945b7-f38a-4352-84c0-806121fce056.18177d530c5022c3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4352/filler-pod-315945b7-f38a-4352-84c0-806121fce056 to ip-172-31-18-169] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-315945b7-f38a-4352-84c0-806121fce056.18177d5328fb56bf], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-315945b7-f38a-4352-84c0-806121fce056.18177d5338eab7ed], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 267ms (267ms including waiting). Image size: 320368 bytes.] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-315945b7-f38a-4352-84c0-806121fce056.18177d5339728648], Reason = [Created], Message = [Created container filler-pod-315945b7-f38a-4352-84c0-806121fce056] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-315945b7-f38a-4352-84c0-806121fce056.18177d533b8e82eb], Reason = [Started], Message = [Started container filler-pod-315945b7-f38a-4352-84c0-806121fce056] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596.18177d530cdaf721], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4352/filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596 to ip-172-31-76-68] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596.18177d533cf60d9f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/04/25 12:32:59.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596.18177d533dd0ad45], Reason = [Created], Message = [Created container filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596] @ 01/04/25 12:32:59.058
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596.18177d5340439a19], Reason = [Started], Message = [Started container filler-pod-876987ee-9e9c-4836-81f9-e5493faf3596] @ 01/04/25 12:32:59.058
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7.18177d530d683076], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4352/filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7 to ip-172-31-8-94] @ 01/04/25 12:32:59.058
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7.18177d532ac6fb16], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/04/25 12:32:59.058
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7.18177d532b9ee4c4], Reason = [Created], Message = [Created container filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7] @ 01/04/25 12:32:59.058
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7.18177d532de377d7], Reason = [Started], Message = [Started container filler-pod-b522ebd0-d0af-453e-826c-882d8b6836e7] @ 01/04/25 12:32:59.058
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18177d53867f256f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 01/04/25 12:32:59.074
  STEP: removing the label node off the node ip-172-31-18-169 @ 01/04/25 12:33:00.073
  STEP: verifying the node doesn't have the label node @ 01/04/25 12:33:00.088
  STEP: removing the label node off the node ip-172-31-76-68 @ 01/04/25 12:33:00.091
  STEP: verifying the node doesn't have the label node @ 01/04/25 12:33:00.107
  STEP: removing the label node off the node ip-172-31-8-94 @ 01/04/25 12:33:00.11
  STEP: verifying the node doesn't have the label node @ 01/04/25 12:33:00.128
  I0104 12:33:00.131950 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4352" for this suite. @ 01/04/25 12:33:00.139
• [3.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/04/25 12:33:00.15
  I0104 12:33:00.150169 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename security-context-test @ 01/04/25 12:33:00.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:00.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:00.168
  I0104 12:33:04.205505 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2117" for this suite. @ 01/04/25 12:33:04.211
• [4.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/04/25 12:33:04.219
  I0104 12:33:04.219918 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:33:04.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:04.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:04.237
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:33:04.241
  STEP: Saw pod success @ 01/04/25 12:33:08.273
  I0104 12:33:08.278441 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-73fadb02-5b9e-4d2a-b94f-d77cea70a53d container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:33:08.288
  I0104 12:33:08.311724 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2600" for this suite. @ 01/04/25 12:33:08.316
• [4.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/04/25 12:33:08.326
  I0104 12:33:08.326642 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:33:08.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:08.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:08.344
  STEP: Creating configMap with name configmap-test-volume-b499b3df-6b60-4f3d-83f3-5c4ed96cf54c @ 01/04/25 12:33:08.347
  STEP: Creating a pod to test consume configMaps @ 01/04/25 12:33:08.352
  STEP: Saw pod success @ 01/04/25 12:33:12.382
  I0104 12:33:12.387881 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-2686fc7e-c202-4670-a98e-7dbb111a03d8 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 12:33:12.395
  I0104 12:33:12.418968 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6858" for this suite. @ 01/04/25 12:33:12.422
• [4.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/04/25 12:33:12.434
  I0104 12:33:12.434512 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/04/25 12:33:12.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:12.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:12.457
  STEP: creating a target pod @ 01/04/25 12:33:12.464
  STEP: adding an ephemeral container @ 01/04/25 12:33:14.49
  STEP: checking pod container endpoints @ 01/04/25 12:33:16.512
  I0104 12:33:16.512619 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3705 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:33:16.512636 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:33:16.513090 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:33:16.513132 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3705/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0104 12:33:16.552872 18 exec_util.go:111] Exec stderr: ""
  I0104 12:33:16.561082 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3705" for this suite. @ 01/04/25 12:33:16.566
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/04/25 12:33:16.577
  I0104 12:33:16.577083 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename runtimeclass @ 01/04/25 12:33:16.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:16.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:16.596
  I0104 12:33:16.608619 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7693" for this suite. @ 01/04/25 12:33:16.612
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/04/25 12:33:16.623
  I0104 12:33:16.623495 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 12:33:16.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:16.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:16.64
  I0104 12:33:16.657074 18 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0104 12:33:21.663136 18 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/04/25 12:33:21.663
  I0104 12:33:21.663216 18 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0104 12:33:23.669192 18 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0104 12:33:23.679955 18 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0104 12:33:25.693447 18 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0104 12:33:25.703730 18 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0104 12:33:25.711709 18 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0104 12:33:25.722933 18 deployment.go:313] Updating deployment test-rollover-deployment
  I0104 12:33:25.722977 18 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0104 12:33:27.745016 18 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0104 12:33:27.753971 18 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0104 12:33:27.763800 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0104 12:33:27.763863 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:33:29.774928 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0104 12:33:29.774992 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:33:31.772813 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0104 12:33:31.772871 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:33:33.775723 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0104 12:33:33.775785 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:33:35.775099 18 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0104 12:33:35.775151 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 33, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 33, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:33:37.773955 18 deployment.go:94] 
  I0104 12:33:37.774005 18 deployment.go:974] Ensure that both old replica sets have no replicas
  I0104 12:33:37.790350 18 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ff07fdf-c373-46e4-a798-cbee77d39e1b",
      ResourceVersion: (string) (len=5) "19575",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590803,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 12:33:37.796524 18 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "daa084b1-ad09-4146-8758-0693e9f8091e",
      ResourceVersion: (string) (len=5) "19565",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7ff07fdf-c373-46e4-a798-cbee77d39e1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 66 66 30 37 66  64 66 2d 63 33 37 33 2d  |\"7ff07fdf-c373-|
              00000120  34 36 65 34 2d 61 37 39  38 2d 63 62 65 65 37 37  |46e4-a798-cbee77|
              00000130  64 33 39 65 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d39e1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:33:37.797060 18 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0104 12:33:37.797398 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0db1545a-a075-4bbc-816a-1afba40e0a5c",
      ResourceVersion: (string) (len=5) "19574",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7ff07fdf-c373-46e4-a798-cbee77d39e1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 66 66 30 37 66 64 66  2d 63 33 37 33 2d 34 36  |7ff07fdf-c373-46|
              000000c0  65 34 2d 61 37 39 38 2d  63 62 65 65 37 37 64 33  |e4-a798-cbee77d3|
              000000d0  39 65 31 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9e1b\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590816,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:33:37.798800 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51db2c39-4afd-4096-bd0a-497b3ac974c3",
      ResourceVersion: (string) (len=5) "19525",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590803,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7ff07fdf-c373-46e4-a798-cbee77d39e1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 66 66 30 37 66  64 66 2d 63 33 37 33 2d  |\"7ff07fdf-c373-|
              00000120  34 36 65 34 2d 61 37 39  38 2d 63 62 65 65 37 37  |46e4-a798-cbee77|
              00000130  64 33 39 65 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d39e1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:33:37.805344 18 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-5vmjn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-5vmjn",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-6939",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d55223c-d345-4f77-a264-571be2792d14",
      ResourceVersion: (string) (len=5) "19543",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "daa084b1-ad09-4146-8758-0693e9f8091e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 61  61 30 38 34 62 31 2d 61  |d\":\"daa084b1-a|
              00000090  64 30 39 2d 34 31 34 36  2d 38 37 35 38 2d 30 36  |d09-4146-8758-06|
              000000a0  39 33 65 39 66 38 30 39  31 65 5c 22 7d 22 3a 7b  |93e9f8091e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  39 2e 31 31 38 5c 22 7d  |2.168.159.118\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jwt4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jwt4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871590805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=15) "192.168.159.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871590805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871590806,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://8a8fb8cb3592713f8bde9f36d77b285cdb2849c5cddc24b2905a761b71ba26ce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jwt4q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:33:37.806701 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6939" for this suite. @ 01/04/25 12:33:37.811
• [21.198 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/04/25 12:33:37.821
  I0104 12:33:37.821324 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename subpath @ 01/04/25 12:33:37.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:33:37.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:33:37.844
  STEP: Setting up data @ 01/04/25 12:33:37.847
  STEP: Creating pod pod-subpath-test-projected-rtlf @ 01/04/25 12:33:37.861
  STEP: Creating a pod to test atomic-volume-subpath @ 01/04/25 12:33:37.861
  STEP: Saw pod success @ 01/04/25 12:34:01.949
  I0104 12:34:01.955214 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-subpath-test-projected-rtlf container test-container-subpath-projected-rtlf: <nil>
  STEP: delete the pod @ 01/04/25 12:34:01.962
  STEP: Deleting pod pod-subpath-test-projected-rtlf @ 01/04/25 12:34:01.986
  I0104 12:34:01.986976 18 delete.go:62] Deleting pod "pod-subpath-test-projected-rtlf" in namespace "subpath-3021"
  I0104 12:34:01.990278 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3021" for this suite. @ 01/04/25 12:34:01.995
• [24.182 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 01/04/25 12:34:02.003
  I0104 12:34:02.003133 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 12:34:02.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:02.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:02.023
  STEP: creating a ServiceAccount @ 01/04/25 12:34:02.026
  STEP: watching for the ServiceAccount to be added @ 01/04/25 12:34:02.034
  STEP: patching the ServiceAccount @ 01/04/25 12:34:02.035
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/04/25 12:34:02.041
  STEP: deleting the ServiceAccount @ 01/04/25 12:34:02.044
  I0104 12:34:02.063584 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6514" for this suite. @ 01/04/25 12:34:02.068
• [0.075 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/04/25 12:34:02.078
  I0104 12:34:02.078560 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:34:02.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:02.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:02.099
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:34:02.104
  STEP: Saw pod success @ 01/04/25 12:34:04.128
  I0104 12:34:04.134133 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-de1e650a-469b-4769-a1fb-8ce7c43831e8 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:34:04.139
  I0104 12:34:04.162910 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9777" for this suite. @ 01/04/25 12:34:04.168
• [2.098 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/04/25 12:34:04.176
  I0104 12:34:04.176253 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:34:04.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:04.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:04.195
  STEP: validating api versions @ 01/04/25 12:34:04.198
  I0104 12:34:04.198220 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8343 api-versions'
  I0104 12:34:04.241848 18 builder.go:146] stderr: ""
  I0104 12:34:04.241894 18 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0104 12:34:04.241999 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8343" for this suite. @ 01/04/25 12:34:04.247
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/04/25 12:34:04.257
  I0104 12:34:04.257890 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 12:34:04.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:04.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:04.279
  I0104 12:34:04.325143 18 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"42092ab2-6f67-4fce-a0eb-62ccddc6a31b", Controller:(*bool)(0xc0035d0f36), BlockOwnerDeletion:(*bool)(0xc0035d0f37)}}
  I0104 12:34:04.333579 18 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"261ae7c1-4828-419c-9866-fed3430ad6a2", Controller:(*bool)(0xc001c04efe), BlockOwnerDeletion:(*bool)(0xc001c04eff)}}
  I0104 12:34:04.345931 18 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a10166d1-e717-47e1-8932-6f19605d4a2d", Controller:(*bool)(0xc001c0515e), BlockOwnerDeletion:(*bool)(0xc001c0515f)}}
  I0104 12:34:09.361530 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1003" for this suite. @ 01/04/25 12:34:09.365
• [5.116 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/04/25 12:34:09.373
  I0104 12:34:09.373846 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-webhook @ 01/04/25 12:34:09.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:09.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:09.395
  STEP: Setting up server cert @ 01/04/25 12:34:09.398
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/04/25 12:34:09.697
  STEP: Deploying the custom resource conversion webhook pod @ 01/04/25 12:34:09.707
  STEP: Wait for the deployment to be ready @ 01/04/25 12:34:09.722
  I0104 12:34:09.733312 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:34:11.75
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:34:11.765
  I0104 12:34:12.765209 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0104 12:34:12.775282 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Creating a v1 custom resource @ 01/04/25 12:34:15.332
  STEP: Create a v2 custom resource @ 01/04/25 12:34:15.352
  STEP: List CRs in v1 @ 01/04/25 12:34:15.376
  STEP: List CRs in v2 @ 01/04/25 12:34:15.382
  I0104 12:34:15.950707 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2216" for this suite. @ 01/04/25 12:34:15.955
• [6.594 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/04/25 12:34:15.968
  I0104 12:34:15.968092 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pv @ 01/04/25 12:34:15.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:15.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:15.987
  STEP: Creating initial PV and PVC @ 01/04/25 12:34:15.991
  I0104 12:34:15.991328 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5453" @ 01/04/25 12:34:16.006
  STEP: Listing PVCs in namespace "pv-5453" @ 01/04/25 12:34:16.009
  STEP: Patching the PV "pv-5453-sgk4s" @ 01/04/25 12:34:16.016
  STEP: Patching the PVC "pvc-ct9kg" @ 01/04/25 12:34:16.027
  STEP: Getting PV "pv-5453-sgk4s" @ 01/04/25 12:34:16.036
  STEP: Getting PVC "pvc-ct9kg" @ 01/04/25 12:34:16.042
  STEP: Deleting PVC "pvc-ct9kg" @ 01/04/25 12:34:16.045
  STEP: Confirm deletion of PVC "pvc-ct9kg" @ 01/04/25 12:34:16.058
  STEP: Deleting PV "pv-5453-sgk4s" @ 01/04/25 12:34:18.068
  STEP: Confirm deletion of PV "pv-5453-sgk4s" @ 01/04/25 12:34:18.076
  STEP: Recreating another PV & PVC @ 01/04/25 12:34:20.088
  I0104 12:34:20.088073 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5453-4695t" @ 01/04/25 12:34:20.103
  STEP: Updating the PVC "pvc-krpnk" @ 01/04/25 12:34:20.136
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-krpnk=updated" @ 01/04/25 12:34:20.149
  STEP: Deleting PVC "pvc-krpnk" via DeleteCollection @ 01/04/25 12:34:20.152
  STEP: Confirm deletion of PVC "pvc-krpnk" @ 01/04/25 12:34:20.165
  STEP: Deleting PV "pv-5453-4695t" via DeleteCollection @ 01/04/25 12:34:22.176
  STEP: Confirm deletion of PV "pv-5453-4695t" @ 01/04/25 12:34:22.189
  I0104 12:34:24.201442 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0104 12:34:24.201472 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-krpnk"
  I0104 12:34:24.206543 18 pv.go:193] Deleting PersistentVolume "pv-5453-4695t"
  I0104 12:34:24.211626 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5453" for this suite. @ 01/04/25 12:34:24.217
• [8.258 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 01/04/25 12:34:24.225
  I0104 12:34:24.225956 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:34:24.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:24.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:24.246
  STEP: fetching services @ 01/04/25 12:34:24.249
  I0104 12:34:24.253243 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7643" for this suite. @ 01/04/25 12:34:24.256
• [0.039 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/04/25 12:34:24.267
  I0104 12:34:24.267426 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 12:34:24.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:24.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:24.288
  STEP: Creating a ResourceQuota @ 01/04/25 12:34:24.29
  STEP: Getting a ResourceQuota @ 01/04/25 12:34:24.296
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/04/25 12:34:24.302
  STEP: Patching the ResourceQuota @ 01/04/25 12:34:24.304
  STEP: Deleting a Collection of ResourceQuotas @ 01/04/25 12:34:24.313
  STEP: Verifying the deleted ResourceQuota @ 01/04/25 12:34:24.322
  I0104 12:34:24.325412 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-764" for this suite. @ 01/04/25 12:34:24.33
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/04/25 12:34:24.337
  I0104 12:34:24.337240 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:34:24.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:24.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:24.359
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:34:24.362
  STEP: Saw pod success @ 01/04/25 12:34:28.39
  I0104 12:34:28.393878 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-d799c895-6957-4355-ab05-9210ee5bc1e2 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:34:28.404
  I0104 12:34:28.425836 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3480" for this suite. @ 01/04/25 12:34:28.429
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/04/25 12:34:28.437
  I0104 12:34:28.437611 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:34:28.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:28.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:28.46
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/04/25 12:34:28.463
  STEP: Saw pod success @ 01/04/25 12:34:32.492
  I0104 12:34:32.497428 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-9860a12c-31c7-449d-a914-545c612198aa container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:34:32.505
  I0104 12:34:32.529071 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6638" for this suite. @ 01/04/25 12:34:32.538
• [4.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/04/25 12:34:32.551
  I0104 12:34:32.551623 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replicaset @ 01/04/25 12:34:32.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:32.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:32.57
  STEP: Create a Replicaset @ 01/04/25 12:34:32.579
  STEP: Verify that the required pods have come up. @ 01/04/25 12:34:32.584
  I0104 12:34:32.587224 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0104 12:34:37.597097 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/04/25 12:34:37.597
  STEP: Getting /status @ 01/04/25 12:34:37.597
  I0104 12:34:37.602278 18 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/04/25 12:34:37.602
  I0104 12:34:37.612306 18 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/04/25 12:34:37.612
  I0104 12:34:37.614016 18 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0104 12:34:37.614081 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.614140 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.614308 18 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.614345 18 replica_set.go:682] Found replicaset test-rs in namespace replicaset-2157 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0104 12:34:37.614358 18 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/04/25 12:34:37.614
  I0104 12:34:37.614384 18 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0104 12:34:37.623540 18 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/04/25 12:34:37.623
  I0104 12:34:37.625194 18 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0104 12:34:37.625259 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.625332 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.625448 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.625468 18 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-2157 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 12:34:37.625529 18 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0104 12:34:37.625553 18 replica_set.go:718] Found replicaset test-rs in namespace replicaset-2157 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0104 12:34:37.625562 18 replica_set.go:729] Replicaset test-rs has a patched status
  I0104 12:34:37.625644 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2157" for this suite. @ 01/04/25 12:34:37.63
• [5.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/04/25 12:34:37.637
  I0104 12:34:37.637622 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-pred @ 01/04/25 12:34:37.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:34:37.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:34:37.658
  I0104 12:34:37.661690 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0104 12:34:37.669415 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0104 12:34:37.674128 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-169 before test
  I0104 12:34:37.678781 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9kbc6 from ingress-nginx-kubernetes-worker started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.678798 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:34:37.678805 18 predicates.go:957] calico-node-7jxjd from kube-system started at 2025-01-04 12:03:59 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.678810 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:34:37.678816 18 predicates.go:957] coredns-5b4857d7c8-znj7g from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.678822 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0104 12:34:37.678828 18 predicates.go:957] kube-state-metrics-5d7bdccd49-w7r9q from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.678833 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0104 12:34:37.678839 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-j4g8b from kube-system started at 2025-01-04 11:57:17 +0000 UTC (2 container statuses recorded)
  I0104 12:34:37.678845 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0104 12:34:37.678850 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0104 12:34:37.678856 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-j7szt from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.678860 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0104 12:34:37.678866 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-sprml from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.678870 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0104 12:34:37.678876 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-nzqp5 from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:34:37.678880 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:34:37.678885 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 12:34:37.678891 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-76-68 before test
  I0104 12:34:37.685084 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qxvn4 from ingress-nginx-kubernetes-worker started at 2025-01-04 12:03:24 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.685102 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:34:37.685110 18 predicates.go:957] calico-node-hkpq9 from kube-system started at 2025-01-04 12:02:54 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.685116 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:34:37.685122 18 predicates.go:957] sonobuoy-e2e-job-ed454467d82848bc from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:34:37.685127 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0104 12:34:37.685132 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:34:37.685137 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-qpfkm from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:34:37.685142 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:34:37.685147 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 12:34:37.685153 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-94 before test
  I0104 12:34:37.691060 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9vf2x from ingress-nginx-kubernetes-worker started at 2025-01-04 12:29:38 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.691074 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:34:37.691081 18 predicates.go:957] calico-node-wq2kk from kube-system started at 2025-01-04 12:03:48 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.691088 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:34:37.691095 18 predicates.go:957] test-rs-7jfr9 from replicaset-2157 started at 2025-01-04 12:34:32 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.691099 18 predicates.go:959] 	Container httpd ready: true, restart count 0
  I0104 12:34:37.691105 18 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-04 12:08:26 +0000 UTC (1 container statuses recorded)
  I0104 12:34:37.691110 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0104 12:34:37.691116 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-xs6sh from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:34:37.691121 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:34:37.691126 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/04/25 12:34:37.691
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/04/25 12:34:39.716
  STEP: Trying to apply a random label on the found node. @ 01/04/25 12:34:39.737
  STEP: verifying the node has the label kubernetes.io/e2e-63057cc6-5bd0-4b8f-90c6-e7e7df92b203 95 @ 01/04/25 12:34:39.746
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/04/25 12:34:39.748
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.8.94 on the node which pod4 resides and expect not scheduled @ 01/04/25 12:34:41.766
  STEP: removing the label kubernetes.io/e2e-63057cc6-5bd0-4b8f-90c6-e7e7df92b203 off the node ip-172-31-8-94 @ 01/04/25 12:39:41.775
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-63057cc6-5bd0-4b8f-90c6-e7e7df92b203 @ 01/04/25 12:39:41.79
  I0104 12:39:41.795362 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3867" for this suite. @ 01/04/25 12:39:41.802
• [304.175 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/04/25 12:39:41.812
  I0104 12:39:41.812729 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 12:39:41.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:39:41.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:39:41.834
  STEP: Creating a ResourceQuota @ 01/04/25 12:39:41.837
  STEP: Getting a ResourceQuota @ 01/04/25 12:39:41.843
  STEP: Updating a ResourceQuota @ 01/04/25 12:39:41.846
  STEP: Verifying a ResourceQuota was modified @ 01/04/25 12:39:41.855
  STEP: Deleting a ResourceQuota @ 01/04/25 12:39:41.86
  STEP: Verifying the deleted ResourceQuota @ 01/04/25 12:39:41.866
  I0104 12:39:41.871136 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8388" for this suite. @ 01/04/25 12:39:41.876
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/04/25 12:39:41.885
  I0104 12:39:41.885689 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/04/25 12:39:41.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:39:41.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:39:41.904
  STEP: mirroring a new custom Endpoint @ 01/04/25 12:39:41.922
  I0104 12:39:41.931507 18 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/04/25 12:39:43.935
  I0104 12:39:43.949251 18 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 01/04/25 12:39:45.954
  I0104 12:39:45.967511 18 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0104 12:39:47.974408 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8460" for this suite. @ 01/04/25 12:39:47.979
• [6.104 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 01/04/25 12:39:47.989
  I0104 12:39:47.989890 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename containers @ 01/04/25 12:39:47.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:39:48.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:39:48.009
  I0104 12:39:50.052496 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4122" for this suite. @ 01/04/25 12:39:50.058
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/04/25 12:39:50.068
  I0104 12:39:50.068891 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 12:39:50.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:39:50.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:39:50.089
  I0104 12:39:50.092195 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:39:53.179531 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6072" for this suite. @ 01/04/25 12:39:53.182
• [3.122 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 01/04/25 12:39:53.19
  I0104 12:39:53.190699 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:39:53.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:39:53.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:39:53.208
  STEP: Creating a pod to test downward api env vars @ 01/04/25 12:39:53.212
  STEP: Saw pod success @ 01/04/25 12:39:57.241
  I0104 12:39:57.244721 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod downward-api-b440c439-f19b-4c9f-aa27-382e8e7b28f1 container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 12:39:57.262
  I0104 12:39:57.283061 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8876" for this suite. @ 01/04/25 12:39:57.288
• [4.106 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/04/25 12:39:57.296
  I0104 12:39:57.296344 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 12:39:57.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:39:57.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:39:57.316
  STEP: set up a multi version CRD @ 01/04/25 12:39:57.319
  I0104 12:39:57.320282 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: mark a version not serverd @ 01/04/25 12:40:00.423
  STEP: check the unserved version gets removed @ 01/04/25 12:40:00.441
  STEP: check the other version is not changed @ 01/04/25 12:40:01.265
  I0104 12:40:03.726595 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1668" for this suite. @ 01/04/25 12:40:03.733
• [6.445 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/04/25 12:40:03.741
  I0104 12:40:03.741166 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename disruption @ 01/04/25 12:40:03.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:03.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:03.761
  STEP: Creating a kubernetes client @ 01/04/25 12:40:03.764
  I0104 12:40:03.764523 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename disruption-2 @ 01/04/25 12:40:03.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:03.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:03.786
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:40:03.795
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:40:03.808
  STEP: Waiting for the pdb to be processed @ 01/04/25 12:40:03.821
  STEP: listing a collection of PDBs across all namespaces @ 01/04/25 12:40:03.828
  STEP: listing a collection of PDBs in namespace disruption-7349 @ 01/04/25 12:40:03.833
  STEP: deleting a collection of PDBs @ 01/04/25 12:40:03.836
  STEP: Waiting for the PDB collection to be deleted @ 01/04/25 12:40:03.854
  I0104 12:40:03.858615 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1204" for this suite. @ 01/04/25 12:40:03.864
  I0104 12:40:03.873897 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7349" for this suite. @ 01/04/25 12:40:03.879
• [0.146 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/04/25 12:40:03.887
  I0104 12:40:03.887817 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:40:03.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:03.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:03.908
  STEP: Setting up server cert @ 01/04/25 12:40:03.936
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:40:04.068
  STEP: Deploying the webhook pod @ 01/04/25 12:40:04.08
  STEP: Wait for the deployment to be ready @ 01/04/25 12:40:04.096
  I0104 12:40:04.110457 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0104 12:40:06.126439 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 40, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 40, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 40, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 40, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/04/25 12:40:08.13
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:40:08.148
  I0104 12:40:09.148441 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0104 12:40:09.159272 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8167-crds.webhook.example.com via the AdmissionRegistration API @ 01/04/25 12:40:09.669
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/04/25 12:40:09.686
  I0104 12:40:12.279120 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3807" for this suite. @ 01/04/25 12:40:12.283
  STEP: Destroying namespace "webhook-markers-2933" for this suite. @ 01/04/25 12:40:12.291
• [8.413 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 01/04/25 12:40:12.301
  I0104 12:40:12.301186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 12:40:12.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:12.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:12.321
  STEP: Creating a job @ 01/04/25 12:40:12.324
  STEP: Ensuring active pods == parallelism @ 01/04/25 12:40:12.329
  STEP: Orphaning one of the Job's Pods @ 01/04/25 12:40:14.336
  I0104 12:40:14.856560 18 pod_client.go:173] Successfully updated pod "adopt-release-22qjx"
  STEP: Checking that the Job readopts the Pod @ 01/04/25 12:40:14.856
  STEP: Removing the labels from the Job's Pod @ 01/04/25 12:40:16.87
  I0104 12:40:17.382735 18 pod_client.go:173] Successfully updated pod "adopt-release-22qjx"
  STEP: Checking that the Job releases the Pod @ 01/04/25 12:40:17.382
  I0104 12:40:19.394174 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-999" for this suite. @ 01/04/25 12:40:19.4
• [7.108 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/04/25 12:40:19.409
  I0104 12:40:19.409633 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-runtime @ 01/04/25 12:40:19.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:19.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:19.428
  STEP: create the container @ 01/04/25 12:40:19.433
  W0104 12:40:19.443390      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/04/25 12:40:19.443
  STEP: get the container status @ 01/04/25 12:40:22.466
  STEP: the container should be terminated @ 01/04/25 12:40:22.47
  STEP: the termination message should be set @ 01/04/25 12:40:22.47
  I0104 12:40:22.470287 18 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/04/25 12:40:22.47
  I0104 12:40:22.494577 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8936" for this suite. @ 01/04/25 12:40:22.499
• [3.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/04/25 12:40:22.509
  I0104 12:40:22.510012 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pv @ 01/04/25 12:40:22.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:22.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:22.528
  STEP: Creating initial PV and PVC @ 01/04/25 12:40:22.531
  I0104 12:40:22.531434 18 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1947" @ 01/04/25 12:40:22.547
  STEP: Listing PVCs in namespace "pv-1947" @ 01/04/25 12:40:22.553
  STEP: Reading "pvc-llcc7" Status @ 01/04/25 12:40:22.556
  STEP: Reading "pv-1947-qnlvp" Status @ 01/04/25 12:40:22.563
  STEP: Patching "pvc-llcc7" Status @ 01/04/25 12:40:22.569
  STEP: Patching "pv-1947-qnlvp" Status @ 01/04/25 12:40:22.58
  STEP: Updating "pvc-llcc7" Status @ 01/04/25 12:40:22.589
  STEP: Updating "pv-1947-qnlvp" Status @ 01/04/25 12:40:22.599
  I0104 12:40:22.610319 18 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0104 12:40:22.610352 18 pv.go:205] Deleting PersistentVolumeClaim "pvc-llcc7"
  I0104 12:40:22.617921 18 pv.go:193] Deleting PersistentVolume "pv-1947-qnlvp"
  I0104 12:40:22.626669 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1947" for this suite. @ 01/04/25 12:40:22.633
• [0.134 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/04/25 12:40:22.643
  I0104 12:40:22.643914 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pod-network-test @ 01/04/25 12:40:22.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:22.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:22.663
  STEP: Performing setup for networking test in namespace pod-network-test-9249 @ 01/04/25 12:40:22.666
  STEP: creating a selector @ 01/04/25 12:40:22.666
  STEP: Creating the service pods in kubernetes @ 01/04/25 12:40:22.666
  I0104 12:40:22.666444 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/04/25 12:40:44.794
  I0104 12:40:46.835039 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0104 12:40:46.835080 18 utils.go:496] Going to poll 192.168.113.35 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0104 12:40:46.839823 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.113.35 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9249 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:40:46.839847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:40:46.840260 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:40:46.840301 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9249/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.113.35+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0104 12:40:47.894220 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0104 12:40:47.894281 18 utils.go:496] Going to poll 192.168.159.101 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0104 12:40:47.898121 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.159.101 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9249 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:40:47.898147 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:40:47.898604 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:40:47.898648 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9249/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.159.101+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0104 12:40:48.939908 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0104 12:40:48.939958 18 utils.go:496] Going to poll 192.168.104.185 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0104 12:40:48.945302 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.104.185 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9249 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 12:40:48.945328 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:40:48.945841 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 12:40:48.945886 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9249/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.104.185+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0104 12:40:49.986798 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0104 12:40:49.986931 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9249" for this suite. @ 01/04/25 12:40:49.991
• [27.358 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/04/25 12:40:50.002
  I0104 12:40:50.002304 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-pred @ 01/04/25 12:40:50.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:50.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:50.019
  I0104 12:40:50.022535 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0104 12:40:50.032169 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0104 12:40:50.036859 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-169 before test
  I0104 12:40:50.041165 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9kbc6 from ingress-nginx-kubernetes-worker started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041183 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:40:50.041190 18 predicates.go:957] calico-node-7jxjd from kube-system started at 2025-01-04 12:03:59 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041195 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:40:50.041203 18 predicates.go:957] coredns-5b4857d7c8-znj7g from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041208 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0104 12:40:50.041214 18 predicates.go:957] kube-state-metrics-5d7bdccd49-w7r9q from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041219 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0104 12:40:50.041225 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-j4g8b from kube-system started at 2025-01-04 11:57:17 +0000 UTC (2 container statuses recorded)
  I0104 12:40:50.041234 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0104 12:40:50.041239 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0104 12:40:50.041245 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-j7szt from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041256 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0104 12:40:50.041263 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-sprml from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041271 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0104 12:40:50.041286 18 predicates.go:957] netserver-0 from pod-network-test-9249 started at 2025-01-04 12:40:22 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.041290 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0104 12:40:50.041296 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-nzqp5 from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:40:50.041301 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:40:50.041307 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 12:40:50.041314 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-76-68 before test
  I0104 12:40:50.047895 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qxvn4 from ingress-nginx-kubernetes-worker started at 2025-01-04 12:03:24 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.047916 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:40:50.047923 18 predicates.go:957] calico-node-hkpq9 from kube-system started at 2025-01-04 12:02:54 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.047929 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:40:50.047935 18 predicates.go:957] netserver-1 from pod-network-test-9249 started at 2025-01-04 12:40:22 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.047940 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0104 12:40:50.047945 18 predicates.go:957] sonobuoy-e2e-job-ed454467d82848bc from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:40:50.047952 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0104 12:40:50.047961 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:40:50.047967 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-qpfkm from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:40:50.047974 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:40:50.047979 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 12:40:50.047989 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-94 before test
  I0104 12:40:50.054746 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9vf2x from ingress-nginx-kubernetes-worker started at 2025-01-04 12:29:38 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.054764 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 12:40:50.054771 18 predicates.go:957] calico-node-wq2kk from kube-system started at 2025-01-04 12:03:48 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.054778 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 12:40:50.054784 18 predicates.go:957] host-test-container-pod from pod-network-test-9249 started at 2025-01-04 12:40:44 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.054790 18 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0104 12:40:50.054796 18 predicates.go:957] netserver-2 from pod-network-test-9249 started at 2025-01-04 12:40:22 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.054801 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0104 12:40:50.054807 18 predicates.go:957] test-container-pod from pod-network-test-9249 started at 2025-01-04 12:40:44 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.054812 18 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0104 12:40:50.054819 18 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-04 12:08:26 +0000 UTC (1 container statuses recorded)
  I0104 12:40:50.054828 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0104 12:40:50.054834 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-xs6sh from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 12:40:50.054839 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 12:40:50.054844 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/04/25 12:40:50.054
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18177dc131057ffc], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 01/04/25 12:40:50.089
  I0104 12:40:51.084425 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8095" for this suite. @ 01/04/25 12:40:51.088
• [1.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/04/25 12:40:51.097
  I0104 12:40:51.097605 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename cronjob @ 01/04/25 12:40:51.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:40:51.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:40:51.12
  STEP: Creating a suspended cronjob @ 01/04/25 12:40:51.123
  STEP: Ensuring no jobs are scheduled @ 01/04/25 12:40:51.13
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/04/25 12:45:51.13
  STEP: Removing cronjob @ 01/04/25 12:45:51.135
  I0104 12:45:51.145133 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5635" for this suite. @ 01/04/25 12:45:51.149
• [300.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/04/25 12:45:51.159
  I0104 12:45:51.159354 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:45:51.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:45:51.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:45:51.182
  STEP: Creating secret with name secret-test-a9a833d4-1146-4f50-ab43-24dd109e2e77 @ 01/04/25 12:45:51.185
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:45:51.192
  STEP: Saw pod success @ 01/04/25 12:45:53.214
  I0104 12:45:53.218261 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-secrets-5d135bf6-3a5f-41a0-957f-c830fbbb1a1d container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:45:53.241
  I0104 12:45:53.264366 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-243" for this suite. @ 01/04/25 12:45:53.27
• [2.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/04/25 12:45:53.28
  I0104 12:45:53.280301 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename tables @ 01/04/25 12:45:53.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:45:53.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:45:53.298
  I0104 12:45:53.303607 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-223" for this suite. @ 01/04/25 12:45:53.306
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/04/25 12:45:53.316
  I0104 12:45:53.316734 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename aggregator @ 01/04/25 12:45:53.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:45:53.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:45:53.336
  I0104 12:45:53.339503 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Registering the sample API server. @ 01/04/25 12:45:53.34
  I0104 12:45:53.589888 18 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0104 12:45:53.622422 18 deployment.go:222] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0104 12:45:55.679874 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:45:57.686413 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:45:59.686603 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:01.686887 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:03.685525 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:05.686414 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:07.687359 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:09.686373 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:11.686256 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:13.685436 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:15.686586 18 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 12, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0104 12:46:17.806040 18 aggregator.go:755] Waited 115.102935ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/04/25 12:46:17.844
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/04/25 12:46:17.849
  STEP: List APIServices @ 01/04/25 12:46:17.858
  I0104 12:46:17.864714 18 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/04/25 12:46:17.864
  I0104 12:46:17.876522 18 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/04/25 12:46:17.876
  I0104 12:46:17.888486 18 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 4, 12, 46, 17, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/04/25 12:46:17.888
  I0104 12:46:17.892853 18 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-04 12:46:17 +0000 UTC Passed all checks passed}
  I0104 12:46:17.892877 18 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 12:46:17.892887 18 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/04/25 12:46:17.892
  I0104 12:46:17.904922 18 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1349467920" @ 01/04/25 12:46:17.904
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/04/25 12:46:17.915
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/04/25 12:46:17.926
  STEP: Patch APIService Status @ 01/04/25 12:46:17.931
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/04/25 12:46:17.94
  I0104 12:46:17.944311 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-04 12:46:17 +0000 UTC Passed all checks passed}
  I0104 12:46:17.944340 18 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 12:46:17.944355 18 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0104 12:46:17.944366 18 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/04/25 12:46:17.944
  STEP: Confirm that the generated APIService has been deleted @ 01/04/25 12:46:17.956
  I0104 12:46:17.956803 18 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0104 12:46:17.962534 18 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0104 12:46:17.962563 18 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0104 12:46:18.089010 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-209" for this suite. @ 01/04/25 12:46:18.095
• [24.789 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/04/25 12:46:18.106
  I0104 12:46:18.106097 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename init-container @ 01/04/25 12:46:18.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:46:18.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:46:18.124
  STEP: creating the pod @ 01/04/25 12:46:18.129
  I0104 12:46:18.129173 18 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0104 12:46:23.134578 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4082" for this suite. @ 01/04/25 12:46:23.138
• [5.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/04/25 12:46:23.147
  I0104 12:46:23.147017 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 12:46:23.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:46:23.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:46:23.166
  I0104 12:46:23.194519 18 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/04/25 12:46:23.201
  I0104 12:46:23.206127 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:23.206168 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:23.208875 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:46:23.208895 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:46:24.206538 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:24.206602 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:24.211786 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 12:46:24.211808 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:46:25.207512 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:25.207559 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:25.211320 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 12:46:25.211345 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/04/25 12:46:25.229
  STEP: Check that daemon pods images are updated. @ 01/04/25 12:46:25.244
  I0104 12:46:25.247372 18 daemon_set.go:1193] Wrong image for pod: daemon-set-cz4ps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:25.247402 18 daemon_set.go:1193] Wrong image for pod: daemon-set-hprw8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:25.247408 18 daemon_set.go:1193] Wrong image for pod: daemon-set-tkmcr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:25.254054 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:25.254093 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:26.251015 18 daemon_set.go:1193] Wrong image for pod: daemon-set-cz4ps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:26.251052 18 daemon_set.go:1193] Wrong image for pod: daemon-set-hprw8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:26.251059 18 daemon_set.go:1198] Pod daemon-set-m55j5 is not available
  I0104 12:46:26.256546 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:26.256575 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:27.249655 18 daemon_set.go:1193] Wrong image for pod: daemon-set-cz4ps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:27.249710 18 daemon_set.go:1198] Pod daemon-set-d8hr5 is not available
  I0104 12:46:27.256420 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:27.256450 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:28.248283 18 daemon_set.go:1193] Wrong image for pod: daemon-set-cz4ps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0104 12:46:28.248309 18 daemon_set.go:1198] Pod daemon-set-d8hr5 is not available
  I0104 12:46:28.251541 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:28.251566 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:29.250320 18 daemon_set.go:1198] Pod daemon-set-zdkg7 is not available
  I0104 12:46:29.255224 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:29.255288 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/04/25 12:46:29.255
  I0104 12:46:29.261250 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:29.261286 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:29.265691 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 12:46:29.265717 18 fixtures.go:130] Node ip-172-31-76-68 is running 0 daemon pod, expected 1
  I0104 12:46:30.260051 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:30.260098 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:46:30.265107 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 12:46:30.265136 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/04/25 12:46:30.287
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3821, will wait for the garbage collector to delete the pods @ 01/04/25 12:46:30.287
  I0104 12:46:30.350985 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.357757ms
  I0104 12:46:30.451322 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.333612ms
  I0104 12:46:31.956110 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:46:31.956149 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0104 12:46:31.959643 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22510"},"items":null}

  I0104 12:46:31.964656 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22510"},"items":null}

  I0104 12:46:31.983025 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3821" for this suite. @ 01/04/25 12:46:31.988
• [8.849 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/04/25 12:46:31.996
  I0104 12:46:31.996022 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 12:46:31.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:46:32.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:46:32.014
  STEP: creating service in namespace services-2302 @ 01/04/25 12:46:32.017
  STEP: creating service affinity-clusterip-transition in namespace services-2302 @ 01/04/25 12:46:32.017
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2302 @ 01/04/25 12:46:32.032
  I0104 12:46:32.040414      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2302, replica count: 3
  I0104 12:46:35.091192      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 12:46:35.102821 18 resource.go:361] Creating new exec pod
  I0104 12:46:38.119342 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-2302 exec execpod-affinity2c4st -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0104 12:46:38.212616 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0104 12:46:38.212689 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:46:38.212817 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-2302 exec execpod-affinity2c4st -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.241 80'
  I0104 12:46:38.295054 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.241 80\nConnection to 10.152.183.241 80 port [tcp/http] succeeded!\n"
  I0104 12:46:38.295100 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 12:46:38.305344 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-2302 exec execpod-affinity2c4st -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.241:80/ ; done'
  I0104 12:46:38.441839 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n"
  I0104 12:46:38.441892 18 builder.go:147] stdout: "\naffinity-clusterip-transition-p4vzj\naffinity-clusterip-transition-p4vzj\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-p4vzj\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-p4vzj\naffinity-clusterip-transition-p4vzj\naffinity-clusterip-transition-d89cd\naffinity-clusterip-transition-p4vzj\naffinity-clusterip-transition-kprtg"
  I0104 12:46:38.441906 18 service.go:242] Received response from host: affinity-clusterip-transition-p4vzj
  I0104 12:46:38.441915 18 service.go:242] Received response from host: affinity-clusterip-transition-p4vzj
  I0104 12:46:38.441923 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.441929 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.441936 18 service.go:242] Received response from host: affinity-clusterip-transition-p4vzj
  I0104 12:46:38.441942 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.441949 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.441956 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.441962 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.441970 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.441976 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.441982 18 service.go:242] Received response from host: affinity-clusterip-transition-p4vzj
  I0104 12:46:38.441988 18 service.go:242] Received response from host: affinity-clusterip-transition-p4vzj
  I0104 12:46:38.441994 18 service.go:242] Received response from host: affinity-clusterip-transition-d89cd
  I0104 12:46:38.442001 18 service.go:242] Received response from host: affinity-clusterip-transition-p4vzj
  I0104 12:46:38.442007 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.454384 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-2302 exec execpod-affinity2c4st -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.241:80/ ; done'
  I0104 12:46:38.597250 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.241:80/\n"
  I0104 12:46:38.597304 18 builder.go:147] stdout: "\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg\naffinity-clusterip-transition-kprtg"
  I0104 12:46:38.597317 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597329 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597336 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597342 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597349 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597356 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597362 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597368 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597376 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597386 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597391 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597397 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597403 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597409 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597415 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597421 18 service.go:242] Received response from host: affinity-clusterip-transition-kprtg
  I0104 12:46:38.597644 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2302, will wait for the garbage collector to delete the pods @ 01/04/25 12:46:38.612
  I0104 12:46:38.676825 18 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.97977ms
  I0104 12:46:38.777707 18 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.84772ms
  I0104 12:46:41.704624 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2302" for this suite. @ 01/04/25 12:46:41.708
• [9.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 01/04/25 12:46:41.716
  I0104 12:46:41.716124 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 12:46:41.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:46:41.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:46:41.734
  STEP: Creating service test in namespace statefulset-7490 @ 01/04/25 12:46:41.737
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/04/25 12:46:41.746
  STEP: Creating stateful set ss in namespace statefulset-7490 @ 01/04/25 12:46:41.75
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7490 @ 01/04/25 12:46:41.758
  I0104 12:46:41.764338 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0104 12:46:51.766772 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/04/25 12:46:51.766
  I0104 12:46:51.771758 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:46:51.858100 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:46:51.858142 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:46:51.858152 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:46:51.861975 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0104 12:47:01.863909 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:47:01.863956 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0104 12:47:01.885659 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999681s
  I0104 12:47:02.892436 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.993603985s
  I0104 12:47:03.897145 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.987431647s
  I0104 12:47:04.904257 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.982144187s
  I0104 12:47:05.910316 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.97591535s
  I0104 12:47:06.915589 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.969511649s
  I0104 12:47:07.922266 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.964110476s
  I0104 12:47:08.926484 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.957909922s
  I0104 12:47:09.932784 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.953680514s
  I0104 12:47:10.940000 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 946.506328ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7490 @ 01/04/25 12:47:11.94
  I0104 12:47:11.945726 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:47:12.031859 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 12:47:12.031901 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:47:12.031911 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:47:12.037345 18 wait.go:40] Found 1 stateful pods, waiting for 3
  I0104 12:47:22.042812 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:47:22.042851 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0104 12:47:22.042859 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/04/25 12:47:22.042
  STEP: Scale down will halt with unhealthy stateful pod @ 01/04/25 12:47:22.042
  I0104 12:47:22.051718 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:47:22.144106 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:47:22.144190 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:47:22.144199 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:47:22.144248 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:47:22.237251 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:47:22.237298 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:47:22.237311 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:47:22.237356 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 12:47:22.354297 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 12:47:22.354341 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 12:47:22.354354 18 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0104 12:47:22.354362 18 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0104 12:47:22.360339 18 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0104 12:47:32.364061 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:47:32.364100 18 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:47:32.364107 18 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0104 12:47:32.380551 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999751s
  I0104 12:47:33.387155 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995238345s
  I0104 12:47:34.394039 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988878148s
  I0104 12:47:35.400335 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.982636455s
  I0104 12:47:36.405175 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.976004646s
  I0104 12:47:37.411877 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.971505905s
  I0104 12:47:38.418581 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.963943986s
  I0104 12:47:39.422399 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.958023919s
  I0104 12:47:40.428088 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.954287167s
  I0104 12:47:41.434543 18 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 948.026311ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7490 @ 01/04/25 12:47:42.435
  I0104 12:47:42.439871 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:47:42.529743 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 12:47:42.529788 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:47:42.529799 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:47:42.529854 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:47:42.619514 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 12:47:42.619555 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:47:42.619565 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:47:42.619704 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-7490 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 12:47:42.706589 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 12:47:42.706630 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 12:47:42.706641 18 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0104 12:47:42.706651 18 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/04/25 12:47:52.717
  I0104 12:47:52.717729 18 statefulset.go:138] Deleting all statefulset in ns statefulset-7490
  I0104 12:47:52.722887 18 rest.go:150] Scaling statefulset ss to 0
  I0104 12:47:52.731715 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 12:47:52.736915 18 rest.go:88] Deleting statefulset ss
  I0104 12:47:52.753242 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7490" for this suite. @ 01/04/25 12:47:52.757
• [71.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/04/25 12:47:52.765
  I0104 12:47:52.765616 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/04/25 12:47:52.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:47:52.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:47:52.787
  STEP: create the container to handle the HTTPGet hook request. @ 01/04/25 12:47:52.795
  STEP: create the pod with lifecycle hook @ 01/04/25 12:47:54.828
  STEP: delete the pod with lifecycle hook @ 01/04/25 12:47:56.852
  STEP: check prestop hook @ 01/04/25 12:47:58.871
  I0104 12:47:58.891932 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3490" for this suite. @ 01/04/25 12:47:58.895
• [6.141 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/04/25 12:47:58.906
  I0104 12:47:58.906755 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 12:47:58.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:47:58.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:47:58.925
  STEP: Creating pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093 @ 01/04/25 12:47:58.928
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 12:48:00.951
  I0104 12:48:00.956462 18 container_probe.go:1749] Initial restart count of pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 is 0
  I0104 12:48:00.959517 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:02.966765 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:04.972873 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:06.976728 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:08.982732 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:10.988262 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:12.995572 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:15.001575 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:17.008217 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:19.012972 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:21.019851 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:23.026433 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:25.031085 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:27.038150 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:29.044290 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:31.050937 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:33.055813 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:35.062196 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:37.068528 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:39.073432 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:41.079982 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:43.084968 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:45.090432 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:47.096730 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:49.101949 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:51.108647 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:53.115782 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:55.120770 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:57.125078 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:48:59.131194 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:01.137977 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:03.144595 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:05.151422 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:07.157749 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:09.164536 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:11.168527 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:13.176021 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:15.183069 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:17.188055 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:19.193303 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:21.199871 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:23.204195 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:25.211640 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:27.216918 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:29.223563 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:31.230165 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:33.236165 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:35.240555 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:37.247764 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:39.255099 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:41.261931 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:43.268341 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:45.275846 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:47.282876 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:49.290168 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:51.295993 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:53.302342 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:55.309512 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:57.313970 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:49:59.321102 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:01.327013 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:03.333456 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:05.339900 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:07.345985 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:09.354120 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:11.360895 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:13.367430 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:15.374783 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:17.382306 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:19.389437 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:21.395469 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:23.402492 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:25.409171 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:27.416274 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:29.422197 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:31.428368 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:33.435517 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:35.442532 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:37.450299 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:39.454686 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:41.461264 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:43.465977 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:45.472870 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:47.480167 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:49.486598 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:51.491251 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:53.497867 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:55.505257 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:57.511121 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:50:59.516668 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:01.520587 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:03.527370 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:05.534398 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:07.538729 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:09.545338 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:11.551884 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:13.558434 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:15.564977 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:17.570278 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:19.577039 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:21.582257 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:23.588177 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:25.594697 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:27.600317 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:29.605047 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:31.610930 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:33.617121 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:35.622284 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:37.628844 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:39.635778 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:41.642633 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:43.649073 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:45.656350 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:47.663009 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:49.668431 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:51.673924 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:53.681393 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:55.686350 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:57.693504 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  I0104 12:51:59.701054 18 container_probe.go:1759] Get pod liveness-79a351c2-1710-4c63-9b46-0f2431cca1a7 in namespace container-probe-8093
  STEP: deleting the pod @ 01/04/25 12:52:01.701
  I0104 12:52:01.719752 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8093" for this suite. @ 01/04/25 12:52:01.724
• [242.825 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/04/25 12:52:01.731
  I0104 12:52:01.731998 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 12:52:01.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:52:01.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:52:01.755
  STEP: Setting up server cert @ 01/04/25 12:52:01.775
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 12:52:01.964
  STEP: Deploying the webhook pod @ 01/04/25 12:52:01.976
  STEP: Wait for the deployment to be ready @ 01/04/25 12:52:01.992
  I0104 12:52:02.006733 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 12:52:04.022
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 12:52:04.038
  I0104 12:52:05.038795 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0104 12:52:05.050695 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/04/25 12:52:05.56
  STEP: Creating a custom resource that should be denied by the webhook @ 01/04/25 12:52:05.577
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/04/25 12:52:07.593
  STEP: Updating the custom resource with disallowed data should be denied @ 01/04/25 12:52:07.6
  STEP: Deleting the custom resource should be denied @ 01/04/25 12:52:07.612
  STEP: Remove the offending key and value from the custom resource data @ 01/04/25 12:52:07.62
  STEP: Deleting the updated custom resource should be successful @ 01/04/25 12:52:07.631
  I0104 12:52:08.214742 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6924" for this suite. @ 01/04/25 12:52:08.22
  STEP: Destroying namespace "webhook-markers-5379" for this suite. @ 01/04/25 12:52:08.228
• [6.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/04/25 12:52:08.236
  I0104 12:52:08.236162 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 12:52:08.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:52:08.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:52:08.257
  I0104 12:52:08.260982 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/04/25 12:52:09.528
  I0104 12:52:09.528356 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-9394 --namespace=crd-publish-openapi-9394 create -f -'
  I0104 12:52:11.603565 18 builder.go:146] stderr: ""
  I0104 12:52:11.603607 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1105-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0104 12:52:11.603661 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-9394 --namespace=crd-publish-openapi-9394 delete e2e-test-crd-publish-openapi-1105-crds test-cr'
  I0104 12:52:11.659507 18 builder.go:146] stderr: ""
  I0104 12:52:11.659555 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1105-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0104 12:52:11.659599 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-9394 --namespace=crd-publish-openapi-9394 apply -f -'
  I0104 12:52:11.727843 18 builder.go:146] stderr: ""
  I0104 12:52:11.727882 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1105-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0104 12:52:11.727987 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-9394 --namespace=crd-publish-openapi-9394 delete e2e-test-crd-publish-openapi-1105-crds test-cr'
  I0104 12:52:11.783899 18 builder.go:146] stderr: ""
  I0104 12:52:11.783939 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1105-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/04/25 12:52:11.783
  I0104 12:52:11.784018 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-9394 explain e2e-test-crd-publish-openapi-1105-crds'
  I0104 12:52:11.829115 18 builder.go:146] stderr: ""
  I0104 12:52:11.829172 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1105-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0104 12:52:13.061597 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9394" for this suite. @ 01/04/25 12:52:13.07
• [4.842 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/04/25 12:52:13.078
  I0104 12:52:13.078719 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:52:13.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:52:13.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:52:13.1
  STEP: Creating projection with secret that has name projected-secret-test-map-7b7d849e-bfb1-480f-8f26-0ce055275f14 @ 01/04/25 12:52:13.103
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:52:13.109
  STEP: Saw pod success @ 01/04/25 12:52:17.144
  I0104 12:52:17.149729 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-secrets-fbd85a65-edbe-4dc9-b285-71e97cbecae0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:52:17.165
  I0104 12:52:17.183657 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7136" for this suite. @ 01/04/25 12:52:17.188
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/04/25 12:52:17.196
  I0104 12:52:17.196847 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 12:52:17.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:52:17.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:52:17.218
  STEP: Creating pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080 @ 01/04/25 12:52:17.221
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 12:52:19.242
  I0104 12:52:19.248027 18 container_probe.go:1749] Initial restart count of pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d is 0
  I0104 12:52:19.252926 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:21.260080 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:23.266283 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:25.271715 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:27.277476 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:29.284032 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:31.290257 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:33.294878 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:35.302423 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:37.309193 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:39.315277 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:41.320483 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:43.325231 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:45.332465 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:47.337819 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:49.344775 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:51.349303 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:53.353900 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:55.360821 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:57.367001 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:52:59.372368 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:53:01.380127 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:53:03.385611 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:53:05.392524 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:53:07.400610 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:53:09.406530 18 container_probe.go:1759] Get pod busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d in namespace container-probe-7080
  I0104 12:53:09.406567 18 container_probe.go:1763] Restart count of pod container-probe-7080/busybox-b4f90c1b-4ac1-4b27-94ac-76a50446ff0d is now 1 (50.158515218s elapsed)
  STEP: deleting the pod @ 01/04/25 12:53:09.406
  I0104 12:53:09.426461 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7080" for this suite. @ 01/04/25 12:53:09.43
• [52.241 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/04/25 12:53:09.437
  I0104 12:53:09.437522 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 12:53:09.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:53:09.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:53:09.456
  STEP: Saw pod success @ 01/04/25 12:53:15.522
  I0104 12:53:15.526137 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod client-envvars-927c2618-d559-4cb0-acaf-63ba86c0f619 container env3cont: <nil>
  STEP: delete the pod @ 01/04/25 12:53:15.535
  I0104 12:53:15.556599 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8960" for this suite. @ 01/04/25 12:53:15.561
• [6.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/04/25 12:53:15.572
  I0104 12:53:15.572065 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename watch @ 01/04/25 12:53:15.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:53:15.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:53:15.59
  STEP: creating a watch on configmaps with a certain label @ 01/04/25 12:53:15.593
  STEP: creating a new configmap @ 01/04/25 12:53:15.594
  STEP: modifying the configmap once @ 01/04/25 12:53:15.6
  STEP: changing the label value of the configmap @ 01/04/25 12:53:15.609
  STEP: Expecting to observe a delete notification for the watched object @ 01/04/25 12:53:15.617
  I0104 12:53:15.617845 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1056  cc7ee227-68be-4127-8d5d-33bd4601c0b4 24042 0 2025-01-04 12:53:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-04 12:53:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:53:15.618085 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1056  cc7ee227-68be-4127-8d5d-33bd4601c0b4 24043 0 2025-01-04 12:53:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-04 12:53:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:53:15.618226 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1056  cc7ee227-68be-4127-8d5d-33bd4601c0b4 24044 0 2025-01-04 12:53:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-04 12:53:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/04/25 12:53:15.618
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/04/25 12:53:15.628
  STEP: changing the label value of the configmap back @ 01/04/25 12:53:25.63
  STEP: modifying the configmap a third time @ 01/04/25 12:53:25.643
  STEP: deleting the configmap @ 01/04/25 12:53:25.653
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/04/25 12:53:25.662
  I0104 12:53:25.662196 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1056  cc7ee227-68be-4127-8d5d-33bd4601c0b4 24087 0 2025-01-04 12:53:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-04 12:53:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:53:25.662278 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1056  cc7ee227-68be-4127-8d5d-33bd4601c0b4 24088 0 2025-01-04 12:53:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-04 12:53:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:53:25.662339 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1056  cc7ee227-68be-4127-8d5d-33bd4601c0b4 24089 0 2025-01-04 12:53:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-04 12:53:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 12:53:25.662419 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1056" for this suite. @ 01/04/25 12:53:25.665
• [10.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/04/25 12:53:25.674
  I0104 12:53:25.674629 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 12:53:25.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:53:25.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:53:25.692
  I0104 12:54:25.712939 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-895" for this suite. @ 01/04/25 12:54:25.718
• [60.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/04/25 12:54:25.726
  I0104 12:54:25.726426 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 12:54:25.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:25.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:25.748
  STEP: Creating simple DaemonSet "daemon-set" @ 01/04/25 12:54:25.775
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/04/25 12:54:25.782
  I0104 12:54:25.789457 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:25.789490 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:25.792271 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:54:25.792293 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:54:26.791794 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:26.791829 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:26.796629 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 12:54:26.796650 18 fixtures.go:130] Node ip-172-31-76-68 is running 0 daemon pod, expected 1
  I0104 12:54:27.786902 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:27.786949 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:27.792271 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 12:54:27.792293 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/04/25 12:54:27.795
  I0104 12:54:27.815813 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:27.815844 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:27.822572 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 12:54:27.822591 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:54:28.817048 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:28.817095 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:28.821557 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 12:54:28.821585 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:54:29.815135 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:29.815174 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:54:29.820043 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 12:54:29.820064 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/04/25 12:54:29.825
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6243, will wait for the garbage collector to delete the pods @ 01/04/25 12:54:29.825
  I0104 12:54:29.888585 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.314333ms
  I0104 12:54:29.989461 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.869425ms
  I0104 12:54:31.496026 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 12:54:31.496066 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0104 12:54:31.501039 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24364"},"items":null}

  I0104 12:54:31.504278 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24364"},"items":null}

  I0104 12:54:31.521506 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6243" for this suite. @ 01/04/25 12:54:31.526
• [5.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/04/25 12:54:31.538
  I0104 12:54:31.538158 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 12:54:31.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:31.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:31.556
  I0104 12:54:31.559300 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  W0104 12:54:31.559856      18 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00375b880 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0104 12:54:34.095729      18 warnings.go:70] unknown field "alpha"
  W0104 12:54:34.095759      18 warnings.go:70] unknown field "beta"
  W0104 12:54:34.095763      18 warnings.go:70] unknown field "delta"
  W0104 12:54:34.095765      18 warnings.go:70] unknown field "epsilon"
  W0104 12:54:34.095768      18 warnings.go:70] unknown field "gamma"
  I0104 12:54:34.650832 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6967" for this suite. @ 01/04/25 12:54:34.654
• [3.126 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/04/25 12:54:34.664
  I0104 12:54:34.664770 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 12:54:34.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:34.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:34.684
  I0104 12:54:34.687403 18 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0104 12:54:34.699252 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0104 12:54:39.702660 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/04/25 12:54:39.702
  I0104 12:54:39.702745 18 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0104 12:54:39.707489 18 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0104 12:54:39.718466 18 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0104 12:54:41.728155 18 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0104 12:54:41.731546 18 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0104 12:54:41.746877 18 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b07659aa-836f-4ff1-b8bb-4e218799be65",
      ResourceVersion: (string) (len=5) "24495",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871592079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 12:54:41.752899 18 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a38e8761-0d6a-4426-8d29-c5f6a4a4c24b",
      ResourceVersion: (string) (len=5) "24485",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871592079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b07659aa-836f-4ff1-b8bb-4e218799be65",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 30 37 36 35 39  61 61 2d 38 33 36 66 2d  |\"b07659aa-836f-|
              00000120  34 66 66 31 2d 62 38 62  62 2d 34 65 32 31 38 37  |4ff1-b8bb-4e2187|
              00000130  39 39 62 65 36 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |99be65\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:54:41.753490 18 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0104 12:54:41.753757 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2288bb5c-7db4-4710-872f-a2169e76240f",
      ResourceVersion: (string) (len=5) "24494",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871592074,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b07659aa-836f-4ff1-b8bb-4e218799be65",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592074,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 30 37 36 35 39 61  |"uid\":\"b07659a|
              000000b0  61 2d 38 33 36 66 2d 34  66 66 31 2d 62 38 62 62  |a-836f-4ff1-b8bb|
              000000c0  2d 34 65 32 31 38 37 39  39 62 65 36 35 5c 22 7d  |-4e218799be65\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 12:54:41.759914 18 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-4x5g2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-4x5g2",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-8093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e39212e-bf0e-46e7-8e1e-c7888c8e854d",
      ResourceVersion: (string) (len=5) "24484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871592079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "a38e8761-0d6a-4426-8d29-c5f6a4a4c24b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  38 65 38 37 36 31 2d 30  |d\":\"a38e8761-0|
              00000090  64 36 61 2d 34 34 32 36  2d 38 64 32 39 2d 63 35  |d6a-4426-8d29-c5|
              000000a0  66 36 61 34 61 34 63 32  34 62 5c 22 7d 22 3a 7b  |f6a4a4c24b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 36 32 5c 22 7d  |2.168.104.162\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vszf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vszf5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871592079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871592079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871592080,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://6d4c3b218e1b4185b7674ea7d8080bcd8dcea0daa311499205648093f6231ed9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vszf5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 12:54:41.761667 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8093" for this suite. @ 01/04/25 12:54:41.767
• [7.112 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/04/25 12:54:41.776
  I0104 12:54:41.776659 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svc-latency @ 01/04/25 12:54:41.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:41.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:41.796
  I0104 12:54:41.799229 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8341 @ 01/04/25 12:54:41.799
  I0104 12:54:41.806516      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8341, replica count: 1
  I0104 12:54:42.858409      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 12:54:42.974432 18 service_latency.go:356] Created: latency-svc-jkljr
  I0104 12:54:42.984443 18 service_latency.go:363] Got endpoints: latency-svc-jkljr [24.961894ms]
  I0104 12:54:42.999404 18 service_latency.go:356] Created: latency-svc-w6g7j
  I0104 12:54:43.009071 18 service_latency.go:363] Got endpoints: latency-svc-w6g7j [24.443148ms]
  I0104 12:54:43.009591 18 service_latency.go:356] Created: latency-svc-gjf2h
  I0104 12:54:43.013571 18 service_latency.go:363] Got endpoints: latency-svc-gjf2h [28.732642ms]
  I0104 12:54:43.017796 18 service_latency.go:356] Created: latency-svc-nhvbj
  I0104 12:54:43.022712 18 service_latency.go:363] Got endpoints: latency-svc-nhvbj [37.793622ms]
  I0104 12:54:43.029385 18 service_latency.go:356] Created: latency-svc-55pgd
  I0104 12:54:43.033577 18 service_latency.go:356] Created: latency-svc-5jlcd
  I0104 12:54:43.041530 18 service_latency.go:363] Got endpoints: latency-svc-55pgd [56.645414ms]
  I0104 12:54:43.041587 18 service_latency.go:363] Got endpoints: latency-svc-5jlcd [56.601431ms]
  I0104 12:54:43.044915 18 service_latency.go:356] Created: latency-svc-nrnp6
  I0104 12:54:43.053290 18 service_latency.go:356] Created: latency-svc-9prmn
  I0104 12:54:43.054040 18 service_latency.go:363] Got endpoints: latency-svc-nrnp6 [69.009037ms]
  I0104 12:54:43.059786 18 service_latency.go:363] Got endpoints: latency-svc-9prmn [74.684311ms]
  I0104 12:54:43.064293 18 service_latency.go:356] Created: latency-svc-g2gw8
  I0104 12:54:43.069392 18 service_latency.go:363] Got endpoints: latency-svc-g2gw8 [84.260942ms]
  I0104 12:54:43.072694 18 service_latency.go:356] Created: latency-svc-jnbj6
  I0104 12:54:43.081773 18 service_latency.go:363] Got endpoints: latency-svc-jnbj6 [96.716282ms]
  I0104 12:54:43.084864 18 service_latency.go:356] Created: latency-svc-4zhlp
  I0104 12:54:43.089795 18 service_latency.go:363] Got endpoints: latency-svc-4zhlp [104.706842ms]
  I0104 12:54:43.093257 18 service_latency.go:356] Created: latency-svc-r2vp8
  I0104 12:54:43.097712 18 service_latency.go:363] Got endpoints: latency-svc-r2vp8 [112.497861ms]
  I0104 12:54:43.103041 18 service_latency.go:356] Created: latency-svc-k622c
  I0104 12:54:43.109522 18 service_latency.go:363] Got endpoints: latency-svc-k622c [124.80274ms]
  I0104 12:54:43.113771 18 service_latency.go:356] Created: latency-svc-2qxtg
  I0104 12:54:43.120764 18 service_latency.go:363] Got endpoints: latency-svc-2qxtg [135.608231ms]
  I0104 12:54:43.124335 18 service_latency.go:356] Created: latency-svc-gc4hr
  I0104 12:54:43.130959 18 service_latency.go:356] Created: latency-svc-8cjjp
  I0104 12:54:43.134844 18 service_latency.go:363] Got endpoints: latency-svc-gc4hr [149.668865ms]
  I0104 12:54:43.144377 18 service_latency.go:363] Got endpoints: latency-svc-8cjjp [159.183951ms]
  I0104 12:54:43.151719 18 service_latency.go:356] Created: latency-svc-dvmg6
  I0104 12:54:43.159938 18 service_latency.go:363] Got endpoints: latency-svc-dvmg6 [150.825491ms]
  I0104 12:54:43.160837 18 service_latency.go:356] Created: latency-svc-t2p5l
  I0104 12:54:43.167757 18 service_latency.go:363] Got endpoints: latency-svc-t2p5l [154.127979ms]
  I0104 12:54:43.269012 18 service_latency.go:356] Created: latency-svc-tjhwx
  I0104 12:54:43.269012 18 service_latency.go:356] Created: latency-svc-d26hg
  I0104 12:54:43.271825 18 service_latency.go:356] Created: latency-svc-zmkxc
  I0104 12:54:43.276027 18 service_latency.go:356] Created: latency-svc-q2kj6
  I0104 12:54:43.276077 18 service_latency.go:356] Created: latency-svc-trc2v
  I0104 12:54:43.276126 18 service_latency.go:356] Created: latency-svc-k745t
  I0104 12:54:43.276153 18 service_latency.go:356] Created: latency-svc-96v2k
  I0104 12:54:43.276193 18 service_latency.go:356] Created: latency-svc-gh2rp
  I0104 12:54:43.276215 18 service_latency.go:356] Created: latency-svc-pwjrh
  I0104 12:54:43.276269 18 service_latency.go:356] Created: latency-svc-zmg77
  I0104 12:54:43.276316 18 service_latency.go:356] Created: latency-svc-h54bh
  I0104 12:54:43.276334 18 service_latency.go:356] Created: latency-svc-m4kbq
  I0104 12:54:43.276384 18 service_latency.go:356] Created: latency-svc-drzj4
  I0104 12:54:43.276391 18 service_latency.go:356] Created: latency-svc-pnlkq
  I0104 12:54:43.276462 18 service_latency.go:356] Created: latency-svc-tgs56
  I0104 12:54:43.286310 18 service_latency.go:363] Got endpoints: latency-svc-d26hg [188.568481ms]
  I0104 12:54:43.294208 18 service_latency.go:363] Got endpoints: latency-svc-tjhwx [126.408935ms]
  I0104 12:54:43.294277 18 service_latency.go:363] Got endpoints: latency-svc-pnlkq [234.463361ms]
  I0104 12:54:43.294359 18 service_latency.go:363] Got endpoints: latency-svc-zmkxc [271.610904ms]
  I0104 12:54:43.299170 18 service_latency.go:363] Got endpoints: latency-svc-q2kj6 [257.561656ms]
  I0104 12:54:43.308718 18 service_latency.go:363] Got endpoints: latency-svc-m4kbq [226.909042ms]
  I0104 12:54:43.309079 18 service_latency.go:363] Got endpoints: latency-svc-h54bh [219.24781ms]
  I0104 12:54:43.309160 18 service_latency.go:363] Got endpoints: latency-svc-trc2v [174.284286ms]
  I0104 12:54:43.309172 18 service_latency.go:363] Got endpoints: latency-svc-pwjrh [149.203805ms]
  I0104 12:54:43.312328 18 service_latency.go:363] Got endpoints: latency-svc-tgs56 [191.529263ms]
  I0104 12:54:43.321080 18 service_latency.go:356] Created: latency-svc-99xjs
  I0104 12:54:43.324578 18 service_latency.go:363] Got endpoints: latency-svc-gh2rp [283.014857ms]
  I0104 12:54:43.329613 18 service_latency.go:363] Got endpoints: latency-svc-zmg77 [260.188126ms]
  I0104 12:54:43.329833 18 service_latency.go:363] Got endpoints: latency-svc-k745t [275.768505ms]
  I0104 12:54:43.329980 18 service_latency.go:363] Got endpoints: latency-svc-96v2k [220.432804ms]
  I0104 12:54:43.334321 18 service_latency.go:363] Got endpoints: latency-svc-drzj4 [189.906675ms]
  I0104 12:54:43.339385 18 service_latency.go:356] Created: latency-svc-cgq9h
  I0104 12:54:43.340486 18 service_latency.go:363] Got endpoints: latency-svc-99xjs [54.131334ms]
  I0104 12:54:43.347809 18 service_latency.go:363] Got endpoints: latency-svc-cgq9h [53.514938ms]
  I0104 12:54:43.354709 18 service_latency.go:356] Created: latency-svc-gwkhz
  I0104 12:54:43.361454 18 service_latency.go:363] Got endpoints: latency-svc-gwkhz [62.226587ms]
  I0104 12:54:43.363729 18 service_latency.go:356] Created: latency-svc-5xbdt
  I0104 12:54:43.370547 18 service_latency.go:363] Got endpoints: latency-svc-5xbdt [76.304324ms]
  I0104 12:54:43.374287 18 service_latency.go:356] Created: latency-svc-vtszr
  I0104 12:54:43.381490 18 service_latency.go:356] Created: latency-svc-m8mjr
  I0104 12:54:43.382004 18 service_latency.go:363] Got endpoints: latency-svc-vtszr [87.628905ms]
  I0104 12:54:43.389807 18 service_latency.go:356] Created: latency-svc-7trjf
  I0104 12:54:43.395871 18 service_latency.go:356] Created: latency-svc-4cj4t
  I0104 12:54:43.402237 18 service_latency.go:356] Created: latency-svc-mrqmc
  I0104 12:54:43.411472 18 service_latency.go:356] Created: latency-svc-l48cx
  I0104 12:54:43.418702 18 service_latency.go:356] Created: latency-svc-9q5kp
  I0104 12:54:43.426040 18 service_latency.go:356] Created: latency-svc-kv6d6
  I0104 12:54:43.433467 18 service_latency.go:363] Got endpoints: latency-svc-m8mjr [124.703853ms]
  I0104 12:54:43.435256 18 service_latency.go:356] Created: latency-svc-vbsws
  I0104 12:54:43.441388 18 service_latency.go:356] Created: latency-svc-mnd2c
  I0104 12:54:43.450044 18 service_latency.go:356] Created: latency-svc-mf4tv
  I0104 12:54:43.458299 18 service_latency.go:356] Created: latency-svc-rspjn
  I0104 12:54:43.464362 18 service_latency.go:356] Created: latency-svc-4fmjj
  I0104 12:54:43.470505 18 service_latency.go:356] Created: latency-svc-8tmgj
  I0104 12:54:43.479706 18 service_latency.go:356] Created: latency-svc-vdg5s
  I0104 12:54:43.483202 18 service_latency.go:363] Got endpoints: latency-svc-7trjf [173.752554ms]
  I0104 12:54:43.489595 18 service_latency.go:356] Created: latency-svc-5z7fb
  I0104 12:54:43.495216 18 service_latency.go:356] Created: latency-svc-95m64
  I0104 12:54:43.503563 18 service_latency.go:356] Created: latency-svc-q8ccc
  I0104 12:54:43.533022 18 service_latency.go:363] Got endpoints: latency-svc-4cj4t [223.758302ms]
  I0104 12:54:43.546716 18 service_latency.go:356] Created: latency-svc-w2jvx
  I0104 12:54:43.583631 18 service_latency.go:363] Got endpoints: latency-svc-mrqmc [274.39678ms]
  I0104 12:54:43.597630 18 service_latency.go:356] Created: latency-svc-7nhjv
  I0104 12:54:43.635566 18 service_latency.go:363] Got endpoints: latency-svc-l48cx [323.202552ms]
  I0104 12:54:43.647935 18 service_latency.go:356] Created: latency-svc-gphz9
  I0104 12:54:43.683974 18 service_latency.go:363] Got endpoints: latency-svc-9q5kp [359.364125ms]
  I0104 12:54:43.696810 18 service_latency.go:356] Created: latency-svc-676bf
  I0104 12:54:43.731191 18 service_latency.go:363] Got endpoints: latency-svc-kv6d6 [401.544158ms]
  I0104 12:54:43.744018 18 service_latency.go:356] Created: latency-svc-5842p
  I0104 12:54:43.784082 18 service_latency.go:363] Got endpoints: latency-svc-vbsws [454.224863ms]
  I0104 12:54:43.797386 18 service_latency.go:356] Created: latency-svc-fqtjm
  I0104 12:54:43.833921 18 service_latency.go:363] Got endpoints: latency-svc-mnd2c [503.89761ms]
  I0104 12:54:43.847985 18 service_latency.go:356] Created: latency-svc-9gm26
  I0104 12:54:43.883551 18 service_latency.go:363] Got endpoints: latency-svc-mf4tv [549.142318ms]
  I0104 12:54:43.896976 18 service_latency.go:356] Created: latency-svc-kzqtg
  I0104 12:54:43.933388 18 service_latency.go:363] Got endpoints: latency-svc-rspjn [592.867435ms]
  I0104 12:54:43.946068 18 service_latency.go:356] Created: latency-svc-zgt45
  I0104 12:54:43.982209 18 service_latency.go:363] Got endpoints: latency-svc-4fmjj [634.367123ms]
  I0104 12:54:43.996796 18 service_latency.go:356] Created: latency-svc-wdwkk
  I0104 12:54:44.033292 18 service_latency.go:363] Got endpoints: latency-svc-8tmgj [671.803195ms]
  I0104 12:54:44.045627 18 service_latency.go:356] Created: latency-svc-q5vhx
  I0104 12:54:44.084714 18 service_latency.go:363] Got endpoints: latency-svc-vdg5s [714.133767ms]
  I0104 12:54:44.097812 18 service_latency.go:356] Created: latency-svc-kz5jk
  I0104 12:54:44.133336 18 service_latency.go:363] Got endpoints: latency-svc-5z7fb [751.28238ms]
  I0104 12:54:44.147096 18 service_latency.go:356] Created: latency-svc-wkz6v
  I0104 12:54:44.183167 18 service_latency.go:363] Got endpoints: latency-svc-95m64 [749.661243ms]
  I0104 12:54:44.196717 18 service_latency.go:356] Created: latency-svc-fw4hz
  I0104 12:54:44.231851 18 service_latency.go:363] Got endpoints: latency-svc-q8ccc [748.611088ms]
  I0104 12:54:44.245432 18 service_latency.go:356] Created: latency-svc-k4dmv
  I0104 12:54:44.282187 18 service_latency.go:363] Got endpoints: latency-svc-w2jvx [749.116871ms]
  I0104 12:54:44.296878 18 service_latency.go:356] Created: latency-svc-bccsl
  I0104 12:54:44.335062 18 service_latency.go:363] Got endpoints: latency-svc-7nhjv [751.351717ms]
  I0104 12:54:44.347891 18 service_latency.go:356] Created: latency-svc-gnh69
  I0104 12:54:44.385142 18 service_latency.go:363] Got endpoints: latency-svc-gphz9 [749.494994ms]
  I0104 12:54:44.399705 18 service_latency.go:356] Created: latency-svc-dhrd2
  I0104 12:54:44.434511 18 service_latency.go:363] Got endpoints: latency-svc-676bf [750.485637ms]
  I0104 12:54:44.447634 18 service_latency.go:356] Created: latency-svc-glrhc
  I0104 12:54:44.482961 18 service_latency.go:363] Got endpoints: latency-svc-5842p [751.646669ms]
  I0104 12:54:44.497004 18 service_latency.go:356] Created: latency-svc-dz6zk
  I0104 12:54:44.533643 18 service_latency.go:363] Got endpoints: latency-svc-fqtjm [749.369113ms]
  I0104 12:54:44.546949 18 service_latency.go:356] Created: latency-svc-tmfjk
  I0104 12:54:44.582518 18 service_latency.go:363] Got endpoints: latency-svc-9gm26 [748.541606ms]
  I0104 12:54:44.594897 18 service_latency.go:356] Created: latency-svc-8mqzv
  I0104 12:54:44.633266 18 service_latency.go:363] Got endpoints: latency-svc-kzqtg [749.661635ms]
  I0104 12:54:44.646032 18 service_latency.go:356] Created: latency-svc-8wh8f
  I0104 12:54:44.681844 18 service_latency.go:363] Got endpoints: latency-svc-zgt45 [748.402933ms]
  I0104 12:54:44.694971 18 service_latency.go:356] Created: latency-svc-lqwkq
  I0104 12:54:44.733229 18 service_latency.go:363] Got endpoints: latency-svc-wdwkk [750.890219ms]
  I0104 12:54:44.746405 18 service_latency.go:356] Created: latency-svc-lvqjt
  I0104 12:54:44.785646 18 service_latency.go:363] Got endpoints: latency-svc-q5vhx [752.306029ms]
  I0104 12:54:44.797792 18 service_latency.go:356] Created: latency-svc-s8xrg
  I0104 12:54:44.834386 18 service_latency.go:363] Got endpoints: latency-svc-kz5jk [749.614644ms]
  I0104 12:54:44.846324 18 service_latency.go:356] Created: latency-svc-5z6rl
  I0104 12:54:44.883365 18 service_latency.go:363] Got endpoints: latency-svc-wkz6v [749.983044ms]
  I0104 12:54:44.895758 18 service_latency.go:356] Created: latency-svc-nftxj
  I0104 12:54:44.937314 18 service_latency.go:363] Got endpoints: latency-svc-fw4hz [754.094087ms]
  I0104 12:54:44.953273 18 service_latency.go:356] Created: latency-svc-l2s57
  I0104 12:54:44.983098 18 service_latency.go:363] Got endpoints: latency-svc-k4dmv [751.097217ms]
  I0104 12:54:44.995723 18 service_latency.go:356] Created: latency-svc-jjt4w
  I0104 12:54:45.032796 18 service_latency.go:363] Got endpoints: latency-svc-bccsl [750.555088ms]
  I0104 12:54:45.045198 18 service_latency.go:356] Created: latency-svc-rq56h
  I0104 12:54:45.083435 18 service_latency.go:363] Got endpoints: latency-svc-gnh69 [748.316118ms]
  I0104 12:54:45.097101 18 service_latency.go:356] Created: latency-svc-7sk54
  I0104 12:54:45.132669 18 service_latency.go:363] Got endpoints: latency-svc-dhrd2 [747.395255ms]
  I0104 12:54:45.146926 18 service_latency.go:356] Created: latency-svc-vsngq
  I0104 12:54:45.184506 18 service_latency.go:363] Got endpoints: latency-svc-glrhc [749.944477ms]
  I0104 12:54:45.197481 18 service_latency.go:356] Created: latency-svc-gc8g9
  I0104 12:54:45.234243 18 service_latency.go:363] Got endpoints: latency-svc-dz6zk [751.186263ms]
  I0104 12:54:45.246711 18 service_latency.go:356] Created: latency-svc-hqr49
  I0104 12:54:45.283654 18 service_latency.go:363] Got endpoints: latency-svc-tmfjk [749.930716ms]
  I0104 12:54:45.296071 18 service_latency.go:356] Created: latency-svc-nkh8p
  I0104 12:54:45.331249 18 service_latency.go:363] Got endpoints: latency-svc-8mqzv [748.680007ms]
  I0104 12:54:45.345409 18 service_latency.go:356] Created: latency-svc-x6494
  I0104 12:54:45.383061 18 service_latency.go:363] Got endpoints: latency-svc-8wh8f [749.738992ms]
  I0104 12:54:45.397247 18 service_latency.go:356] Created: latency-svc-l2294
  I0104 12:54:45.435700 18 service_latency.go:363] Got endpoints: latency-svc-lqwkq [753.804109ms]
  I0104 12:54:45.448895 18 service_latency.go:356] Created: latency-svc-z9wtc
  I0104 12:54:45.482978 18 service_latency.go:363] Got endpoints: latency-svc-lvqjt [749.694016ms]
  I0104 12:54:45.494955 18 service_latency.go:356] Created: latency-svc-dndr9
  I0104 12:54:45.533317 18 service_latency.go:363] Got endpoints: latency-svc-s8xrg [747.603953ms]
  I0104 12:54:45.545127 18 service_latency.go:356] Created: latency-svc-pst4j
  I0104 12:54:45.582976 18 service_latency.go:363] Got endpoints: latency-svc-5z6rl [748.513377ms]
  I0104 12:54:45.596446 18 service_latency.go:356] Created: latency-svc-lz59g
  I0104 12:54:45.634923 18 service_latency.go:363] Got endpoints: latency-svc-nftxj [751.489148ms]
  I0104 12:54:45.648031 18 service_latency.go:356] Created: latency-svc-2xztk
  I0104 12:54:45.683506 18 service_latency.go:363] Got endpoints: latency-svc-l2s57 [746.137242ms]
  I0104 12:54:45.696230 18 service_latency.go:356] Created: latency-svc-zjn9g
  I0104 12:54:45.734131 18 service_latency.go:363] Got endpoints: latency-svc-jjt4w [750.98131ms]
  I0104 12:54:45.747930 18 service_latency.go:356] Created: latency-svc-br8s2
  I0104 12:54:45.781828 18 service_latency.go:363] Got endpoints: latency-svc-rq56h [748.97705ms]
  I0104 12:54:45.795902 18 service_latency.go:356] Created: latency-svc-m5s8l
  I0104 12:54:45.832822 18 service_latency.go:363] Got endpoints: latency-svc-7sk54 [749.333598ms]
  I0104 12:54:45.845330 18 service_latency.go:356] Created: latency-svc-2j6bt
  I0104 12:54:45.884540 18 service_latency.go:363] Got endpoints: latency-svc-vsngq [751.797256ms]
  I0104 12:54:45.898199 18 service_latency.go:356] Created: latency-svc-wb89j
  I0104 12:54:45.934426 18 service_latency.go:363] Got endpoints: latency-svc-gc8g9 [749.859379ms]
  I0104 12:54:45.947603 18 service_latency.go:356] Created: latency-svc-zjdl6
  I0104 12:54:45.984857 18 service_latency.go:363] Got endpoints: latency-svc-hqr49 [750.560034ms]
  I0104 12:54:45.998320 18 service_latency.go:356] Created: latency-svc-xdcl8
  I0104 12:54:46.033272 18 service_latency.go:363] Got endpoints: latency-svc-nkh8p [749.55106ms]
  I0104 12:54:46.045773 18 service_latency.go:356] Created: latency-svc-7f7d5
  I0104 12:54:46.081149 18 service_latency.go:363] Got endpoints: latency-svc-x6494 [749.840785ms]
  I0104 12:54:46.094312 18 service_latency.go:356] Created: latency-svc-sm7vk
  I0104 12:54:46.134046 18 service_latency.go:363] Got endpoints: latency-svc-l2294 [750.930024ms]
  I0104 12:54:46.147658 18 service_latency.go:356] Created: latency-svc-pr48f
  I0104 12:54:46.183559 18 service_latency.go:363] Got endpoints: latency-svc-z9wtc [747.802478ms]
  I0104 12:54:46.195167 18 service_latency.go:356] Created: latency-svc-tnjxc
  I0104 12:54:46.235056 18 service_latency.go:363] Got endpoints: latency-svc-dndr9 [752.027399ms]
  I0104 12:54:46.247784 18 service_latency.go:356] Created: latency-svc-87w55
  I0104 12:54:46.283520 18 service_latency.go:363] Got endpoints: latency-svc-pst4j [750.115296ms]
  I0104 12:54:46.297139 18 service_latency.go:356] Created: latency-svc-rfbk5
  I0104 12:54:46.331896 18 service_latency.go:363] Got endpoints: latency-svc-lz59g [748.858035ms]
  I0104 12:54:46.345795 18 service_latency.go:356] Created: latency-svc-t78j2
  I0104 12:54:46.382403 18 service_latency.go:363] Got endpoints: latency-svc-2xztk [747.228901ms]
  I0104 12:54:46.395536 18 service_latency.go:356] Created: latency-svc-q674q
  I0104 12:54:46.434109 18 service_latency.go:363] Got endpoints: latency-svc-zjn9g [750.550507ms]
  I0104 12:54:46.446164 18 service_latency.go:356] Created: latency-svc-69g7t
  I0104 12:54:46.484054 18 service_latency.go:363] Got endpoints: latency-svc-br8s2 [749.875624ms]
  I0104 12:54:46.496388 18 service_latency.go:356] Created: latency-svc-mnk29
  I0104 12:54:46.533423 18 service_latency.go:363] Got endpoints: latency-svc-m5s8l [751.549765ms]
  I0104 12:54:46.545819 18 service_latency.go:356] Created: latency-svc-vhtx6
  I0104 12:54:46.584550 18 service_latency.go:363] Got endpoints: latency-svc-2j6bt [751.677068ms]
  I0104 12:54:46.597758 18 service_latency.go:356] Created: latency-svc-tpssj
  I0104 12:54:46.632788 18 service_latency.go:363] Got endpoints: latency-svc-wb89j [748.187596ms]
  I0104 12:54:46.644389 18 service_latency.go:356] Created: latency-svc-htqbc
  I0104 12:54:46.684401 18 service_latency.go:363] Got endpoints: latency-svc-zjdl6 [749.920529ms]
  I0104 12:54:46.696231 18 service_latency.go:356] Created: latency-svc-np749
  I0104 12:54:46.733600 18 service_latency.go:363] Got endpoints: latency-svc-xdcl8 [748.690423ms]
  I0104 12:54:46.745419 18 service_latency.go:356] Created: latency-svc-mpskr
  I0104 12:54:46.784465 18 service_latency.go:363] Got endpoints: latency-svc-7f7d5 [751.1401ms]
  I0104 12:54:46.798561 18 service_latency.go:356] Created: latency-svc-r4j5b
  I0104 12:54:46.837164 18 service_latency.go:363] Got endpoints: latency-svc-sm7vk [755.955665ms]
  I0104 12:54:46.851528 18 service_latency.go:356] Created: latency-svc-nkc8x
  I0104 12:54:46.888395 18 service_latency.go:363] Got endpoints: latency-svc-pr48f [754.298365ms]
  I0104 12:54:46.898798 18 service_latency.go:356] Created: latency-svc-prrww
  I0104 12:54:46.934711 18 service_latency.go:363] Got endpoints: latency-svc-tnjxc [751.097031ms]
  I0104 12:54:46.949183 18 service_latency.go:356] Created: latency-svc-bq9hf
  I0104 12:54:46.982116 18 service_latency.go:363] Got endpoints: latency-svc-87w55 [747.001836ms]
  I0104 12:54:46.995564 18 service_latency.go:356] Created: latency-svc-wj48f
  I0104 12:54:47.033128 18 service_latency.go:363] Got endpoints: latency-svc-rfbk5 [749.554809ms]
  I0104 12:54:47.048994 18 service_latency.go:356] Created: latency-svc-6nhjd
  I0104 12:54:47.085884 18 service_latency.go:363] Got endpoints: latency-svc-t78j2 [753.920595ms]
  I0104 12:54:47.098421 18 service_latency.go:356] Created: latency-svc-m25hs
  I0104 12:54:47.132933 18 service_latency.go:363] Got endpoints: latency-svc-q674q [750.476056ms]
  I0104 12:54:47.150777 18 service_latency.go:356] Created: latency-svc-q5mqv
  I0104 12:54:47.182658 18 service_latency.go:363] Got endpoints: latency-svc-69g7t [748.388914ms]
  I0104 12:54:47.197283 18 service_latency.go:356] Created: latency-svc-fhmg8
  I0104 12:54:47.237822 18 service_latency.go:363] Got endpoints: latency-svc-mnk29 [753.711483ms]
  I0104 12:54:47.252237 18 service_latency.go:356] Created: latency-svc-lc7tn
  I0104 12:54:47.284465 18 service_latency.go:363] Got endpoints: latency-svc-vhtx6 [750.718187ms]
  I0104 12:54:47.295029 18 service_latency.go:356] Created: latency-svc-5mfmt
  I0104 12:54:47.332018 18 service_latency.go:363] Got endpoints: latency-svc-tpssj [747.415296ms]
  I0104 12:54:47.345281 18 service_latency.go:356] Created: latency-svc-7rjm2
  I0104 12:54:47.384651 18 service_latency.go:363] Got endpoints: latency-svc-htqbc [751.806402ms]
  I0104 12:54:47.400511 18 service_latency.go:356] Created: latency-svc-z9pk7
  I0104 12:54:47.433314 18 service_latency.go:363] Got endpoints: latency-svc-np749 [748.858142ms]
  I0104 12:54:47.443958 18 service_latency.go:356] Created: latency-svc-g4v68
  I0104 12:54:47.483768 18 service_latency.go:363] Got endpoints: latency-svc-mpskr [750.115022ms]
  I0104 12:54:47.497095 18 service_latency.go:356] Created: latency-svc-xnxjz
  I0104 12:54:47.533725 18 service_latency.go:363] Got endpoints: latency-svc-r4j5b [749.209307ms]
  I0104 12:54:47.549146 18 service_latency.go:356] Created: latency-svc-stdrx
  I0104 12:54:47.581916 18 service_latency.go:363] Got endpoints: latency-svc-nkc8x [744.700895ms]
  I0104 12:54:47.593511 18 service_latency.go:356] Created: latency-svc-g8xvn
  I0104 12:54:47.633019 18 service_latency.go:363] Got endpoints: latency-svc-prrww [744.567276ms]
  I0104 12:54:47.646293 18 service_latency.go:356] Created: latency-svc-p27lg
  I0104 12:54:47.683625 18 service_latency.go:363] Got endpoints: latency-svc-bq9hf [748.86045ms]
  I0104 12:54:47.698092 18 service_latency.go:356] Created: latency-svc-c7qc5
  I0104 12:54:47.734211 18 service_latency.go:363] Got endpoints: latency-svc-wj48f [752.042637ms]
  I0104 12:54:47.744871 18 service_latency.go:356] Created: latency-svc-6cpbf
  I0104 12:54:47.784008 18 service_latency.go:363] Got endpoints: latency-svc-6nhjd [750.827819ms]
  I0104 12:54:47.797016 18 service_latency.go:356] Created: latency-svc-rkjx5
  I0104 12:54:47.832707 18 service_latency.go:363] Got endpoints: latency-svc-m25hs [746.764521ms]
  I0104 12:54:47.846493 18 service_latency.go:356] Created: latency-svc-tk2sj
  I0104 12:54:47.882938 18 service_latency.go:363] Got endpoints: latency-svc-q5mqv [749.952043ms]
  I0104 12:54:47.895951 18 service_latency.go:356] Created: latency-svc-6x24m
  I0104 12:54:47.932724 18 service_latency.go:363] Got endpoints: latency-svc-fhmg8 [749.990776ms]
  I0104 12:54:47.944364 18 service_latency.go:356] Created: latency-svc-m4wzp
  I0104 12:54:47.983468 18 service_latency.go:363] Got endpoints: latency-svc-lc7tn [745.548008ms]
  I0104 12:54:47.998034 18 service_latency.go:356] Created: latency-svc-8nxbm
  I0104 12:54:48.033320 18 service_latency.go:363] Got endpoints: latency-svc-5mfmt [748.802358ms]
  I0104 12:54:48.045874 18 service_latency.go:356] Created: latency-svc-bcpwq
  I0104 12:54:48.082443 18 service_latency.go:363] Got endpoints: latency-svc-7rjm2 [750.380846ms]
  I0104 12:54:48.095192 18 service_latency.go:356] Created: latency-svc-8qnvw
  I0104 12:54:48.133512 18 service_latency.go:363] Got endpoints: latency-svc-z9pk7 [748.772573ms]
  I0104 12:54:48.148856 18 service_latency.go:356] Created: latency-svc-hbmj9
  I0104 12:54:48.183014 18 service_latency.go:363] Got endpoints: latency-svc-g4v68 [749.618034ms]
  I0104 12:54:48.193070 18 service_latency.go:356] Created: latency-svc-778jn
  I0104 12:54:48.232380 18 service_latency.go:363] Got endpoints: latency-svc-xnxjz [748.560391ms]
  I0104 12:54:48.245590 18 service_latency.go:356] Created: latency-svc-pdwnq
  I0104 12:54:48.283849 18 service_latency.go:363] Got endpoints: latency-svc-stdrx [750.071984ms]
  I0104 12:54:48.298386 18 service_latency.go:356] Created: latency-svc-hs6pp
  I0104 12:54:48.334820 18 service_latency.go:363] Got endpoints: latency-svc-g8xvn [752.842695ms]
  I0104 12:54:48.345741 18 service_latency.go:356] Created: latency-svc-xjc4d
  I0104 12:54:48.383039 18 service_latency.go:363] Got endpoints: latency-svc-p27lg [749.952661ms]
  I0104 12:54:48.396571 18 service_latency.go:356] Created: latency-svc-5k98l
  I0104 12:54:48.433375 18 service_latency.go:363] Got endpoints: latency-svc-c7qc5 [749.670346ms]
  I0104 12:54:48.448985 18 service_latency.go:356] Created: latency-svc-52pfp
  I0104 12:54:48.484203 18 service_latency.go:363] Got endpoints: latency-svc-6cpbf [749.941074ms]
  I0104 12:54:48.495235 18 service_latency.go:356] Created: latency-svc-blnkn
  I0104 12:54:48.534317 18 service_latency.go:363] Got endpoints: latency-svc-rkjx5 [750.261511ms]
  I0104 12:54:48.547825 18 service_latency.go:356] Created: latency-svc-fdk2g
  I0104 12:54:48.584429 18 service_latency.go:363] Got endpoints: latency-svc-tk2sj [751.674644ms]
  I0104 12:54:48.599771 18 service_latency.go:356] Created: latency-svc-v5mv7
  I0104 12:54:48.633402 18 service_latency.go:363] Got endpoints: latency-svc-6x24m [750.414907ms]
  I0104 12:54:48.644723 18 service_latency.go:356] Created: latency-svc-fxqsj
  I0104 12:54:48.685237 18 service_latency.go:363] Got endpoints: latency-svc-m4wzp [752.463703ms]
  I0104 12:54:48.701478 18 service_latency.go:356] Created: latency-svc-2zfxz
  I0104 12:54:48.734849 18 service_latency.go:363] Got endpoints: latency-svc-8nxbm [751.326593ms]
  I0104 12:54:48.748615 18 service_latency.go:356] Created: latency-svc-c4bpd
  I0104 12:54:48.783380 18 service_latency.go:363] Got endpoints: latency-svc-bcpwq [749.98502ms]
  I0104 12:54:48.796803 18 service_latency.go:356] Created: latency-svc-tv5sm
  I0104 12:54:48.833541 18 service_latency.go:363] Got endpoints: latency-svc-8qnvw [751.022866ms]
  I0104 12:54:48.848455 18 service_latency.go:356] Created: latency-svc-kzx6d
  I0104 12:54:48.882877 18 service_latency.go:363] Got endpoints: latency-svc-hbmj9 [749.314404ms]
  I0104 12:54:48.898188 18 service_latency.go:356] Created: latency-svc-kgm5b
  I0104 12:54:48.934588 18 service_latency.go:363] Got endpoints: latency-svc-778jn [751.521059ms]
  I0104 12:54:48.945261 18 service_latency.go:356] Created: latency-svc-vskth
  I0104 12:54:48.982103 18 service_latency.go:363] Got endpoints: latency-svc-pdwnq [749.675608ms]
  I0104 12:54:48.996735 18 service_latency.go:356] Created: latency-svc-lpg5x
  I0104 12:54:49.033966 18 service_latency.go:363] Got endpoints: latency-svc-hs6pp [750.066408ms]
  I0104 12:54:49.047491 18 service_latency.go:356] Created: latency-svc-bznmq
  I0104 12:54:49.085139 18 service_latency.go:363] Got endpoints: latency-svc-xjc4d [750.25263ms]
  I0104 12:54:49.095815 18 service_latency.go:356] Created: latency-svc-dp7nc
  I0104 12:54:49.132813 18 service_latency.go:363] Got endpoints: latency-svc-5k98l [749.690122ms]
  I0104 12:54:49.144535 18 service_latency.go:356] Created: latency-svc-697th
  I0104 12:54:49.183574 18 service_latency.go:363] Got endpoints: latency-svc-52pfp [750.145979ms]
  I0104 12:54:49.198696 18 service_latency.go:356] Created: latency-svc-qrxpn
  I0104 12:54:49.232598 18 service_latency.go:363] Got endpoints: latency-svc-blnkn [748.343776ms]
  I0104 12:54:49.243344 18 service_latency.go:356] Created: latency-svc-t6pbh
  I0104 12:54:49.282523 18 service_latency.go:363] Got endpoints: latency-svc-fdk2g [748.156914ms]
  I0104 12:54:49.294818 18 service_latency.go:356] Created: latency-svc-8tnwc
  I0104 12:54:49.333389 18 service_latency.go:363] Got endpoints: latency-svc-v5mv7 [748.899145ms]
  I0104 12:54:49.347359 18 service_latency.go:356] Created: latency-svc-frp7s
  I0104 12:54:49.383095 18 service_latency.go:363] Got endpoints: latency-svc-fxqsj [749.635947ms]
  I0104 12:54:49.393279 18 service_latency.go:356] Created: latency-svc-4tv9h
  I0104 12:54:49.432965 18 service_latency.go:363] Got endpoints: latency-svc-2zfxz [747.675793ms]
  I0104 12:54:49.445785 18 service_latency.go:356] Created: latency-svc-ckqdb
  I0104 12:54:49.482624 18 service_latency.go:363] Got endpoints: latency-svc-c4bpd [747.699652ms]
  I0104 12:54:49.496455 18 service_latency.go:356] Created: latency-svc-hkcn6
  I0104 12:54:49.534455 18 service_latency.go:363] Got endpoints: latency-svc-tv5sm [751.023135ms]
  I0104 12:54:49.545002 18 service_latency.go:356] Created: latency-svc-z52wd
  I0104 12:54:49.584267 18 service_latency.go:363] Got endpoints: latency-svc-kzx6d [750.665924ms]
  I0104 12:54:49.595632 18 service_latency.go:356] Created: latency-svc-97c84
  I0104 12:54:49.633738 18 service_latency.go:363] Got endpoints: latency-svc-kgm5b [750.809002ms]
  I0104 12:54:49.649209 18 service_latency.go:356] Created: latency-svc-bthrc
  I0104 12:54:49.682823 18 service_latency.go:363] Got endpoints: latency-svc-vskth [748.179867ms]
  I0104 12:54:49.696789 18 service_latency.go:356] Created: latency-svc-rtr9k
  I0104 12:54:49.733568 18 service_latency.go:363] Got endpoints: latency-svc-lpg5x [751.410641ms]
  I0104 12:54:49.745614 18 service_latency.go:356] Created: latency-svc-fl8ch
  I0104 12:54:49.783379 18 service_latency.go:363] Got endpoints: latency-svc-bznmq [749.348337ms]
  I0104 12:54:49.797841 18 service_latency.go:356] Created: latency-svc-bmflp
  I0104 12:54:49.832550 18 service_latency.go:363] Got endpoints: latency-svc-dp7nc [747.354615ms]
  I0104 12:54:49.843430 18 service_latency.go:356] Created: latency-svc-fd569
  I0104 12:54:49.885219 18 service_latency.go:363] Got endpoints: latency-svc-697th [752.311545ms]
  I0104 12:54:49.898171 18 service_latency.go:356] Created: latency-svc-28vs6
  I0104 12:54:49.933037 18 service_latency.go:363] Got endpoints: latency-svc-qrxpn [749.40721ms]
  I0104 12:54:49.947912 18 service_latency.go:356] Created: latency-svc-pxdnl
  I0104 12:54:49.983362 18 service_latency.go:363] Got endpoints: latency-svc-t6pbh [750.710462ms]
  I0104 12:54:49.995703 18 service_latency.go:356] Created: latency-svc-mq7q8
  I0104 12:54:50.034398 18 service_latency.go:363] Got endpoints: latency-svc-8tnwc [751.819727ms]
  I0104 12:54:50.046618 18 service_latency.go:356] Created: latency-svc-gtzmr
  I0104 12:54:50.083245 18 service_latency.go:363] Got endpoints: latency-svc-frp7s [749.805446ms]
  I0104 12:54:50.096710 18 service_latency.go:356] Created: latency-svc-brg2z
  I0104 12:54:50.132812 18 service_latency.go:363] Got endpoints: latency-svc-4tv9h [749.662453ms]
  I0104 12:54:50.146076 18 service_latency.go:356] Created: latency-svc-dv9c6
  I0104 12:54:50.183781 18 service_latency.go:363] Got endpoints: latency-svc-ckqdb [750.759037ms]
  I0104 12:54:50.198298 18 service_latency.go:356] Created: latency-svc-z75cd
  I0104 12:54:50.232915 18 service_latency.go:363] Got endpoints: latency-svc-hkcn6 [750.21629ms]
  I0104 12:54:50.246825 18 service_latency.go:356] Created: latency-svc-kw64v
  I0104 12:54:50.283305 18 service_latency.go:363] Got endpoints: latency-svc-z52wd [748.801297ms]
  I0104 12:54:50.295032 18 service_latency.go:356] Created: latency-svc-5mbnv
  I0104 12:54:50.333738 18 service_latency.go:363] Got endpoints: latency-svc-97c84 [749.423366ms]
  I0104 12:54:50.346107 18 service_latency.go:356] Created: latency-svc-54d5z
  I0104 12:54:50.385115 18 service_latency.go:363] Got endpoints: latency-svc-bthrc [751.322405ms]
  I0104 12:54:50.400174 18 service_latency.go:356] Created: latency-svc-sgvhj
  I0104 12:54:50.433308 18 service_latency.go:363] Got endpoints: latency-svc-rtr9k [750.428562ms]
  I0104 12:54:50.443956 18 service_latency.go:356] Created: latency-svc-pt4cx
  I0104 12:54:50.483174 18 service_latency.go:363] Got endpoints: latency-svc-fl8ch [749.551358ms]
  I0104 12:54:50.495336 18 service_latency.go:356] Created: latency-svc-8mfwj
  I0104 12:54:50.533437 18 service_latency.go:363] Got endpoints: latency-svc-bmflp [749.987829ms]
  I0104 12:54:50.547669 18 service_latency.go:356] Created: latency-svc-9pf68
  I0104 12:54:50.582383 18 service_latency.go:363] Got endpoints: latency-svc-fd569 [749.782781ms]
  I0104 12:54:50.594047 18 service_latency.go:356] Created: latency-svc-smpkt
  I0104 12:54:50.633749 18 service_latency.go:363] Got endpoints: latency-svc-28vs6 [748.478729ms]
  I0104 12:54:50.647243 18 service_latency.go:356] Created: latency-svc-7wp9w
  I0104 12:54:50.684119 18 service_latency.go:363] Got endpoints: latency-svc-pxdnl [750.887783ms]
  I0104 12:54:50.698739 18 service_latency.go:356] Created: latency-svc-7wl9s
  I0104 12:54:50.731026 18 service_latency.go:363] Got endpoints: latency-svc-mq7q8 [747.607661ms]
  I0104 12:54:50.742719 18 service_latency.go:356] Created: latency-svc-ck7j4
  I0104 12:54:50.784610 18 service_latency.go:363] Got endpoints: latency-svc-gtzmr [749.976466ms]
  I0104 12:54:50.796540 18 service_latency.go:356] Created: latency-svc-cllmn
  I0104 12:54:50.833001 18 service_latency.go:363] Got endpoints: latency-svc-brg2z [749.701737ms]
  I0104 12:54:50.884143 18 service_latency.go:363] Got endpoints: latency-svc-dv9c6 [751.260098ms]
  I0104 12:54:50.933298 18 service_latency.go:363] Got endpoints: latency-svc-z75cd [749.427405ms]
  I0104 12:54:50.986334 18 service_latency.go:363] Got endpoints: latency-svc-kw64v [753.375244ms]
  I0104 12:54:51.033553 18 service_latency.go:363] Got endpoints: latency-svc-5mbnv [750.192128ms]
  I0104 12:54:51.085895 18 service_latency.go:363] Got endpoints: latency-svc-54d5z [752.102763ms]
  I0104 12:54:51.134987 18 service_latency.go:363] Got endpoints: latency-svc-sgvhj [749.807991ms]
  I0104 12:54:51.183902 18 service_latency.go:363] Got endpoints: latency-svc-pt4cx [750.542632ms]
  I0104 12:54:51.234129 18 service_latency.go:363] Got endpoints: latency-svc-8mfwj [750.907153ms]
  I0104 12:54:51.285092 18 service_latency.go:363] Got endpoints: latency-svc-9pf68 [751.605685ms]
  I0104 12:54:51.336279 18 service_latency.go:363] Got endpoints: latency-svc-smpkt [753.839169ms]
  I0104 12:54:51.383116 18 service_latency.go:363] Got endpoints: latency-svc-7wp9w [749.292764ms]
  I0104 12:54:51.433910 18 service_latency.go:363] Got endpoints: latency-svc-7wl9s [749.741167ms]
  I0104 12:54:51.484708 18 service_latency.go:363] Got endpoints: latency-svc-ck7j4 [753.62386ms]
  I0104 12:54:51.533266 18 service_latency.go:363] Got endpoints: latency-svc-cllmn [748.598032ms]
  I0104 12:54:51.533367 18 service_latency.go:114] Latencies: [24.443148ms 28.732642ms 37.793622ms 53.514938ms 54.131334ms 56.601431ms 56.645414ms 62.226587ms 69.009037ms 74.684311ms 76.304324ms 84.260942ms 87.628905ms 96.716282ms 104.706842ms 112.497861ms 124.703853ms 124.80274ms 126.408935ms 135.608231ms 149.203805ms 149.668865ms 150.825491ms 154.127979ms 159.183951ms 173.752554ms 174.284286ms 188.568481ms 189.906675ms 191.529263ms 219.24781ms 220.432804ms 223.758302ms 226.909042ms 234.463361ms 257.561656ms 260.188126ms 271.610904ms 274.39678ms 275.768505ms 283.014857ms 323.202552ms 359.364125ms 401.544158ms 454.224863ms 503.89761ms 549.142318ms 592.867435ms 634.367123ms 671.803195ms 714.133767ms 744.567276ms 744.700895ms 745.548008ms 746.137242ms 746.764521ms 747.001836ms 747.228901ms 747.354615ms 747.395255ms 747.415296ms 747.603953ms 747.607661ms 747.675793ms 747.699652ms 747.802478ms 748.156914ms 748.179867ms 748.187596ms 748.316118ms 748.343776ms 748.388914ms 748.402933ms 748.478729ms 748.513377ms 748.541606ms 748.560391ms 748.598032ms 748.611088ms 748.680007ms 748.690423ms 748.772573ms 748.801297ms 748.802358ms 748.858035ms 748.858142ms 748.86045ms 748.899145ms 748.97705ms 749.116871ms 749.209307ms 749.292764ms 749.314404ms 749.333598ms 749.348337ms 749.369113ms 749.40721ms 749.423366ms 749.427405ms 749.494994ms 749.55106ms 749.551358ms 749.554809ms 749.614644ms 749.618034ms 749.635947ms 749.661243ms 749.661635ms 749.662453ms 749.670346ms 749.675608ms 749.690122ms 749.694016ms 749.701737ms 749.738992ms 749.741167ms 749.782781ms 749.805446ms 749.807991ms 749.840785ms 749.859379ms 749.875624ms 749.920529ms 749.930716ms 749.941074ms 749.944477ms 749.952043ms 749.952661ms 749.976466ms 749.983044ms 749.98502ms 749.987829ms 749.990776ms 750.066408ms 750.071984ms 750.115022ms 750.115296ms 750.145979ms 750.192128ms 750.21629ms 750.25263ms 750.261511ms 750.380846ms 750.414907ms 750.428562ms 750.476056ms 750.485637ms 750.542632ms 750.550507ms 750.555088ms 750.560034ms 750.665924ms 750.710462ms 750.718187ms 750.759037ms 750.809002ms 750.827819ms 750.887783ms 750.890219ms 750.907153ms 750.930024ms 750.98131ms 751.022866ms 751.023135ms 751.097031ms 751.097217ms 751.1401ms 751.186263ms 751.260098ms 751.28238ms 751.322405ms 751.326593ms 751.351717ms 751.410641ms 751.489148ms 751.521059ms 751.549765ms 751.605685ms 751.646669ms 751.674644ms 751.677068ms 751.797256ms 751.806402ms 751.819727ms 752.027399ms 752.042637ms 752.102763ms 752.306029ms 752.311545ms 752.463703ms 752.842695ms 753.375244ms 753.62386ms 753.711483ms 753.804109ms 753.839169ms 753.920595ms 754.094087ms 754.298365ms 755.955665ms]
  I0104 12:54:51.533380 18 service_latency.go:118] 50 %ile: 749.55106ms
  I0104 12:54:51.533387 18 service_latency.go:119] 90 %ile: 751.677068ms
  I0104 12:54:51.533393 18 service_latency.go:120] 99 %ile: 754.298365ms
  I0104 12:54:51.533399 18 service_latency.go:121] Total sample count: 200
  I0104 12:54:51.533619 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8341" for this suite. @ 01/04/25 12:54:51.539
• [9.772 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/04/25 12:54:51.548
  I0104 12:54:51.548648 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 12:54:51.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:51.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:51.569
  I0104 12:54:51.572612 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: creating the pod @ 01/04/25 12:54:51.573
  STEP: submitting the pod to kubernetes @ 01/04/25 12:54:51.573
  I0104 12:54:53.651791 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6848" for this suite. @ 01/04/25 12:54:53.657
• [2.120 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/04/25 12:54:53.669
  I0104 12:54:53.669087 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename endpointslice @ 01/04/25 12:54:53.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:53.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:53.691
  STEP: getting /apis @ 01/04/25 12:54:53.694
  STEP: getting /apis/discovery.k8s.io @ 01/04/25 12:54:53.698
  STEP: getting /apis/discovery.k8s.iov1 @ 01/04/25 12:54:53.699
  STEP: creating @ 01/04/25 12:54:53.7
  STEP: getting @ 01/04/25 12:54:53.717
  STEP: listing @ 01/04/25 12:54:53.72
  STEP: watching @ 01/04/25 12:54:53.724
  I0104 12:54:53.724997 18 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/04/25 12:54:53.726
  STEP: cluster-wide watching @ 01/04/25 12:54:53.733
  I0104 12:54:53.733910 18 endpointslice.go:459] starting watch
  STEP: patching @ 01/04/25 12:54:53.735
  STEP: updating @ 01/04/25 12:54:53.741
  I0104 12:54:53.752387 18 endpointslice.go:482] waiting for watch events with expected annotations
  I0104 12:54:53.752424 18 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/04/25 12:54:53.752
  STEP: deleting a collection @ 01/04/25 12:54:53.766
  I0104 12:54:53.788467 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8272" for this suite. @ 01/04/25 12:54:53.793
• [0.135 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 01/04/25 12:54:53.804
  I0104 12:54:53.804213 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption @ 01/04/25 12:54:53.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:54:53.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:54:53.824
  I0104 12:54:53.847239 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0104 12:55:53.854393 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/04/25 12:55:53.859
  I0104 12:55:53.884997 18 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0104 12:55:53.893434 18 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0104 12:55:53.914348 18 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0104 12:55:53.923943 18 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I0104 12:55:53.948281 18 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I0104 12:55:53.964978 18 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/04/25 12:55:53.965
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/04/25 12:55:55.998
  I0104 12:56:00.131465 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6745" for this suite. @ 01/04/25 12:56:00.137
• [66.342 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/04/25 12:56:00.146
  I0104 12:56:00.146728 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:56:00.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:00.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:00.166
  STEP: Creating projection with secret that has name projected-secret-test-f01dffd3-e5a0-49ef-a6d5-2486daaf39b9 @ 01/04/25 12:56:00.169
  STEP: Creating a pod to test consume secrets @ 01/04/25 12:56:00.176
  STEP: Saw pod success @ 01/04/25 12:56:02.198
  I0104 12:56:02.203662 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-secrets-64605c54-8c34-4224-9bed-fc3d53f15fb7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 12:56:02.216
  I0104 12:56:02.236717 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-847" for this suite. @ 01/04/25 12:56:02.242
• [2.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/04/25 12:56:02.25
  I0104 12:56:02.250303 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 12:56:02.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:02.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:02.271
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/04/25 12:56:02.274
  STEP: Saw pod success @ 01/04/25 12:56:04.298
  I0104 12:56:04.303454 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-88ccf0a3-70a5-4e49-b3b8-dcad7f1390f4 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 12:56:04.311
  I0104 12:56:04.329832 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-632" for this suite. @ 01/04/25 12:56:04.333
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/04/25 12:56:04.341
  I0104 12:56:04.341868 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename controllerrevisions @ 01/04/25 12:56:04.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:04.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:04.359
  STEP: Creating DaemonSet "e2e-zvnln-daemon-set" @ 01/04/25 12:56:04.39
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/04/25 12:56:04.395
  I0104 12:56:04.403595 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:56:04.403633 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:56:04.407822 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zvnln-daemon-set: 0
  I0104 12:56:04.407843 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:56:05.405204 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:56:05.405252 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:56:05.414393 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zvnln-daemon-set: 0
  I0104 12:56:05.414431 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 12:56:06.401547 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:56:06.401591 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 12:56:06.404433 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zvnln-daemon-set: 3
  I0104 12:56:06.404453 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-zvnln-daemon-set
  STEP: Confirm DaemonSet "e2e-zvnln-daemon-set" successfully created with "daemonset-name=e2e-zvnln-daemon-set" label @ 01/04/25 12:56:06.408
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zvnln-daemon-set" @ 01/04/25 12:56:06.415
  I0104 12:56:06.420311 18 controller_revision.go:162] Located ControllerRevision: "e2e-zvnln-daemon-set-6f4bcf4dd8"
  STEP: Patching ControllerRevision "e2e-zvnln-daemon-set-6f4bcf4dd8" @ 01/04/25 12:56:06.425
  I0104 12:56:06.433878 18 controller_revision.go:173] e2e-zvnln-daemon-set-6f4bcf4dd8 has been patched
  STEP: Create a new ControllerRevision @ 01/04/25 12:56:06.433
  I0104 12:56:06.439901 18 controller_revision.go:191] Created ControllerRevision: e2e-zvnln-daemon-set-7b94bd8c4b
  STEP: Confirm that there are two ControllerRevisions @ 01/04/25 12:56:06.439
  I0104 12:56:06.439957 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0104 12:56:06.443142 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zvnln-daemon-set-6f4bcf4dd8" @ 01/04/25 12:56:06.443
  STEP: Confirm that there is only one ControllerRevision @ 01/04/25 12:56:06.451
  I0104 12:56:06.451811 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0104 12:56:06.454875 18 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zvnln-daemon-set-7b94bd8c4b" @ 01/04/25 12:56:06.459
  I0104 12:56:06.470667 18 controller_revision.go:220] e2e-zvnln-daemon-set-7b94bd8c4b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/04/25 12:56:06.47
  W0104 12:56:06.478816      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/04/25 12:56:06.478
  I0104 12:56:06.478938 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0104 12:56:07.479033 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0104 12:56:07.484720 18 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zvnln-daemon-set-7b94bd8c4b=updated" @ 01/04/25 12:56:07.484
  STEP: Confirm that there is only one ControllerRevision @ 01/04/25 12:56:07.499
  I0104 12:56:07.499294 18 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0104 12:56:07.502175 18 controller_revision.go:265] Found 1 ControllerRevisions
  I0104 12:56:07.506131 18 controller_revision.go:246] ControllerRevision "e2e-zvnln-daemon-set-55455f97f9" has revision 3
  STEP: Deleting DaemonSet "e2e-zvnln-daemon-set" @ 01/04/25 12:56:07.509
  STEP: deleting DaemonSet.extensions e2e-zvnln-daemon-set in namespace controllerrevisions-9679, will wait for the garbage collector to delete the pods @ 01/04/25 12:56:07.509
  I0104 12:56:07.571985 18 resources.go:139] Deleting DaemonSet.extensions e2e-zvnln-daemon-set took: 8.417157ms
  I0104 12:56:07.672466 18 resources.go:163] Terminating DaemonSet.extensions e2e-zvnln-daemon-set pods took: 100.47487ms
  I0104 12:56:09.077154 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zvnln-daemon-set: 0
  I0104 12:56:09.077183 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zvnln-daemon-set
  I0104 12:56:09.081786 18 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26916"},"items":null}

  I0104 12:56:09.086446 18 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26916"},"items":null}

  I0104 12:56:09.104539 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9679" for this suite. @ 01/04/25 12:56:09.107
• [4.774 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/04/25 12:56:09.115
  I0104 12:56:09.115874 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 12:56:09.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:09.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:09.136
  STEP: Creating projection with secret that has name secret-emptykey-test-6a4def5c-10c2-413c-84c3-bb6b27abd0d2 @ 01/04/25 12:56:09.139
  I0104 12:56:09.140752 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-232" for this suite. @ 01/04/25 12:56:09.145
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/04/25 12:56:09.154
  I0104 12:56:09.154252 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:56:09.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:09.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:09.172
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 12:56:09.175
  STEP: Saw pod success @ 01/04/25 12:56:11.201
  I0104 12:56:11.204201 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-082ffe5b-8480-472c-aee4-5655e70d53dc container client-container: <nil>
  STEP: delete the pod @ 01/04/25 12:56:11.214
  I0104 12:56:11.236156 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1475" for this suite. @ 01/04/25 12:56:11.239
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/04/25 12:56:11.25
  I0104 12:56:11.250901 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:56:11.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:11.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:11.271
  STEP: Creating the pod @ 01/04/25 12:56:11.274
  I0104 12:56:13.824113 18 pod_client.go:173] Successfully updated pod "labelsupdate1846af5e-be6a-47d0-a061-88eb7d959423"
  I0104 12:56:17.856441 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7503" for this suite. @ 01/04/25 12:56:17.862
• [6.621 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/04/25 12:56:17.871
  I0104 12:56:17.871604 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replicaset @ 01/04/25 12:56:17.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:17.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:17.893
  I0104 12:56:17.911783 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0104 12:56:22.915172 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/04/25 12:56:22.915
  STEP: Scaling up "test-rs" replicaset @ 01/04/25 12:56:22.915
  I0104 12:56:22.924820 18 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/04/25 12:56:22.924
  I0104 12:56:22.936791 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6328 with ReadyReplicas 1, AvailableReplicas 1
  I0104 12:56:22.950510 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6328 with ReadyReplicas 1, AvailableReplicas 1
  I0104 12:56:22.963939 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6328 with ReadyReplicas 1, AvailableReplicas 1
  I0104 12:56:22.971549 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6328 with ReadyReplicas 1, AvailableReplicas 1
  I0104 12:56:23.614148 18 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6328 with ReadyReplicas 2, AvailableReplicas 2
  I0104 12:56:24.032347 18 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6328 with ReadyReplicas 3 found true
  I0104 12:56:24.032490 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6328" for this suite. @ 01/04/25 12:56:24.036
• [6.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 01/04/25 12:56:24.047
  I0104 12:56:24.047121 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename cronjob @ 01/04/25 12:56:24.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:24.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:24.071
  STEP: Creating a cronjob @ 01/04/25 12:56:24.074
  STEP: creating @ 01/04/25 12:56:24.074
  STEP: getting @ 01/04/25 12:56:24.082
  STEP: listing @ 01/04/25 12:56:24.085
  STEP: watching @ 01/04/25 12:56:24.09
  I0104 12:56:24.090219 18 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 01/04/25 12:56:24.091
  STEP: cluster-wide watching @ 01/04/25 12:56:24.096
  I0104 12:56:24.096057 18 cronjob.go:382] starting watch
  STEP: patching @ 01/04/25 12:56:24.097
  STEP: updating @ 01/04/25 12:56:24.104
  I0104 12:56:24.116016 18 cronjob.go:406] waiting for watch events with expected annotations
  I0104 12:56:24.116057 18 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 01/04/25 12:56:24.116
  STEP: updating /status @ 01/04/25 12:56:24.121
  STEP: get /status @ 01/04/25 12:56:24.13
  STEP: deleting @ 01/04/25 12:56:24.133
  STEP: deleting a collection @ 01/04/25 12:56:24.153
  I0104 12:56:24.169094 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6639" for this suite. @ 01/04/25 12:56:24.174
• [0.137 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/04/25 12:56:24.188
  I0104 12:56:24.188341 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 12:56:24.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:24.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:24.215
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/04/25 12:56:24.218
  I0104 12:56:24.218460 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:56:25.435248 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 12:56:30.468414 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-102" for this suite. @ 01/04/25 12:56:30.476
• [6.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/04/25 12:56:30.485
  I0104 12:56:30.485886 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 12:56:30.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:30.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:30.514
  I0104 12:56:30.560841 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2658" for this suite. @ 01/04/25 12:56:30.565
• [0.088 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/04/25 12:56:30.573
  I0104 12:56:30.573754 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename cronjob @ 01/04/25 12:56:30.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:56:30.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:56:30.599
  STEP: Creating a cronjob @ 01/04/25 12:56:30.601
  STEP: Ensuring more than one job is running at a time @ 01/04/25 12:56:30.607
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/04/25 12:58:00.613
  STEP: Removing cronjob @ 01/04/25 12:58:00.617
  I0104 12:58:00.626268 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5342" for this suite. @ 01/04/25 12:58:00.631
• [90.074 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/04/25 12:58:00.647
  I0104 12:58:00.647307 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubelet-test @ 01/04/25 12:58:00.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:00.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:00.676
  I0104 12:58:00.699267 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7970" for this suite. @ 01/04/25 12:58:00.703
• [0.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/04/25 12:58:00.714
  I0104 12:58:00.714116 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 12:58:00.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:00.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:00.736
  STEP: creating the pod @ 01/04/25 12:58:00.739
  STEP: submitting the pod to kubernetes @ 01/04/25 12:58:00.739
  W0104 12:58:00.749619      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 01/04/25 12:58:02.763
  STEP: updating the pod @ 01/04/25 12:58:02.768
  I0104 12:58:03.283250 18 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-d49c4957-81d2-4889-9b54-57d5b4b23b83"
  I0104 12:58:07.299639 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-622" for this suite. @ 01/04/25 12:58:07.304
• [6.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/04/25 12:58:07.313
  I0104 12:58:07.313062 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 12:58:07.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:07.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:07.337
  STEP: Creating a pod to test downward api env vars @ 01/04/25 12:58:07.339
  STEP: Saw pod success @ 01/04/25 12:58:11.367
  I0104 12:58:11.372391 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod downward-api-eb8f8089-e932-489e-9aef-9aa3eccad4f0 container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 12:58:11.392
  I0104 12:58:11.414472 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9456" for this suite. @ 01/04/25 12:58:11.419
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/04/25 12:58:11.429
  I0104 12:58:11.429168 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replicaset @ 01/04/25 12:58:11.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:11.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:11.458
  I0104 12:58:11.460944 18 replica_set.go:191] Creating ReplicaSet my-hostname-basic-94669970-9dbd-4bc5-a919-fb1cdeee0314
  I0104 12:58:11.473011 18 resource.go:87] Pod name my-hostname-basic-94669970-9dbd-4bc5-a919-fb1cdeee0314: Found 0 pods out of 1
  I0104 12:58:16.481015 18 resource.go:87] Pod name my-hostname-basic-94669970-9dbd-4bc5-a919-fb1cdeee0314: Found 1 pods out of 1
  I0104 12:58:16.481052 18 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-94669970-9dbd-4bc5-a919-fb1cdeee0314" is running
  I0104 12:58:16.487642 18 replica_set.go:220] Pod "my-hostname-basic-94669970-9dbd-4bc5-a919-fb1cdeee0314-kqntt" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 12:58:12 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 12:58:11 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 12:58:12 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 12:58:12 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 12:58:11 +0000 UTC Reason: Message:}])
  I0104 12:58:16.487687 18 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/04/25 12:58:16.487
  I0104 12:58:16.509300 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2002" for this suite. @ 01/04/25 12:58:16.515
• [5.093 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/04/25 12:58:16.522
  I0104 12:58:16.522300 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 12:58:16.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:16.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:16.549
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/04/25 12:58:16.552
  I0104 12:58:16.552231 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3006 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0104 12:58:16.605932 18 builder.go:146] stderr: ""
  I0104 12:58:16.605975 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/04/25 12:58:16.605
  I0104 12:58:16.606066 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3006 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0104 12:58:16.660192 18 builder.go:146] stderr: ""
  I0104 12:58:16.660230 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/04/25 12:58:16.66
  I0104 12:58:16.663900 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3006 delete pods e2e-test-httpd-pod'
  I0104 12:58:18.107890 18 builder.go:146] stderr: ""
  I0104 12:58:18.107928 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0104 12:58:18.108042 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3006" for this suite. @ 01/04/25 12:58:18.112
• [1.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/04/25 12:58:18.123
  I0104 12:58:18.123117 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename runtimeclass @ 01/04/25 12:58:18.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:18.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:18.147
  STEP: Deleting RuntimeClass runtimeclass-3495-delete-me @ 01/04/25 12:58:18.154
  STEP: Waiting for the RuntimeClass to disappear @ 01/04/25 12:58:18.162
  I0104 12:58:18.174944 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3495" for this suite. @ 01/04/25 12:58:18.179
• [0.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 01/04/25 12:58:18.187
  I0104 12:58:18.187119 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 12:58:18.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:18.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:18.211
  STEP: Creating service test in namespace statefulset-5327 @ 01/04/25 12:58:18.213
  STEP: Creating statefulset ss in namespace statefulset-5327 @ 01/04/25 12:58:18.229
  I0104 12:58:18.239181 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0104 12:58:28.242012 18 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/04/25 12:58:28.25
  STEP: Getting /status @ 01/04/25 12:58:28.26
  I0104 12:58:28.265875 18 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/04/25 12:58:28.265
  I0104 12:58:28.276257 18 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/04/25 12:58:28.276
  I0104 12:58:28.277790 18 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0104 12:58:28.277813 18 statefulset.go:1111] Found Statefulset ss in namespace statefulset-5327 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 12:58:28.277822 18 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/04/25 12:58:28.277
  I0104 12:58:28.277848 18 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0104 12:58:28.285864 18 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/04/25 12:58:28.285
  I0104 12:58:28.287319 18 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0104 12:58:28.287346 18 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-5327 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 12:58:28.287439 18 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I0104 12:58:28.287502 18 statefulset.go:138] Deleting all statefulset in ns statefulset-5327
  I0104 12:58:28.291515 18 rest.go:150] Scaling statefulset ss to 0
  I0104 12:58:38.308253 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 12:58:38.312659 18 rest.go:88] Deleting statefulset ss
  I0104 12:58:38.330281 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5327" for this suite. @ 01/04/25 12:58:38.335
• [20.158 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 01/04/25 12:58:38.345
  I0104 12:58:38.345242 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 12:58:38.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:38.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:38.366
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/04/25 12:58:38.369
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/04/25 12:58:38.369
  STEP: creating a pod to probe DNS @ 01/04/25 12:58:38.369
  STEP: submitting the pod to kubernetes @ 01/04/25 12:58:38.369
  STEP: retrieving the pod @ 01/04/25 12:58:40.393
  STEP: looking for the results for each expected name from probers @ 01/04/25 12:58:40.397
  I0104 12:58:40.418385 18 dns_common.go:527] DNS probes using dns-4641/dns-test-708217f6-41d1-4ddd-b77b-241703b7b2a5 succeeded

  STEP: deleting the pod @ 01/04/25 12:58:40.418
  I0104 12:58:40.437597 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4641" for this suite. @ 01/04/25 12:58:40.443
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/04/25 12:58:40.453
  I0104 12:58:40.453924 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 12:58:40.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 12:58:40.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 12:58:40.48
  STEP: Creating configMap with name cm-test-opt-del-2b5f9e8c-2396-48a6-a401-e5b4245d8ae8 @ 01/04/25 12:58:40.487
  STEP: Creating configMap with name cm-test-opt-upd-d34d6571-3f93-48ea-a30e-2b2406c198fb @ 01/04/25 12:58:40.492
  STEP: Creating the pod @ 01/04/25 12:58:40.499
  STEP: Deleting configmap cm-test-opt-del-2b5f9e8c-2396-48a6-a401-e5b4245d8ae8 @ 01/04/25 12:58:42.566
  STEP: Updating configmap cm-test-opt-upd-d34d6571-3f93-48ea-a30e-2b2406c198fb @ 01/04/25 12:58:42.574
  STEP: Creating configMap with name cm-test-opt-create-b08b6ff6-cd3b-4a0f-a20c-03fe2f092110 @ 01/04/25 12:58:42.582
  STEP: waiting to observe update in volume @ 01/04/25 12:58:42.587
  I0104 13:00:11.062146 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6145" for this suite. @ 01/04/25 13:00:11.066
• [90.623 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 01/04/25 13:00:11.076
  I0104 13:00:11.077006 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption @ 01/04/25 13:00:11.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:00:11.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:00:11.104
  I0104 13:00:11.127041 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0104 13:01:11.133324 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/04/25 13:01:11.137
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/04/25 13:01:11.146
  I0104 13:01:11.160694 18 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/04/25 13:01:11.16
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/04/25 13:01:13.171
  I0104 13:01:13.178815 18 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/04/25 13:01:13.178
  STEP: Verifying the pod has the pod disruption condition @ 01/04/25 13:01:15.187
  I0104 13:01:15.191877 18 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0104 13:01:15.708127 18 pod_client.go:173] Successfully updated pod "victim-pod"
  I0104 13:01:15.758442 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3620" for this suite. @ 01/04/25 13:01:15.763
• [64.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/04/25 13:01:15.771
  I0104 13:01:15.771350 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:01:15.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:01:15.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:01:15.792
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-2c051b42-721f-4c4b-bbdf-bc8410f8afe2 @ 01/04/25 13:01:15.801
  STEP: Creating the pod @ 01/04/25 13:01:15.807
  STEP: Updating configmap projected-configmap-test-upd-2c051b42-721f-4c4b-bbdf-bc8410f8afe2 @ 01/04/25 13:01:17.84
  STEP: waiting to observe update in volume @ 01/04/25 13:01:17.846
  I0104 13:02:36.259115 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6818" for this suite. @ 01/04/25 13:02:36.263
• [80.500 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/04/25 13:02:36.271
  I0104 13:02:36.271778 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/04/25 13:02:36.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:02:36.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:02:36.294
  STEP: create the container to handle the HTTPGet hook request. @ 01/04/25 13:02:36.301
  STEP: create the pod with lifecycle hook @ 01/04/25 13:02:38.327
  STEP: check poststart hook @ 01/04/25 13:02:40.35
  STEP: delete the pod with lifecycle hook @ 01/04/25 13:02:40.363
  I0104 13:02:42.384355 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4314" for this suite. @ 01/04/25 13:02:42.388
• [6.125 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/04/25 13:02:42.397
  I0104 13:02:42.397156 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 13:02:42.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:02:42.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:02:42.422
  I0104 13:02:42.425135 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  W0104 13:02:44.962907      18 warnings.go:70] unknown field "alpha"
  W0104 13:02:44.962935      18 warnings.go:70] unknown field "beta"
  W0104 13:02:44.962939      18 warnings.go:70] unknown field "delta"
  W0104 13:02:44.962941      18 warnings.go:70] unknown field "epsilon"
  W0104 13:02:44.962944      18 warnings.go:70] unknown field "gamma"
  I0104 13:02:45.516568 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1230" for this suite. @ 01/04/25 13:02:45.52
• [3.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/04/25 13:02:45.529
  I0104 13:02:45.529840 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/04/25 13:02:45.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:02:45.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:02:45.552
  STEP: creating a target pod @ 01/04/25 13:02:45.554
  STEP: adding an ephemeral container @ 01/04/25 13:02:47.582
  STEP: checking pod container endpoints @ 01/04/25 13:02:49.599
  I0104 13:02:49.599488 18 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4480 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:02:49.599506 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:02:49.599977 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:02:49.600015 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4480/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0104 13:02:49.644293 18 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/04/25 13:02:49.652
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/04/25 13:02:49.657
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/04/25 13:02:49.669
  I0104 13:02:49.677062 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4480" for this suite. @ 01/04/25 13:02:49.686
• [4.170 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/04/25 13:02:49.7
  I0104 13:02:49.700030 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename ingressclass @ 01/04/25 13:02:49.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:02:49.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:02:49.726
  STEP: getting /apis @ 01/04/25 13:02:49.73
  STEP: getting /apis/networking.k8s.io @ 01/04/25 13:02:49.743
  STEP: getting /apis/networking.k8s.iov1 @ 01/04/25 13:02:49.744
  STEP: creating @ 01/04/25 13:02:49.745
  STEP: getting @ 01/04/25 13:02:49.762
  STEP: listing @ 01/04/25 13:02:49.767
  STEP: watching @ 01/04/25 13:02:49.771
  I0104 13:02:49.771584 18 ingressclass.go:348] starting watch
  STEP: patching @ 01/04/25 13:02:49.772
  STEP: updating @ 01/04/25 13:02:49.778
  I0104 13:02:49.784964 18 ingressclass.go:364] waiting for watch events with expected annotations
  I0104 13:02:49.785002 18 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/04/25 13:02:49.785
  STEP: deleting a collection @ 01/04/25 13:02:49.8
  I0104 13:02:49.820540 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5067" for this suite. @ 01/04/25 13:02:49.826
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/04/25 13:02:49.836
  I0104 13:02:49.836664 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:02:49.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:02:49.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:02:49.86
  STEP: Creating a ResourceQuota with terminating scope @ 01/04/25 13:02:49.863
  STEP: Ensuring ResourceQuota status is calculated @ 01/04/25 13:02:49.87
  STEP: Creating a ResourceQuota with not terminating scope @ 01/04/25 13:02:51.876
  STEP: Ensuring ResourceQuota status is calculated @ 01/04/25 13:02:51.884
  STEP: Creating a long running pod @ 01/04/25 13:02:53.89
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/04/25 13:02:53.906
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/04/25 13:02:55.911
  STEP: Deleting the pod @ 01/04/25 13:02:57.917
  STEP: Ensuring resource quota status released the pod usage @ 01/04/25 13:02:57.932
  STEP: Creating a terminating pod @ 01/04/25 13:02:59.937
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/04/25 13:02:59.951
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/04/25 13:03:01.957
  STEP: Deleting the pod @ 01/04/25 13:03:03.962
  STEP: Ensuring resource quota status released the pod usage @ 01/04/25 13:03:03.98
  I0104 13:03:05.986171 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-937" for this suite. @ 01/04/25 13:03:05.99
• [16.162 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/04/25 13:03:05.998
  I0104 13:03:05.998774 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 13:03:05.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:03:06.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:03:06.019
  STEP: Creating a pod to test env composition @ 01/04/25 13:03:06.022
  STEP: Saw pod success @ 01/04/25 13:03:08.044
  I0104 13:03:08.049418 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod var-expansion-c9eb6a81-ac21-4ae3-8195-0f6049aee33d container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 13:03:08.058
  I0104 13:03:08.075972 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6099" for this suite. @ 01/04/25 13:03:08.08
• [2.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/04/25 13:03:08.088
  I0104 13:03:08.088494 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 13:03:08.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:03:08.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:03:08.111
  STEP: creating secret secrets-5042/secret-test-2c80bd74-1117-490d-a77a-7d8f23241269 @ 01/04/25 13:03:08.114
  STEP: Creating a pod to test consume secrets @ 01/04/25 13:03:08.119
  STEP: Saw pod success @ 01/04/25 13:03:12.145
  I0104 13:03:12.150546 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-configmaps-93f0f3ec-6299-44ea-9c22-af7d9426bb42 container env-test: <nil>
  STEP: delete the pod @ 01/04/25 13:03:12.167
  I0104 13:03:12.188562 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5042" for this suite. @ 01/04/25 13:03:12.192
• [4.112 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/04/25 13:03:12.201
  I0104 13:03:12.201049 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/04/25 13:03:12.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:03:12.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:03:12.225
  STEP: creating the policy @ 01/04/25 13:03:12.235
  STEP: waiting until the marker is denied @ 01/04/25 13:03:12.25
  STEP: testing a replicated Deployment to be allowed @ 01/04/25 13:03:13.161
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/04/25 13:03:13.18
  I0104 13:03:13.234959 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6409" for this suite. @ 01/04/25 13:03:13.242
• [1.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/04/25 13:03:13.252
  I0104 13:03:13.252137 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename chunking @ 01/04/25 13:03:13.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:03:13.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:03:13.272
  STEP: creating a large number of resources @ 01/04/25 13:03:13.274
  STEP: retrieving the first page @ 01/04/25 13:03:30.959
  I0104 13:03:31.008510 18 chunking.go:163] Retrieved 40/40 results with rv 29488 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 01/04/25 13:03:31.008
  I0104 13:03:51.017278 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:04:11.016048 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:04:31.017067 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:04:51.016461 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:05:11.016098 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:05:31.018593 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:05:51.016306 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:06:11.017227 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:06:31.017424 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:06:51.015317 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:07:11.017427 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:07:31.015876 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:07:51.016500 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:08:11.016483 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:08:31.016296 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:08:51.016738 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:09:11.016549 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:09:31.016725 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:09:51.016138 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:10:11.016799 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:10:31.016703 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:10:51.015975 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:11:11.017076 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:11:31.015557 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:11:51.017006 18 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk0ODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0104 13:12:11.015946 18 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0104 13:12:11.015987 18 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/04/25 13:12:11.016
  STEP: retrieving all remaining pages @ 01/04/25 13:12:11.02
  I0104 13:12:11.025458 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0104 13:12:11.030254 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0104 13:12:11.034454 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0104 13:12:11.039828 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0104 13:12:11.044970 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0104 13:12:11.049458 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0104 13:12:11.054423 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA0OTksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0104 13:12:11.059784 18 chunking.go:221] Retrieved 40/40 results with rv 30499 and continue 
  I0104 13:12:11.059987 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3043" for this suite. @ 01/04/25 13:12:11.064
• [537.821 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/04/25 13:12:11.073
  I0104 13:12:11.073890 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:12:11.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:11.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:11.099
  STEP: Creating configMap with name projected-configmap-test-volume-3c246890-3677-43c6-9b6c-4b16e84d7dcb @ 01/04/25 13:12:11.102
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:12:11.107
  STEP: Saw pod success @ 01/04/25 13:12:15.136
  I0104 13:12:15.140845 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-configmaps-2824911d-4cae-41d9-89b0-5908278278d1 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:12:15.163
  I0104 13:12:15.186494 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6935" for this suite. @ 01/04/25 13:12:15.19
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/04/25 13:12:15.198
  I0104 13:12:15.198602 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:12:15.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:15.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:15.222
  STEP: creating service in namespace services-1719 @ 01/04/25 13:12:15.224
  STEP: creating service affinity-nodeport-transition in namespace services-1719 @ 01/04/25 13:12:15.224
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1719 @ 01/04/25 13:12:15.243
  I0104 13:12:15.251651      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1719, replica count: 3
  I0104 13:12:18.303664      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 13:12:18.315459 18 resource.go:361] Creating new exec pod
  I0104 13:12:21.340911 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-1719 exec execpod-affinity2jvlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0104 13:12:21.437073 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0104 13:12:21.437132 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:12:21.437321 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-1719 exec execpod-affinity2jvlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.215 80'
  I0104 13:12:21.534892 18 builder.go:146] stderr: "+ nc -v+ echo hostName\n -t -w 2 10.152.183.215 80\nConnection to 10.152.183.215 80 port [tcp/http] succeeded!\n"
  I0104 13:12:21.534939 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:12:21.535046 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-1719 exec execpod-affinity2jvlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.68 30953'
  I0104 13:12:21.619445 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.68 30953\nConnection to 172.31.76.68 30953 port [tcp/*] succeeded!\n"
  I0104 13:12:21.619490 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:12:21.619578 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-1719 exec execpod-affinity2jvlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.94 30953'
  I0104 13:12:21.705432 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.94 30953\nConnection to 172.31.8.94 30953 port [tcp/*] succeeded!\n"
  I0104 13:12:21.705478 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:12:21.715908 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-1719 exec execpod-affinity2jvlm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.169:30953/ ; done'
  I0104 13:12:21.880342 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n"
  I0104 13:12:21.880394 18 builder.go:147] stdout: "\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-ctnw9\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-ctnw9\naffinity-nodeport-transition-ctnw9\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-ctnw9\naffinity-nodeport-transition-8zppq\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww"
  I0104 13:12:21.880406 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880414 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880421 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880427 18 service.go:242] Received response from host: affinity-nodeport-transition-ctnw9
  I0104 13:12:21.880432 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:21.880438 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880443 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:21.880452 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880459 18 service.go:242] Received response from host: affinity-nodeport-transition-ctnw9
  I0104 13:12:21.880465 18 service.go:242] Received response from host: affinity-nodeport-transition-ctnw9
  I0104 13:12:21.880470 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880476 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880481 18 service.go:242] Received response from host: affinity-nodeport-transition-ctnw9
  I0104 13:12:21.880486 18 service.go:242] Received response from host: affinity-nodeport-transition-8zppq
  I0104 13:12:21.880493 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:21.880499 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:21.892718 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-1719 exec execpod-affinity2jvlm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.169:30953/ ; done'
  I0104 13:12:22.064864 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:30953/\n"
  I0104 13:12:22.064916 18 builder.go:147] stdout: "\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww\naffinity-nodeport-transition-kksww"
  I0104 13:12:22.064928 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064937 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064944 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064952 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064958 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064964 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064970 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064976 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064983 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.064989 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065001 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065006 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065011 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065017 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065022 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065028 18 service.go:242] Received response from host: affinity-nodeport-transition-kksww
  I0104 13:12:22.065100 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1719, will wait for the garbage collector to delete the pods @ 01/04/25 13:12:22.084
  I0104 13:12:22.147730 18 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.204028ms
  I0104 13:12:22.248882 18 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.148571ms
  I0104 13:12:25.279004 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1719" for this suite. @ 01/04/25 13:12:25.283
• [10.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/04/25 13:12:25.291
  I0104 13:12:25.291438 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 13:12:25.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:25.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:25.314
  I0104 13:12:47.398287 18 container_probe.go:92] Container started at 2025-01-04 13:12:25 +0000 UTC, pod became ready at 2025-01-04 13:12:45 +0000 UTC
  I0104 13:12:47.398413 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5778" for this suite. @ 01/04/25 13:12:47.403
• [22.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/04/25 13:12:47.411
  I0104 13:12:47.411248 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:12:47.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:47.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:47.434
  STEP: Creating configMap configmap-7017/configmap-test-fad7f821-e522-4c94-a3a6-e9572ee62a33 @ 01/04/25 13:12:47.437
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:12:47.443
  STEP: Saw pod success @ 01/04/25 13:12:51.47
  I0104 13:12:51.474596 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-f8bc44f1-5439-4e91-9cda-4ab82ad5c83a container env-test: <nil>
  STEP: delete the pod @ 01/04/25 13:12:51.484
  I0104 13:12:51.505415 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7017" for this suite. @ 01/04/25 13:12:51.509
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/04/25 13:12:51.519
  I0104 13:12:51.519015 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename limitrange @ 01/04/25 13:12:51.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:51.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:51.543
  STEP: Creating LimitRange "e2e-limitrange-6gd9z" in namespace "limitrange-3169" @ 01/04/25 13:12:51.545
  STEP: Creating another limitRange in another namespace @ 01/04/25 13:12:51.551
  I0104 13:12:51.569841 18 limit_range.go:299] Namespace "e2e-limitrange-6gd9z-5314" created
  I0104 13:12:51.569891 18 limit_range.go:300] Creating LimitRange "e2e-limitrange-6gd9z" in namespace "e2e-limitrange-6gd9z-5314"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-6gd9z" @ 01/04/25 13:12:51.574
  I0104 13:12:51.579805 18 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-6gd9z" in "limitrange-3169" namespace @ 01/04/25 13:12:51.579
  I0104 13:12:51.587422 18 limit_range.go:335] LimitRange "e2e-limitrange-6gd9z" has been patched
  STEP: Delete LimitRange "e2e-limitrange-6gd9z" by Collection with labelSelector: "e2e-limitrange-6gd9z=patched" @ 01/04/25 13:12:51.587
  STEP: Confirm that the limitRange "e2e-limitrange-6gd9z" has been deleted @ 01/04/25 13:12:51.597
  I0104 13:12:51.597880 18 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0104 13:12:51.601092 18 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-6gd9z=patched"
  I0104 13:12:51.601115 18 limit_range.go:344] LimitRange "e2e-limitrange-6gd9z" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-6gd9z" @ 01/04/25 13:12:51.601
  I0104 13:12:51.605437 18 limit_range.go:350] Found 1 limitRange
  I0104 13:12:51.605600 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3169" for this suite. @ 01/04/25 13:12:51.61
  STEP: Destroying namespace "e2e-limitrange-6gd9z-5314" for this suite. @ 01/04/25 13:12:51.616
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/04/25 13:12:51.624
  I0104 13:12:51.624969 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 13:12:51.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:51.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:51.647
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 13:12:51.649
  STEP: Saw pod success @ 01/04/25 13:12:53.675
  I0104 13:12:53.682218 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod downwardapi-volume-0e6e05b4-0684-4642-855c-86aa59732462 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 13:12:53.699
  I0104 13:12:53.721985 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-204" for this suite. @ 01/04/25 13:12:53.726
• [2.109 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/04/25 13:12:53.733
  I0104 13:12:53.733839 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:12:53.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:12:53.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:12:53.758
  STEP: creating service in namespace services-7368 @ 01/04/25 13:12:53.76
  STEP: creating service affinity-nodeport in namespace services-7368 @ 01/04/25 13:12:53.761
  STEP: creating replication controller affinity-nodeport in namespace services-7368 @ 01/04/25 13:12:53.781
  I0104 13:12:53.791008      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7368, replica count: 3
  I0104 13:12:56.841361      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 13:12:56.857460 18 resource.go:361] Creating new exec pod
  I0104 13:12:59.884874 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7368 exec execpod-affinityg282w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0104 13:12:59.984196 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0104 13:12:59.984243 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:12:59.984323 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7368 exec execpod-affinityg282w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.130 80'
  I0104 13:13:00.075795 18 builder.go:146] stderr: "+ echo+  hostName\nnc -v -t -w 2 10.152.183.130 80\nConnection to 10.152.183.130 80 port [tcp/http] succeeded!\n"
  I0104 13:13:00.075839 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:13:00.075965 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7368 exec execpod-affinityg282w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.169 31609'
  I0104 13:13:00.159133 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.169 31609\nConnection to 172.31.18.169 31609 port [tcp/*] succeeded!\n"
  I0104 13:13:00.159184 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:13:00.159297 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7368 exec execpod-affinityg282w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.94 31609'
  I0104 13:13:00.246655 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.94 31609\nConnection to 172.31.8.94 31609 port [tcp/*] succeeded!\n"
  I0104 13:13:00.246720 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:13:00.246912 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7368 exec execpod-affinityg282w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.169:31609/ ; done'
  I0104 13:13:00.414774 18 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.169:31609/\n"
  I0104 13:13:00.414824 18 builder.go:147] stdout: "\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx\naffinity-nodeport-kmdlx"
  I0104 13:13:00.414837 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414845 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414854 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414860 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414867 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414873 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414879 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414884 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414890 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414896 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414903 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414909 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414916 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414925 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414931 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.414937 18 service.go:242] Received response from host: affinity-nodeport-kmdlx
  I0104 13:13:00.415036 18 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7368, will wait for the garbage collector to delete the pods @ 01/04/25 13:13:00.435
  I0104 13:13:00.499567 18 resources.go:139] Deleting ReplicationController affinity-nodeport took: 9.764561ms
  I0104 13:13:00.600577 18 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.006519ms
  I0104 13:13:03.732613 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7368" for this suite. @ 01/04/25 13:13:03.737
• [10.011 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/04/25 13:13:03.745
  I0104 13:13:03.745410 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 13:13:03.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:13:03.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:13:03.767
  STEP: Creating pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656 @ 01/04/25 13:13:03.769
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 13:13:05.794
  I0104 13:13:05.798505 18 container_probe.go:1749] Initial restart count of pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 is 0
  I0104 13:13:05.802339 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:07.808233 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:09.813940 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:11.819072 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:13.825087 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:15.831404 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:17.837046 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:19.842829 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:21.848948 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:23.854735 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:25.859869 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:27.865787 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:29.873068 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:31.878595 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:33.884898 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:35.890193 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:37.895141 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:39.900956 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:41.905623 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:43.909931 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:45.914852 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:47.920387 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:49.926794 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:51.932780 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:53.938327 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:55.943442 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:57.948968 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:13:59.953874 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:01.959045 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:03.965203 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:05.970985 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:07.976636 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:09.983204 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:11.989899 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:13.996503 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:16.002820 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:18.008984 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:20.015374 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:22.021570 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:24.028209 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:26.033667 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:28.039748 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:30.046259 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:32.052627 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:34.058716 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:36.065098 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:38.071106 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:40.077728 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:42.083832 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:44.089898 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:46.095424 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:48.101864 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:50.107762 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:52.113536 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:54.121370 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:56.126863 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:14:58.132762 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:00.138815 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:02.145059 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:04.150655 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:06.156664 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:08.163189 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:10.169889 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:12.175838 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:14.181274 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:16.187243 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:18.192431 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:20.198985 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:22.204322 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:24.210145 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:26.215719 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:28.222235 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:30.229256 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:32.234987 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:34.240735 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:36.246387 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:38.252758 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:40.258142 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:42.263594 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:44.269285 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:46.275937 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:48.281644 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:50.288859 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:52.293845 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:54.299304 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:56.304833 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:15:58.310985 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:00.316611 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:02.323139 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:04.328338 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:06.334133 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:08.339523 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:10.344841 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:12.350456 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:14.356429 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:16.362269 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:18.367961 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:20.373597 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:22.380811 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:24.385717 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:26.391876 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:28.397156 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:30.403461 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:32.409096 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:34.415517 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:36.421464 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:38.426799 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:40.432542 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:42.438372 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:44.443426 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:46.450145 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:48.455955 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:50.462307 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:52.468405 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:54.475178 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:56.481054 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:16:58.485902 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:17:00.491951 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:17:02.498340 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  I0104 13:17:04.503426 18 container_probe.go:1759] Get pod busybox-d9958efd-7e7d-47c0-9e36-07560f949ff5 in namespace container-probe-7656
  STEP: deleting the pod @ 01/04/25 13:17:06.503
  I0104 13:17:06.521643 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7656" for this suite. @ 01/04/25 13:17:06.529
• [242.793 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/04/25 13:17:06.538
  I0104 13:17:06.538980 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 13:17:06.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:06.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:06.562
  STEP: apply creating a deployment @ 01/04/25 13:17:06.565
  I0104 13:17:06.582279 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8377" for this suite. @ 01/04/25 13:17:06.586
• [0.057 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/04/25 13:17:06.596
  I0104 13:17:06.596726 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/04/25 13:17:06.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:06.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:06.622
  STEP: fetching the /apis discovery document @ 01/04/25 13:17:06.624
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/04/25 13:17:06.625
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/04/25 13:17:06.625
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/04/25 13:17:06.625
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/04/25 13:17:06.626
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/04/25 13:17:06.626
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/04/25 13:17:06.628
  I0104 13:17:06.628227 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3400" for this suite. @ 01/04/25 13:17:06.632
• [0.045 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/04/25 13:17:06.641
  I0104 13:17:06.641957 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:17:06.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:06.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:06.664
  STEP: Creating projection with secret that has name projected-secret-test-80780cb8-cb59-4f0e-9b4f-00d73bbb1a3b @ 01/04/25 13:17:06.667
  STEP: Creating a pod to test consume secrets @ 01/04/25 13:17:06.672
  STEP: Saw pod success @ 01/04/25 13:17:10.698
  I0104 13:17:10.702201 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-secrets-dfdc1992-1885-4bd1-9cef-fcad4224279f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:17:10.715
  I0104 13:17:10.737572 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7883" for this suite. @ 01/04/25 13:17:10.742
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 01/04/25 13:17:10.749
  I0104 13:17:10.749700 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 13:17:10.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:10.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:10.774
  I0104 13:17:10.780799 18 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-3123"
  I0104 13:17:10.787644 18 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-3123"
  STEP: waiting for a new root ca configmap created @ 01/04/25 13:17:11.288
  I0104 13:17:11.293351 18 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-3123"
  I0104 13:17:11.299651 18 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-3123"
  STEP: waiting for the root ca configmap reconciled @ 01/04/25 13:17:11.8
  I0104 13:17:11.804267 18 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-3123"
  I0104 13:17:11.804401 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3123" for this suite. @ 01/04/25 13:17:11.81
• [1.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/04/25 13:17:11.818
  I0104 13:17:11.818277 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:17:11.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:11.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:11.836
  STEP: Setting up server cert @ 01/04/25 13:17:11.873
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:17:12.033
  STEP: Deploying the webhook pod @ 01/04/25 13:17:12.045
  STEP: Wait for the deployment to be ready @ 01/04/25 13:17:12.093
  I0104 13:17:12.105338 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 13:17:14.12
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:17:14.132
  I0104 13:17:15.132640 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/04/25 13:17:15.142
  STEP: verifying the mutating webhook match conditions @ 01/04/25 13:17:15.152
  STEP: updating the mutating webhook match conditions @ 01/04/25 13:17:15.155
  STEP: verifying the mutating webhook match conditions @ 01/04/25 13:17:15.165
  I0104 13:17:15.224445 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7902" for this suite. @ 01/04/25 13:17:15.231
  STEP: Destroying namespace "webhook-markers-5594" for this suite. @ 01/04/25 13:17:15.239
• [3.431 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 01/04/25 13:17:15.249
  I0104 13:17:15.249333 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/04/25 13:17:15.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:15.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:15.269
  STEP: Setting up the test @ 01/04/25 13:17:15.273
  STEP: Creating hostNetwork=false pod @ 01/04/25 13:17:15.273
  STEP: Creating hostNetwork=true pod @ 01/04/25 13:17:17.299
  STEP: Running the test @ 01/04/25 13:17:19.322
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/04/25 13:17:19.322
  I0104 13:17:19.322155 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.322173 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.322596 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.322634 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0104 13:17:19.364127 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.364184 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.364194 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.364710 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.364759 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0104 13:17:19.408163 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.408210 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.408220 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.408741 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.408793 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0104 13:17:19.444833 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.444881 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.444890 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.445460 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.445595 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0104 13:17:19.483743 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/04/25 13:17:19.483
  I0104 13:17:19.483823 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.483832 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.484249 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.484294 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0104 13:17:19.523452 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.523505 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.523515 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.524028 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.524087 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0104 13:17:19.561772 18 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/04/25 13:17:19.561
  I0104 13:17:19.561854 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.561868 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.562294 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.562338 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0104 13:17:19.608646 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.608738 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.608748 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.609195 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.609248 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0104 13:17:19.641989 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.642042 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.642052 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.642536 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.642583 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0104 13:17:19.679111 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.679154 18 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8283 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:19.679162 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:19.679595 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:19.679643 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8283/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0104 13:17:19.722360 18 exec_util.go:111] Exec stderr: ""
  I0104 13:17:19.722544 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8283" for this suite. @ 01/04/25 13:17:19.727
• [4.486 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/04/25 13:17:19.735
  I0104 13:17:19.735515 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename init-container @ 01/04/25 13:17:19.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:19.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:19.76
  STEP: creating the pod @ 01/04/25 13:17:19.762
  I0104 13:17:19.762490 18 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0104 13:17:23.193611 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5218" for this suite. @ 01/04/25 13:17:23.198
• [3.471 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/04/25 13:17:23.206
  I0104 13:17:23.206888 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-runtime @ 01/04/25 13:17:23.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:23.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:23.228
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/04/25 13:17:23.242
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/04/25 13:17:39.339
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/04/25 13:17:39.343
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/04/25 13:17:39.351
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/04/25 13:17:39.352
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/04/25 13:17:39.379
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/04/25 13:17:42.403
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/04/25 13:17:43.413
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/04/25 13:17:43.422
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/04/25 13:17:43.422
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/04/25 13:17:43.452
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/04/25 13:17:44.464
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/04/25 13:17:45.475
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/04/25 13:17:45.484
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/04/25 13:17:45.484
  I0104 13:17:45.516759 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-470" for this suite. @ 01/04/25 13:17:45.521
• [22.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/04/25 13:17:45.529
  I0104 13:17:45.529529 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 13:17:45.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:17:45.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:17:45.552
  STEP: creating the pod @ 01/04/25 13:17:45.555
  STEP: waiting for pod running @ 01/04/25 13:17:45.565
  STEP: creating a file in subpath @ 01/04/25 13:17:47.574
  I0104 13:17:47.579298 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1719 PodName:var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:47.579326 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:47.579786 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:47.579829 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1719/pods/var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/04/25 13:17:47.629
  I0104 13:17:47.634697 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1719 PodName:var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:17:47.634723 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:17:47.635143 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:17:47.635190 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1719/pods/var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/04/25 13:17:47.671
  I0104 13:17:48.186235 18 pod_client.go:173] Successfully updated pod "var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e"
  STEP: waiting for annotated pod running @ 01/04/25 13:17:48.186
  STEP: deleting the pod gracefully @ 01/04/25 13:17:48.19
  I0104 13:17:48.190880 18 delete.go:62] Deleting pod "var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e" in namespace "var-expansion-1719"
  I0104 13:17:48.200879 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-3a72baab-868e-4058-99fb-e84fcb50e41e" to be fully deleted
  I0104 13:18:22.315594 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1719" for this suite. @ 01/04/25 13:18:22.32
• [36.799 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/04/25 13:18:22.329
  I0104 13:18:22.329097 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 13:18:22.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:18:22.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:18:22.356
  STEP: Creating pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290 @ 01/04/25 13:18:22.358
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 13:18:24.38
  I0104 13:18:24.384715 18 container_probe.go:1749] Initial restart count of pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 is 0
  I0104 13:18:24.388619 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:26.395378 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:28.400451 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:30.407067 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:32.412125 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:34.417255 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:36.422532 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:38.428860 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:40.434694 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:42.440616 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:44.446456 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:46.452899 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:48.458631 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:50.464663 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:52.471727 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:54.477160 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:56.484192 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:18:58.489257 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:00.495768 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:02.501829 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:04.507290 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:06.512923 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:08.519343 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:10.525434 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:12.532359 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:14.537513 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:16.543262 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:18.548491 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:20.554255 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:22.560367 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:24.566750 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:26.573089 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:28.578852 18 container_probe.go:1759] Get pod test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 in namespace container-probe-6290
  I0104 13:19:28.578889 18 container_probe.go:1763] Restart count of pod container-probe-6290/test-grpc-1f55ba90-b348-4db2-bfc2-4cca93fdaf82 is now 1 (1m4.194149185s elapsed)
  STEP: deleting the pod @ 01/04/25 13:19:28.578
  I0104 13:19:28.597561 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6290" for this suite. @ 01/04/25 13:19:28.602
• [66.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/04/25 13:19:28.611
  I0104 13:19:28.611275 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:19:28.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:19:28.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:19:28.632
  STEP: Creating configMap configmap-1033/configmap-test-9f538a01-53ff-4186-be77-e1c44f1821e6 @ 01/04/25 13:19:28.635
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:19:28.64
  STEP: Saw pod success @ 01/04/25 13:19:30.66
  I0104 13:19:30.664546 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-cdea11a9-f284-44f6-997e-eaee8db30341 container env-test: <nil>
  STEP: delete the pod @ 01/04/25 13:19:30.684
  I0104 13:19:30.706221 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1033" for this suite. @ 01/04/25 13:19:30.71
• [2.109 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/04/25 13:19:30.72
  I0104 13:19:30.720034 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:19:30.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:19:30.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:19:30.745
  STEP: Setting up server cert @ 01/04/25 13:19:30.774
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:19:31.092
  STEP: Deploying the webhook pod @ 01/04/25 13:19:31.106
  STEP: Wait for the deployment to be ready @ 01/04/25 13:19:31.122
  I0104 13:19:31.133362 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 13:19:33.148
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:19:33.161
  I0104 13:19:34.161661 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/04/25 13:19:34.247
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/04/25 13:19:34.282
  STEP: Deleting the collection of validation webhooks @ 01/04/25 13:19:34.312
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/04/25 13:19:34.38
  I0104 13:19:34.442798 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5251" for this suite. @ 01/04/25 13:19:34.446
  STEP: Destroying namespace "webhook-markers-8353" for this suite. @ 01/04/25 13:19:34.456
• [3.744 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/04/25 13:19:34.463
  I0104 13:19:34.464007 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename subpath @ 01/04/25 13:19:34.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:19:34.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:19:34.486
  STEP: Setting up data @ 01/04/25 13:19:34.489
  STEP: Creating pod pod-subpath-test-configmap-fh42 @ 01/04/25 13:19:34.501
  STEP: Creating a pod to test atomic-volume-subpath @ 01/04/25 13:19:34.501
  STEP: Saw pod success @ 01/04/25 13:19:56.581
  I0104 13:19:56.587044 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-subpath-test-configmap-fh42 container test-container-subpath-configmap-fh42: <nil>
  STEP: delete the pod @ 01/04/25 13:19:56.597
  STEP: Deleting pod pod-subpath-test-configmap-fh42 @ 01/04/25 13:19:56.614
  I0104 13:19:56.614981 18 delete.go:62] Deleting pod "pod-subpath-test-configmap-fh42" in namespace "subpath-5051"
  I0104 13:19:56.618706 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5051" for this suite. @ 01/04/25 13:19:56.623
• [22.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 01/04/25 13:19:56.631
  I0104 13:19:56.631087 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 13:19:56.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:19:56.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:19:56.655
  STEP: Creating Indexed job @ 01/04/25 13:19:56.658
  STEP: Ensuring job reaches completions @ 01/04/25 13:19:56.667
  STEP: Ensuring pods with index for job exist @ 01/04/25 13:20:06.679
  I0104 13:20:06.684370 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4759" for this suite. @ 01/04/25 13:20:06.688
• [10.066 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 01/04/25 13:20:06.697
  I0104 13:20:06.697219 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 13:20:06.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:20:06.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:20:06.719
  STEP: Looking for a node to schedule job pod @ 01/04/25 13:20:06.721
  STEP: Creating a job @ 01/04/25 13:20:06.725
  STEP: Ensuring job fails @ 01/04/25 13:20:06.733
  I0104 13:20:10.743493 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-628" for this suite. @ 01/04/25 13:20:10.748
• [4.059 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 01/04/25 13:20:10.756
  I0104 13:20:10.756547 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 13:20:10.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:20:10.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:20:10.782
  STEP: Creating service test in namespace statefulset-95 @ 01/04/25 13:20:10.785
  I0104 13:20:10.805412 18 wait.go:40] Found 0 stateful pods, waiting for 1
  I0104 13:20:20.807628 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/04/25 13:20:20.815
  I0104 13:20:20.832375 18 wait.go:40] Found 1 stateful pods, waiting for 2
  I0104 13:20:30.834976 18 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0104 13:20:30.835013 18 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/04/25 13:20:30.843
  STEP: Delete all of the StatefulSets @ 01/04/25 13:20:30.847
  STEP: Verify that StatefulSets have been deleted @ 01/04/25 13:20:30.861
  I0104 13:20:30.865120 18 statefulset.go:138] Deleting all statefulset in ns statefulset-95
  I0104 13:20:30.877829 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-95" for this suite. @ 01/04/25 13:20:30.887
• [20.140 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/04/25 13:20:30.896
  I0104 13:20:30.897042 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename init-container @ 01/04/25 13:20:30.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:20:30.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:20:30.922
  STEP: creating the pod @ 01/04/25 13:20:30.925
  I0104 13:20:30.925488 18 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0104 13:20:34.431370 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5327" for this suite. @ 01/04/25 13:20:34.436
• [3.547 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/04/25 13:20:34.444
  I0104 13:20:34.444186 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename subpath @ 01/04/25 13:20:34.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:20:34.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:20:34.471
  STEP: Setting up data @ 01/04/25 13:20:34.473
  STEP: Creating pod pod-subpath-test-downwardapi-qqvz @ 01/04/25 13:20:34.484
  STEP: Creating a pod to test atomic-volume-subpath @ 01/04/25 13:20:34.484
  STEP: Saw pod success @ 01/04/25 13:20:56.575
  I0104 13:20:56.583487 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-subpath-test-downwardapi-qqvz container test-container-subpath-downwardapi-qqvz: <nil>
  STEP: delete the pod @ 01/04/25 13:20:56.605
  STEP: Deleting pod pod-subpath-test-downwardapi-qqvz @ 01/04/25 13:20:56.627
  I0104 13:20:56.627666 18 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-qqvz" in namespace "subpath-5583"
  I0104 13:20:56.632551 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5583" for this suite. @ 01/04/25 13:20:56.638
• [22.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/04/25 13:20:56.647
  I0104 13:20:56.647862 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/04/25 13:20:56.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:20:56.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:20:56.668
  I0104 13:20:56.671000 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:20:59.735097 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-958" for this suite. @ 01/04/25 13:20:59.739
• [3.100 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/04/25 13:20:59.747
  I0104 13:20:59.747754 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 13:20:59.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:20:59.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:20:59.772
  STEP: Creating simple DaemonSet "daemon-set" @ 01/04/25 13:20:59.804
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/04/25 13:20:59.811
  I0104 13:20:59.816232 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:20:59.816270 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:20:59.819527 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 13:20:59.819549 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 13:21:00.817372 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:21:00.817416 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:21:00.821046 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0104 13:21:00.821068 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  I0104 13:21:01.817969 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:21:01.818008 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:21:01.821419 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 13:21:01.821441 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 01/04/25 13:21:01.825
  I0104 13:21:01.829071 18 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/04/25 13:21:01.829
  I0104 13:21:01.839376 18 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/04/25 13:21:01.839
  I0104 13:21:01.841076 18 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0104 13:21:01.841152 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.841209 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.841370 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.841534 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.841640 18 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.841695 18 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-2372 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0104 13:21:01.841709 18 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/04/25 13:21:01.841
  STEP: watching for the daemon set status to be patched @ 01/04/25 13:21:01.85
  I0104 13:21:01.851498 18 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0104 13:21:01.851633 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.851734 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.851852 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.851934 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.852011 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.852100 18 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-2372 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0104 13:21:01.852197 18 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0104 13:21:01.852231 18 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-2372 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0104 13:21:01.852252 18 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/04/25 13:21:01.856
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2372, will wait for the garbage collector to delete the pods @ 01/04/25 13:21:01.856
  I0104 13:21:01.919195 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.936133ms
  I0104 13:21:02.020039 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.841867ms
  I0104 13:21:03.325634 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 13:21:03.325669 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0104 13:21:03.330066 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33505"},"items":null}

  I0104 13:21:03.333826 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33505"},"items":null}

  I0104 13:21:03.350574 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2372" for this suite. @ 01/04/25 13:21:03.354
• [3.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/04/25 13:21:03.363
  I0104 13:21:03.363232 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubelet-test @ 01/04/25 13:21:03.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:21:03.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:21:03.388
  I0104 13:21:07.416137 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4693" for this suite. @ 01/04/25 13:21:07.421
• [4.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 01/04/25 13:21:07.431
  I0104 13:21:07.431788 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 13:21:07.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:21:07.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:21:07.46
  I0104 13:21:07.479487 18 service_accounts.go:618] created pod
  STEP: Saw pod success @ 01/04/25 13:21:11.494
  I0104 13:21:41.497068 18 service_accounts.go:624] polling logs
  I0104 13:21:41.511249 18 service_accounts.go:634] Pod logs: 
  I0104 13:21:08.042950       1 log.go:245] OK: Got token
  I0104 13:21:08.042992       1 log.go:245] validating with in-cluster discovery
  I0104 13:21:08.043194       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0104 13:21:08.043389       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-5831:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013a20), NotBefore:(*jwt.NumericDate)(0xc000013b10), IssuedAt:(*jwt.NumericDate)(0xc000013a30), ID:"02d04ed4-21fb-4884-86ce-a0cae006150f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5831", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1ea80042-45a5-424b-946c-4a5e100e1df8"}}}
  I0104 13:21:08.050387       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0104 13:21:08.054551       1 log.go:245] OK: Validated signature on JWT
  I0104 13:21:08.054694       1 log.go:245] OK: Got valid claims from token!
  I0104 13:21:08.054715       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-5831:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000251a38), NotBefore:(*jwt.NumericDate)(0xc000251a70), IssuedAt:(*jwt.NumericDate)(0xc000251a40), ID:"02d04ed4-21fb-4884-86ce-a0cae006150f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5831", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1ea80042-45a5-424b-946c-4a5e100e1df8"}}}

  I0104 13:21:41.511300 18 service_accounts.go:638] completed pod
  I0104 13:21:41.519569 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5831" for this suite. @ 01/04/25 13:21:41.523
• [34.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/04/25 13:21:41.532
  I0104 13:21:41.533001 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 13:21:41.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:21:41.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:21:41.558
  STEP: creating a Pod with a static label @ 01/04/25 13:21:41.565
  STEP: watching for Pod to be ready @ 01/04/25 13:21:41.574
  I0104 13:21:41.575762 18 pods.go:945] observed Pod pod-test in namespace pods-7885 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0104 13:21:41.583084 18 pods.go:945] observed Pod pod-test in namespace pods-7885 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC  }]
  I0104 13:21:41.608174 18 pods.go:945] observed Pod pod-test in namespace pods-7885 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC  }]
  I0104 13:21:42.545752 18 pods.go:948] Found Pod pod-test in namespace pods-7885 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:42 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:42 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-04 13:21:41 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/04/25 13:21:42.55
  STEP: getting the Pod and ensuring that it's patched @ 01/04/25 13:21:42.56
  STEP: replacing the Pod's status Ready condition to False @ 01/04/25 13:21:42.564
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/04/25 13:21:42.577
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/04/25 13:21:42.577
  STEP: watching for the Pod to be deleted @ 01/04/25 13:21:42.59
  I0104 13:21:42.591927 18 pods.go:1058] observed event type MODIFIED
  I0104 13:21:44.557973 18 pods.go:1058] observed event type MODIFIED
  I0104 13:21:44.726294 18 pods.go:1058] observed event type MODIFIED
  I0104 13:21:45.563728 18 pods.go:1058] observed event type MODIFIED
  I0104 13:21:45.574994 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7885" for this suite. @ 01/04/25 13:21:45.579
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/04/25 13:21:45.587
  I0104 13:21:45.587625 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:21:45.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:21:45.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:21:45.614
  STEP: Setting up server cert @ 01/04/25 13:21:45.643
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:21:45.779
  STEP: Deploying the webhook pod @ 01/04/25 13:21:45.791
  STEP: Wait for the deployment to be ready @ 01/04/25 13:21:45.806
  I0104 13:21:45.816210 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 13:21:47.83
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:21:47.847
  I0104 13:21:48.847670 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/04/25 13:21:48.857
  I0104 13:21:48.905886 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5538" for this suite. @ 01/04/25 13:21:48.913
  STEP: Destroying namespace "webhook-markers-622" for this suite. @ 01/04/25 13:21:48.921
• [3.345 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/04/25 13:21:48.932
  I0104 13:21:48.932966 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:21:48.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:21:48.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:21:48.958
  I0104 13:21:48.965001 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5257" for this suite. @ 01/04/25 13:21:48.969
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/04/25 13:21:48.976
  I0104 13:21:48.976544 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:21:48.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:21:48.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:21:48.998
  STEP: Setting up server cert @ 01/04/25 13:21:49.027
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:21:49.408
  STEP: Deploying the webhook pod @ 01/04/25 13:21:49.414
  STEP: Wait for the deployment to be ready @ 01/04/25 13:21:49.428
  I0104 13:21:49.440980 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 13:21:51.456
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:21:51.468
  I0104 13:21:52.469799 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/04/25 13:21:52.48
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/04/25 13:21:52.48
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/04/25 13:21:52.496
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/04/25 13:21:53.507
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/04/25 13:21:53.507
  STEP: Having no error when timeout is longer than webhook latency @ 01/04/25 13:21:54.542
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/04/25 13:21:54.542
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/04/25 13:21:59.581
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/04/25 13:21:59.581
  I0104 13:22:04.681140 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2531" for this suite. @ 01/04/25 13:22:04.685
  STEP: Destroying namespace "webhook-markers-8174" for this suite. @ 01/04/25 13:22:04.692
• [15.727 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/04/25 13:22:04.703
  I0104 13:22:04.703455 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:22:04.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:04.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:04.728
  STEP: Creating configMap with name configmap-test-volume-42cb9b51-9a17-4845-b18f-9bf123b57587 @ 01/04/25 13:22:04.73
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:22:04.735
  STEP: Saw pod success @ 01/04/25 13:22:08.763
  I0104 13:22:08.767898 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-6df7f5a4-cda7-4413-8e79-36606aee768e container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:22:08.775
  I0104 13:22:08.798954 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2322" for this suite. @ 01/04/25 13:22:08.803
• [4.109 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/04/25 13:22:08.812
  I0104 13:22:08.812953 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename limitrange @ 01/04/25 13:22:08.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:08.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:08.834
  STEP: Creating a LimitRange @ 01/04/25 13:22:08.836
  STEP: Setting up watch @ 01/04/25 13:22:08.836
  STEP: Submitting a LimitRange @ 01/04/25 13:22:08.94
  STEP: Verifying LimitRange creation was observed @ 01/04/25 13:22:08.949
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/04/25 13:22:08.949
  I0104 13:22:08.953297 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0104 13:22:08.953329 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/04/25 13:22:08.953
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/04/25 13:22:08.96
  I0104 13:22:08.965236 18 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0104 13:22:08.965269 18 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/04/25 13:22:08.965
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/04/25 13:22:08.972
  I0104 13:22:08.976840 18 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0104 13:22:08.976875 18 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/04/25 13:22:08.976
  STEP: Failing to create a Pod with more than max resources @ 01/04/25 13:22:08.978
  STEP: Updating a LimitRange @ 01/04/25 13:22:08.98
  STEP: Verifying LimitRange updating is effective @ 01/04/25 13:22:08.986
  STEP: Creating a Pod with less than former min resources @ 01/04/25 13:22:10.993
  STEP: Failing to create a Pod with more than max resources @ 01/04/25 13:22:11
  STEP: Deleting a LimitRange @ 01/04/25 13:22:11.001
  STEP: Verifying the LimitRange was deleted @ 01/04/25 13:22:11.011
  I0104 13:22:16.017352 18 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/04/25 13:22:16.017
  I0104 13:22:16.028529 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8460" for this suite. @ 01/04/25 13:22:16.033
• [7.233 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/04/25 13:22:16.046
  I0104 13:22:16.046584 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:22:16.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:16.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:16.072
  STEP: Setting up server cert @ 01/04/25 13:22:16.102
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:22:16.384
  STEP: Deploying the webhook pod @ 01/04/25 13:22:16.396
  STEP: Wait for the deployment to be ready @ 01/04/25 13:22:16.411
  I0104 13:22:16.421125 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/04/25 13:22:18.435
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:22:18.45
  I0104 13:22:19.450407 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/04/25 13:22:19.46
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/04/25 13:22:19.461
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/04/25 13:22:19.461
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/04/25 13:22:19.461
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/04/25 13:22:19.462
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/04/25 13:22:19.462
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/04/25 13:22:19.463
  I0104 13:22:19.512427 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5359" for this suite. @ 01/04/25 13:22:19.518
  STEP: Destroying namespace "webhook-markers-2356" for this suite. @ 01/04/25 13:22:19.528
• [3.489 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 01/04/25 13:22:19.535
  I0104 13:22:19.535287 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:22:19.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:19.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:19.557
  I0104 13:22:19.560066 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-2779 version'
  I0104 13:22:19.600447 18 builder.go:146] stderr: ""
  I0104 13:22:19.600483 18 builder.go:147] stdout: "Client Version: v1.31.4\nKustomize Version: v5.4.2\nServer Version: v1.31.4\n"
  I0104 13:22:19.600808 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2779" for this suite. @ 01/04/25 13:22:19.605
• [0.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/04/25 13:22:19.613
  I0104 13:22:19.613884 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:22:19.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:19.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:19.637
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 13:22:19.64
  STEP: Saw pod success @ 01/04/25 13:22:23.671
  I0104 13:22:23.676427 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-7d007f3c-1dd5-4070-87a5-bf545e116bf7 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 13:22:23.684
  I0104 13:22:23.707048 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-600" for this suite. @ 01/04/25 13:22:23.711
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/04/25 13:22:23.719
  I0104 13:22:23.719171 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 13:22:23.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:23.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:23.745
  I0104 13:22:23.797221 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9946" for this suite. @ 01/04/25 13:22:23.801
• [0.090 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/04/25 13:22:23.813
  I0104 13:22:23.813043 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 13:22:23.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:23.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:23.838
  STEP: apply creating a deployment @ 01/04/25 13:22:23.84
  I0104 13:22:23.857958 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3813" for this suite. @ 01/04/25 13:22:23.863
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/04/25 13:22:23.871
  I0104 13:22:23.871911 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:22:23.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:23.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:23.893
  STEP: creating a replication controller @ 01/04/25 13:22:23.896
  I0104 13:22:23.896825 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 create -f -'
  I0104 13:22:23.984053 18 builder.go:146] stderr: ""
  I0104 13:22:23.984090 18 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/04/25 13:22:23.984
  I0104 13:22:23.984229 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 13:22:24.038778 18 builder.go:146] stderr: ""
  I0104 13:22:24.038816 18 builder.go:147] stdout: "update-demo-nautilus-5552x update-demo-nautilus-9zfvv "
  I0104 13:22:24.038924 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods update-demo-nautilus-5552x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 13:22:24.085256 18 builder.go:146] stderr: ""
  I0104 13:22:24.085294 18 builder.go:147] stdout: ""
  I0104 13:22:24.085304 18 kubectl.go:2502] update-demo-nautilus-5552x is created but not running
  I0104 13:22:29.086038 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0104 13:22:29.133568 18 builder.go:146] stderr: ""
  I0104 13:22:29.133611 18 builder.go:147] stdout: "update-demo-nautilus-5552x update-demo-nautilus-9zfvv "
  I0104 13:22:29.133657 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods update-demo-nautilus-5552x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 13:22:29.180923 18 builder.go:146] stderr: ""
  I0104 13:22:29.180966 18 builder.go:147] stdout: "true"
  I0104 13:22:29.181031 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods update-demo-nautilus-5552x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 13:22:29.227261 18 builder.go:146] stderr: ""
  I0104 13:22:29.227299 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 13:22:29.227313 18 kubectl.go:2393] validating pod update-demo-nautilus-5552x
  I0104 13:22:29.233700 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 13:22:29.233742 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 13:22:29.233753 18 kubectl.go:2520] update-demo-nautilus-5552x is verified up and running
  I0104 13:22:29.233799 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods update-demo-nautilus-9zfvv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0104 13:22:29.279021 18 builder.go:146] stderr: ""
  I0104 13:22:29.279058 18 builder.go:147] stdout: "true"
  I0104 13:22:29.279111 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods update-demo-nautilus-9zfvv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0104 13:22:29.325008 18 builder.go:146] stderr: ""
  I0104 13:22:29.325044 18 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0104 13:22:29.325057 18 kubectl.go:2393] validating pod update-demo-nautilus-9zfvv
  I0104 13:22:29.331979 18 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0104 13:22:29.332035 18 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0104 13:22:29.332047 18 kubectl.go:2520] update-demo-nautilus-9zfvv is verified up and running
  STEP: using delete to clean up resources @ 01/04/25 13:22:29.332
  I0104 13:22:29.332118 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 delete --grace-period=0 --force -f -'
  I0104 13:22:29.385867 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:22:29.385910 18 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0104 13:22:29.385964 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get rc,svc -l name=update-demo --no-headers'
  I0104 13:22:29.459627 18 builder.go:146] stderr: "No resources found in kubectl-3741 namespace.\n"
  I0104 13:22:29.459704 18 builder.go:147] stdout: ""
  I0104 13:22:29.459754 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-3741 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0104 13:22:29.572648 18 builder.go:146] stderr: ""
  I0104 13:22:29.572746 18 builder.go:147] stdout: ""
  I0104 13:22:29.574885 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3741" for this suite. @ 01/04/25 13:22:29.579
• [5.719 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/04/25 13:22:29.591
  I0104 13:22:29.591289 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 13:22:29.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:22:29.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:22:29.62
  STEP: Creating pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196 @ 01/04/25 13:22:29.63
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 13:22:31.657
  I0104 13:22:31.661277 18 container_probe.go:1749] Initial restart count of pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 is 0
  I0104 13:22:31.666127 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:33.671581 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:35.676853 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:37.682829 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:39.688881 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:41.695999 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:43.701773 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:45.707390 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:47.712964 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:49.719376 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:51.725633 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:53.730296 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:55.736902 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:57.743485 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:22:59.749091 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:01.756133 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:03.761927 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:05.768439 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:07.774314 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:09.780961 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:11.787238 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:13.793257 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:15.799368 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:17.805076 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:19.810921 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:21.816902 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:23.823547 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:25.829219 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:27.835604 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:29.841864 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:31.847424 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:33.852507 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:35.858475 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:37.865093 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:39.873429 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:41.879027 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:43.885234 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:45.891961 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:47.897214 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:49.902795 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:51.909027 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:53.914266 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:55.920875 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:57.925887 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:23:59.932354 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:01.938415 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:03.944001 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:05.948913 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:07.955259 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:09.961585 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:11.968540 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:13.974205 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:15.980996 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:17.987027 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:19.993099 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:21.999077 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:24.005451 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:26.011368 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:28.017652 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:30.025025 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:32.031432 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:34.036799 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:36.042742 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:38.048412 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:40.053884 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:42.059102 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:44.064832 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:46.070574 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:48.076331 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:50.081467 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:52.087796 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:54.094086 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:56.100623 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:24:58.106302 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:00.112388 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:02.118994 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:04.125242 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:06.131322 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:08.136765 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:10.143404 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:12.148896 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:14.155320 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:16.160631 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:18.165779 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:20.172219 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:22.177703 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:24.183710 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:26.190100 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:28.195307 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:30.202313 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:32.207994 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:34.214070 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:36.219327 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:38.225979 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:40.231836 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:42.238758 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:44.244497 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:46.250625 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:48.257001 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:50.263072 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:52.268972 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:54.274195 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:56.281301 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:25:58.286971 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:00.292864 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:02.299046 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:04.305421 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:06.311114 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:08.317084 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:10.322470 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:12.329303 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:14.333952 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:16.340292 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:18.345943 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:20.351584 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:22.357156 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:24.363105 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:26.369033 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:28.375523 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  I0104 13:26:30.382806 18 container_probe.go:1759] Get pod test-grpc-1cf96bf1-c75c-40d0-9fa2-8888cb72c982 in namespace container-probe-196
  STEP: deleting the pod @ 01/04/25 13:26:32.383
  I0104 13:26:32.403159 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-196" for this suite. @ 01/04/25 13:26:32.407
• [242.826 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/04/25 13:26:32.417
  I0104 13:26:32.417714 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replication-controller @ 01/04/25 13:26:32.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:32.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:32.441
  STEP: creating a ReplicationController @ 01/04/25 13:26:32.447
  STEP: waiting for RC to be added @ 01/04/25 13:26:32.454
  STEP: waiting for available Replicas @ 01/04/25 13:26:32.454
  STEP: patching ReplicationController @ 01/04/25 13:26:34.05
  STEP: waiting for RC to be modified @ 01/04/25 13:26:34.06
  STEP: patching ReplicationController status @ 01/04/25 13:26:34.06
  STEP: waiting for RC to be modified @ 01/04/25 13:26:34.065
  STEP: waiting for available Replicas @ 01/04/25 13:26:34.066
  STEP: fetching ReplicationController status @ 01/04/25 13:26:34.073
  STEP: patching ReplicationController scale @ 01/04/25 13:26:34.078
  STEP: waiting for RC to be modified @ 01/04/25 13:26:34.085
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/04/25 13:26:34.085
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/04/25 13:26:34.759
  STEP: updating ReplicationController status @ 01/04/25 13:26:34.763
  STEP: waiting for RC to be modified @ 01/04/25 13:26:34.769
  STEP: listing all ReplicationControllers @ 01/04/25 13:26:34.769
  STEP: checking that ReplicationController has expected values @ 01/04/25 13:26:34.775
  STEP: deleting ReplicationControllers by collection @ 01/04/25 13:26:34.775
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/04/25 13:26:34.786
  I0104 13:26:34.835983 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0104 13:26:34.836087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-445" for this suite. @ 01/04/25 13:26:34.84
• [2.430 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/04/25 13:26:34.847
  I0104 13:26:34.847962 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 13:26:34.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:34.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:34.872
  STEP: creating the pod @ 01/04/25 13:26:34.875
  STEP: submitting the pod to kubernetes @ 01/04/25 13:26:34.875
  E0104 13:26:35.836288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:36.836401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/04/25 13:26:36.9
  STEP: updating the pod @ 01/04/25 13:26:36.905
  I0104 13:26:37.420289 18 pod_client.go:173] Successfully updated pod "pod-update-2efc51b2-2c11-4b27-b75b-d7971d7a3e02"
  STEP: verifying the updated pod is in kubernetes @ 01/04/25 13:26:37.424
  I0104 13:26:37.430747 18 pods.go:391] Pod update OK
  I0104 13:26:37.430954 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-229" for this suite. @ 01/04/25 13:26:37.435
• [2.596 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/04/25 13:26:37.443
  I0104 13:26:37.443713 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 13:26:37.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:37.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:37.466
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 13:26:37.468
  E0104 13:26:37.837011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:38.837244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:39.837333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:40.837438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:26:41.498
  I0104 13:26:41.502289 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-e781d8f0-a66d-445f-a4ee-2e0259b32424 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 13:26:41.518
  I0104 13:26:41.540166 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6616" for this suite. @ 01/04/25 13:26:41.544
• [4.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/04/25 13:26:41.554
  I0104 13:26:41.554062 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename events @ 01/04/25 13:26:41.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:41.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:41.576
  STEP: Create set of events @ 01/04/25 13:26:41.578
  STEP: get a list of Events with a label in the current namespace @ 01/04/25 13:26:41.597
  STEP: delete a list of events @ 01/04/25 13:26:41.601
  I0104 13:26:41.601422 18 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/04/25 13:26:41.634
  I0104 13:26:41.639828 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1554" for this suite. @ 01/04/25 13:26:41.644
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/04/25 13:26:41.653
  I0104 13:26:41.653512 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/04/25 13:26:41.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:41.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:41.674
  E0104 13:26:41.838435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:42.839155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 01/04/25 13:26:43.711
  STEP: Cleaning up the configmap @ 01/04/25 13:26:43.719
  STEP: Cleaning up the pod @ 01/04/25 13:26:43.727
  I0104 13:26:43.741243 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8363" for this suite. @ 01/04/25 13:26:43.745
• [2.102 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/04/25 13:26:43.755
  I0104 13:26:43.755264 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 13:26:43.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:43.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:43.78
  STEP: create the rc @ 01/04/25 13:26:43.782
  W0104 13:26:43.787902      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0104 13:26:43.840139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:44.840354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:45.840585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:46.840831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:47.841162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/04/25 13:26:48.792
  STEP: wait for all pods to be garbage collected @ 01/04/25 13:26:48.801
  E0104 13:26:48.841474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:49.841486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:50.841645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:51.841771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:52.842186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/04/25 13:26:53.81
  W0104 13:26:53.817008      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0104 13:26:53.817038 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0104 13:26:53.817270 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4420" for this suite. @ 01/04/25 13:26:53.821
• [10.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/04/25 13:26:53.83
  I0104 13:26:53.831006 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename proxy @ 01/04/25 13:26:53.831
  E0104 13:26:53.842231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:53.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:53.855
  STEP: starting an echo server on multiple ports @ 01/04/25 13:26:53.876
  STEP: creating replication controller proxy-service-7wk5v in namespace proxy-6591 @ 01/04/25 13:26:53.876
  I0104 13:26:53.884585      18 runners.go:193] Created replication controller with name: proxy-service-7wk5v, namespace: proxy-6591, replica count: 1
  E0104 13:26:54.842396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:26:54.936853      18 runners.go:193] proxy-service-7wk5v Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0104 13:26:55.843431      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:26:55.937709      18 runners.go:193] proxy-service-7wk5v Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0104 13:26:55.943428 18 proxy.go:230] setup took 2.084936663s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/04/25 13:26:55.943
  I0104 13:26:55.948622 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.994068ms)
  I0104 13:26:55.949306 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.594821ms)
  I0104 13:26:55.949310 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.548458ms)
  I0104 13:26:55.950649 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.913167ms)
  I0104 13:26:55.951245 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.32439ms)
  I0104 13:26:55.951733 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.854857ms)
  I0104 13:26:55.952658 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 9.149195ms)
  I0104 13:26:55.952683 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.848167ms)
  I0104 13:26:55.954977 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 11.132691ms)
  I0104 13:26:55.955202 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 11.419381ms)
  I0104 13:26:55.955291 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 11.427962ms)
  I0104 13:26:55.955499 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 11.833727ms)
  I0104 13:26:55.955507 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 11.604022ms)
  I0104 13:26:55.956053 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 12.163538ms)
  I0104 13:26:55.956124 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 12.185072ms)
  I0104 13:26:55.956534 18 proxy.go:558] (0) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 12.735244ms)
  I0104 13:26:55.961247 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.614967ms)
  I0104 13:26:55.962159 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.430163ms)
  I0104 13:26:55.962173 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.485489ms)
  I0104 13:26:55.962152 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 5.499662ms)
  I0104 13:26:55.962303 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 5.42546ms)
  I0104 13:26:55.963594 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.807821ms)
  I0104 13:26:55.963743 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.882073ms)
  I0104 13:26:55.963885 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.137162ms)
  I0104 13:26:55.963901 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 7.327869ms)
  I0104 13:26:55.964191 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 7.347912ms)
  I0104 13:26:55.964207 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 7.503038ms)
  I0104 13:26:55.964217 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 7.417314ms)
  I0104 13:26:55.964898 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.295426ms)
  I0104 13:26:55.965624 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.855858ms)
  I0104 13:26:55.966125 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.299253ms)
  I0104 13:26:55.966141 18 proxy.go:558] (1) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 9.586385ms)
  I0104 13:26:55.970907 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.687516ms)
  I0104 13:26:55.970895 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 4.701585ms)
  I0104 13:26:55.972741 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.359819ms)
  I0104 13:26:55.972803 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.403072ms)
  I0104 13:26:55.972845 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.532352ms)
  I0104 13:26:55.972855 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.433502ms)
  I0104 13:26:55.973103 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.758348ms)
  I0104 13:26:55.973113 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.736262ms)
  I0104 13:26:55.973533 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 7.097919ms)
  I0104 13:26:55.973737 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 7.31778ms)
  I0104 13:26:55.973749 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.419295ms)
  I0104 13:26:55.974245 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 8.084218ms)
  I0104 13:26:55.974814 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.336836ms)
  I0104 13:26:55.975016 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.725646ms)
  I0104 13:26:55.975840 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.439355ms)
  I0104 13:26:55.976662 18 proxy.go:558] (2) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 10.201522ms)
  I0104 13:26:55.981403 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 4.643541ms)
  I0104 13:26:55.982123 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.314396ms)
  I0104 13:26:55.982781 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.799791ms)
  I0104 13:26:55.983077 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.166543ms)
  I0104 13:26:55.983395 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.431959ms)
  I0104 13:26:55.983564 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.56798ms)
  I0104 13:26:55.983789 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.859534ms)
  I0104 13:26:55.983840 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 7.141663ms)
  I0104 13:26:55.983854 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.823088ms)
  I0104 13:26:55.984592 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.70655ms)
  I0104 13:26:55.984815 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 7.769076ms)
  I0104 13:26:55.985022 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.195717ms)
  I0104 13:26:55.985137 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 8.291582ms)
  I0104 13:26:55.985214 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 8.320768ms)
  I0104 13:26:55.986667 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.656206ms)
  I0104 13:26:55.986687 18 proxy.go:558] (3) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 9.742122ms)
  I0104 13:26:55.992272 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.464844ms)
  I0104 13:26:55.992272 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.506278ms)
  I0104 13:26:55.992295 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.507318ms)
  I0104 13:26:55.992763 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.779912ms)
  I0104 13:26:55.992928 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.217562ms)
  I0104 13:26:55.993498 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.595099ms)
  I0104 13:26:55.993972 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.087405ms)
  I0104 13:26:55.994140 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 7.170958ms)
  I0104 13:26:55.994156 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 7.427366ms)
  I0104 13:26:55.994419 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.464871ms)
  I0104 13:26:55.994487 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 7.48891ms)
  I0104 13:26:55.995396 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 8.56905ms)
  I0104 13:26:55.996176 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 9.33102ms)
  I0104 13:26:55.996329 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 9.393324ms)
  I0104 13:26:55.996787 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.924512ms)
  I0104 13:26:55.996975 18 proxy.go:558] (4) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 10.056067ms)
  I0104 13:26:56.002019 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 5.019753ms)
  I0104 13:26:56.002913 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 5.700629ms)
  I0104 13:26:56.002913 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.661007ms)
  I0104 13:26:56.003167 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.046753ms)
  I0104 13:26:56.003396 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.167582ms)
  I0104 13:26:56.004193 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 7.017635ms)
  I0104 13:26:56.004254 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.957283ms)
  I0104 13:26:56.004441 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.398996ms)
  I0104 13:26:56.004641 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.50078ms)
  I0104 13:26:56.004789 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.508303ms)
  I0104 13:26:56.005069 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 7.756181ms)
  I0104 13:26:56.005663 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.571584ms)
  I0104 13:26:56.006081 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 8.923292ms)
  I0104 13:26:56.007412 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 10.079585ms)
  I0104 13:26:56.007920 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 10.725625ms)
  I0104 13:26:56.007976 18 proxy.go:558] (5) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 10.709502ms)
  I0104 13:26:56.012721 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.601413ms)
  I0104 13:26:56.012721 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 4.625235ms)
  I0104 13:26:56.014026 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.793977ms)
  I0104 13:26:56.014523 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.32358ms)
  I0104 13:26:56.014900 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.683195ms)
  I0104 13:26:56.014940 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.607091ms)
  I0104 13:26:56.014953 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 6.77095ms)
  I0104 13:26:56.014955 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.708507ms)
  I0104 13:26:56.014965 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.804854ms)
  I0104 13:26:56.015275 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.971152ms)
  I0104 13:26:56.015580 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 7.565722ms)
  I0104 13:26:56.015820 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 7.677781ms)
  I0104 13:26:56.016237 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 7.97274ms)
  I0104 13:26:56.016350 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 8.333282ms)
  I0104 13:26:56.016711 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.424614ms)
  I0104 13:26:56.016818 18 proxy.go:558] (6) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 8.50274ms)
  I0104 13:26:56.021220 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 4.243493ms)
  I0104 13:26:56.021220 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 4.372782ms)
  I0104 13:26:56.021241 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.30349ms)
  I0104 13:26:56.022899 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.777203ms)
  I0104 13:26:56.022899 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.683838ms)
  I0104 13:26:56.022941 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.778891ms)
  I0104 13:26:56.023502 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.348072ms)
  I0104 13:26:56.023529 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.384189ms)
  I0104 13:26:56.023563 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.383998ms)
  I0104 13:26:56.023606 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.369428ms)
  I0104 13:26:56.024543 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 7.516974ms)
  I0104 13:26:56.024554 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 7.369344ms)
  I0104 13:26:56.024873 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 7.868984ms)
  I0104 13:26:56.025306 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.110517ms)
  I0104 13:26:56.025778 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 8.551159ms)
  I0104 13:26:56.025853 18 proxy.go:558] (7) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.631673ms)
  I0104 13:26:56.030965 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 5.082207ms)
  I0104 13:26:56.031928 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 5.756616ms)
  I0104 13:26:56.032285 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.180096ms)
  I0104 13:26:56.032635 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 6.644679ms)
  I0104 13:26:56.033095 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 7.014354ms)
  I0104 13:26:56.033385 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.353003ms)
  I0104 13:26:56.033588 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.639575ms)
  I0104 13:26:56.033717 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 7.514175ms)
  I0104 13:26:56.033848 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.833887ms)
  I0104 13:26:56.033947 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.759385ms)
  I0104 13:26:56.034115 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 7.976602ms)
  I0104 13:26:56.034472 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 8.349019ms)
  I0104 13:26:56.034856 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.883342ms)
  I0104 13:26:56.034862 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.708103ms)
  I0104 13:26:56.035728 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 9.665223ms)
  I0104 13:26:56.035960 18 proxy.go:558] (8) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.740657ms)
  I0104 13:26:56.040603 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 4.608975ms)
  I0104 13:26:56.041773 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 5.590531ms)
  I0104 13:26:56.041971 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 5.835949ms)
  I0104 13:26:56.042009 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.787726ms)
  I0104 13:26:56.042042 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.000103ms)
  I0104 13:26:56.043384 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 7.114845ms)
  I0104 13:26:56.043449 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 7.152111ms)
  I0104 13:26:56.043482 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 7.279772ms)
  I0104 13:26:56.043812 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 7.746318ms)
  I0104 13:26:56.043820 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.70491ms)
  I0104 13:26:56.043858 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.867745ms)
  I0104 13:26:56.044052 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 7.953006ms)
  I0104 13:26:56.044742 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.659967ms)
  I0104 13:26:56.044908 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 8.653321ms)
  I0104 13:26:56.045280 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 9.093779ms)
  I0104 13:26:56.045889 18 proxy.go:558] (9) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 9.738206ms)
  I0104 13:26:56.050846 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 4.851257ms)
  I0104 13:26:56.050848 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.838233ms)
  I0104 13:26:56.051155 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 4.935962ms)
  I0104 13:26:56.051170 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.206419ms)
  I0104 13:26:56.052164 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.064949ms)
  I0104 13:26:56.052206 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.0146ms)
  I0104 13:26:56.052347 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.230655ms)
  I0104 13:26:56.052527 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.351983ms)
  I0104 13:26:56.052599 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.522ms)
  I0104 13:26:56.052619 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.706239ms)
  I0104 13:26:56.053464 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 7.420043ms)
  I0104 13:26:56.054124 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.197863ms)
  I0104 13:26:56.054527 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 8.392502ms)
  I0104 13:26:56.054571 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 8.510747ms)
  I0104 13:26:56.054850 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.695302ms)
  I0104 13:26:56.055072 18 proxy.go:558] (10) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 9.047518ms)
  I0104 13:26:56.059938 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 4.835327ms)
  I0104 13:26:56.060706 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 5.380628ms)
  I0104 13:26:56.060991 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.844756ms)
  I0104 13:26:56.061885 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.541762ms)
  I0104 13:26:56.061901 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.661973ms)
  I0104 13:26:56.061908 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.634812ms)
  I0104 13:26:56.062085 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.831059ms)
  I0104 13:26:56.062314 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 7.148481ms)
  I0104 13:26:56.062953 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 7.731688ms)
  I0104 13:26:56.063273 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 7.916645ms)
  I0104 13:26:56.063484 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 8.302492ms)
  I0104 13:26:56.063909 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.619308ms)
  I0104 13:26:56.064200 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.82554ms)
  I0104 13:26:56.064943 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 9.850088ms)
  I0104 13:26:56.065253 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.945824ms)
  I0104 13:26:56.065498 18 proxy.go:558] (11) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 10.294224ms)
  I0104 13:26:56.069721 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 4.144491ms)
  I0104 13:26:56.070856 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 5.238941ms)
  I0104 13:26:56.071175 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.448242ms)
  I0104 13:26:56.071658 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.06057ms)
  I0104 13:26:56.071693 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 5.88881ms)
  I0104 13:26:56.072498 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.680188ms)
  I0104 13:26:56.072496 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.724483ms)
  I0104 13:26:56.072529 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.783531ms)
  I0104 13:26:56.073355 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 7.716664ms)
  I0104 13:26:56.073473 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 7.945287ms)
  I0104 13:26:56.073491 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.973299ms)
  I0104 13:26:56.073668 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 7.974191ms)
  I0104 13:26:56.074135 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.297493ms)
  I0104 13:26:56.074491 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 8.834788ms)
  I0104 13:26:56.074816 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.104116ms)
  I0104 13:26:56.075350 18 proxy.go:558] (12) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.562126ms)
  I0104 13:26:56.079499 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 4.090931ms)
  I0104 13:26:56.079825 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.456206ms)
  I0104 13:26:56.080157 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 4.717586ms)
  I0104 13:26:56.080838 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.235998ms)
  I0104 13:26:56.082185 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.523592ms)
  I0104 13:26:56.082184 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.417029ms)
  I0104 13:26:56.082208 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.624906ms)
  I0104 13:26:56.082217 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.524302ms)
  I0104 13:26:56.082438 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 6.692988ms)
  I0104 13:26:56.082451 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.724607ms)
  I0104 13:26:56.083510 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 7.794682ms)
  I0104 13:26:56.083521 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 8.015582ms)
  I0104 13:26:56.084287 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.756384ms)
  I0104 13:26:56.084843 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 9.199997ms)
  I0104 13:26:56.084844 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.225838ms)
  I0104 13:26:56.085089 18 proxy.go:558] (13) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.539071ms)
  I0104 13:26:56.089184 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 4.07221ms)
  I0104 13:26:56.089184 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 4.026627ms)
  I0104 13:26:56.089600 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 4.380687ms)
  I0104 13:26:56.090665 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 5.336313ms)
  I0104 13:26:56.090684 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.365768ms)
  I0104 13:26:56.090897 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.532098ms)
  I0104 13:26:56.090920 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.573729ms)
  I0104 13:26:56.091035 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 5.747251ms)
  I0104 13:26:56.091053 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.674922ms)
  I0104 13:26:56.091057 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.818093ms)
  I0104 13:26:56.092659 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 7.47353ms)
  I0104 13:26:56.093142 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 7.74609ms)
  I0104 13:26:56.093142 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 7.705987ms)
  I0104 13:26:56.093283 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.009773ms)
  I0104 13:26:56.094099 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 8.641491ms)
  I0104 13:26:56.094596 18 proxy.go:558] (14) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.339468ms)
  I0104 13:26:56.098868 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 4.203197ms)
  I0104 13:26:56.099660 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 4.959243ms)
  I0104 13:26:56.100038 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.178581ms)
  I0104 13:26:56.100084 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 5.216576ms)
  I0104 13:26:56.100429 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.702643ms)
  I0104 13:26:56.100430 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.685397ms)
  I0104 13:26:56.100575 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 5.811059ms)
  I0104 13:26:56.100763 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 5.930172ms)
  I0104 13:26:56.100936 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 6.316018ms)
  I0104 13:26:56.100940 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.156337ms)
  I0104 13:26:56.101727 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.106574ms)
  I0104 13:26:56.102530 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 7.712762ms)
  I0104 13:26:56.102802 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 7.88005ms)
  I0104 13:26:56.102888 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.000655ms)
  I0104 13:26:56.104274 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 9.473694ms)
  I0104 13:26:56.104287 18 proxy.go:558] (15) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 9.382485ms)
  I0104 13:26:56.108133 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 3.825409ms)
  I0104 13:26:56.109875 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.307108ms)
  I0104 13:26:56.109882 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.276335ms)
  I0104 13:26:56.110091 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.508298ms)
  I0104 13:26:56.110306 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 5.663349ms)
  I0104 13:26:56.110910 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.366052ms)
  I0104 13:26:56.111114 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 6.623863ms)
  I0104 13:26:56.111178 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.728171ms)
  I0104 13:26:56.111693 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.223743ms)
  I0104 13:26:56.111793 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 7.172332ms)
  I0104 13:26:56.111935 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 7.426979ms)
  I0104 13:26:56.112514 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 8.148923ms)
  I0104 13:26:56.112726 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 8.392252ms)
  I0104 13:26:56.113137 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.607912ms)
  I0104 13:26:56.113707 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 9.322219ms)
  I0104 13:26:56.114092 18 proxy.go:558] (16) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.66323ms)
  I0104 13:26:56.118843 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 4.72495ms)
  I0104 13:26:56.118843 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 4.401019ms)
  I0104 13:26:56.120507 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.267072ms)
  I0104 13:26:56.120583 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 6.179325ms)
  I0104 13:26:56.120781 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 6.442511ms)
  I0104 13:26:56.120960 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.705668ms)
  I0104 13:26:56.120971 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 6.600195ms)
  I0104 13:26:56.121121 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.799528ms)
  I0104 13:26:56.121320 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 7.049821ms)
  I0104 13:26:56.121330 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 7.025285ms)
  I0104 13:26:56.122186 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 7.83162ms)
  I0104 13:26:56.122344 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 8.181584ms)
  I0104 13:26:56.122729 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 8.32146ms)
  I0104 13:26:56.123135 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.847477ms)
  I0104 13:26:56.123688 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 9.486594ms)
  I0104 13:26:56.124104 18 proxy.go:558] (17) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 9.681503ms)
  I0104 13:26:56.128315 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 4.154519ms)
  I0104 13:26:56.130450 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 6.318645ms)
  I0104 13:26:56.130865 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 6.471466ms)
  I0104 13:26:56.131179 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 6.770515ms)
  I0104 13:26:56.131390 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 7.164169ms)
  I0104 13:26:56.131937 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 7.608112ms)
  I0104 13:26:56.131964 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.603506ms)
  I0104 13:26:56.132939 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 8.627112ms)
  I0104 13:26:56.133321 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 9.075369ms)
  I0104 13:26:56.133321 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 8.976211ms)
  I0104 13:26:56.135005 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 10.544321ms)
  I0104 13:26:56.135130 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 10.838601ms)
  I0104 13:26:56.135139 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 10.712283ms)
  I0104 13:26:56.135659 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 11.216043ms)
  I0104 13:26:56.136023 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 11.646684ms)
  I0104 13:26:56.136290 18 proxy.go:558] (18) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 12.029588ms)
  I0104 13:26:56.141611 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 5.203765ms)
  I0104 13:26:56.141792 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">... (200; 5.427735ms)
  I0104 13:26:56.141790 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 5.405286ms)
  I0104 13:26:56.143140 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g/proxy/rewriteme">test</a> (200; 6.592245ms)
  I0104 13:26:56.144130 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:1080/proxy/rewriteme">test<... (200; 7.531251ms)
  I0104 13:26:56.144225 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/http:proxy-service-7wk5v-6jm8g:162/proxy/: bar (200; 7.733171ms)
  I0104 13:26:56.144488 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname1/proxy/: tls baz (200; 8.144147ms)
  I0104 13:26:56.144935 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:462/proxy/: tls qux (200; 8.31963ms)
  I0104 13:26:56.145305 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:460/proxy/: tls baz (200; 8.722618ms)
  I0104 13:26:56.145482 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/: <a href="/api/v1/namespaces/proxy-6591/pods/https:proxy-service-7wk5v-6jm8g:443/proxy/tlsrewritem... (200; 9.170374ms)
  I0104 13:26:56.145487 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/pods/proxy-service-7wk5v-6jm8g:160/proxy/: foo (200; 8.922372ms)
  I0104 13:26:56.146797 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname1/proxy/: foo (200; 10.375698ms)
  I0104 13:26:56.146929 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname1/proxy/: foo (200; 10.417782ms)
  I0104 13:26:56.146964 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/services/http:proxy-service-7wk5v:portname2/proxy/: bar (200; 10.434125ms)
  I0104 13:26:56.147056 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/services/proxy-service-7wk5v:portname2/proxy/: bar (200; 10.612738ms)
  I0104 13:26:56.147076 18 proxy.go:558] (19) /api/v1/namespaces/proxy-6591/services/https:proxy-service-7wk5v:tlsportname2/proxy/: tls qux (200; 10.599737ms)
  STEP: deleting ReplicationController proxy-service-7wk5v in namespace proxy-6591, will wait for the garbage collector to delete the pods @ 01/04/25 13:26:56.147
  I0104 13:26:56.210410 18 resources.go:139] Deleting ReplicationController proxy-service-7wk5v took: 8.95856ms
  I0104 13:26:56.311256 18 resources.go:163] Terminating ReplicationController proxy-service-7wk5v pods took: 100.843981ms
  E0104 13:26:56.843837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:57.844534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:26:58.844964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:26:59.212372 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6591" for this suite. @ 01/04/25 13:26:59.217
• [5.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/04/25 13:26:59.227
  I0104 13:26:59.227516 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename disruption @ 01/04/25 13:26:59.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:26:59.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:26:59.249
  STEP: Waiting for the pdb to be processed @ 01/04/25 13:26:59.257
  E0104 13:26:59.845160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:00.845376      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 01/04/25 13:27:01.262
  STEP: Waiting for all pods to be running @ 01/04/25 13:27:01.273
  I0104 13:27:01.281920 18 disruption.go:691] running pods: 0 < 1
  E0104 13:27:01.845586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:02.846013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 01/04/25 13:27:03.279
  STEP: Waiting for the pdb to be processed @ 01/04/25 13:27:03.297
  STEP: Patching PodDisruptionBudget status @ 01/04/25 13:27:03.305
  STEP: Waiting for the pdb to be processed @ 01/04/25 13:27:03.316
  I0104 13:27:03.321718 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1215" for this suite. @ 01/04/25 13:27:03.325
• [4.106 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/04/25 13:27:03.333
  I0104 13:27:03.334044 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:27:03.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:03.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:03.353
  STEP: Setting up server cert @ 01/04/25 13:27:03.382
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:27:03.711
  STEP: Deploying the webhook pod @ 01/04/25 13:27:03.722
  STEP: Wait for the deployment to be ready @ 01/04/25 13:27:03.737
  I0104 13:27:03.747935 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:27:03.846103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:04.846506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:27:05.763
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:27:05.776
  E0104 13:27:05.847223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:06.776989 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/04/25 13:27:06.786
  I0104 13:27:06.833953 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-161" for this suite. @ 01/04/25 13:27:06.84
  E0104 13:27:06.847521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-5848" for this suite. @ 01/04/25 13:27:06.848
• [3.524 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/04/25 13:27:06.858
  I0104 13:27:06.858350 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 13:27:06.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:06.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:06.878
  STEP: creating a secret @ 01/04/25 13:27:06.881
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/04/25 13:27:06.887
  STEP: patching the secret @ 01/04/25 13:27:06.891
  STEP: deleting the secret using a LabelSelector @ 01/04/25 13:27:06.901
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/04/25 13:27:06.91
  I0104 13:27:06.914661 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5625" for this suite. @ 01/04/25 13:27:06.918
• [0.068 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/04/25 13:27:06.926
  I0104 13:27:06.926100 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-runtime @ 01/04/25 13:27:06.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:06.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:06.949
  STEP: create the container @ 01/04/25 13:27:06.951
  W0104 13:27:06.963353      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/04/25 13:27:06.963
  E0104 13:27:07.848353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:08.848911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/04/25 13:27:08.98
  STEP: the container should be terminated @ 01/04/25 13:27:08.984
  STEP: the termination message should be set @ 01/04/25 13:27:08.984
  I0104 13:27:08.984574 18 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/04/25 13:27:08.984
  I0104 13:27:09.008527 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1223" for this suite. @ 01/04/25 13:27:09.012
• [2.094 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/04/25 13:27:09.02
  I0104 13:27:09.020211 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:27:09.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:09.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:09.046
  STEP: Counting existing ResourceQuota @ 01/04/25 13:27:09.048
  E0104 13:27:09.849024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:10.849899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:11.849981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:12.850197      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:13.851035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/04/25 13:27:14.053
  STEP: Ensuring resource quota status is calculated @ 01/04/25 13:27:14.059
  E0104 13:27:14.852080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:15.852388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:16.065120 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9104" for this suite. @ 01/04/25 13:27:16.07
• [7.060 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/04/25 13:27:16.08
  I0104 13:27:16.080602 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 13:27:16.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:16.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:16.106
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/04/25 13:27:16.109
  I0104 13:27:16.109603 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:27:16.853281      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:17.853727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:18.854396      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:19.854924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:20.855162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/04/25 13:27:21.084
  I0104 13:27:21.085264 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:27:21.855665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:22.374002 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:27:22.856697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:23.856916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:24.866318      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:25.866742      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:26.867598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:27.363849 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9455" for this suite. @ 01/04/25 13:27:27.371
• [11.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/04/25 13:27:27.38
  I0104 13:27:27.380426 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 13:27:27.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:27.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:27.405
  STEP: set up a multi version CRD @ 01/04/25 13:27:27.407
  I0104 13:27:27.408003 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:27:27.868075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:28.868925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:29.869580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 01/04/25 13:27:30.5
  STEP: check the new version name is served @ 01/04/25 13:27:30.514
  E0104 13:27:30.869535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 01/04/25 13:27:31.302
  E0104 13:27:31.882783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 01/04/25 13:27:31.929
  E0104 13:27:32.883214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:33.883530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:34.384634 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2671" for this suite. @ 01/04/25 13:27:34.394
• [7.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/04/25 13:27:34.405
  I0104 13:27:34.405116 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 13:27:34.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:34.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:34.425
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/04/25 13:27:34.454
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/04/25 13:27:34.461
  I0104 13:27:34.466996 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:34.467031 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:34.470012 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 13:27:34.470037 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  E0104 13:27:34.883604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:35.468066 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:35.468105 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:35.473250 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0104 13:27:35.473273 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  E0104 13:27:35.883723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:36.466046 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:36.466089 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:36.470856 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 13:27:36.470882 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/04/25 13:27:36.474
  I0104 13:27:36.493761 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:36.493792 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:36.500234 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 13:27:36.500254 18 fixtures.go:130] Node ip-172-31-8-94 is running 0 daemon pod, expected 1
  E0104 13:27:36.883778      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:37.493696 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:37.493740 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:27:37.497392 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 13:27:37.497409 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/04/25 13:27:37.497
  STEP: Deleting DaemonSet "daemon-set" @ 01/04/25 13:27:37.507
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2959, will wait for the garbage collector to delete the pods @ 01/04/25 13:27:37.507
  I0104 13:27:37.572285 18 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.75123ms
  I0104 13:27:37.672783 18 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.492195ms
  E0104 13:27:37.884438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:38.885411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:39.279196 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 13:27:39.279232 18 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0104 13:27:39.284700 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35581"},"items":null}

  I0104 13:27:39.289832 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35581"},"items":null}

  I0104 13:27:39.305923 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2959" for this suite. @ 01/04/25 13:27:39.311
• [4.917 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/04/25 13:27:39.322
  I0104 13:27:39.322537 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:27:39.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:27:39.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:27:39.339
  STEP: Creating resourceQuota "e2e-rq-status-m697g" @ 01/04/25 13:27:39.347
  I0104 13:27:39.358592 18 resource_quota.go:1102] Resource quota "e2e-rq-status-m697g" reports spec: hard cpu limit of 500m
  I0104 13:27:39.358624 18 resource_quota.go:1104] Resource quota "e2e-rq-status-m697g" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-m697g" /status @ 01/04/25 13:27:39.358
  STEP: Confirm /status for "e2e-rq-status-m697g" resourceQuota via watch @ 01/04/25 13:27:39.367
  I0104 13:27:39.369406 18 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-m697g" in namespace "resourcequota-4082" with hard status: v1.ResourceList(nil)
  I0104 13:27:39.369520 18 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-m697g" in namespace "resourcequota-4082" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0104 13:27:39.369536 18 resource_quota.go:1141] ResourceQuota "e2e-rq-status-m697g" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/04/25 13:27:39.374
  I0104 13:27:39.381745 18 resource_quota.go:1152] Resource quota "e2e-rq-status-m697g" reports spec: hard cpu limit of 1
  I0104 13:27:39.381784 18 resource_quota.go:1153] Resource quota "e2e-rq-status-m697g" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-m697g" /status @ 01/04/25 13:27:39.381
  STEP: Confirm /status for "e2e-rq-status-m697g" resourceQuota via watch @ 01/04/25 13:27:39.388
  I0104 13:27:39.389871 18 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-m697g" in namespace "resourcequota-4082" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0104 13:27:39.389917 18 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-m697g" in namespace "resourcequota-4082" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0104 13:27:39.389931 18 resource_quota.go:1185] ResourceQuota "e2e-rq-status-m697g" /status was patched
  STEP: Get "e2e-rq-status-m697g" /status @ 01/04/25 13:27:39.389
  I0104 13:27:39.395313 18 resource_quota.go:1196] Resourcequota "e2e-rq-status-m697g" reports status: hard cpu of 1
  I0104 13:27:39.395334 18 resource_quota.go:1198] Resourcequota "e2e-rq-status-m697g" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-m697g" /status before checking Spec is unchanged @ 01/04/25 13:27:39.4
  I0104 13:27:39.406765 18 resource_quota.go:1218] Resourcequota "e2e-rq-status-m697g" reports status: hard cpu of 2
  I0104 13:27:39.406797 18 resource_quota.go:1220] Resourcequota "e2e-rq-status-m697g" reports status: hard memory of 2Gi
  I0104 13:27:39.408412 18 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-m697g" in namespace "resourcequota-4082" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0104 13:27:39.413531 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037160a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037160f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:27:39.886135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:40.886301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:41.886522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:42.886941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:43.886931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:44.413660 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037163c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:27:44.887022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:45.887810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:46.887851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:47.888792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:48.888873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:49.415196 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037165b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:27:49.890877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:50.891320      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:51.891790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:52.891991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:53.892397      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:54.412933 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458b668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458b6c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458b710), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:27:54.892422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:55.892769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:56.892878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:57.893461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:27:58.894529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:27:59.415000 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458b938), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458b980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458b9b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:27:59.894786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:00.895039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:01.895489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:02.895816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:03.896135      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:04.415961 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716990), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037169c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:04.896793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:05.896888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:06.897031      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:07.897342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:08.897466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:09.412800 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716c60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:09.898746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:10.898806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:11.899893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:12.900249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:13.900873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:14.415578 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003716f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:14.901893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:15.902891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:16.904042      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:17.904358      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:18.904613      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:19.414782 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037171a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037171e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:19.904934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:20.905874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:21.905957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:22.906332      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:23.907189      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:24.412924 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458bcf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458bd40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00458bd88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:24.907288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:25.907494      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:26.908203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:27.908239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:28.908877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:29.414274 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037174a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717500), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:29.909506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:30.909873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:31.910064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:32.910385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:33.910658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:34.415162 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e2a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:34.910761      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:35.910874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:36.911881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:37.912236      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:38.912457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:39.413061 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:39.912597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:40.912987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:41.913869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:42.914336      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:43.914881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:44.414864 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e9c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:44.915467      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:45.915698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:46.915850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:47.916218      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:48.916326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:49.413750 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717848), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:49.916878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:50.917951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:51.918054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:52.918374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:53.918475      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:54.414820 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131eca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131ed38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131ed68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:54.918880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:55.919872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:56.920063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:57.920352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:28:58.920597      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:28:59.414648 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717aa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717b18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717b60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:28:59.920885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:00.920993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:01.921257      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:02.921753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:03.921851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:04.413084 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717db8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003717de8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:04.922668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:05.922870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:06.923083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:07.923433      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:08.923627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:09.415505 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044580a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:09.923806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:10.923995      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:11.924210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:12.924793      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:13.924993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:14.414285 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044584b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:14.925903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:15.926099      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:16.926193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:17.926549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:18.926767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:19.414880 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044587c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:19.927522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:20.927737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:21.927817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:22.928170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:23.928868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:24.415468 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f260), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f2a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:24.929866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:25.929975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:26.930871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:27.931123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:28.931348      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:29.414912 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458b28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458b70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458c00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:29.931523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:30.931786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:31.932049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:32.932436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:33.932563      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:34.415178 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f5a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f5d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:34.932810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:35.932812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:36.933148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:37.933512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:38.933916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:39.414888 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e1e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:39.934462      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:40.934600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:41.934960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:42.935312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:43.935870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:44.414646 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e4f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e5a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:44.936080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:45.936170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:46.937148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:47.937191      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:48.937286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:49.413044 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044581f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:49.937355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:50.937610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:51.937755      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:52.938083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:53.938881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:54.414042 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131e930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:54.939639      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:55.939812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:56.939917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:57.940335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:29:58.940432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:29:59.414169 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131ebd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131ec30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131ec78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:29:59.940559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:00.940814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:01.940929      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:02.941249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:03.941454      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:04.413014 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:04.941582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:05.941802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:06.942011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:07.942359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:08.942582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:09.414610 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044588e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044589a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:09.942818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:10.943012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:11.943263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:12.944120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:13.944246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:14.414778 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458c90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:14.944316      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:15.944881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:16.945087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:17.946120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:18.946209      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:19.412632 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004458fa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:19.947275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:20.948025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:21.948123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:22.948640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:23.948815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:24.415053 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044592c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459380), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:24.949662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:25.949815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:26.950067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:27.950393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:28.950613      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:29.415518 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044595c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044596b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:29.950767      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:30.950870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:31.951874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:32.952483      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:33.952614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:34.412794 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044599b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:34.953389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:35.953720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:36.953914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:37.954259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:38.954384      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:39.414353 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459c38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459c68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004459ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:39.954562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:40.954788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:41.955021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:42.955424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:43.955644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:44.415080 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001340c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001340f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000134120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:44.956720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:45.956819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:46.956909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:47.957267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:48.957370      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:49.413526 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f3c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:49.957906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:50.958022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:51.958886      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:52.959269      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:53.959885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:54.415044 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f9b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131f9f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131fa58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:54.960806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:55.961024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:56.961218      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:57.961631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:30:58.961810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:30:59.413850 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000134c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001353b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000135dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:30:59.962333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:00.962548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:01.962764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:02.963202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:03.963411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:04.414390 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:04.963811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:05.963944      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:06.964157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:07.964219      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:08.964445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:09.415044 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131fe00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131fe60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00131fea8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:09.964654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:10.964935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:11.965055      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:12.965400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:13.965669      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:14.413400 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b41c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:14.965892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:15.966039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:16.966278      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:17.967146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:18.967868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:19.415580 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b43d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:19.968912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:20.969906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:21.970017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:22.970347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:23.970888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:24.414460 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b45b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b45e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:24.971015      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:25.972069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:26.972174      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:27.972746      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:28.972952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:29.412868 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564cf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:29.973424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:30.973521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:31.973798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:32.974303      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:33.974432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:34.414591 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:34.974640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:35.974728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:36.974941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:37.975644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:38.975812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:39.415139 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005641b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005642e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:39.976788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:40.976967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:41.977085      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:42.977412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:43.978349      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:44.413066 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b41b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b41e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:44.978604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:45.978889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:46.979881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:47.980290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:48.980504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:49.414525 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b43c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b43f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:49.981115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:50.981863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:51.982044      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:52.982458      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:53.982879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:54.415460 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b45d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:54.983148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:55.983350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:56.983504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:57.983904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:31:58.984114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:31:59.412963 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005648b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005649d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:31:59.984241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:00.984457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:01.984873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:02.985232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:03.985432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:04.414830 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b4870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045b48a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:32:04.985500      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:05.985745      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:06.986017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:07.986151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:08.986418      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:09.414851 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000564fc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000565140), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005651a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:32:09.987469      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:10.987563      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:11.987662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:12.987913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:13.987980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:14.413048 18 resource_quota.go:1263] ResourceQuota "e2e-rq-status-m697g" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-m697g", GenerateName:"", Namespace:"resourcequota-4082", SelfLink:"", UID:"ed2aa6c8-e794-49ec-9011-91d3b64588f7", ResourceVersion:"35593", Generation:0, CreationTimestamp:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-m697g"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000565608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000565698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 4, 13, 27, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005656f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0104 13:32:14.988718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:15.988814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:16.989889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:17.990245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:18.990345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:19.412883 18 resource_quota.go:1260] ResourceQuota "e2e-rq-status-m697g" Spec was unchanged and /status reset
  I0104 13:32:19.413023 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4082" for this suite. @ 01/04/25 13:32:19.418
• [280.107 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/04/25 13:32:19.429
  I0104 13:32:19.429715 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/04/25 13:32:19.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:32:19.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:32:19.45
  I0104 13:32:19.453325 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:32:19.991425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:20.991509      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:21.992405      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:22.515817 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6984" for this suite. @ 01/04/25 13:32:22.519
• [3.106 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/04/25 13:32:22.535
  I0104 13:32:22.535964 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:32:22.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:32:22.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:32:22.557
  STEP: Setting up server cert @ 01/04/25 13:32:22.587
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:32:22.8
  STEP: Deploying the webhook pod @ 01/04/25 13:32:22.811
  STEP: Wait for the deployment to be ready @ 01/04/25 13:32:22.826
  I0104 13:32:22.843446 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:32:22.992543      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:23.992712      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:32:24.858
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:32:24.876
  E0104 13:32:24.993503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:25.876367 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/04/25 13:32:25.883
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/04/25 13:32:25.9
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/04/25 13:32:25.907
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/04/25 13:32:25.918
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/04/25 13:32:25.934
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/04/25 13:32:25.943
  E0104 13:32:25.994096      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:26.002309 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2269" for this suite. @ 01/04/25 13:32:26.01
  STEP: Destroying namespace "webhook-markers-1389" for this suite. @ 01/04/25 13:32:26.018
• [3.490 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/04/25 13:32:26.026
  I0104 13:32:26.026422 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename runtimeclass @ 01/04/25 13:32:26.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:32:26.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:32:26.048
  E0104 13:32:26.994897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:27.995004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:28.087693 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8373" for this suite. @ 01/04/25 13:32:28.093
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/04/25 13:32:28.1
  I0104 13:32:28.100854 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replication-controller @ 01/04/25 13:32:28.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:32:28.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:32:28.124
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/04/25 13:32:28.127
  E0104 13:32:28.995132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:29.995355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 01/04/25 13:32:30.154
  STEP: Then the orphan pod is adopted @ 01/04/25 13:32:30.162
  E0104 13:32:30.996838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:32:31.173794 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7964" for this suite. @ 01/04/25 13:32:31.176
• [3.087 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/04/25 13:32:31.188
  I0104 13:32:31.188193 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:32:31.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:32:31.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:32:31.206
  STEP: Creating secret with name s-test-opt-del-e65881ad-55c8-471d-b595-9d3e99da2a0a @ 01/04/25 13:32:31.215
  STEP: Creating secret with name s-test-opt-upd-0e5a4657-eb3e-41a1-8191-90dea67e0343 @ 01/04/25 13:32:31.221
  STEP: Creating the pod @ 01/04/25 13:32:31.225
  E0104 13:32:31.997036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:32.997432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e65881ad-55c8-471d-b595-9d3e99da2a0a @ 01/04/25 13:32:33.285
  STEP: Updating secret s-test-opt-upd-0e5a4657-eb3e-41a1-8191-90dea67e0343 @ 01/04/25 13:32:33.292
  STEP: Creating secret with name s-test-opt-create-1e002ac3-89dd-4f66-a4a4-7fd07bc68365 @ 01/04/25 13:32:33.299
  STEP: waiting to observe update in volume @ 01/04/25 13:32:33.304
  E0104 13:32:33.998299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:34.998387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:35.998477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:36.998913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:37.999383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:38.999595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:39.999927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:41.001077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:42.000990      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:43.001366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:44.002331      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:45.002555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:46.002843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:47.003069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:48.003158      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:49.003255      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:50.003420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:51.003651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:52.003720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:53.003832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:54.003952      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:55.004071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:56.004206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:57.004337      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:58.004810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:32:59.005032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:00.005192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:01.005311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:02.005408      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:03.005834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:04.005892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:05.006038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:06.006181      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:07.006365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:08.006736      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:09.006873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:10.007768      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:11.007831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:12.007996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:13.008317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:14.008888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:15.008986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:16.009971      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:17.010114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:18.010891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:19.011115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:20.011887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:21.012126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:22.012839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:23.013333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:24.013461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:25.013610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:26.014501      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:27.014751      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:28.015035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:29.015254      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:30.015659      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:31.015872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:32.016640      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:33.017192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:34.017974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:35.018311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:36.018905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:37.019906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:38.020903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:39.021904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:40.022001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:41.022233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:42.022835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:43.023241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:44.023894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:45.024032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:46.024206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:47.024903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:48.025203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:49.025366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:50.026166      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:51.026246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:52.026760      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:53.027037      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:54.027151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:55.027211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:56.027908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:57.028010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:33:57.789968 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2560" for this suite. @ 01/04/25 13:33:57.795
• [86.620 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 01/04/25 13:33:57.807
  I0104 13:33:57.808027 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 13:33:57.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:33:57.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:33:57.825
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/04/25 13:33:57.828
  I0104 13:33:57.839766 18 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-422  a2013113-79dd-4bfe-8f4c-9c35b49a16e0 36563 0 2025-01-04 13:33:57 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-04 13:33:57 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qhtjq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qhtjq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0104 13:33:58.028922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:33:59.029110      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/04/25 13:33:59.852
  I0104 13:33:59.853005 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-422 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:33:59.853023 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:33:59.853493 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:33:59.853534 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-422/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/04/25 13:33:59.935
  I0104 13:33:59.935641 18 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-422 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:33:59.935660 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:33:59.936344 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:33:59.936397 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-422/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0104 13:33:59.981470 18 dns.go:423] Deleting pod test-dns-nameservers...
  I0104 13:33:59.997567 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-422" for this suite. @ 01/04/25 13:34:00.005
• [2.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/04/25 13:34:00.012
  I0104 13:34:00.012853 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:34:00.014
  E0104 13:34:00.029156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:34:00.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:34:00.036
  STEP: creating service multi-endpoint-test in namespace services-5704 @ 01/04/25 13:34:00.039
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5704 to expose endpoints map[] @ 01/04/25 13:34:00.052
  I0104 13:34:00.060403 18 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0104 13:34:01.029285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:34:01.071748 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5704 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5704 @ 01/04/25 13:34:01.071
  E0104 13:34:02.029851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:03.030231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5704 to expose endpoints map[pod1:[100]] @ 01/04/25 13:34:03.098
  I0104 13:34:03.110709 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5704 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5704 @ 01/04/25 13:34:03.11
  E0104 13:34:04.030323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:05.030485      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5704 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/04/25 13:34:05.134
  I0104 13:34:05.152430 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5704 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/04/25 13:34:05.152
  I0104 13:34:05.152498 18 resource.go:361] Creating new exec pod
  E0104 13:34:06.030607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:07.030843      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:08.031286      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:34:08.174659 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5704 exec execpod945p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0104 13:34:08.266527 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0104 13:34:08.266580 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:34:08.266663 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5704 exec execpod945p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.209 80'
  I0104 13:34:08.354854 18 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.209 80\n+ echo hostName\nConnection to 10.152.183.209 80 port [tcp/http] succeeded!\n"
  I0104 13:34:08.354948 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:34:08.355077 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5704 exec execpod945p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0104 13:34:08.441420 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0104 13:34:08.441468 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:34:08.441593 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-5704 exec execpod945p5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.209 81'
  I0104 13:34:08.524265 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.209 81\nConnection to 10.152.183.209 81 port [tcp/*] succeeded!\n"
  I0104 13:34:08.524314 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5704 @ 01/04/25 13:34:08.524
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5704 to expose endpoints map[pod2:[101]] @ 01/04/25 13:34:08.544
  I0104 13:34:08.561060 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5704 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5704 @ 01/04/25 13:34:08.561
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5704 to expose endpoints map[] @ 01/04/25 13:34:08.582
  I0104 13:34:08.593984 18 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5704 exposes endpoints map[]
  I0104 13:34:08.617927 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5704" for this suite. @ 01/04/25 13:34:08.622
• [8.617 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/04/25 13:34:08.63
  I0104 13:34:08.630106 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubelet-test @ 01/04/25 13:34:08.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:34:08.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:34:08.662
  E0104 13:34:09.032052      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:10.032145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:34:10.709290 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6668" for this suite. @ 01/04/25 13:34:10.714
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/04/25 13:34:10.724
  I0104 13:34:10.724073 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:34:10.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:34:10.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:34:10.744
  STEP: Setting up server cert @ 01/04/25 13:34:10.77
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:34:11.01
  STEP: Deploying the webhook pod @ 01/04/25 13:34:11.019
  E0104 13:34:11.032495      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 01/04/25 13:34:11.033
  I0104 13:34:11.040551 18 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0104 13:34:12.032698      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:13.033204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:34:13.056
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:34:13.071
  E0104 13:34:14.033264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:34:14.071485 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/04/25 13:34:14.078
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/04/25 13:34:14.092
  STEP: Creating a dummy validating-webhook-configuration object @ 01/04/25 13:34:14.107
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/04/25 13:34:14.119
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/04/25 13:34:14.127
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/04/25 13:34:14.139
  I0104 13:34:14.208984 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6559" for this suite. @ 01/04/25 13:34:14.214
  STEP: Destroying namespace "webhook-markers-1189" for this suite. @ 01/04/25 13:34:14.224
• [3.508 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/04/25 13:34:14.232
  I0104 13:34:14.232298 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pod-network-test @ 01/04/25 13:34:14.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:34:14.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:34:14.251
  STEP: Performing setup for networking test in namespace pod-network-test-6773 @ 01/04/25 13:34:14.254
  STEP: creating a selector @ 01/04/25 13:34:14.254
  STEP: Creating the service pods in kubernetes @ 01/04/25 13:34:14.254
  I0104 13:34:14.254756 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0104 13:34:15.033367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:16.033511      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:17.033845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:18.034334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:19.034906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:20.035125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:21.035703      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:22.035924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:23.036317      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:24.036557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:25.036635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:26.036762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:27.036962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:28.037183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:29.037315      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:30.037507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:31.037987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:32.038059      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:33.038897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:34.039888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:35.040903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:36.041125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/04/25 13:34:36.383
  E0104 13:34:37.041272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:38.041668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:34:38.405409 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0104 13:34:38.405443 18 networking.go:42] Breadth first check of 192.168.113.56 on host 172.31.18.169...
  I0104 13:34:38.408569 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.104.157:9080/dial?request=hostname&protocol=udp&host=192.168.113.56&port=8081&tries=1'] Namespace:pod-network-test-6773 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:34:38.408594 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:34:38.409054 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:34:38.409106 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6773/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.104.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.113.56%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0104 13:34:38.457362 18 utils.go:356] Waiting for responses: map[]
  I0104 13:34:38.457403 18 utils.go:360] reached 192.168.113.56 after 0/1 tries
  I0104 13:34:38.457413 18 networking.go:42] Breadth first check of 192.168.159.105 on host 172.31.76.68...
  I0104 13:34:38.462793 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.104.157:9080/dial?request=hostname&protocol=udp&host=192.168.159.105&port=8081&tries=1'] Namespace:pod-network-test-6773 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:34:38.462817 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:34:38.463246 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:34:38.463286 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6773/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.104.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.159.105%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0104 13:34:38.505834 18 utils.go:356] Waiting for responses: map[]
  I0104 13:34:38.505866 18 utils.go:360] reached 192.168.159.105 after 0/1 tries
  I0104 13:34:38.505876 18 networking.go:42] Breadth first check of 192.168.104.167 on host 172.31.8.94...
  I0104 13:34:38.511092 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.104.157:9080/dial?request=hostname&protocol=udp&host=192.168.104.167&port=8081&tries=1'] Namespace:pod-network-test-6773 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:34:38.511118 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:34:38.511528 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:34:38.511573 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6773/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.104.157%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.104.167%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0104 13:34:38.551743 18 utils.go:356] Waiting for responses: map[]
  I0104 13:34:38.551786 18 utils.go:360] reached 192.168.104.167 after 0/1 tries
  I0104 13:34:38.551795 18 networking.go:53] Going to retry 0 out of 3 pods....
  I0104 13:34:38.551921 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6773" for this suite. @ 01/04/25 13:34:38.556
• [24.333 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 01/04/25 13:34:38.565
  I0104 13:34:38.565201 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption @ 01/04/25 13:34:38.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:34:38.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:34:38.583
  I0104 13:34:38.604745 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0104 13:34:39.042473      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:40.042601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:41.043637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:42.043829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:43.044797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:44.044834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:45.045653      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:46.045917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:47.046941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:48.047420      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:49.047840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:50.047940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:51.048056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:52.048839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:53.049603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:54.049709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:55.050506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:56.050609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:57.050893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:58.051276      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:34:59.051902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:00.052872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:01.053718      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:02.053978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:03.054996      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:04.055151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:05.055798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:06.055926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:07.056809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:08.057252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:09.057357      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:10.057564      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:11.057953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:12.058054      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:13.058775      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:14.058817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:15.059628      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:16.059809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:17.060769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:18.061635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:19.062453      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:20.062657      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:21.063488      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:22.063608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:23.064403      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:24.064658      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:25.064815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:26.065014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:27.065193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:28.065528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:29.066436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:30.066557      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:31.066909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:32.067023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:33.067661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:34.067815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:35.068878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:36.068987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:37.069880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:38.070280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:38.611720 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/04/25 13:35:38.615
  I0104 13:35:38.635241 18 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0104 13:35:38.646126 18 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0104 13:35:38.667919 18 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0104 13:35:38.677984 18 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I0104 13:35:38.711162 18 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I0104 13:35:38.725514 18 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/04/25 13:35:38.725
  E0104 13:35:39.070507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:40.070550      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/04/25 13:35:40.764
  E0104 13:35:41.070841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:42.071058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:43.072133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:44.072377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:44.859273 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9438" for this suite. @ 01/04/25 13:35:44.862
• [66.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/04/25 13:35:44.874
  I0104 13:35:44.874033 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:35:44.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:35:44.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:35:44.896
  STEP: Creating configMap with name configmap-projected-all-test-volume-7a435795-204f-4cfd-85a2-3dfae472de83 @ 01/04/25 13:35:44.899
  STEP: Creating secret with name secret-projected-all-test-volume-2fe47c1a-0e2c-46dd-ace9-f5212f95fa31 @ 01/04/25 13:35:44.903
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/04/25 13:35:44.907
  E0104 13:35:45.072707      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:46.072910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:47.073246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:48.073529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:35:48.936
  I0104 13:35:48.940380 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod projected-volume-c41ccc2b-d815-408a-bc7e-4a43c100b997 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:35:48.954
  I0104 13:35:48.977369 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2368" for this suite. @ 01/04/25 13:35:48.98
• [4.116 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 01/04/25 13:35:48.99
  I0104 13:35:48.990566 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename volumeattachment @ 01/04/25 13:35:48.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:35:49.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:35:49.013
  STEP: Create VolumeAttachment "va-e2e-wp4gq" on node "ip-172-31-34-148" @ 01/04/25 13:35:49.021
  STEP: Get VolumeAttachment "va-e2e-wp4gq" on node "ip-172-31-34-148" @ 01/04/25 13:35:49.027
  STEP: Patch VolumeAttachment "va-e2e-wp4gq" on node "ip-172-31-34-148" @ 01/04/25 13:35:49.03
  STEP: List VolumeAttachments with "va-e2e-wp4gq=patched" label @ 01/04/25 13:35:49.039
  STEP: Delete VolumeAttachment "va-e2e-wp4gq" on node "ip-172-31-34-148" @ 01/04/25 13:35:49.044
  STEP: Confirm deletion of VolumeAttachment "va-e2e-wp4gq" on node "ip-172-31-34-148" @ 01/04/25 13:35:49.052
  STEP: Create VolumeAttachment "va-e2e-5gcc5" on node "ip-172-31-24-196" @ 01/04/25 13:35:49.061
  STEP: Update the VolumeAttachment "va-e2e-5gcc5" on node "ip-172-31-24-196" with label "va-e2e=updated" @ 01/04/25 13:35:49.066
  E0104 13:35:49.074045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-g9kg9" on node "ip-172-31-34-148" @ 01/04/25 13:35:49.081
  STEP: Update the VolumeAttachment "va-e2e-g9kg9" on node "ip-172-31-34-148" with label "va-e2e=updated" @ 01/04/25 13:35:49.085
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/04/25 13:35:49.096
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/04/25 13:35:49.113
  I0104 13:35:49.117919 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4219" for this suite. @ 01/04/25 13:35:49.123
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/04/25 13:35:49.134
  I0104 13:35:49.134349 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 13:35:49.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:35:49.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:35:49.149
  I0104 13:35:49.153317 18 deployment.go:1196] Creating deployment "webserver-deployment"
  I0104 13:35:49.159775 18 deployment.go:1200] Waiting for observed generation 1
  E0104 13:35:50.074982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:51.075077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:51.172160 18 deployment.go:1205] Waiting for all required pods to come up
  I0104 13:35:51.176976 18 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/04/25 13:35:51.176
  I0104 13:35:51.177047 18 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0104 13:35:51.184610 18 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0104 13:35:51.196485 18 deployment.go:313] Updating deployment webserver-deployment
  I0104 13:35:51.196522 18 deployment.go:1224] Waiting for observed generation 2
  E0104 13:35:52.075198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:53.075435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:53.208732 18 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0104 13:35:53.212926 18 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0104 13:35:53.216984 18 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0104 13:35:53.229848 18 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0104 13:35:53.229877 18 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0104 13:35:53.233163 18 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0104 13:35:53.241894 18 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0104 13:35:53.241918 18 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0104 13:35:53.252562 18 deployment.go:313] Updating deployment webserver-deployment
  I0104 13:35:53.252598 18 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0104 13:35:53.264507 18 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0104 13:35:53.270365 18 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0104 13:35:53.299324 18 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30cb1b7d-72cc-495f-905a-095134ec2df6",
      ResourceVersion: (string) (len=5) "37653",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 13:35:53.321033 18 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
      ResourceVersion: (string) (len=5) "37640",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "30cb1b7d-72cc-495f-905a-095134ec2df6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 30 63 62 31 62  37 64 2d 37 32 63 63 2d  |\"30cb1b7d-72cc-|
              00000120  34 39 35 66 2d 39 30 35  61 2d 30 39 35 31 33 34  |495f-905a-095134|
              00000130  65 63 32 64 66 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ec2df6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 13:35:53.321522 18 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0104 13:35:53.321790 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
      ResourceVersion: (string) (len=5) "37638",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "30cb1b7d-72cc-495f-905a-095134ec2df6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 30 63 62 31 62  37 64 2d 37 32 63 63 2d  |\"30cb1b7d-72cc-|
              00000120  34 39 35 66 2d 39 30 35  61 2d 30 39 35 31 33 34  |495f-905a-095134|
              00000130  65 63 32 64 66 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ec2df6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 13:35:53.348422 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-2mndg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2mndg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f438c34-de69-433e-bbf8-276e55cefb26",
      ResourceVersion: (string) (len=5) "37679",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnvcm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnvcm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.351148 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5d7jt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5d7jt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d824bd36-6ce2-401c-be7a-76833ad826a1",
      ResourceVersion: (string) (len=5) "37668",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tk5ht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tk5ht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.353344 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5gwv7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5gwv7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "535d71bd-ed27-4020-8643-512516bb98d9",
      ResourceVersion: (string) (len=5) "37516",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 35 35 5c 22 7d  |2.168.104.155\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h6vqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h6vqt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594550,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://03325924ebf636597cccf1ce0b873bf89ac7a2e918b8dd33215ab4748d2a0c64",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h6vqt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.354687 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6nvsp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6nvsp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c37ad13-7280-4bcf-8cfb-7d9c7f22ef28",
      ResourceVersion: (string) (len=5) "37676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d5thw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d5thw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.358050 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-785gs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-785gs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b64b4bc-b083-4ff4-8573-7a8639b0902e",
      ResourceVersion: (string) (len=5) "37678",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bhgw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bhgw8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.359762 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cvtnw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cvtnw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c359b9c5-6faa-484f-9a25-f22ab15671e8",
      ResourceVersion: (string) (len=5) "37654",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6h77",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6h77",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.361202 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fbmvv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fbmvv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "316b294b-2961-42eb-8bbc-136018d2e4e5",
      ResourceVersion: (string) (len=5) "37519",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 33 30 5c 22 7d  |2.168.104.130\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7p5d6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7p5d6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594550,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1f1636177cfc86aecae37c925820004e9fbe293605dd75202308725c1d7fa5af",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7p5d6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.363084 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-gg9lk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-gg9lk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a720936-2b0e-41e9-8415-7a857c1f90d1",
      ResourceVersion: (string) (len=5) "37468",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  33 2e 35 30 5c 22 7d 22  |2.168.113.50\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p8d46",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p8d46",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.169"
        }
      },
      PodIP: (string) (len=14) "192.168.113.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.113.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594549,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://be30c3ec86ae749a4c895779e7d68ff73feb75dd8a3b228076e9b0aaa1c52820",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p8d46",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.364264 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-gsh9k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-gsh9k",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b53e3df-2912-4e14-966c-e918e802fa68",
      ResourceVersion: (string) (len=5) "37672",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lcw4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lcw4g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.365195 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hmwwl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hmwwl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b4f00c9-95cf-4fc9-a02d-5b4baa13afb4",
      ResourceVersion: (string) (len=5) "37472",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  33 2e 34 38 5c 22 7d 22  |2.168.113.48\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hkpbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hkpbd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.169"
        }
      },
      PodIP: (string) (len=14) "192.168.113.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.113.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594550,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f4909e4138bba69d3edb363b3315f07ba6935e8b46384f46bf1434a54eff09da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hkpbd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.366491 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jx88c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jx88c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31639590-532b-4b99-b05c-3cf6bcf47bce",
      ResourceVersion: (string) (len=5) "37683",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kjc2s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kjc2s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.367482 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lfzpt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lfzpt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2715c416-d7b2-43a5-b224-c95cdcc25ebe",
      ResourceVersion: (string) (len=5) "37504",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  39 2e 38 31 5c 22 7d 22  |2.168.159.81\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79lg4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79lg4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=14) "192.168.159.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.159.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594549,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1272ad9619684444547804aec533119c51f68649e2ea0e0edb7c092e057d31bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-79lg4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.369901 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lsj6j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lsj6j",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36d2b918-0ec0-41dd-bd0b-ff9335d243f0",
      ResourceVersion: (string) (len=5) "37405",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 37 34 5c 22 7d  |2.168.104.174\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7cfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7cfs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594549,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://03f83d0064c0ceb2602a6f6654437deb92e91f638e01dc6b38d217100a7cd0c3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7cfs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.371192 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mgz9d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mgz9d",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9127c20c-bc7f-45c8-8896-491d29d0491f",
      ResourceVersion: (string) (len=5) "37479",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  33 2e 35 35 5c 22 7d 22  |2.168.113.55\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-smbqs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-smbqs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.169"
        }
      },
      PodIP: (string) (len=14) "192.168.113.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.113.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594549,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0677f6f4c354c44c3eeb6995a978696628738620445eb1aabbc1a048ec5623bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-smbqs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.373100 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qgmmb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qgmmb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb185629-c013-44dc-9e5c-228e29d19489",
      ResourceVersion: (string) (len=5) "37681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ckjj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ckjj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4ckjj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.374320 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rzhlh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rzhlh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "437e8594-1c6c-41a4-837a-62b40881a6a8",
      ResourceVersion: (string) (len=5) "37673",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzvrm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzvrm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.375105 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-sqtmf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-sqtmf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65b5703b-a447-4b29-b4a2-4e78bbedf6ac",
      ResourceVersion: (string) (len=5) "37685",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2g52w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2g52w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.376020 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-w7trq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w7trq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1002aab0-6794-4994-9256-117ad6071a6d",
      ResourceVersion: (string) (len=5) "37501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  39 2e 39 31 5c 22 7d 22  |2.168.159.91\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mnvk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mnvk2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594550,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=14) "192.168.159.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.159.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594549,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://97ab789a7376501af4c3a51bbc62acf998d410ec6ab47fa6bfd4976202e5645e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mnvk2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.378927 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zr7kv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zr7kv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bcfce056-f0e4-4d9b-a834-40fdc7abd3fb",
      ResourceVersion: (string) (len=5) "37686",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hsbrg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hsbrg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.379771 18 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zwsns" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zwsns",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "667d67ac-f544-49db-b055-4a57b765d9ad",
      ResourceVersion: (string) (len=5) "37644",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "932ae428-9688-42f4-be63-b71723643500",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  32 61 65 34 32 38 2d 39  |d\":\"932ae428-9|
              00000090  36 38 38 2d 34 32 66 34  2d 62 65 36 33 2d 62 37  |688-42f4-be63-b7|
              000000a0  31 37 32 33 36 34 33 35  30 30 5c 22 7d 22 3a 7b  |1723643500\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hcbrf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hcbrf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.380968 18 deployment.go:67] Pod "webserver-deployment-786f49d774-28ckt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-28ckt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39c72f24-304f-4a61-bf68-a5f05661dfd1",
      ResourceVersion: (string) (len=5) "37627",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 39 2e 39  33 5c 22 7d 22 3a 7b 22  |68.159.93\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m45d8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m45d8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=14) "192.168.159.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.159.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m45d8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.382348 18 deployment.go:67] Pod "webserver-deployment-786f49d774-428h9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-428h9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e3b85ea-5402-422a-ad13-533091b4b409",
      ResourceVersion: (string) (len=5) "37630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 35 39 2e 38  33 5c 22 7d 22 3a 7b 22  |68.159.83\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rt576",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rt576",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=14) "192.168.159.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.159.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rt576",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.385945 18 deployment.go:67] Pod "webserver-deployment-786f49d774-6slkb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6slkb",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "362ad9f6-82aa-4129-a118-d97c5082d987",
      ResourceVersion: (string) (len=5) "37682",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-97742",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-97742",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.386788 18 deployment.go:67] Pod "webserver-deployment-786f49d774-7bgfd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-7bgfd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fcbfe4d-e462-438b-876c-a720841b8359",
      ResourceVersion: (string) (len=5) "37675",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdn5x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdn5x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.388209 18 deployment.go:67] Pod "webserver-deployment-786f49d774-7q55k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-7q55k",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff493a05-7597-4c35-8a2b-f4282382b52e",
      ResourceVersion: (string) (len=5) "37615",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 34 2e 31  36 38 5c 22 7d 22 3a 7b  |68.104.168\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zhrh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zhrh7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zhrh7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.390094 18 deployment.go:67] Pod "webserver-deployment-786f49d774-cbwwf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-cbwwf",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ab66b94-21f4-4cbe-9d6b-859ba5372a5f",
      ResourceVersion: (string) (len=5) "37612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 30 34 2e 31  39 30 5c 22 7d 22 3a 7b  |68.104.190\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xw6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xw6b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6xw6b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.392661 18 deployment.go:67] Pod "webserver-deployment-786f49d774-g58q5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-g58q5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10b918d7-abac-415c-a14b-c7f778a39c4f",
      ResourceVersion: (string) (len=5) "37663",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ndgpv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ndgpv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.393823 18 deployment.go:67] Pod "webserver-deployment-786f49d774-gw8pn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-gw8pn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e33ef88-9db8-4fe2-a27e-6c9b8327dca2",
      ResourceVersion: (string) (len=5) "37665",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mc4mj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mc4mj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.395632 18 deployment.go:67] Pod "webserver-deployment-786f49d774-hwbr4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hwbr4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ca079b7-a7e6-48c3-bc9f-2abf13bdca48",
      ResourceVersion: (string) (len=5) "37674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gnpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gnpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7gnpq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.396812 18 deployment.go:67] Pod "webserver-deployment-786f49d774-mpnct" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-mpnct",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "111d55cf-1a6a-43fe-b0cc-2c0e2198e04d",
      ResourceVersion: (string) (len=5) "37677",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pg8lr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pg8lr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.397645 18 deployment.go:67] Pod "webserver-deployment-786f49d774-r52d6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-r52d6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74667e62-5328-46dd-90de-92ee1154db4e",
      ResourceVersion: (string) (len=5) "37669",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2br5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2br5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.398719 18 deployment.go:67] Pod "webserver-deployment-786f49d774-r95kp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-r95kp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6145",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "858f5be5-cf9c-4644-9f71-6ab60cbadcc9",
      ResourceVersion: (string) (len=5) "37622",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "5c8f59e7-cd21-473d-8a98-dea143f97888",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 35 39 65 37 2d 63  |d\":\"5c8f59e7-c|
              00000090  64 32 31 2d 34 37 33 64  2d 38 61 39 38 2d 64 65  |d21-473d-8a98-de|
              000000a0  61 31 34 33 66 39 37 38  38 38 5c 22 7d 22 3a 7b  |a143f97888\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 33 2e 34  34 5c 22 7d 22 3a 7b 22  |68.113.44\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8r6jf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8r6jf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.169"
        }
      },
      PodIP: (string) (len=14) "192.168.113.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.113.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8r6jf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:53.401067 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6145" for this suite. @ 01/04/25 13:35:53.413
• [4.289 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/04/25 13:35:53.423
  I0104 13:35:53.423385 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 13:35:53.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:35:53.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:35:53.453
  I0104 13:35:53.457713 18 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0104 13:35:53.465207 18 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0104 13:35:53.479880 18 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E0104 13:35:54.075556      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:55.075798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:55.490210 18 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0104 13:35:55.495420 18 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0104 13:35:55.505839 18 deployment.go:313] Updating deployment test-recreate-deployment
  I0104 13:35:55.505869 18 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0104 13:35:55.604367 18 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9713",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da6eb136-89fe-426f-906f-f12a92fb022b",
      ResourceVersion: (string) (len=5) "37817",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 13:35:55.610044 18 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9713",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc2adec6-66f0-4b04-902a-ce546d229d4b",
      ResourceVersion: (string) (len=5) "37814",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "da6eb136-89fe-426f-906f-f12a92fb022b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 36 65 62 31  33 36 2d 38 39 66 65 2d  |\"da6eb136-89fe-|
              00000120  34 32 36 66 2d 39 30 36  66 2d 66 31 32 61 39 32  |426f-906f-f12a92|
              00000130  66 62 30 32 32 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb022b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 13:35:55.610551 18 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0104 13:35:55.610784 18 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9713",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3043eda1-85c7-4291-9ff0-f3d566d7a1e4",
      ResourceVersion: (string) (len=5) "37805",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "da6eb136-89fe-426f-906f-f12a92fb022b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 36 65 62 31  33 36 2d 38 39 66 65 2d  |\"da6eb136-89fe-|
              00000120  34 32 36 66 2d 39 30 36  66 2d 66 31 32 61 39 32  |426f-906f-f12a92|
              00000130  66 62 30 32 32 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb022b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 13:35:55.616181 18 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-fh9gf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-fh9gf",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-9713",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "713adc35-b59d-4400-9ee7-4490f75edb92",
      ResourceVersion: (string) (len=5) "37816",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "cc2adec6-66f0-4b04-902a-ce546d229d4b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 63  32 61 64 65 63 36 2d 36  |d\":\"cc2adec6-6|
              00000090  36 66 30 2d 34 62 30 34  2d 39 30 32 61 2d 63 65  |6f0-4b04-902a-ce|
              000000a0  35 34 36 64 32 32 39 64  34 62 5c 22 7d 22 3a 7b  |546d229d4b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsm4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsm4h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594555,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qsm4h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:35:55.617350 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9713" for this suite. @ 01/04/25 13:35:55.621
• [2.208 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/04/25 13:35:55.631
  I0104 13:35:55.631332 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename daemonsets @ 01/04/25 13:35:55.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:35:55.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:35:55.648
  STEP: Creating simple DaemonSet "daemon-set" @ 01/04/25 13:35:55.675
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/04/25 13:35:55.682
  I0104 13:35:55.686863 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:35:55.686893 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:35:55.691119 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0104 13:35:55.691145 18 fixtures.go:130] Node ip-172-31-18-169 is running 0 daemon pod, expected 1
  E0104 13:35:56.076918      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:56.686550 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:35:56.686594 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:35:56.691060 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0104 13:35:56.691080 18 fixtures.go:130] Node ip-172-31-8-94 is running 0 daemon pod, expected 1
  E0104 13:35:57.077548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:35:57.689661 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-24-196 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:35:57.689722 18 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-34-148 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0104 13:35:57.694922 18 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0104 13:35:57.694949 18 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/04/25 13:35:57.697
  STEP: DeleteCollection of the DaemonSets @ 01/04/25 13:35:57.702
  STEP: Verify that ReplicaSets have been deleted @ 01/04/25 13:35:57.714
  I0104 13:35:57.732755 18 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37876"},"items":null}

  I0104 13:35:57.736388 18 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37878"},"items":[{"metadata":{"name":"daemon-set-59w96","generateName":"daemon-set-","namespace":"daemonsets-7397","uid":"18e8236d-9b9f-4a6a-877e-4f918df0ba65","resourceVersion":"37877","creationTimestamp":"2025-01-04T13:35:55Z","deletionTimestamp":"2025-01-04T13:36:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e0ed3bd3-50ce-403d-895b-684fad9cb7c3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-04T13:35:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0ed3bd3-50ce-403d-895b-684fad9cb7c3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-04T13:35:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.159.103\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xcrcq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xcrcq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-76-68","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-76-68"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:55Z"}],"hostIP":"172.31.76.68","hostIPs":[{"ip":"172.31.76.68"}],"podIP":"192.168.159.103","podIPs":[{"ip":"192.168.159.103"}],"startTime":"2025-01-04T13:35:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-04T13:35:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://bc431e4aee1de11a8150b8aae9df78d68b5d7f0e52c074eac5b1cede64e01090","started":true,"volumeMounts":[{"name":"kube-api-access-xcrcq","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-r8nk5","generateName":"daemon-set-","namespace":"daemonsets-7397","uid":"7b3c5647-666c-4428-8574-df61ced11f76","resourceVersion":"37878","creationTimestamp":"2025-01-04T13:35:55Z","deletionTimestamp":"2025-01-04T13:36:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e0ed3bd3-50ce-403d-895b-684fad9cb7c3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-04T13:35:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0ed3bd3-50ce-403d-895b-684fad9cb7c3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-04T13:35:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.113.45\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-pjkks","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-pjkks","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-18-169","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-18-169"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:55Z"}],"hostIP":"172.31.18.169","hostIPs":[{"ip":"172.31.18.169"}],"podIP":"192.168.113.45","podIPs":[{"ip":"192.168.113.45"}],"startTime":"2025-01-04T13:35:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-04T13:35:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ce5306bad5b0a6e2d3375a73f527b7fdae27430d7d1cdf3b7c94ed17ef8e26e4","started":true,"volumeMounts":[{"name":"kube-api-access-pjkks","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rfrk5","generateName":"daemon-set-","namespace":"daemonsets-7397","uid":"8940f2b6-69be-4c30-82ab-9346c110f311","resourceVersion":"37875","creationTimestamp":"2025-01-04T13:35:55Z","deletionTimestamp":"2025-01-04T13:36:27Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e0ed3bd3-50ce-403d-895b-684fad9cb7c3","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-04T13:35:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0ed3bd3-50ce-403d-895b-684fad9cb7c3\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-04T13:35:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.104.191\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-d8pqf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-d8pqf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-94","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-94"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-04T13:35:55Z"}],"hostIP":"172.31.8.94","hostIPs":[{"ip":"172.31.8.94"}],"podIP":"192.168.104.191","podIPs":[{"ip":"192.168.104.191"}],"startTime":"2025-01-04T13:35:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-04T13:35:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7ec855b92bc86ed203c996168611e05572dbbe93308eb3b9774fbb6b0d65ab6f","started":true,"volumeMounts":[{"name":"kube-api-access-d8pqf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0104 13:35:57.755953 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7397" for this suite. @ 01/04/25 13:35:57.759
• [2.138 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/04/25 13:35:57.769
  I0104 13:35:57.769664 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:35:57.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:35:57.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:35:57.79
  STEP: Setting up server cert @ 01/04/25 13:35:57.819
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:35:58.015
  STEP: Deploying the webhook pod @ 01/04/25 13:35:58.027
  STEP: Wait for the deployment to be ready @ 01/04/25 13:35:58.044
  I0104 13:35:58.061032 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:35:58.078116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:35:59.078574      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:36:00.075
  E0104 13:36:00.079437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:36:00.089
  E0104 13:36:01.080300      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:01.089502 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/04/25 13:36:01.099
  STEP: create a configmap that should be updated by the webhook @ 01/04/25 13:36:01.115
  I0104 13:36:01.182405 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6174" for this suite. @ 01/04/25 13:36:01.187
  STEP: Destroying namespace "webhook-markers-6312" for this suite. @ 01/04/25 13:36:01.194
• [3.431 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/04/25 13:36:01.201
  I0104 13:36:01.201067 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename security-context-test @ 01/04/25 13:36:01.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:01.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:01.221
  E0104 13:36:02.080415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:03.080802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:04.080947      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:05.081171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:05.252489 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1725" for this suite. @ 01/04/25 13:36:05.256
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 01/04/25 13:36:05.265
  I0104 13:36:05.265311 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename dns @ 01/04/25 13:36:05.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:05.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:05.283
  STEP: Creating a test externalName service @ 01/04/25 13:36:05.286
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6075.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6075.svc.cluster.local; sleep 1; done
   @ 01/04/25 13:36:05.294
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6075.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6075.svc.cluster.local; sleep 1; done
   @ 01/04/25 13:36:05.294
  STEP: creating a pod to probe DNS @ 01/04/25 13:36:05.295
  STEP: submitting the pod to kubernetes @ 01/04/25 13:36:05.295
  E0104 13:36:06.081312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:07.081585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/04/25 13:36:07.317
  STEP: looking for the results for each expected name from probers @ 01/04/25 13:36:07.32
  I0104 13:36:07.333771 18 dns_common.go:552] DNS probes using dns-test-64720e3a-56d7-4f47-adea-4b75f04bd3b4 succeeded

  STEP: changing the externalName to bar.example.com @ 01/04/25 13:36:07.333
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6075.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6075.svc.cluster.local; sleep 1; done
   @ 01/04/25 13:36:07.343
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6075.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6075.svc.cluster.local; sleep 1; done
   @ 01/04/25 13:36:07.343
  STEP: creating a second pod to probe DNS @ 01/04/25 13:36:07.343
  STEP: submitting the pod to kubernetes @ 01/04/25 13:36:07.343
  E0104 13:36:08.082319      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:09.082548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/04/25 13:36:09.359
  STEP: looking for the results for each expected name from probers @ 01/04/25 13:36:09.364
  I0104 13:36:09.372311 18 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6075.svc.cluster.local from pod  dns-6075/dns-test-9cca389b-07b2-46c4-b2e2-d2c9b2208af8 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0104 13:36:09.376307 18 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6075.svc.cluster.local from pod  dns-6075/dns-test-9cca389b-07b2-46c4-b2e2-d2c9b2208af8 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0104 13:36:09.376336 18 dns_common.go:489] Lookups using dns-6075/dns-test-9cca389b-07b2-46c4-b2e2-d2c9b2208af8 failed for: [wheezy_udp@dns-test-service-3.dns-6075.svc.cluster.local jessie_udp@dns-test-service-3.dns-6075.svc.cluster.local]

  I0104 13:36:09.395212 18 dns_common.go:495] Pod client logs for webserver: 
  I0104 13:36:09.405105 18 dns_common.go:495] Pod client logs for querier: 
  I0104 13:36:09.410902 18 dns_common.go:495] Pod client logs for jessie-querier: 
  E0104 13:36:10.082811      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:11.083050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:12.083200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:13.083352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:14.083463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:14.377977 18 dns_common.go:552] DNS probes using dns-test-9cca389b-07b2-46c4-b2e2-d2c9b2208af8 succeeded

  STEP: changing the service to type=ClusterIP @ 01/04/25 13:36:14.378
  W0104 13:36:14.396131      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6075.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6075.svc.cluster.local; sleep 1; done
   @ 01/04/25 13:36:14.396
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6075.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6075.svc.cluster.local; sleep 1; done
   @ 01/04/25 13:36:14.396
  STEP: creating a third pod to probe DNS @ 01/04/25 13:36:14.396
  STEP: submitting the pod to kubernetes @ 01/04/25 13:36:14.399
  E0104 13:36:15.083641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:16.083825      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/04/25 13:36:16.421
  STEP: looking for the results for each expected name from probers @ 01/04/25 13:36:16.427
  I0104 13:36:16.440138 18 dns_common.go:552] DNS probes using dns-test-263cdf14-36a0-4ccf-93d7-ca6bdb327049 succeeded

  STEP: deleting the pod @ 01/04/25 13:36:16.44
  STEP: deleting the pod @ 01/04/25 13:36:16.455
  STEP: deleting the pod @ 01/04/25 13:36:16.48
  STEP: deleting the test externalName service @ 01/04/25 13:36:16.497
  I0104 13:36:16.516653 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6075" for this suite. @ 01/04/25 13:36:16.522
• [11.269 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 01/04/25 13:36:16.534
  I0104 13:36:16.534934 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 13:36:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:16.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:16.554
  STEP: Creating service test in namespace statefulset-4004 @ 01/04/25 13:36:16.557
  STEP: Looking for a node to schedule stateful set and pod @ 01/04/25 13:36:16.562
  STEP: Creating pod with conflicting port in namespace statefulset-4004 @ 01/04/25 13:36:16.569
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4004 @ 01/04/25 13:36:16.579
  E0104 13:36:17.083923      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:18.084309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4004 @ 01/04/25 13:36:18.589
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4004 @ 01/04/25 13:36:18.596
  I0104 13:36:18.609379 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-4004, name: ss-0, uid: 2b2fe00c-2ceb-4775-85f2-565d3b47a217, status phase: Pending. Waiting for statefulset controller to delete.
  I0104 13:36:18.630764 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-4004, name: ss-0, uid: 2b2fe00c-2ceb-4775-85f2-565d3b47a217, status phase: Failed. Waiting for statefulset controller to delete.
  I0104 13:36:18.648130 18 statefulset.go:869] Observed stateful pod in namespace: statefulset-4004, name: ss-0, uid: 2b2fe00c-2ceb-4775-85f2-565d3b47a217, status phase: Failed. Waiting for statefulset controller to delete.
  I0104 13:36:18.654439 18 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-4004
  STEP: Removing pod with conflicting port in namespace statefulset-4004 @ 01/04/25 13:36:18.654
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4004 and will be in running state @ 01/04/25 13:36:18.682
  E0104 13:36:19.084632      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:20.084831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:20.694334 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4004
  I0104 13:36:20.699912 18 rest.go:150] Scaling statefulset ss to 0
  E0104 13:36:21.085763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:22.085875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:23.086302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:24.086423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:25.086583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:26.086809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:27.087022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:28.087347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:29.087474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:30.088334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:30.716985 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 13:36:30.721834 18 rest.go:88] Deleting statefulset ss
  I0104 13:36:30.741136 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4004" for this suite. @ 01/04/25 13:36:30.744
• [14.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/04/25 13:36:30.753
  I0104 13:36:30.753637 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replication-controller @ 01/04/25 13:36:30.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:30.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:30.773
  STEP: Creating replication controller my-hostname-basic-267cb7f9-96ff-4a53-a502-d1dec7351863 @ 01/04/25 13:36:30.776
  I0104 13:36:30.784866 18 resource.go:87] Pod name my-hostname-basic-267cb7f9-96ff-4a53-a502-d1dec7351863: Found 0 pods out of 1
  E0104 13:36:31.089399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:32.089901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:33.090014      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:34.090934      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:35.091879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:35.789025 18 resource.go:87] Pod name my-hostname-basic-267cb7f9-96ff-4a53-a502-d1dec7351863: Found 1 pods out of 1
  I0104 13:36:35.789059 18 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-267cb7f9-96ff-4a53-a502-d1dec7351863" are running
  I0104 13:36:35.793884 18 rc.go:523] Pod "my-hostname-basic-267cb7f9-96ff-4a53-a502-d1dec7351863-zskrc" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 13:36:32 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 13:36:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 13:36:32 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 13:36:32 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-04 13:36:30 +0000 UTC Reason: Message:}])
  I0104 13:36:35.793910 18 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/04/25 13:36:35.793
  I0104 13:36:35.808421 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8200" for this suite. @ 01/04/25 13:36:35.813
• [5.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/04/25 13:36:35.822
  I0104 13:36:35.822510 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename discovery @ 01/04/25 13:36:35.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:35.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:35.843
  STEP: Setting up server cert @ 01/04/25 13:36:35.847
  STEP: Requesting APIResourceList from "/api/v1" @ 01/04/25 13:36:36.024
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/04/25 13:36:36.026
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/04/25 13:36:36.027
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/04/25 13:36:36.028
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/04/25 13:36:36.03
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/04/25 13:36:36.031
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/04/25 13:36:36.032
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/04/25 13:36:36.034
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/04/25 13:36:36.035
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/04/25 13:36:36.037
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/04/25 13:36:36.038
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/04/25 13:36:36.039
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/04/25 13:36:36.041
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/04/25 13:36:36.043
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/04/25 13:36:36.044
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/04/25 13:36:36.045
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/04/25 13:36:36.047
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/04/25 13:36:36.049
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/04/25 13:36:36.05
  I0104 13:36:36.052020 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2360" for this suite. @ 01/04/25 13:36:36.056
• [0.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/04/25 13:36:36.064
  I0104 13:36:36.064133 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 13:36:36.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:36.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:36.084
  STEP: Creating secret with name secret-test-73b614de-da7e-4fc5-afc2-6666d58c3a7b @ 01/04/25 13:36:36.088
  E0104 13:36:36.092423      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 01/04/25 13:36:36.095
  E0104 13:36:37.092636      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:38.093369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:36:38.114
  I0104 13:36:38.119357 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-secrets-3191e01e-975a-4320-9586-84334ac134ff container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:36:38.126
  I0104 13:36:38.148249 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5664" for this suite. @ 01/04/25 13:36:38.153
• [2.098 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/04/25 13:36:38.162
  I0104 13:36:38.162102 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replicaset @ 01/04/25 13:36:38.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:38.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:38.18
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/04/25 13:36:38.183
  I0104 13:36:38.196757 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0104 13:36:39.093847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:40.094071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:41.094208      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:42.094916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:43.095310      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:43.205063 18 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/04/25 13:36:43.205
  STEP: getting scale subresource @ 01/04/25 13:36:43.205
  STEP: updating a scale subresource @ 01/04/25 13:36:43.209
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/04/25 13:36:43.216
  STEP: Patch a scale subresource @ 01/04/25 13:36:43.221
  I0104 13:36:43.235302 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8904" for this suite. @ 01/04/25 13:36:43.241
• [5.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/04/25 13:36:43.253
  I0104 13:36:43.253317 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:36:43.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:43.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:43.277
  STEP: Creating configMap with name projected-configmap-test-volume-9a76b26f-96b1-42ef-9e94-f2d26cfba3b9 @ 01/04/25 13:36:43.28
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:36:43.285
  E0104 13:36:44.095400      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:45.095549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:46.096545      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:47.097235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:36:47.316
  I0104 13:36:47.319620 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-configmaps-e6c6344c-31b2-421b-9b31-1e223ef62c0f container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:36:47.33
  I0104 13:36:47.352175 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2062" for this suite. @ 01/04/25 13:36:47.357
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/04/25 13:36:47.365
  I0104 13:36:47.365367 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:36:47.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:47.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:47.387
  STEP: creating all guestbook components @ 01/04/25 13:36:47.39
  I0104 13:36:47.390939 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0104 13:36:47.391016 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 create -f -'
  I0104 13:36:47.491753 18 builder.go:146] stderr: ""
  I0104 13:36:47.491824 18 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0104 13:36:47.491970 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0104 13:36:47.492083 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 create -f -'
  I0104 13:36:47.591861 18 builder.go:146] stderr: ""
  I0104 13:36:47.591902 18 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0104 13:36:47.591951 18 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0104 13:36:47.592020 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 create -f -'
  I0104 13:36:47.685568 18 builder.go:146] stderr: ""
  I0104 13:36:47.685612 18 builder.go:147] stdout: "service/frontend created\n"
  I0104 13:36:47.685718 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0104 13:36:47.685954 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 create -f -'
  I0104 13:36:47.757467 18 builder.go:146] stderr: ""
  I0104 13:36:47.757520 18 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0104 13:36:47.757594 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0104 13:36:47.757698 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 create -f -'
  I0104 13:36:47.828635 18 builder.go:146] stderr: ""
  I0104 13:36:47.828703 18 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0104 13:36:47.828776 18 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0104 13:36:47.828853 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 create -f -'
  I0104 13:36:47.900364 18 builder.go:146] stderr: ""
  I0104 13:36:47.900411 18 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/04/25 13:36:47.9
  I0104 13:36:47.900452 18 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E0104 13:36:48.097367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:49.097901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:50.098902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:51.099939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:52.100885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:52.951117 18 kubectl.go:2276] Waiting for frontend to serve content.
  I0104 13:36:52.965401 18 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0104 13:36:52.978240 18 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/04/25 13:36:52.99
  I0104 13:36:52.990364 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 delete --grace-period=0 --force -f -'
  I0104 13:36:53.057573 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:36:53.057622 18 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/04/25 13:36:53.057
  I0104 13:36:53.057755 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 delete --grace-period=0 --force -f -'
  E0104 13:36:53.101641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:36:53.131449 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:36:53.131492 18 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/04/25 13:36:53.131
  I0104 13:36:53.131606 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 delete --grace-period=0 --force -f -'
  I0104 13:36:53.195110 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:36:53.195157 18 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/04/25 13:36:53.195
  I0104 13:36:53.195377 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 delete --grace-period=0 --force -f -'
  I0104 13:36:53.248344 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:36:53.248389 18 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/04/25 13:36:53.248
  I0104 13:36:53.248583 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 delete --grace-period=0 --force -f -'
  I0104 13:36:53.311162 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:36:53.311202 18 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/04/25 13:36:53.311
  I0104 13:36:53.311324 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-8070 delete --grace-period=0 --force -f -'
  I0104 13:36:53.374246 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:36:53.374291 18 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0104 13:36:53.374447 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8070" for this suite. @ 01/04/25 13:36:53.378
• [6.019 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/04/25 13:36:53.384
  I0104 13:36:53.384828 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/04/25 13:36:53.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:53.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:53.413
  STEP: getting /apis @ 01/04/25 13:36:53.42
  STEP: getting /apis/storage.k8s.io @ 01/04/25 13:36:53.423
  STEP: getting /apis/storage.k8s.io/v1 @ 01/04/25 13:36:53.425
  STEP: creating @ 01/04/25 13:36:53.426
  STEP: watching @ 01/04/25 13:36:53.467
  I0104 13:36:53.467442 18 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/04/25 13:36:53.479
  STEP: listing in namespace @ 01/04/25 13:36:53.482
  STEP: listing across namespaces @ 01/04/25 13:36:53.487
  STEP: patching @ 01/04/25 13:36:53.492
  STEP: updating @ 01/04/25 13:36:53.497
  I0104 13:36:53.504185 18 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0104 13:36:53.504243 18 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/04/25 13:36:53.504
  STEP: deleting a collection @ 01/04/25 13:36:53.529
  I0104 13:36:53.554248 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3829" for this suite. @ 01/04/25 13:36:53.559
• [0.184 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/04/25 13:36:53.569
  I0104 13:36:53.569051 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename watch @ 01/04/25 13:36:53.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:53.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:53.604
  STEP: creating a new configmap @ 01/04/25 13:36:53.607
  STEP: modifying the configmap once @ 01/04/25 13:36:53.614
  STEP: modifying the configmap a second time @ 01/04/25 13:36:53.624
  STEP: deleting the configmap @ 01/04/25 13:36:53.636
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/04/25 13:36:53.645
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/04/25 13:36:53.646
  I0104 13:36:53.647078 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8126  87d1bedd-89d6-41bc-ada1-4a94367a73e9 39078 0 2025-01-04 13:36:53 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-04 13:36:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:36:53.647400 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8126  87d1bedd-89d6-41bc-ada1-4a94367a73e9 39080 0 2025-01-04 13:36:53 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-04 13:36:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:36:53.647567 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8126" for this suite. @ 01/04/25 13:36:53.652
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/04/25 13:36:53.662
  I0104 13:36:53.662608 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:36:53.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:36:53.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:36:53.683
  STEP: Counting existing ResourceQuota @ 01/04/25 13:36:53.687
  E0104 13:36:54.102648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:55.102798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:56.102927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:57.103626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:36:58.103645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/04/25 13:36:58.696
  STEP: Ensuring resource quota status is calculated @ 01/04/25 13:36:58.702
  E0104 13:36:59.104424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:00.104648      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 01/04/25 13:37:00.708
  STEP: Ensuring resource quota status captures replication controller creation @ 01/04/25 13:37:00.722
  E0104 13:37:01.104827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:02.104987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 01/04/25 13:37:02.728
  STEP: Ensuring resource quota status released usage @ 01/04/25 13:37:02.736
  E0104 13:37:03.105064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:04.105214      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:04.743161 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6728" for this suite. @ 01/04/25 13:37:04.746
• [11.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/04/25 13:37:04.755
  I0104 13:37:04.755802 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:37:04.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:04.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:04.779
  STEP: Setting up server cert @ 01/04/25 13:37:04.802
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:37:04.889
  STEP: Deploying the webhook pod @ 01/04/25 13:37:04.902
  STEP: Wait for the deployment to be ready @ 01/04/25 13:37:04.915
  I0104 13:37:04.930946 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:37:05.106207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:06.106404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:37:06.946
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:37:06.961
  E0104 13:37:07.107210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:07.962042 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0104 13:37:07.970360 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:37:08.107571      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7450-crds.webhook.example.com via the AdmissionRegistration API @ 01/04/25 13:37:08.485
  STEP: Creating a custom resource while v1 is storage version @ 01/04/25 13:37:08.5
  E0104 13:37:09.108506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:10.108902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/04/25 13:37:10.528
  STEP: Patching the custom resource while v2 is storage version @ 01/04/25 13:37:10.546
  E0104 13:37:11.109803      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:11.145529 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7927" for this suite. @ 01/04/25 13:37:11.151
  STEP: Destroying namespace "webhook-markers-6704" for this suite. @ 01/04/25 13:37:11.159
• [6.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/04/25 13:37:11.169
  I0104 13:37:11.169994 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 13:37:11.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:11.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:11.188
  STEP: Creating secret with name secret-test-11e6859c-73fd-4147-aa94-ac3502a7a2b1 @ 01/04/25 13:37:11.191
  STEP: Creating a pod to test consume secrets @ 01/04/25 13:37:11.197
  E0104 13:37:12.109955      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:13.110086      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:14.110207      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:15.110375      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:37:15.227
  I0104 13:37:15.231843 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-secrets-18494b44-57d5-47fd-926a-362dc42fbfd8 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:37:15.24
  I0104 13:37:15.263701 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2689" for this suite. @ 01/04/25 13:37:15.269
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/04/25 13:37:15.277
  I0104 13:37:15.277840 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:37:15.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:15.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:15.301
  STEP: creating a ConfigMap @ 01/04/25 13:37:15.304
  STEP: fetching the ConfigMap @ 01/04/25 13:37:15.312
  STEP: patching the ConfigMap @ 01/04/25 13:37:15.316
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/04/25 13:37:15.321
  STEP: deleting the ConfigMap by collection with a label selector @ 01/04/25 13:37:15.325
  STEP: listing all ConfigMaps in test namespace @ 01/04/25 13:37:15.336
  I0104 13:37:15.341160 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4358" for this suite. @ 01/04/25 13:37:15.346
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/04/25 13:37:15.353
  I0104 13:37:15.353931 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:37:15.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:15.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:15.374
  STEP: Creating configMap with name projected-configmap-test-volume-map-1d19937a-042c-4dfd-9bc3-1df8c47e900e @ 01/04/25 13:37:15.377
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:37:15.384
  E0104 13:37:16.110490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:17.110608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:18.110844      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:19.111079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:37:19.416
  I0104 13:37:19.419709 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-configmaps-5af5bd3e-e150-4c56-bbb6-322f9f7fd7cc container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:37:19.427
  I0104 13:37:19.449476 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9913" for this suite. @ 01/04/25 13:37:19.455
• [4.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/04/25 13:37:19.463
  I0104 13:37:19.463270 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename secrets @ 01/04/25 13:37:19.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:19.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:19.485
  STEP: Creating secret with name secret-test-map-97ef2c8a-f796-4731-a104-ff30cd698a5f @ 01/04/25 13:37:19.488
  STEP: Creating a pod to test consume secrets @ 01/04/25 13:37:19.494
  E0104 13:37:20.111902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:21.112029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:37:21.516
  I0104 13:37:21.522918 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-secrets-80990421-33bb-4101-a57d-2593cd75f385 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:37:21.53
  I0104 13:37:21.552790 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2341" for this suite. @ 01/04/25 13:37:21.556
• [2.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/04/25 13:37:21.564
  I0104 13:37:21.564203 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:37:21.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:21.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:21.582
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/04/25 13:37:21.585
  E0104 13:37:22.112922      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:23.113393      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:37:23.606
  I0104 13:37:23.609816 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-70450e15-ea32-4462-8986-f5e19fe20ff1 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:37:23.62
  I0104 13:37:23.641581 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8423" for this suite. @ 01/04/25 13:37:23.647
• [2.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/04/25 13:37:23.658
  I0104 13:37:23.658560 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replication-controller @ 01/04/25 13:37:23.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:23.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:23.677
  I0104 13:37:23.680383 18 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/04/25 13:37:23.691
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/04/25 13:37:23.698
  E0104 13:37:24.113920      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/04/25 13:37:24.708
  I0104 13:37:24.720047 18 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/04/25 13:37:24.72
  E0104 13:37:25.114756      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:25.731483 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7825" for this suite. @ 01/04/25 13:37:25.735
• [2.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/04/25 13:37:25.743
  I0104 13:37:25.743595 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename field-validation @ 01/04/25 13:37:25.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:25.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:25.764
  I0104 13:37:25.767356 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:37:26.114871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:27.115192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:28.115302      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  W0104 13:37:28.303820      18 warnings.go:70] unknown field "alpha"
  W0104 13:37:28.303842      18 warnings.go:70] unknown field "beta"
  W0104 13:37:28.303846      18 warnings.go:70] unknown field "delta"
  W0104 13:37:28.303849      18 warnings.go:70] unknown field "epsilon"
  W0104 13:37:28.303851      18 warnings.go:70] unknown field "gamma"
  I0104 13:37:28.853857 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5322" for this suite. @ 01/04/25 13:37:28.859
• [3.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/04/25 13:37:28.868
  I0104 13:37:28.868099 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename ingress @ 01/04/25 13:37:28.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:28.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:28.887
  STEP: getting /apis @ 01/04/25 13:37:28.89
  STEP: getting /apis/networking.k8s.io @ 01/04/25 13:37:28.894
  STEP: getting /apis/networking.k8s.iov1 @ 01/04/25 13:37:28.895
  STEP: creating @ 01/04/25 13:37:28.897
  STEP: getting @ 01/04/25 13:37:28.914
  STEP: listing @ 01/04/25 13:37:28.919
  STEP: watching @ 01/04/25 13:37:28.927
  I0104 13:37:28.927964 18 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/04/25 13:37:28.929
  STEP: cluster-wide watching @ 01/04/25 13:37:28.933
  I0104 13:37:28.933902 18 ingress.go:198] starting watch
  STEP: patching @ 01/04/25 13:37:28.935
  STEP: updating @ 01/04/25 13:37:28.942
  I0104 13:37:28.958253 18 ingress.go:221] waiting for watch events with expected annotations
  I0104 13:37:28.958414 18 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/04/25 13:37:28.958
  STEP: updating /status @ 01/04/25 13:37:28.966
  STEP: get /status @ 01/04/25 13:37:28.98
  STEP: deleting @ 01/04/25 13:37:28.985
  STEP: deleting a collection @ 01/04/25 13:37:29.008
  I0104 13:37:29.028924 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2800" for this suite. @ 01/04/25 13:37:29.035
• [0.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/04/25 13:37:29.043
  I0104 13:37:29.043824 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename watch @ 01/04/25 13:37:29.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:29.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:29.062
  STEP: getting a starting resourceVersion @ 01/04/25 13:37:29.065
  STEP: starting a background goroutine to produce watch events @ 01/04/25 13:37:29.068
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/04/25 13:37:29.068
  E0104 13:37:29.115942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:30.116873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:31.117728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:31.849874 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8335" for this suite. @ 01/04/25 13:37:31.899
• [2.911 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/04/25 13:37:31.954
  I0104 13:37:31.954773 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename chunking @ 01/04/25 13:37:31.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:31.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:31.975
  STEP: creating a large number of resources @ 01/04/25 13:37:31.978
  E0104 13:37:32.118036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:33.118198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:34.119157      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:35.120170      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:36.120715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:37.121176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:38.122173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:39.122466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:40.123290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:41.124353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:42.124596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:43.124637      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:44.125482      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:45.126148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:46.126697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:47.127299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:48.127963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:49.128217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 01/04/25 13:37:49.661
  I0104 13:37:49.711700 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0104 13:37:49.762302 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0104 13:37:49.809782 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0104 13:37:49.861763 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0104 13:37:49.912044 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0104 13:37:49.960557 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0104 13:37:50.011483 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0104 13:37:50.065453 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0104 13:37:50.110313 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  E0104 13:37:50.128448      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:50.161540 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0104 13:37:50.211827 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0104 13:37:50.260755 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0104 13:37:50.311963 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0104 13:37:50.362235 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0104 13:37:50.409949 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0104 13:37:50.462320 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0104 13:37:50.511727 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0104 13:37:50.560569 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0104 13:37:50.611811 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0104 13:37:50.662286 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0104 13:37:50.709852 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0104 13:37:50.762325 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0104 13:37:50.811470 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0104 13:37:50.860375 18 chunking.go:98] Retrieved 9/17 results with rv 40223 and continue 
  I0104 13:37:50.910826 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0104 13:37:50.962247 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0104 13:37:51.009772 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0104 13:37:51.062259 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0104 13:37:51.111228 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0104 13:37:51.129346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:51.160036 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0104 13:37:51.212405 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0104 13:37:51.261899 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0104 13:37:51.310666 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0104 13:37:51.362200 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0104 13:37:51.411994 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0104 13:37:51.460451 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0104 13:37:51.511895 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0104 13:37:51.561994 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0104 13:37:51.610832 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0104 13:37:51.662079 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0104 13:37:51.712120 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0104 13:37:51.760642 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0104 13:37:51.811874 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0104 13:37:51.862388 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0104 13:37:51.909885 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0104 13:37:51.962267 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0104 13:37:52.011419 18 chunking.go:98] Retrieved 17/17 results with rv 40223 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0104 13:37:52.059967 18 chunking.go:98] Retrieved 9/17 results with rv 40223 and continue 
  I0104 13:37:52.111965 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  E0104 13:37:52.130063      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:52.162446 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0104 13:37:52.209891 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0104 13:37:52.262350 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0104 13:37:52.311273 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0104 13:37:52.359970 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0104 13:37:52.411974 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0104 13:37:52.461822 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0104 13:37:52.510044 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0104 13:37:52.562339 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0104 13:37:52.611646 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0104 13:37:52.660082 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0104 13:37:52.711770 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0104 13:37:52.762321 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0104 13:37:52.809755 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0104 13:37:52.861825 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0104 13:37:52.911574 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0104 13:37:52.960328 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0104 13:37:53.011764 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0104 13:37:53.061999 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0104 13:37:53.110397 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0104 13:37:53.130558      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:53.161019 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0104 13:37:53.211795 18 chunking.go:98] Retrieved 17/17 results with rv 40226 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAyMjYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0104 13:37:53.260203 18 chunking.go:98] Retrieved 9/17 results with rv 40226 and continue 
  STEP: retrieving those results all at once @ 01/04/25 13:37:53.26
  I0104 13:37:53.318749 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2371" for this suite. @ 01/04/25 13:37:53.361
• [21.460 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/04/25 13:37:53.414
  I0104 13:37:53.414642 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename namespaces @ 01/04/25 13:37:53.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:53.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:53.435
  STEP: Updating Namespace "namespaces-4959" @ 01/04/25 13:37:53.438
  I0104 13:37:53.448751 18 namespace.go:389] Namespace "namespaces-4959" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"facbb43a-61d8-4a43-a758-221eb71ccef9", "kubernetes.io/metadata.name":"namespaces-4959", "namespaces-4959":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0104 13:37:53.448849 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4959" for this suite. @ 01/04/25 13:37:53.453
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/04/25 13:37:53.46
  I0104 13:37:53.460913 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/04/25 13:37:53.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:53.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:53.481
  I0104 13:37:53.484712 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:37:54.131424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:37:54.511046 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-56" for this suite. @ 01/04/25 13:37:54.515
• [1.062 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/04/25 13:37:54.522
  I0104 13:37:54.522874 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:37:54.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:37:54.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:37:54.542
  STEP: Counting existing ResourceQuota @ 01/04/25 13:37:54.546
  E0104 13:37:55.131747      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:56.132560      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:57.133578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:58.134474      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:37:59.134891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/04/25 13:37:59.549
  STEP: Ensuring resource quota status is calculated @ 01/04/25 13:37:59.556
  E0104 13:38:00.135709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:01.135868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 01/04/25 13:38:01.563
  STEP: Creating a NodePort Service @ 01/04/25 13:38:01.585
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/04/25 13:38:01.609
  STEP: Ensuring resource quota status captures service creation @ 01/04/25 13:38:01.635
  E0104 13:38:02.136472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:03.137441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 01/04/25 13:38:03.641
  STEP: Ensuring resource quota status released usage @ 01/04/25 13:38:03.684
  E0104 13:38:04.138360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:05.138457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:05.691050 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7133" for this suite. @ 01/04/25 13:38:05.696
• [11.183 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/04/25 13:38:05.706
  I0104 13:38:05.706341 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replication-controller @ 01/04/25 13:38:05.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:38:05.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:38:05.728
  STEP: Given a ReplicationController is created @ 01/04/25 13:38:05.731
  STEP: When the matched label of one of its pods change @ 01/04/25 13:38:05.739
  I0104 13:38:05.746323 18 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0104 13:38:06.138832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:07.138942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:08.139009      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:09.139940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:10.140041      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:10.750235 18 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/04/25 13:38:10.762
  E0104 13:38:11.140924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:11.772886 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3409" for this suite. @ 01/04/25 13:38:11.778
• [6.081 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/04/25 13:38:11.787
  I0104 13:38:11.787822 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:38:11.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:38:11.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:38:11.807
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8580 @ 01/04/25 13:38:11.81
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/04/25 13:38:11.828
  STEP: creating service externalsvc in namespace services-8580 @ 01/04/25 13:38:11.828
  STEP: creating replication controller externalsvc in namespace services-8580 @ 01/04/25 13:38:11.843
  I0104 13:38:11.849563      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8580, replica count: 2
  E0104 13:38:12.141723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:13.142525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:14.143520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:14.900256      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/04/25 13:38:14.905
  I0104 13:38:14.930582 18 resource.go:361] Creating new exec pod
  E0104 13:38:15.143991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:16.144122      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:16.943900 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-8580 exec execpod8w959 -- /bin/sh -x -c nslookup nodeport-service.services-8580.svc.cluster.local'
  I0104 13:38:17.090979 18 builder.go:146] stderr: "+ nslookup nodeport-service.services-8580.svc.cluster.local\n"
  I0104 13:38:17.091022 18 builder.go:147] stdout: "Server:\t\t10.152.183.235\nAddress:\t10.152.183.235#53\n\nnodeport-service.services-8580.svc.cluster.local\tcanonical name = externalsvc.services-8580.svc.cluster.local.\nName:\texternalsvc.services-8580.svc.cluster.local\nAddress: 10.152.183.173\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8580, will wait for the garbage collector to delete the pods @ 01/04/25 13:38:17.091
  E0104 13:38:17.144710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:17.152789 18 resources.go:139] Deleting ReplicationController externalsvc took: 6.991503ms
  I0104 13:38:17.253585 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.78983ms
  E0104 13:38:18.145798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:19.146522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:20.080344 18 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0104 13:38:20.093911 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8580" for this suite. @ 01/04/25 13:38:20.099
• [8.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 01/04/25 13:38:20.107
  I0104 13:38:20.107213 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename svcaccounts @ 01/04/25 13:38:20.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:38:20.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:38:20.127
  E0104 13:38:20.146867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:20.158419 18 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0104 13:38:20.158452 18 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0104 13:38:20.166131 18 service_accounts.go:253] created pod pod-service-account-mountsa
  I0104 13:38:20.166157 18 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0104 13:38:20.172657 18 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0104 13:38:20.172697 18 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0104 13:38:20.183424 18 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0104 13:38:20.183446 18 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0104 13:38:20.196099 18 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0104 13:38:20.196133 18 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0104 13:38:20.204052 18 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0104 13:38:20.204075 18 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0104 13:38:20.215338 18 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0104 13:38:20.215369 18 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0104 13:38:20.221337 18 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0104 13:38:20.221360 18 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0104 13:38:20.235734 18 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0104 13:38:20.235763 18 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0104 13:38:20.236015 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-287" for this suite. @ 01/04/25 13:38:20.242
• [0.146 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/04/25 13:38:20.254
  I0104 13:38:20.254854 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:38:20.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:38:20.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:38:20.271
  STEP: Creating a ResourceQuota with best effort scope @ 01/04/25 13:38:20.274
  STEP: Ensuring ResourceQuota status is calculated @ 01/04/25 13:38:20.28
  E0104 13:38:21.147041      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:22.147143      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 01/04/25 13:38:22.286
  STEP: Ensuring ResourceQuota status is calculated @ 01/04/25 13:38:22.292
  E0104 13:38:23.147248      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:24.147355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 01/04/25 13:38:24.296
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/04/25 13:38:24.313
  E0104 13:38:25.148198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:26.148306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/04/25 13:38:26.318
  E0104 13:38:27.148809      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:28.149259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/04/25 13:38:28.325
  STEP: Ensuring resource quota status released the pod usage @ 01/04/25 13:38:28.345
  E0104 13:38:29.149897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:30.150000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 01/04/25 13:38:30.35
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/04/25 13:38:30.36
  E0104 13:38:31.150108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:32.150763      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/04/25 13:38:32.366
  E0104 13:38:33.150864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:34.151088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/04/25 13:38:34.373
  STEP: Ensuring resource quota status released the pod usage @ 01/04/25 13:38:34.392
  E0104 13:38:35.151631      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:36.151924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:36.399505 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2311" for this suite. @ 01/04/25 13:38:36.405
• [16.159 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/04/25 13:38:36.413
  I0104 13:38:36.413598 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename replicaset @ 01/04/25 13:38:36.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:38:36.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:38:36.433
  STEP: Create a ReplicaSet @ 01/04/25 13:38:36.436
  STEP: Verify that the required pods have come up @ 01/04/25 13:38:36.444
  I0104 13:38:36.448668 18 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0104 13:38:37.152045      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:38.152493      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:39.152801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:40.152858      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:41.152985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:38:41.454280 18 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/04/25 13:38:41.454
  I0104 13:38:41.460931 18 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/04/25 13:38:41.46
  STEP: DeleteCollection of the ReplicaSets @ 01/04/25 13:38:41.464
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/04/25 13:38:41.473
  I0104 13:38:41.478818 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-380" for this suite. @ 01/04/25 13:38:41.488
• [5.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/04/25 13:38:41.502
  I0104 13:38:41.502910 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename watch @ 01/04/25 13:38:41.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:38:41.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:38:41.521
  STEP: creating a watch on configmaps with label A @ 01/04/25 13:38:41.524
  STEP: creating a watch on configmaps with label B @ 01/04/25 13:38:41.526
  STEP: creating a watch on configmaps with label A or B @ 01/04/25 13:38:41.527
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/04/25 13:38:41.529
  I0104 13:38:41.536322 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41203 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:38:41.536741 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41203 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/04/25 13:38:41.536
  I0104 13:38:41.546062 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41204 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:38:41.546146 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41204 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/04/25 13:38:41.546
  I0104 13:38:41.555527 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41206 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:38:41.555650 18 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41206 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/04/25 13:38:41.555
  I0104 13:38:41.563974 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41207 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:38:41.564007 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3206  21c02997-f55c-41d5-be5f-d00e032a93f6 41207 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/04/25 13:38:41.564
  I0104 13:38:41.568406 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3206  1342ca78-d295-411f-abbc-21b742ddd7fe 41208 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:38:41.568541 18 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3206  1342ca78-d295-411f-abbc-21b742ddd7fe 41208 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0104 13:38:42.153287      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:43.153389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:44.153624      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:45.153836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:46.153958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:47.154115      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:48.154430      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:49.155146      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:50.155304      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:51.155394      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/04/25 13:38:51.568
  I0104 13:38:51.577899 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3206  1342ca78-d295-411f-abbc-21b742ddd7fe 41267 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0104 13:38:51.577942 18 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3206  1342ca78-d295-411f-abbc-21b742ddd7fe 41267 0 2025-01-04 13:38:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-04 13:38:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0104 13:38:52.155504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:53.155709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:54.155856      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:55.156079      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:56.156981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:57.157100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:58.157374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:38:59.157466      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:00.157527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:01.157798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:01.578479 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3206" for this suite. @ 01/04/25 13:39:01.585
• [20.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/04/25 13:39:01.594
  I0104 13:39:01.594866 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 13:39:01.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:01.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:01.618
  I0104 13:39:01.622351 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:39:02.158150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/04/25 13:39:02.903
  I0104 13:39:02.903356 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-5242 --namespace=crd-publish-openapi-5242 create -f -'
  E0104 13:39:03.158353      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:04.158902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:04.977148 18 builder.go:146] stderr: ""
  I0104 13:39:04.977187 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8378-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0104 13:39:04.977246 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-5242 --namespace=crd-publish-openapi-5242 delete e2e-test-crd-publish-openapi-8378-crds test-cr'
  I0104 13:39:05.033031 18 builder.go:146] stderr: ""
  I0104 13:39:05.033087 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8378-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0104 13:39:05.033134 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-5242 --namespace=crd-publish-openapi-5242 apply -f -'
  I0104 13:39:05.092620 18 builder.go:146] stderr: ""
  I0104 13:39:05.092687 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8378-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0104 13:39:05.092737 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-5242 --namespace=crd-publish-openapi-5242 delete e2e-test-crd-publish-openapi-8378-crds test-cr'
  I0104 13:39:05.158738 18 builder.go:146] stderr: ""
  I0104 13:39:05.158778 18 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8378-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/04/25 13:39:05.158
  I0104 13:39:05.158857 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=crd-publish-openapi-5242 explain e2e-test-crd-publish-openapi-8378-crds'
  E0104 13:39:05.159104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:05.203950 18 builder.go:146] stderr: ""
  I0104 13:39:05.203997 18 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8378-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0104 13:39:06.159436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:06.438409 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5242" for this suite. @ 01/04/25 13:39:06.445
• [4.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/04/25 13:39:06.455
  I0104 13:39:06.455822 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:39:06.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:06.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:06.479
  STEP: Setting up server cert @ 01/04/25 13:39:06.511
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:39:06.766
  STEP: Deploying the webhook pod @ 01/04/25 13:39:06.777
  STEP: Wait for the deployment to be ready @ 01/04/25 13:39:06.791
  I0104 13:39:06.808329 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:39:07.159555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:08.160371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:39:08.822
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:39:08.836
  E0104 13:39:09.160668      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:09.836514 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/04/25 13:39:09.846
  STEP: create a namespace for the webhook @ 01/04/25 13:39:09.861
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/04/25 13:39:09.879
  I0104 13:39:09.964949 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3170" for this suite. @ 01/04/25 13:39:09.97
  STEP: Destroying namespace "webhook-markers-7872" for this suite. @ 01/04/25 13:39:09.978
  STEP: Destroying namespace "fail-closed-namespace-474" for this suite. @ 01/04/25 13:39:09.987
• [3.539 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/04/25 13:39:09.995
  I0104 13:39:09.995261 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename prestop @ 01/04/25 13:39:09.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:10.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:10.018
  STEP: Creating server pod server in namespace prestop-8959 @ 01/04/25 13:39:10.02
  STEP: Waiting for pods to come up. @ 01/04/25 13:39:10.03
  E0104 13:39:10.161635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:11.161786      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8959 @ 01/04/25 13:39:12.045
  E0104 13:39:12.162822      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:13.163192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 01/04/25 13:39:14.063
  E0104 13:39:14.163919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:15.164246      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:16.164904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:17.165017      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:18.165301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:19.082852 18 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/04/25 13:39:19.083
  I0104 13:39:19.097793 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8959" for this suite. @ 01/04/25 13:39:19.102
• [9.117 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/04/25 13:39:19.111
  I0104 13:39:19.111873 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:39:19.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:19.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:19.138
  E0104 13:39:19.165787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 01/04/25 13:39:19.169
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:39:19.384
  STEP: Deploying the webhook pod @ 01/04/25 13:39:19.391
  STEP: Wait for the deployment to be ready @ 01/04/25 13:39:19.405
  I0104 13:39:19.414449 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:39:20.165959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:21.166294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:39:21.428
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:39:21.441
  E0104 13:39:22.167036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:22.442492 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0104 13:39:22.452371 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7518-crds.webhook.example.com via the AdmissionRegistration API @ 01/04/25 13:39:22.965
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/04/25 13:39:22.98
  E0104 13:39:23.167136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:24.167217      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:25.167626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:25.603706 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6929" for this suite. @ 01/04/25 13:39:25.608
  STEP: Destroying namespace "webhook-markers-1645" for this suite. @ 01/04/25 13:39:25.616
• [6.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 01/04/25 13:39:25.626
  I0104 13:39:25.626108 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:39:25.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:25.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:25.659
  STEP: creating service multiprotocol-test in namespace services-7204 @ 01/04/25 13:39:25.661
  STEP: creating pod pod1 in namespace services-7204 @ 01/04/25 13:39:25.675
  STEP: Creating pod pod1 in namespace services-7204 @ 01/04/25 13:39:25.675
  E0104 13:39:26.167846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:27.167851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7204 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/04/25 13:39:27.699
  I0104 13:39:27.715155 18 service.go:4392] successfully validated that service multiprotocol-test in namespace services-7204 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/04/25 13:39:27.715
  I0104 13:39:27.715221 18 resource.go:361] Creating new exec pod
  E0104 13:39:28.168900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:29.169903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:29.730610 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  I0104 13:39:29.822342 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [tcp/http] succeeded!\n"
  I0104 13:39:29.822382 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:39:29.822511 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0104 13:39:30.170613      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:31.170815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:32.170957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:33.171866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:33.910357 18 builder.go:146] stderr: "+ + nc -v -u -w 2 10.152.183.27 80\necho hostName\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  I0104 13:39:33.910397 18 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/04/25 13:39:33.91
  I0104 13:39:33.921248 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  I0104 13:39:34.012425 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [tcp/http] succeeded!\n"
  I0104 13:39:34.012468 18 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0104 13:39:34.012632 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0104 13:39:34.172457      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:35.172552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:36.173252      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:37.174284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:38.101080 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  I0104 13:39:38.101130 18 builder.go:147] stdout: ""
  I0104 13:39:38.101188 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0104 13:39:38.174815      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:39.175084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:40.176123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:41.176294      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:42.176665      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:42.189389 18 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  I0104 13:39:42.189432 18 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/04/25 13:39:42.189
  I0104 13:39:42.200055 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0104 13:39:43.177484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:44.178161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:45.178912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:46.179004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:46.299571 18 builder.go:146] stderr: "+ nc -v -u -w 2 10.152.183.27 80\n+ echo hostName\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  I0104 13:39:46.299612 18 builder.go:147] stdout: "pod1"
  I0104 13:39:46.299866 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  E0104 13:39:47.179880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:48.180347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:48.387162 18 builder.go:135] rc: 1
  I0104 13:39:48.387231 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.27 80
  + echo hostName
  nc: connect to 10.152.183.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0104 13:39:48.387306 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  E0104 13:39:49.180837      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:50.181047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:50.471770 18 builder.go:135] rc: 1
  I0104 13:39:50.471829 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.27 80
  nc: connect to 10.152.183.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0104 13:39:50.471901 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  E0104 13:39:51.181901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:52.182092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:39:52.556711 18 builder.go:135] rc: 1
  I0104 13:39:52.556781 18 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-7204 exec execpod59fd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.27 80
  nc: connect to 10.152.183.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0104 13:39:52.556921 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7204" for this suite. @ 01/04/25 13:39:52.562
• [26.944 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/04/25 13:39:52.57
  I0104 13:39:52.570445 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:39:52.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:52.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:52.594
  STEP: Creating configMap with name projected-configmap-test-volume-def9db3d-c18e-41e3-b49c-16f322e0ac80 @ 01/04/25 13:39:52.596
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:39:52.601
  E0104 13:39:53.182273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:54.182463      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:55.182585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:56.182733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:39:56.627
  I0104 13:39:56.632290 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-configmaps-428c2b91-7889-463d-8873-3cd2fbbc9e73 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:39:56.652
  I0104 13:39:56.673584 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7080" for this suite. @ 01/04/25 13:39:56.677
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/04/25 13:39:56.69
  I0104 13:39:56.690265 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:39:56.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:56.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:56.711
  STEP: Creating Pod @ 01/04/25 13:39:56.713
  E0104 13:39:57.182848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:39:58.182951      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 01/04/25 13:39:58.736
  I0104 13:39:58.736729 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1894 PodName:pod-sharedvolume-8860dbf0-d1a3-4b29-8b22-b069d258222f ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:39:58.736748 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:39:58.737227 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:39:58.737277 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1894/pods/pod-sharedvolume-8860dbf0-d1a3-4b29-8b22-b069d258222f/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0104 13:39:58.776719 18 exec_util.go:111] Exec stderr: ""
  I0104 13:39:58.776858 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1894" for this suite. @ 01/04/25 13:39:58.781
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/04/25 13:39:58.79
  I0104 13:39:58.790104 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 13:39:58.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:39:58.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:39:58.814
  STEP: creating a Deployment @ 01/04/25 13:39:58.82
  I0104 13:39:58.820366 18 deployment.go:507] Creating simple deployment test-deployment-hzxfc
  I0104 13:39:58.837804 18 deployment.go:222] deployment "test-deployment-hzxfc" doesn't have the required revision set
  E0104 13:39:59.183120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:00.183367      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 01/04/25 13:40:00.857
  I0104 13:40:00.862140 18 deployment.go:532] Deployment test-deployment-hzxfc has Conditions: [{Available True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:40:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-hzxfc-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/04/25 13:40:00.862
  I0104 13:40:00.873413 18 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 13, 40, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 13, 40, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 4, 13, 40, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 4, 13, 39, 58, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-hzxfc-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/04/25 13:40:00.873
  I0104 13:40:00.875109 18 deployment.go:579] Observed &Deployment event: ADDED
  I0104 13:40:00.875133 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-hzxfc-f4dbbbf74"}
  I0104 13:40:00.875212 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0104 13:40:00.875255 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-hzxfc-f4dbbbf74"}
  I0104 13:40:00.875263 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0104 13:40:00.875346 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0104 13:40:00.875462 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0104 13:40:00.875477 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-hzxfc-f4dbbbf74" is progressing.}
  I0104 13:40:00.875579 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0104 13:40:00.875599 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:40:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0104 13:40:00.875634 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-hzxfc-f4dbbbf74" has successfully progressed.}
  I0104 13:40:00.875743 18 deployment.go:579] Observed &Deployment event: MODIFIED
  I0104 13:40:00.875781 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:40:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0104 13:40:00.875791 18 deployment.go:575] Observed Deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-hzxfc-f4dbbbf74" has successfully progressed.}
  I0104 13:40:00.875802 18 deployment.go:572] Found Deployment test-deployment-hzxfc in namespace deployment-4572 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 13:40:00.875815 18 deployment.go:583] Deployment test-deployment-hzxfc has an updated status
  STEP: patching the Statefulset Status @ 01/04/25 13:40:00.875
  I0104 13:40:00.875911 18 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0104 13:40:00.883931 18 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/04/25 13:40:00.883
  I0104 13:40:00.885265 18 deployment.go:616] Observed &Deployment event: ADDED
  I0104 13:40:00.885290 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-hzxfc-f4dbbbf74"}
  I0104 13:40:00.885434 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0104 13:40:00.885452 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-hzxfc-f4dbbbf74"}
  I0104 13:40:00.885466 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0104 13:40:00.885634 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0104 13:40:00.885654 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0104 13:40:00.885664 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:39:58 +0000 UTC 2025-01-04 13:39:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-hzxfc-f4dbbbf74" is progressing.}
  I0104 13:40:00.885780 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0104 13:40:00.885839 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:40:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0104 13:40:00.885856 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-hzxfc-f4dbbbf74" has successfully progressed.}
  I0104 13:40:00.885933 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0104 13:40:00.886015 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:40:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0104 13:40:00.886028 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-04 13:40:00 +0000 UTC 2025-01-04 13:39:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-hzxfc-f4dbbbf74" has successfully progressed.}
  I0104 13:40:00.886037 18 deployment.go:612] Observed deployment test-deployment-hzxfc in namespace deployment-4572 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0104 13:40:00.886201 18 deployment.go:616] Observed &Deployment event: MODIFIED
  I0104 13:40:00.886226 18 deployment.go:609] Found deployment test-deployment-hzxfc in namespace deployment-4572 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0104 13:40:00.886238 18 deployment.go:620] Deployment test-deployment-hzxfc has a patched status
  I0104 13:40:00.889974 18 deployment.go:633] Deployment "test-deployment-hzxfc":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-hzxfc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4572",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4628c374-b0e5-48d2-919d-b430cf95ef0d",
      ResourceVersion: (string) (len=5) "41808",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-hzxfc-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0104 13:40:00.895444 18 deployment.go:39] New ReplicaSet "test-deployment-hzxfc-f4dbbbf74" of Deployment "test-deployment-hzxfc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-hzxfc-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4572",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a99d54fc-fe97-4159-9552-cc59a49b8a04",
      ResourceVersion: (string) (len=5) "41804",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-hzxfc",
          UID: (types.UID) (len=36) "4628c374-b0e5-48d2-919d-b430cf95ef0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 34 36 32  |k:{\"uid\":\"462|
              00000120  38 63 33 37 34 2d 62 30  65 35 2d 34 38 64 32 2d  |8c374-b0e5-48d2-|
              00000130  39 31 39 64 2d 62 34 33  30 63 66 39 35 65 66 30  |919d-b430cf95ef0|
              00000140  64 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |d\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0104 13:40:00.901190 18 deployment.go:67] Pod "test-deployment-hzxfc-f4dbbbf74-mcwmk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-hzxfc-f4dbbbf74-mcwmk",
      GenerateName: (string) (len=32) "test-deployment-hzxfc-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-4572",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7aad948-9baf-44e2-8fa3-eb3de06d2d44",
      ResourceVersion: (string) (len=5) "41803",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-hzxfc-f4dbbbf74",
          UID: (types.UID) (len=36) "a99d54fc-fe97-4159-9552-cc59a49b8a04",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 39 39 64 35 34 66  63 2d 66 65 39 37 2d 34  |"a99d54fc-fe97-4|
              000000a0  31 35 39 2d 39 35 35 32  2d 63 63 35 39 61 34 39  |159-9552-cc59a49|
              000000b0  62 38 61 30 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b8a04\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  39 2e 31 31 37 5c 22 7d  |2.168.159.117\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kkfr2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kkfr2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871594798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=15) "192.168.159.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871594798,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871594799,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd87b0649ae0b2d36df7338b6cd9e6a8f5d585ef211ed456265e549434372485",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kkfr2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0104 13:40:00.902345 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4572" for this suite. @ 01/04/25 13:40:00.906
• [2.124 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/04/25 13:40:00.913
  I0104 13:40:00.913869 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-runtime @ 01/04/25 13:40:00.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:40:00.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:40:00.934
  STEP: create the container @ 01/04/25 13:40:00.937
  W0104 13:40:00.946761      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/04/25 13:40:00.946
  E0104 13:40:01.183988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:02.184913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/04/25 13:40:02.962
  STEP: the container should be terminated @ 01/04/25 13:40:02.966
  STEP: the termination message should be set @ 01/04/25 13:40:02.967
  I0104 13:40:02.967030 18 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/04/25 13:40:02.967
  I0104 13:40:02.988878 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-496" for this suite. @ 01/04/25 13:40:02.993
• [2.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/04/25 13:40:03.003
  I0104 13:40:03.003512 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename conformance-tests @ 01/04/25 13:40:03.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:40:03.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:40:03.028
  STEP: Getting node addresses @ 01/04/25 13:40:03.03
  I0104 13:40:03.030652 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0104 13:40:03.036815 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8395" for this suite. @ 01/04/25 13:40:03.04
• [0.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/04/25 13:40:03.049
  I0104 13:40:03.049432 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-watch @ 01/04/25 13:40:03.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:40:03.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:40:03.074
  I0104 13:40:03.076662 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:40:03.185392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:04.185610      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:05.185819      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 01/04/25 13:40:05.616
  I0104 13:40:05.622940 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-04T13:40:05Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-04T13:40:05Z]] name:name1 resourceVersion:41888 uid:16db9928-60f0-43c9-b105-c24757f3165e] num:map[num1:9223372036854775807 num2:1000000]]}
  E0104 13:40:06.186274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:07.186412      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:08.186764      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:09.186956      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:10.187362      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:11.188277      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:12.188377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:13.188477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:14.188874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:15.189869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 01/04/25 13:40:15.623
  I0104 13:40:15.631163 18 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-04T13:40:15Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-04T13:40:15Z]] name:name2 resourceVersion:41943 uid:a0d19cac-f6d2-4dcc-9a79-fa94f4fb2ef8] num:map[num1:9223372036854775807 num2:1000000]]}
  E0104 13:40:16.190800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:17.191873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:18.192345      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:19.192559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:20.192906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:21.193104      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:22.193295      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:23.193575      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:24.194555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:25.194732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 01/04/25 13:40:25.631
  I0104 13:40:25.639197 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-04T13:40:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-04T13:40:25Z]] name:name1 resourceVersion:41963 uid:16db9928-60f0-43c9-b105-c24757f3165e] num:map[num1:9223372036854775807 num2:1000000]]}
  E0104 13:40:26.194836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:27.195880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:28.195958      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:29.196660      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:30.196800      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:31.197016      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:32.197186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:33.197438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:34.197534      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:35.197872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 01/04/25 13:40:35.639
  I0104 13:40:35.646647 18 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-04T13:40:15Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-04T13:40:35Z]] name:name2 resourceVersion:41982 uid:a0d19cac-f6d2-4dcc-9a79-fa94f4fb2ef8] num:map[num1:9223372036854775807 num2:1000000]]}
  E0104 13:40:36.198876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:37.199950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:38.200043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:39.200328      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:40.201022      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:41.201877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:42.202872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:43.203310      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:44.203424      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:45.203912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 01/04/25 13:40:45.647
  I0104 13:40:45.657008 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-04T13:40:05Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-04T13:40:25Z]] name:name1 resourceVersion:42003 uid:16db9928-60f0-43c9-b105-c24757f3165e] num:map[num1:9223372036854775807 num2:1000000]]}
  E0104 13:40:46.204704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:47.204835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:48.205267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:49.205471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:50.205702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:51.205905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:52.206097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:53.206407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:54.206535      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:55.206643      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 01/04/25 13:40:55.658
  I0104 13:40:55.667507 18 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-04T13:40:15Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-04T13:40:35Z]] name:name2 resourceVersion:42024 uid:a0d19cac-f6d2-4dcc-9a79-fa94f4fb2ef8] num:map[num1:9223372036854775807 num2:1000000]]}
  E0104 13:40:56.206818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:57.206860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:58.207114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:40:59.207193      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:00.207973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:01.208906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:02.209873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:03.209950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:04.210870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:05.210963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:41:06.185007 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7331" for this suite. @ 01/04/25 13:41:06.19
• [63.149 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 01/04/25 13:41:06.198
  I0104 13:41:06.198704 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename statefulset @ 01/04/25 13:41:06.199
  E0104 13:41:06.211530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:41:06.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:41:06.22
  STEP: Creating service test in namespace statefulset-4756 @ 01/04/25 13:41:06.222
  STEP: Creating a new StatefulSet @ 01/04/25 13:41:06.23
  I0104 13:41:06.243441 18 wait.go:40] Found 0 stateful pods, waiting for 3
  E0104 13:41:07.211960      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:08.212581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:09.212799      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:10.212927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:11.213881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:12.214108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:13.214622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:14.214780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:15.214983      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:16.215865      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:41:16.244468 18 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0104 13:41:16.244501 18 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0104 13:41:16.244508 18 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0104 13:41:16.257586 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4756 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 13:41:16.352282 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 13:41:16.352324 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 13:41:16.352334 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0104 13:41:17.216346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:18.216552      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:19.216836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:20.217909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:21.218068      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:22.218855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:23.219866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:24.220881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:25.221898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:26.222139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/04/25 13:41:26.362
  I0104 13:41:26.373634 18 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 01/04/25 13:41:26.373
  E0104 13:41:27.222388      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:28.222484      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:29.222704      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:30.222806      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:31.222945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:32.223173      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:33.223518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:34.223706      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:35.223926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:36.224961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 01/04/25 13:41:36.385
  I0104 13:41:36.390239 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4756 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 13:41:36.474534 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 13:41:36.474586 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 13:41:36.474597 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0104 13:41:37.226062      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:38.226203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:39.227249      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:40.228024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:41.228123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:42.228205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:43.228301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:44.228884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:45.229876      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:46.230066      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 01/04/25 13:41:46.494
  I0104 13:41:46.494562 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4756 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0104 13:41:46.588273 18 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0104 13:41:46.588327 18 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0104 13:41:46.588337 18 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0104 13:41:47.230769      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:48.230902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:49.231076      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:50.231190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:51.231442      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:52.231564      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:53.232561      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:54.232630      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:55.232832      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:56.233105      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:41:56.610215 18 statefulset.go:2507] Updating stateful set ss2
  E0104 13:41:57.233461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:58.233509      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:41:59.233741      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:00.233863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:01.234113      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:02.234291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:03.234446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:04.234598      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:05.234748      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:06.234860      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 01/04/25 13:42:06.619
  I0104 13:42:06.623700 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=statefulset-4756 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0104 13:42:06.708084 18 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0104 13:42:06.708125 18 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0104 13:42:06.708136 18 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0104 13:42:07.234948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:08.235094      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:09.235155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:10.235392      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:11.236176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:12.236380      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:13.236512      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:14.236627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:15.236870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:16.236974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:42:16.726872 18 statefulset.go:138] Deleting all statefulset in ns statefulset-4756
  I0104 13:42:16.731636 18 rest.go:150] Scaling statefulset ss2 to 0
  E0104 13:42:17.237064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:18.237195      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:19.237284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:20.237587      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:21.238436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:22.238544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:23.239623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:24.239808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:25.239911      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:26.240107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:42:26.748173 18 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0104 13:42:26.753181 18 rest.go:88] Deleting statefulset ss2
  I0104 13:42:26.769614 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4756" for this suite. @ 01/04/25 13:42:26.774
• [80.583 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/04/25 13:42:26.781
  I0104 13:42:26.781862 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename events @ 01/04/25 13:42:26.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:42:26.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:42:26.804
  STEP: Create set of events @ 01/04/25 13:42:26.808
  I0104 13:42:26.815588 18 core_events.go:198] created test-event-1
  I0104 13:42:26.820877 18 core_events.go:198] created test-event-2
  I0104 13:42:26.826794 18 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/04/25 13:42:26.826
  STEP: delete collection of events @ 01/04/25 13:42:26.831
  I0104 13:42:26.831029 18 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/04/25 13:42:26.864
  I0104 13:42:26.864508 18 core_events.go:230] requesting list of events to confirm quantity
  I0104 13:42:26.869229 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5562" for this suite. @ 01/04/25 13:42:26.874
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/04/25 13:42:26.882
  I0104 13:42:26.882874 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:42:26.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:42:26.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:42:26.909
  E0104 13:42:27.240897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:28.241024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:29.241744      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:30.242284      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:31.242773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:32.243385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:33.244024      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:34.244125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:35.244366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:36.245274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:37.245893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:38.246788      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:39.247351      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:40.248220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:41.248329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:42.248377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:43.249235      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/04/25 13:42:43.917
  E0104 13:42:44.249884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:45.250004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:46.250309      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:47.250441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:48.251352      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/04/25 13:42:48.923
  STEP: Ensuring resource quota status is calculated @ 01/04/25 13:42:48.929
  E0104 13:42:49.251870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:50.252006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 01/04/25 13:42:50.934
  STEP: Ensuring resource quota status captures configMap creation @ 01/04/25 13:42:50.948
  E0104 13:42:51.252641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:52.252812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 01/04/25 13:42:52.953
  STEP: Ensuring resource quota status released usage @ 01/04/25 13:42:52.961
  E0104 13:42:53.253385      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:54.253470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:42:54.967313 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-383" for this suite. @ 01/04/25 13:42:54.972
• [28.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/04/25 13:42:54.981
  I0104 13:42:54.981399 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pod-network-test @ 01/04/25 13:42:54.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:42:55.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:42:55.006
  STEP: Performing setup for networking test in namespace pod-network-test-1049 @ 01/04/25 13:42:55.009
  STEP: creating a selector @ 01/04/25 13:42:55.009
  STEP: Creating the service pods in kubernetes @ 01/04/25 13:42:55.009
  I0104 13:42:55.009275 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0104 13:42:55.253916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:56.254132      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:57.254272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:58.254417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:42:59.254533      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:00.254651      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:01.255357      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:02.255582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:03.255785      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:04.255913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:05.256702      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:06.257445      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/04/25 13:43:07.101
  E0104 13:43:07.257720      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:08.257981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:09.134264 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0104 13:43:09.134302 18 utils.go:496] Going to poll 192.168.113.43 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0104 13:43:09.138547 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.113.43:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1049 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:43:09.138570 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:43:09.139019 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:43:09.139063 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1049/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.113.43%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0104 13:43:09.184656 18 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0104 13:43:09.184720 18 utils.go:496] Going to poll 192.168.159.122 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0104 13:43:09.189710 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.159.122:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1049 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:43:09.189732 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:43:09.190140 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:43:09.190182 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1049/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.159.122%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0104 13:43:09.234916 18 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0104 13:43:09.234954 18 utils.go:496] Going to poll 192.168.104.140 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0104 13:43:09.239600 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.104.140:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1049 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:43:09.239620 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:43:09.240062 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:43:09.240109 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1049/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.104.140%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0104 13:43:09.258169      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:09.287180 18 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0104 13:43:09.287297 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1049" for this suite. @ 01/04/25 13:43:09.292
• [14.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/04/25 13:43:09.301
  I0104 13:43:09.301268 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename discovery @ 01/04/25 13:43:09.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:09.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:09.326
  STEP: Setting up server cert @ 01/04/25 13:43:09.33
  I0104 13:43:09.424521 18 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0104 13:43:09.425526 18 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0104 13:43:09.425552 18 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0104 13:43:09.425565 18 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0104 13:43:09.425571 18 discovery.go:139] Checking APIGroup: apps
  I0104 13:43:09.426483 18 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0104 13:43:09.426498 18 discovery.go:148] Versions found [{apps/v1 v1}]
  I0104 13:43:09.426504 18 discovery.go:154] apps/v1 matches apps/v1
  I0104 13:43:09.426510 18 discovery.go:139] Checking APIGroup: events.k8s.io
  I0104 13:43:09.427484 18 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0104 13:43:09.427495 18 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0104 13:43:09.427511 18 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0104 13:43:09.427520 18 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0104 13:43:09.428476 18 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0104 13:43:09.428487 18 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0104 13:43:09.428493 18 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0104 13:43:09.428499 18 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0104 13:43:09.429374 18 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0104 13:43:09.429386 18 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0104 13:43:09.429392 18 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0104 13:43:09.429411 18 discovery.go:139] Checking APIGroup: autoscaling
  I0104 13:43:09.430551 18 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0104 13:43:09.430573 18 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0104 13:43:09.430579 18 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0104 13:43:09.430596 18 discovery.go:139] Checking APIGroup: batch
  I0104 13:43:09.431560 18 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0104 13:43:09.431572 18 discovery.go:148] Versions found [{batch/v1 v1}]
  I0104 13:43:09.431579 18 discovery.go:154] batch/v1 matches batch/v1
  I0104 13:43:09.431585 18 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0104 13:43:09.432515 18 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0104 13:43:09.432525 18 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0104 13:43:09.432531 18 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0104 13:43:09.432537 18 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0104 13:43:09.433413 18 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0104 13:43:09.433424 18 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0104 13:43:09.433430 18 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0104 13:43:09.433448 18 discovery.go:139] Checking APIGroup: policy
  I0104 13:43:09.434561 18 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0104 13:43:09.434582 18 discovery.go:148] Versions found [{policy/v1 v1}]
  I0104 13:43:09.434588 18 discovery.go:154] policy/v1 matches policy/v1
  I0104 13:43:09.434594 18 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0104 13:43:09.435539 18 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0104 13:43:09.435554 18 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0104 13:43:09.435560 18 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0104 13:43:09.435566 18 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0104 13:43:09.436527 18 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0104 13:43:09.436537 18 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0104 13:43:09.436558 18 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0104 13:43:09.436564 18 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0104 13:43:09.437519 18 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0104 13:43:09.437529 18 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0104 13:43:09.437535 18 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0104 13:43:09.437564 18 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0104 13:43:09.438810 18 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0104 13:43:09.438832 18 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0104 13:43:09.438839 18 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0104 13:43:09.438845 18 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0104 13:43:09.439753 18 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0104 13:43:09.439766 18 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0104 13:43:09.439783 18 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0104 13:43:09.439789 18 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0104 13:43:09.440693 18 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0104 13:43:09.440702 18 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0104 13:43:09.440708 18 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0104 13:43:09.440714 18 discovery.go:139] Checking APIGroup: node.k8s.io
  I0104 13:43:09.441583 18 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0104 13:43:09.441592 18 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0104 13:43:09.441597 18 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0104 13:43:09.441603 18 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0104 13:43:09.442480 18 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0104 13:43:09.442490 18 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0104 13:43:09.442495 18 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0104 13:43:09.442501 18 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0104 13:43:09.443637 18 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0104 13:43:09.443659 18 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0104 13:43:09.443666 18 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0104 13:43:09.443687 18 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0104 13:43:09.444600 18 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0104 13:43:09.444614 18 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0104 13:43:09.444619 18 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0104 13:43:09.444775 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-349" for this suite. @ 01/04/25 13:43:09.449
• [0.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/04/25 13:43:09.457
  I0104 13:43:09.457859 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename podtemplate @ 01/04/25 13:43:09.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:09.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:09.481
  I0104 13:43:09.516419 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2567" for this suite. @ 01/04/25 13:43:09.52
• [0.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/04/25 13:43:09.528
  I0104 13:43:09.528727 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/04/25 13:43:09.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:09.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:09.551
  STEP: Creating two CSIDrivers @ 01/04/25 13:43:09.554
  STEP: Getting "inline-driver-fb0ecdbd-efd4-4558-a910-3ce87ead8706" & "inline-driver-ef51d4c8-8d02-41c3-9f19-274fe19c3fd4" @ 01/04/25 13:43:09.571
  STEP: Patching the CSIDriver "inline-driver-ef51d4c8-8d02-41c3-9f19-274fe19c3fd4" @ 01/04/25 13:43:09.579
  STEP: Updating the CSIDriver "inline-driver-ef51d4c8-8d02-41c3-9f19-274fe19c3fd4" @ 01/04/25 13:43:09.586
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1198" @ 01/04/25 13:43:09.596
  STEP: Deleting CSIDriver "inline-driver-fb0ecdbd-efd4-4558-a910-3ce87ead8706" @ 01/04/25 13:43:09.599
  STEP: Confirm deletion of CSIDriver "inline-driver-fb0ecdbd-efd4-4558-a910-3ce87ead8706" @ 01/04/25 13:43:09.607
  STEP: Deleting CSIDriver "inline-driver-ef51d4c8-8d02-41c3-9f19-274fe19c3fd4" via DeleteCollection @ 01/04/25 13:43:09.611
  STEP: Confirm deletion of CSIDriver "inline-driver-ef51d4c8-8d02-41c3-9f19-274fe19c3fd4" @ 01/04/25 13:43:09.621
  I0104 13:43:09.626153 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1198" for this suite. @ 01/04/25 13:43:09.63
• [0.110 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/04/25 13:43:09.638
  I0104 13:43:09.638480 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 13:43:09.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:09.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:09.663
  STEP: Creating pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846 @ 01/04/25 13:43:09.665
  E0104 13:43:10.258893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:11.258994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 13:43:11.684
  I0104 13:43:11.688642 18 container_probe.go:1749] Initial restart count of pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f is 0
  I0104 13:43:11.692890 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:12.259092      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:13.259192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:13.699513 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:14.259914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:15.260654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:15.705063 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:16.260693      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:17.260935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:17.710513 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:18.261032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:19.261142      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:19.716106 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:20.261766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:21.261961      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:21.721478 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:22.262156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:23.262224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:23.726919 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:24.262366      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:25.262914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:25.732784 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:26.263411      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:27.263661      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:27.738879 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:28.264728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:29.264953      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:29.745432 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  E0104 13:43:30.265001      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:31.265100      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:31.750623 18 container_probe.go:1759] Get pod liveness-34ace096-4c09-42ca-ab29-daeacc126f7f in namespace container-probe-8846
  I0104 13:43:31.750660 18 container_probe.go:1763] Restart count of pod container-probe-8846/liveness-34ace096-4c09-42ca-ab29-daeacc126f7f is now 1 (20.061995355s elapsed)
  STEP: deleting the pod @ 01/04/25 13:43:31.75
  I0104 13:43:31.768990 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8846" for this suite. @ 01/04/25 13:43:31.774
• [22.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 01/04/25 13:43:31.781
  I0104 13:43:31.781602 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:43:31.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:31.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:31.802
  STEP: creating Agnhost RC @ 01/04/25 13:43:31.806
  I0104 13:43:31.806778 18 kubectl.go:1537] namespace kubectl-9501
  I0104 13:43:31.806825 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9501 create -f -'
  I0104 13:43:31.973491 18 builder.go:146] stderr: ""
  I0104 13:43:31.973531 18 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/04/25 13:43:31.973
  E0104 13:43:32.265975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:32.979043 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 13:43:32.979078 18 framework.go:733] Found 0 / 1
  E0104 13:43:33.266435      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:33.979427 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 13:43:33.979461 18 framework.go:733] Found 1 / 1
  I0104 13:43:33.979476 18 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0104 13:43:33.984224 18 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0104 13:43:33.984247 18 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0104 13:43:33.984255 18 kubectl.go:1544] wait on agnhost-primary startup in kubectl-9501 
  I0104 13:43:33.984307 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9501 logs agnhost-primary-qk7wf agnhost-primary'
  I0104 13:43:34.043757 18 builder.go:146] stderr: ""
  I0104 13:43:34.043798 18 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/04/25 13:43:34.043
  I0104 13:43:34.043880 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9501 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0104 13:43:34.107581 18 builder.go:146] stderr: ""
  I0104 13:43:34.107658 18 builder.go:147] stdout: "service/rm2 exposed\n"
  I0104 13:43:34.114973 18 utils.go:1203] Service rm2 in namespace kubectl-9501 found.
  E0104 13:43:34.267289      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:35.267486      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 01/04/25 13:43:36.123
  I0104 13:43:36.123651 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-9501 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0104 13:43:36.183526 18 builder.go:146] stderr: ""
  I0104 13:43:36.183571 18 builder.go:147] stdout: "service/rm3 exposed\n"
  I0104 13:43:36.190976 18 utils.go:1203] Service rm3 in namespace kubectl-9501 found.
  E0104 13:43:36.268181      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:37.268905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:38.200300 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9501" for this suite. @ 01/04/25 13:43:38.204
• [6.432 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/04/25 13:43:38.213
  I0104 13:43:38.213813 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:43:38.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:38.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:38.235
  STEP: Creating projection with secret that has name projected-secret-test-3eda658e-fa5a-4d3e-b0a1-3e31253c6dd0 @ 01/04/25 13:43:38.238
  STEP: Creating a pod to test consume secrets @ 01/04/25 13:43:38.242
  E0104 13:43:38.269578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:39.270327      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:40.270627      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:41.270812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:43:42.267
  E0104 13:43:42.271695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:43:42.272177 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-projected-secrets-5d4d185d-1db0-48f6-a531-2f989b5cf212 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:43:42.289
  I0104 13:43:42.315199 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1745" for this suite. @ 01/04/25 13:43:42.32
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/04/25 13:43:42.328
  I0104 13:43:42.328935 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename podtemplate @ 01/04/25 13:43:42.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:42.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:42.352
  STEP: Create set of pod templates @ 01/04/25 13:43:42.355
  I0104 13:43:42.361851 18 podtemplates.go:143] created test-podtemplate-1
  I0104 13:43:42.368131 18 podtemplates.go:143] created test-podtemplate-2
  I0104 13:43:42.373107 18 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/04/25 13:43:42.373
  STEP: delete collection of pod templates @ 01/04/25 13:43:42.377
  I0104 13:43:42.377487 18 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/04/25 13:43:42.399
  I0104 13:43:42.399535 18 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0104 13:43:42.403437 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1410" for this suite. @ 01/04/25 13:43:42.407
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/04/25 13:43:42.416
  I0104 13:43:42.416056 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:43:42.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:42.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:42.437
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/04/25 13:43:42.439
  E0104 13:43:43.271846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:44.272072      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:45.272156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:46.272288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:43:46.465
  I0104 13:43:46.469483 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-cddbbebb-4f32-478d-adeb-42aa37ba5fdf container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:43:46.477
  I0104 13:43:46.498718 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7971" for this suite. @ 01/04/25 13:43:46.503
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 01/04/25 13:43:46.511
  I0104 13:43:46.511495 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:43:46.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:46.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:46.534
  STEP: creating the pod @ 01/04/25 13:43:46.536
  I0104 13:43:46.536537 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 create -f -'
  I0104 13:43:46.628566 18 builder.go:146] stderr: ""
  I0104 13:43:46.628604 18 builder.go:147] stdout: "pod/pause created\n"
  E0104 13:43:47.272461      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:48.273519      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/04/25 13:43:48.642
  I0104 13:43:48.642709 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 label pods pause testing-label=testing-label-value'
  I0104 13:43:48.696399 18 builder.go:146] stderr: ""
  I0104 13:43:48.696443 18 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/04/25 13:43:48.696
  I0104 13:43:48.696554 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 get pod pause -L testing-label'
  I0104 13:43:48.741274 18 builder.go:146] stderr: ""
  I0104 13:43:48.741312 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/04/25 13:43:48.741
  I0104 13:43:48.741404 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 label pods pause testing-label-'
  I0104 13:43:48.794378 18 builder.go:146] stderr: ""
  I0104 13:43:48.794415 18 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/04/25 13:43:48.794
  I0104 13:43:48.794542 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 get pod pause -L testing-label'
  I0104 13:43:48.841804 18 builder.go:146] stderr: ""
  I0104 13:43:48.841847 18 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 01/04/25 13:43:48.841
  I0104 13:43:48.841998 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 delete --grace-period=0 --force -f -'
  I0104 13:43:48.903356 18 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0104 13:43:48.903396 18 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0104 13:43:48.903442 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 get rc,svc -l name=pause --no-headers'
  I0104 13:43:48.953841 18 builder.go:146] stderr: "No resources found in kubectl-715 namespace.\n"
  I0104 13:43:48.953882 18 builder.go:147] stdout: ""
  I0104 13:43:48.953932 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-715 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0104 13:43:49.001353 18 builder.go:146] stderr: ""
  I0104 13:43:49.001393 18 builder.go:147] stdout: ""
  I0104 13:43:49.001543 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-715" for this suite. @ 01/04/25 13:43:49.006
• [2.503 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/04/25 13:43:49.014
  I0104 13:43:49.015005 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename namespaces @ 01/04/25 13:43:49.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:49.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:43:49.039
  STEP: Creating a test namespace @ 01/04/25 13:43:49.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:43:49.061
  STEP: Creating a pod in the namespace @ 01/04/25 13:43:49.063
  STEP: Waiting for the pod to have running status @ 01/04/25 13:43:49.075
  E0104 13:43:49.273629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:50.273871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 01/04/25 13:43:51.085
  STEP: Waiting for the namespace to be removed. @ 01/04/25 13:43:51.094
  E0104 13:43:51.274270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:52.274734      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:53.275609      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:54.275713      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:55.275813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:56.276292      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:57.276714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:58.276907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:43:59.276986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:00.277805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:01.277845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 01/04/25 13:44:02.101
  STEP: Verifying there are no pods in the namespace @ 01/04/25 13:44:02.122
  I0104 13:44:02.129268 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3356" for this suite. @ 01/04/25 13:44:02.133
  STEP: Destroying namespace "nsdeletetest-3447" for this suite. @ 01/04/25 13:44:02.141
  I0104 13:44:02.145358 18 framework.go:370] Namespace nsdeletetest-3447 was already deleted
  STEP: Destroying namespace "nsdeletetest-147" for this suite. @ 01/04/25 13:44:02.145
• [13.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/04/25 13:44:02.154
  I0104 13:44:02.154016 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename events @ 01/04/25 13:44:02.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:02.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:02.175
  STEP: creating a test event @ 01/04/25 13:44:02.178
  STEP: listing all events in all namespaces @ 01/04/25 13:44:02.184
  STEP: patching the test event @ 01/04/25 13:44:02.188
  STEP: fetching the test event @ 01/04/25 13:44:02.197
  STEP: updating the test event @ 01/04/25 13:44:02.201
  STEP: getting the test event @ 01/04/25 13:44:02.214
  STEP: deleting the test event @ 01/04/25 13:44:02.218
  STEP: listing all events in all namespaces @ 01/04/25 13:44:02.228
  I0104 13:44:02.232452 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-604" for this suite. @ 01/04/25 13:44:02.237
• [0.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/04/25 13:44:02.244
  I0104 13:44:02.244723 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename deployment @ 01/04/25 13:44:02.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:02.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:02.266
  STEP: creating a Deployment @ 01/04/25 13:44:02.275
  E0104 13:44:02.278425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for Deployment to be created @ 01/04/25 13:44:02.282
  STEP: waiting for all Replicas to be Ready @ 01/04/25 13:44:02.283
  I0104 13:44:02.285034 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.285053 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.298209 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.298242 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.313521 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.313551 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.338803 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:02.338833 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0104 13:44:03.093418 18 deployment.go:246] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0104 13:44:03.093453 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0104 13:44:03.278580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:03.530117 18 deployment.go:248] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/04/25 13:44:03.53
  I0104 13:44:03.540824 18 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/04/25 13:44:03.54
  I0104 13:44:03.542322 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542343 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542353 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542360 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542368 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542374 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542429 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542437 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 0
  I0104 13:44:03.542444 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:03.542451 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:03.542458 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.542463 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.542495 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.542502 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.553144 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.553175 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.571535 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.571567 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:03.584204 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:03.584235 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:03.594412 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:03.594448 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  E0104 13:44:04.278841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:05.105253 18 deployment.go:309] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:05.105296 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:05.130328 18 deployment.go:311] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  STEP: listing Deployments @ 01/04/25 13:44:05.13
  I0104 13:44:05.135127 18 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/04/25 13:44:05.135
  I0104 13:44:05.149774 18 deployment.go:360] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/04/25 13:44:05.149
  I0104 13:44:05.155561 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:05.162179 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:05.182625 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:05.205819 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:05.212357 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0104 13:44:05.279663      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:06.106423 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:06.131179 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:06.140791 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0104 13:44:06.148027 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0104 13:44:06.280506      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:07.280629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:07.589500 18 deployment.go:389] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/04/25 13:44:07.611
  STEP: fetching the DeploymentStatus @ 01/04/25 13:44:07.621
  I0104 13:44:07.627193 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:07.627220 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:07.627258 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:07.627394 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:07.627409 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 1
  I0104 13:44:07.627416 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:07.627478 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:07.627485 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:07.627497 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 2
  I0104 13:44:07.627573 18 deployment.go:449] observed Deployment test-deployment in namespace deployment-3039 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/04/25 13:44:07.627
  I0104 13:44:07.639429 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639508 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639523 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639654 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639663 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639670 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639796 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639863 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639873 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639941 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.639952 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.640005 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.640082 18 deployment.go:475] observed event type MODIFIED
  I0104 13:44:07.643641 18 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0104 13:44:07.650951 18 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "507e1dc2-740e-40b2-bf2b-c8bf296136f2",
      ResourceVersion: (string) (len=5) "43510",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595045,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "fd52b966-876d-482c-88ee-42f17b3916c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 64 35 32  62 39 36 36 2d 38 37 36  |":\"fd52b966-876|
              00000130  64 2d 34 38 32 63 2d 38  38 65 65 2d 34 32 66 31  |d-482c-88ee-42f1|
              00000140  37 62 33 39 31 36 63 30  5c 22 7d 22 3a 7b 7d 7d  |7b3916c0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0104 13:44:07.655588 18 deployment.go:669] pod: "test-deployment-6c86c7f765-rjxjp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-rjxjp",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-3039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d358ac03-47bf-455b-885f-4f1a2aa344e0",
      ResourceVersion: (string) (len=5) "43452",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595045,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "507e1dc2-740e-40b2-bf2b-c8bf296136f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 30 37 65 31 64 63 32  |uid\":\"507e1dc2|
              000000a0  2d 37 34 30 65 2d 34 30  62 32 2d 62 66 32 62 2d  |-740e-40b2-bf2b-|
              000000b0  63 38 62 66 32 39 36 31  33 36 66 32 5c 22 7d 22  |c8bf296136f2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 35 39 5c 22 7d  |2.168.104.159\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7bxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7bxt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595045,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871595045,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0714e4edeeeac54a6afbf52eb02b0676c666b7473a5647cd535f63ba2af953b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m7bxt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0104 13:44:07.657115 18 deployment.go:669] pod: "test-deployment-6c86c7f765-x5tsw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-x5tsw",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-3039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9d95019-9a34-4804-af93-7ee2cc9ad373",
      ResourceVersion: (string) (len=5) "43509",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595046,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "507e1dc2-740e-40b2-bf2b-c8bf296136f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 30 37 65 31 64 63 32  |uid\":\"507e1dc2|
              000000a0  2d 37 34 30 65 2d 34 30  62 32 2d 62 66 32 62 2d  |-740e-40b2-bf2b-|
              000000b0  63 38 62 66 32 39 36 31  33 36 66 32 5c 22 7d 22  |c8bf296136f2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 35  39 2e 37 39 5c 22 7d 22  |2.168.159.79\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vcm45",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vcm45",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-76-68",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.76.68",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.76.68"
        }
      },
      PodIP: (string) (len=14) "192.168.159.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.159.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595046,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871595046,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8e7f0fd423530a0b2e5888c709132b24713ab64a2493113e3e325bc9e5f0fa5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vcm45",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0104 13:44:07.658409 18 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52284f3f-0551-4db7-9d6a-86cda65bfdc0",
      ResourceVersion: (string) (len=5) "43518",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595043,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "fd52b966-876d-482c-88ee-42f17b3916c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 64 35 32  62 39 36 36 2d 38 37 36  |":\"fd52b966-876|
              00000130  64 2d 34 38 32 63 2d 38  38 65 65 2d 34 32 66 31  |d-482c-88ee-42f1|
              00000140  37 62 33 39 31 36 63 30  5c 22 7d 22 3a 7b 7d 7d  |7b3916c0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595047,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0104 13:44:07.666923 18 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-xjthw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-xjthw",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-3039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b95a3d68-fc81-4256-a921-079409af703f",
      ResourceVersion: (string) (len=5) "43514",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595043,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "52284f3f-0551-4db7-9d6a-86cda65bfdc0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 32 32 38 34 66 33 66  |uid\":\"52284f3f|
              000000a0  2d 30 35 35 31 2d 34 64  62 37 2d 39 64 36 61 2d  |-0551-4db7-9d6a-|
              000000b0  38 36 63 64 61 36 35 62  66 64 63 30 5c 22 7d 22  |86cda65bfdc0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 30  34 2e 31 36 39 5c 22 7d  |2.168.104.169\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gpfxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gpfxt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-8-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.8.94"
        }
      },
      PodIP: (string) (len=15) "192.168.104.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.104.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595043,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871595044,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://0565c49fbc3666ae17eddf30cccea88f6464ac995fe8895a35109f6390817f32",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gpfxt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0104 13:44:07.669246 18 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3039",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76b061bc-0125-4606-be0d-615f1193d20a",
      ResourceVersion: (string) (len=5) "43408",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871595042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "fd52b966-876d-482c-88ee-42f17b3916c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 64 35 32  62 39 36 36 2d 38 37 36  |":\"fd52b966-876|
              00000130  64 2d 34 38 32 63 2d 38  38 65 65 2d 34 32 66 31  |d-482c-88ee-42f1|
              00000140  37 62 33 39 31 36 63 30  5c 22 7d 22 3a 7b 7d 7d  |7b3916c0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871595045,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0104 13:44:07.676002 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3039" for this suite. @ 01/04/25 13:44:07.68
• [5.443 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/04/25 13:44:07.688
  I0104 13:44:07.688075 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename apf @ 01/04/25 13:44:07.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:07.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:07.71
  STEP: getting /apis @ 01/04/25 13:44:07.712
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/04/25 13:44:07.716
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/04/25 13:44:07.717
  STEP: creating @ 01/04/25 13:44:07.718
  STEP: getting @ 01/04/25 13:44:07.739
  STEP: listing @ 01/04/25 13:44:07.744
  STEP: watching @ 01/04/25 13:44:07.748
  I0104 13:44:07.748498 18 flowcontrol.go:394] starting watch
  STEP: patching @ 01/04/25 13:44:07.749
  STEP: updating @ 01/04/25 13:44:07.755
  I0104 13:44:07.764573 18 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 01/04/25 13:44:07.764
  STEP: patching /status @ 01/04/25 13:44:07.768
  STEP: updating /status @ 01/04/25 13:44:07.775
  STEP: deleting @ 01/04/25 13:44:07.79
  STEP: deleting a collection @ 01/04/25 13:44:07.808
  I0104 13:44:07.831693 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7935" for this suite. @ 01/04/25 13:44:07.839
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/04/25 13:44:07.848
  I0104 13:44:07.848800 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 13:44:07.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:07.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:07.87
  STEP: Create set of pods @ 01/04/25 13:44:07.872
  I0104 13:44:07.882576 18 pods.go:871] created test-pod-1
  I0104 13:44:07.891549 18 pods.go:871] created test-pod-2
  I0104 13:44:07.897309 18 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/04/25 13:44:07.897
  E0104 13:44:08.280881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:09.281155      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 01/04/25 13:44:09.943
  I0104 13:44:09.947340 18 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0104 13:44:10.281818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:10.948548 18 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0104 13:44:11.281853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:11.948786 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4484" for this suite. @ 01/04/25 13:44:11.953
• [4.115 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/04/25 13:44:11.964
  I0104 13:44:11.964207 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:44:11.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:11.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:11.989
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 13:44:11.991
  E0104 13:44:12.282114      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:13.282272      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:14.282446      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:15.282583      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:44:16.013
  I0104 13:44:16.018123 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-42cf1d43-6cae-4757-a16f-0b24f6f9a2c0 container client-container: <nil>
  STEP: delete the pod @ 01/04/25 13:44:16.026
  I0104 13:44:16.048442 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4969" for this suite. @ 01/04/25 13:44:16.052
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/04/25 13:44:16.062
  I0104 13:44:16.062601 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-pred @ 01/04/25 13:44:16.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:16.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:16.089
  I0104 13:44:16.091351 18 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0104 13:44:16.100579 18 util.go:393] Waiting for terminating namespaces to be deleted...
  I0104 13:44:16.104656 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-169 before test
  I0104 13:44:16.112937 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9kbc6 from ingress-nginx-kubernetes-worker started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.112956 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 13:44:16.112963 18 predicates.go:957] calico-node-7jxjd from kube-system started at 2025-01-04 12:03:59 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.112969 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 13:44:16.112974 18 predicates.go:957] coredns-5b4857d7c8-znj7g from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.112979 18 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0104 13:44:16.113003 18 predicates.go:957] kube-state-metrics-5d7bdccd49-w7r9q from kube-system started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.113013 18 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I0104 13:44:16.113019 18 predicates.go:957] metrics-server-v0.7.1-6c77d69467-j4g8b from kube-system started at 2025-01-04 11:57:17 +0000 UTC (2 container statuses recorded)
  I0104 13:44:16.113024 18 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0104 13:44:16.113029 18 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I0104 13:44:16.113035 18 predicates.go:957] dashboard-metrics-scraper-64757cf48d-j7szt from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.113039 18 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0104 13:44:16.113045 18 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-sprml from kubernetes-dashboard started at 2025-01-04 11:57:17 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.113050 18 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0104 13:44:16.113056 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-nzqp5 from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 13:44:16.113060 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 13:44:16.113065 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 13:44:16.113070 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-76-68 before test
  I0104 13:44:16.119142 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qxvn4 from ingress-nginx-kubernetes-worker started at 2025-01-04 12:03:24 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.119161 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 13:44:16.119168 18 predicates.go:957] calico-node-hkpq9 from kube-system started at 2025-01-04 12:02:54 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.119189 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 13:44:16.119196 18 predicates.go:957] sonobuoy-e2e-job-ed454467d82848bc from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 13:44:16.119201 18 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0104 13:44:16.119213 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 13:44:16.119220 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-qpfkm from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 13:44:16.119229 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 13:44:16.119244 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0104 13:44:16.119259 18 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-8-94 before test
  I0104 13:44:16.124855 18 predicates.go:957] nginx-ingress-controller-kubernetes-worker-9vf2x from ingress-nginx-kubernetes-worker started at 2025-01-04 12:29:38 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.124877 18 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0104 13:44:16.124884 18 predicates.go:957] calico-node-wq2kk from kube-system started at 2025-01-04 12:03:48 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.124889 18 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0104 13:44:16.124895 18 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-04 12:08:26 +0000 UTC (1 container statuses recorded)
  I0104 13:44:16.124899 18 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0104 13:44:16.124906 18 predicates.go:957] sonobuoy-systemd-logs-daemon-set-7471316c88e34e54-xs6sh from sonobuoy started at 2025-01-04 12:08:28 +0000 UTC (2 container statuses recorded)
  I0104 13:44:16.124911 18 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0104 13:44:16.124916 18 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/04/25 13:44:16.124
  E0104 13:44:16.282839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:17.283895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/04/25 13:44:18.149
  STEP: Trying to apply a random label on the found node. @ 01/04/25 13:44:18.162
  STEP: verifying the node has the label kubernetes.io/e2e-92e4120d-daf8-4fa2-9e96-836574a7fb11 42 @ 01/04/25 13:44:18.173
  STEP: Trying to relaunch the pod, now with labels. @ 01/04/25 13:44:18.178
  E0104 13:44:18.284030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:19.284145      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-92e4120d-daf8-4fa2-9e96-836574a7fb11 off the node ip-172-31-8-94 @ 01/04/25 13:44:20.198
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-92e4120d-daf8-4fa2-9e96-836574a7fb11 @ 01/04/25 13:44:20.211
  I0104 13:44:20.216148 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-393" for this suite. @ 01/04/25 13:44:20.22
• [4.166 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 01/04/25 13:44:20.228
  I0104 13:44:20.228830 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename containers @ 01/04/25 13:44:20.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:20.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:20.255
  STEP: Creating a pod to test override all @ 01/04/25 13:44:20.257
  E0104 13:44:20.285062      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:21.285285      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:22.285417      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:23.285607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:44:24.281
  I0104 13:44:24.285507 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod client-containers-296869d9-a138-43fe-8f0a-65bdc4a13739 container agnhost-container: <nil>
  E0104 13:44:24.285709      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 01/04/25 13:44:24.293
  I0104 13:44:24.314824 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6861" for this suite. @ 01/04/25 13:44:24.32
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/04/25 13:44:24.328
  I0104 13:44:24.328976 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:44:24.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:24.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:24.354
  STEP: Creating configMap that has name configmap-test-emptyKey-32b693bb-357f-424f-83b9-acc28cdb96f7 @ 01/04/25 13:44:24.357
  I0104 13:44:24.358975 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1196" for this suite. @ 01/04/25 13:44:24.363
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/04/25 13:44:24.372
  I0104 13:44:24.372195 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename gc @ 01/04/25 13:44:24.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:24.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:24.396
  STEP: create the rc @ 01/04/25 13:44:24.402
  W0104 13:44:24.407667      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0104 13:44:25.285899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:26.287407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:27.288401      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:28.288989      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:29.290528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:30.315655      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/04/25 13:44:30.416
  STEP: wait for the rc to be deleted @ 01/04/25 13:44:30.429
  E0104 13:44:31.308978      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:31.457593 18 garbage_collector.go:670] 80 pods remaining
  I0104 13:44:31.457644 18 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0104 13:44:31.457650 18 garbage_collector.go:678] 
  E0104 13:44:32.309321      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:32.455249 18 garbage_collector.go:670] 70 pods remaining
  I0104 13:44:32.456498 18 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0104 13:44:32.456520 18 garbage_collector.go:678] 
  E0104 13:44:33.311670      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:33.443438 18 garbage_collector.go:670] 60 pods remaining
  I0104 13:44:33.443481 18 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0104 13:44:33.443488 18 garbage_collector.go:678] 
  E0104 13:44:34.310802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:34.447129 18 garbage_collector.go:670] 40 pods remaining
  I0104 13:44:34.447185 18 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0104 13:44:34.447193 18 garbage_collector.go:678] 
  E0104 13:44:35.310889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:35.445482 18 garbage_collector.go:670] 31 pods remaining
  I0104 13:44:35.445880 18 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0104 13:44:35.446067 18 garbage_collector.go:678] 
  E0104 13:44:36.310985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:36.440104 18 garbage_collector.go:670] 20 pods remaining
  I0104 13:44:36.440132 18 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0104 13:44:36.440144 18 garbage_collector.go:678] 
  E0104 13:44:37.311078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/04/25 13:44:37.439
  W0104 13:44:37.444662      18 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0104 13:44:37.444722 18 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0104 13:44:37.444861 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1938" for this suite. @ 01/04/25 13:44:37.449
• [13.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/04/25 13:44:37.457
  I0104 13:44:37.457398 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 13:44:37.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:37.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:37.487
  STEP: creating the pod @ 01/04/25 13:44:37.49
  STEP: submitting the pod to kubernetes @ 01/04/25 13:44:37.49
  STEP: verifying QOS class is set on the pod @ 01/04/25 13:44:37.502
  I0104 13:44:37.510280 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8610" for this suite. @ 01/04/25 13:44:37.514
• [0.066 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/04/25 13:44:37.523
  I0104 13:44:37.523697 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:44:37.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:37.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:37.547
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/04/25 13:44:37.549
  E0104 13:44:38.311913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:39.312156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:40.312273      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:41.312377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:44:41.579
  I0104 13:44:41.584410 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-8f56c235-322a-4092-9e07-4bb9547446a4 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:44:41.591
  I0104 13:44:41.609345 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4690" for this suite. @ 01/04/25 13:44:41.614
• [4.098 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/04/25 13:44:41.621
  I0104 13:44:41.621330 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:44:41.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:41.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:41.644
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/04/25 13:44:41.646
  E0104 13:44:42.313372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:43.313503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:44.313608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:45.313759      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:44:45.673
  I0104 13:44:45.678580 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-37a87e3c-671d-4ab6-82f7-919cf4b009e8 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:44:45.685
  I0104 13:44:45.707903 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6955" for this suite. @ 01/04/25 13:44:45.711
• [4.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/04/25 13:44:45.719
  I0104 13:44:45.719370 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 13:44:45.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:45.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:45.741
  STEP: creating pod @ 01/04/25 13:44:45.744
  E0104 13:44:46.314783      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:47.314869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:47.772251 18 pods.go:83] Pod pod-hostip-f6748f64-37f1-4f9d-964c-d8ede74ffd88 has hostIP: 172.31.8.94
  I0104 13:44:47.772367 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1126" for this suite. @ 01/04/25 13:44:47.776
• [2.067 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/04/25 13:44:47.786
  I0104 13:44:47.786471 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename server-version @ 01/04/25 13:44:47.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:47.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:47.808
  STEP: Request ServerVersion @ 01/04/25 13:44:47.811
  STEP: Confirm major version @ 01/04/25 13:44:47.812
  I0104 13:44:47.812733 18 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/04/25 13:44:47.812
  I0104 13:44:47.812772 18 server_version.go:58] cleanMinorVersion: 31
  I0104 13:44:47.812782 18 server_version.go:62] Minor version: 31
  I0104 13:44:47.812897 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4886" for this suite. @ 01/04/25 13:44:47.817
• [0.038 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/04/25 13:44:47.824
  I0104 13:44:47.824575 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pods @ 01/04/25 13:44:47.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:47.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:47.848
  STEP: creating the pod @ 01/04/25 13:44:47.85
  STEP: setting up watch @ 01/04/25 13:44:47.85
  STEP: submitting the pod to kubernetes @ 01/04/25 13:44:47.954
  STEP: verifying the pod is in kubernetes @ 01/04/25 13:44:47.966
  STEP: verifying pod creation was observed @ 01/04/25 13:44:47.973
  E0104 13:44:48.315823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:49.316371      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/04/25 13:44:49.987
  STEP: verifying pod deletion was observed @ 01/04/25 13:44:49.999
  E0104 13:44:50.316790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:44:51.088064 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4942" for this suite. @ 01/04/25 13:44:51.092
• [3.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/04/25 13:44:51.103
  I0104 13:44:51.103185 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:44:51.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:51.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:51.127
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/04/25 13:44:51.13
  E0104 13:44:51.317531      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:52.318055      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:53.318626      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:54.318835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:44:55.159
  I0104 13:44:55.165366 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-dfef747f-f980-4944-99fd-3531be6b3958 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:44:55.178
  I0104 13:44:55.199304 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3064" for this suite. @ 01/04/25 13:44:55.204
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/04/25 13:44:55.214
  I0104 13:44:55.214108 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename resourcequota @ 01/04/25 13:44:55.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:44:55.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:44:55.24
  STEP: Discovering how many secrets are in namespace by default @ 01/04/25 13:44:55.244
  E0104 13:44:55.319647      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:56.319977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:57.320789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:58.321816      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:44:59.322773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/04/25 13:45:00.249
  E0104 13:45:00.323499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:01.323801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:02.324527      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:03.324585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:04.324831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/04/25 13:45:05.254
  STEP: Ensuring resource quota status is calculated @ 01/04/25 13:45:05.26
  E0104 13:45:05.324910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:06.325147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 01/04/25 13:45:07.266
  STEP: Ensuring resource quota status captures secret creation @ 01/04/25 13:45:07.278
  E0104 13:45:07.326183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:08.326575      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 01/04/25 13:45:09.284
  STEP: Ensuring resource quota status released usage @ 01/04/25 13:45:09.292
  E0104 13:45:09.327000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:10.327103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:45:11.299264 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2981" for this suite. @ 01/04/25 13:45:11.303
• [16.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/04/25 13:45:11.311
  I0104 13:45:11.311102 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename lease-test @ 01/04/25 13:45:11.311
  E0104 13:45:11.327804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:45:11.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:45:11.332
  I0104 13:45:11.401786 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8025" for this suite. @ 01/04/25 13:45:11.406
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/04/25 13:45:11.413
  I0104 13:45:11.413979 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:45:11.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:45:11.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:45:11.436
  STEP: Creating configMap with name projected-configmap-test-volume-map-ee3038ec-e54c-4655-a8dd-0e240debe0e0 @ 01/04/25 13:45:11.439
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:45:11.444
  E0104 13:45:12.327975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:13.328334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:45:13.466
  I0104 13:45:13.470227 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-projected-configmaps-84af3277-2c15-462e-96b7-ed6d1e103d01 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:45:13.482
  I0104 13:45:13.501841 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5327" for this suite. @ 01/04/25 13:45:13.506
• [2.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/04/25 13:45:13.514
  I0104 13:45:13.514527 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename pod-network-test @ 01/04/25 13:45:13.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:45:13.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:45:13.538
  STEP: Performing setup for networking test in namespace pod-network-test-8540 @ 01/04/25 13:45:13.541
  STEP: creating a selector @ 01/04/25 13:45:13.541
  STEP: Creating the service pods in kubernetes @ 01/04/25 13:45:13.541
  I0104 13:45:13.541620 18 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0104 13:45:14.328813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:15.328872      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:16.329918      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:17.330903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:18.331035      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:19.331263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:20.331414      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:21.331504      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:22.332210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:23.332487      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:24.332887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:25.332986      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:26.333156      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:27.333245      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:28.333910      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:29.334139      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:30.334185      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:31.334415      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:32.334538      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:33.335548      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:34.336582      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:35.336835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/04/25 13:45:35.664
  E0104 13:45:36.336948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:37.337056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:45:37.684706 18 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0104 13:45:37.684741 18 networking.go:42] Breadth first check of 192.168.113.39 on host 172.31.18.169...
  I0104 13:45:37.688699 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.104.185:9080/dial?request=hostname&protocol=http&host=192.168.113.39&port=8083&tries=1'] Namespace:pod-network-test-8540 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:45:37.688723 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:45:37.689171 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:45:37.689243 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8540/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.104.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.113.39%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0104 13:45:37.750036 18 utils.go:356] Waiting for responses: map[]
  I0104 13:45:37.750075 18 utils.go:360] reached 192.168.113.39 after 0/1 tries
  I0104 13:45:37.750085 18 networking.go:42] Breadth first check of 192.168.159.93 on host 172.31.76.68...
  I0104 13:45:37.754909 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.104.185:9080/dial?request=hostname&protocol=http&host=192.168.159.93&port=8083&tries=1'] Namespace:pod-network-test-8540 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:45:37.754934 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:45:37.755336 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:45:37.755382 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8540/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.104.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.159.93%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0104 13:45:37.804789 18 utils.go:356] Waiting for responses: map[]
  I0104 13:45:37.804826 18 utils.go:360] reached 192.168.159.93 after 0/1 tries
  I0104 13:45:37.804838 18 networking.go:42] Breadth first check of 192.168.104.149 on host 172.31.8.94...
  I0104 13:45:37.809093 18 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.104.185:9080/dial?request=hostname&protocol=http&host=192.168.104.149&port=8083&tries=1'] Namespace:pod-network-test-8540 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0104 13:45:37.809117 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  I0104 13:45:37.809559 18 exec_util.go:66] ExecWithOptions: Clientset creation
  I0104 13:45:37.809609 18 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8540/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.104.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.104.149%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0104 13:45:37.848516 18 utils.go:356] Waiting for responses: map[]
  I0104 13:45:37.848549 18 utils.go:360] reached 192.168.104.149 after 0/1 tries
  I0104 13:45:37.848557 18 networking.go:53] Going to retry 0 out of 3 pods....
  I0104 13:45:37.848655 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8540" for this suite. @ 01/04/25 13:45:37.852
• [24.346 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/04/25 13:45:37.86
  I0104 13:45:37.860997 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename subpath @ 01/04/25 13:45:37.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:45:37.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:45:37.886
  STEP: Setting up data @ 01/04/25 13:45:37.889
  STEP: Creating pod pod-subpath-test-secret-4m6c @ 01/04/25 13:45:37.938
  STEP: Creating a pod to test atomic-volume-subpath @ 01/04/25 13:45:37.938
  E0104 13:45:38.337898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:39.338916      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:40.339912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:41.340905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:42.341524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:43.341635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:44.341850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:45.341945      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:46.342728      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:47.342839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:48.343056      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:49.343172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:50.343271      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:51.343374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:52.343900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:53.344010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:54.344103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:55.344250      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:56.344813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:57.344924      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:58.345559      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:45:59.345697      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:46:00.014
  I0104 13:46:00.018907 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-subpath-test-secret-4m6c container test-container-subpath-secret-4m6c: <nil>
  STEP: delete the pod @ 01/04/25 13:46:00.029
  STEP: Deleting pod pod-subpath-test-secret-4m6c @ 01/04/25 13:46:00.051
  I0104 13:46:00.051420 18 delete.go:62] Deleting pod "pod-subpath-test-secret-4m6c" in namespace "subpath-3607"
  I0104 13:46:00.055709 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3607" for this suite. @ 01/04/25 13:46:00.059
• [22.208 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 01/04/25 13:46:00.069
  I0104 13:46:00.069464 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption @ 01/04/25 13:46:00.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:46:00.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:46:00.092
  I0104 13:46:00.110390 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0104 13:46:00.345926      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:01.346151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:02.347125      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:03.347224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:04.347607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:05.348564      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:06.348907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:07.348985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:08.349741      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:09.349834      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:10.350892      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:11.351087      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:12.351224      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:13.352172      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:14.352884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:15.353873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:16.354065      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:17.354264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:18.354368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:19.354580      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:20.355635      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:21.355850      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:22.356868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:23.357150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:24.357936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:25.358869      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:26.359879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:27.360067      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:28.360696      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:29.360823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:30.360974      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:31.361182      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:32.361611      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:33.361715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:34.361818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:35.362021      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:36.362880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:37.363020      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:38.364084      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:39.364895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:40.365082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:41.365342      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:42.365711      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:43.366053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:44.366206      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:45.366303      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:46.366857      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:47.366963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:48.367586      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:49.367818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:50.367938      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:51.368913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:52.369859      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:53.369949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:54.370202      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:55.370312      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:56.371151      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:57.372833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:58.373883      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:46:59.374885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:47:00.116450 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/04/25 13:47:00.12
  I0104 13:47:00.120533 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/04/25 13:47:00.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:47:00.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:47:00.141
  I0104 13:47:00.159881 18 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0104 13:47:00.163969 18 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0104 13:47:00.263098 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4886" for this suite. @ 01/04/25 13:47:00.267
  I0104 13:47:00.274976 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8507" for this suite. @ 01/04/25 13:47:00.279
• [60.220 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 01/04/25 13:47:00.289
  I0104 13:47:00.289239 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 13:47:00.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:47:00.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:47:00.312
  STEP: Creating a pod to test downward api env vars @ 01/04/25 13:47:00.315
  E0104 13:47:00.375503      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:01.376069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:02.376623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:03.377154      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:47:04.342
  I0104 13:47:04.347793 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downward-api-6c63bc85-b82f-4580-8c53-6ff9d3951faf container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 13:47:04.362
  E0104 13:47:04.377791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:47:04.383323 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4928" for this suite. @ 01/04/25 13:47:04.388
• [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/04/25 13:47:04.398
  I0104 13:47:04.398028 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:47:04.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:47:04.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:47:04.424
  STEP: Creating configMap with name configmap-test-volume-map-b1407de6-d02d-4801-a778-7a156b5b752a @ 01/04/25 13:47:04.428
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:47:04.438
  E0104 13:47:05.377845      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:06.377941      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:07.378073      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:08.378437      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:47:08.465
  I0104 13:47:08.470537 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-6d949109-4cad-477a-97c8-e664de426250 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:47:08.479
  I0104 13:47:08.500457 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5480" for this suite. @ 01/04/25 13:47:08.505
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/04/25 13:47:08.513
  I0104 13:47:08.513208 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename var-expansion @ 01/04/25 13:47:08.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:47:08.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:47:08.535
  STEP: creating the pod with failed condition @ 01/04/25 13:47:08.538
  E0104 13:47:09.378571      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:10.378853      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:11.379863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:12.379972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:13.380823      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:14.381048      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:15.381165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:16.381507      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:17.381716      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:18.381846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:19.381964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:20.382091      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:21.382210      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:22.382413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:23.382599      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:24.382829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:25.382977      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:26.383111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:27.383211      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:28.383568      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:29.383629      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:30.383831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:31.383964      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:32.384149      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:33.384325      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:34.384607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:35.384777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:36.385004      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:37.385082      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:38.385471      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:39.385623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:40.385780      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:41.385863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:42.386203      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:43.386290      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:44.386399      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:45.386529      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:46.387525      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:47.387762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:48.387894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:49.388000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:50.388263      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:51.388893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:52.388982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:53.389080      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:54.389183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:55.389305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:56.389413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:57.389518      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:58.390588      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:47:59.390723      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:00.390836      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:01.390948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:02.391163      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:03.391913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:04.392032      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:05.392126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:06.392359      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:07.393058      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:08.393123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:09.393743      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:10.393975      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:11.394107      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:12.394239      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:13.394988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:14.395307      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:15.396369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:16.396585      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:17.396762      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:18.396871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:19.396957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:20.397078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:21.397232      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:22.398039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:23.398828      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:24.398927      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:25.399036      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:26.399904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:27.399997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:28.400901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:29.401449      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:30.401562      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:31.401841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:32.402898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:33.402985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:34.403089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:35.403894      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:36.403987      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:37.404773      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:38.405335      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:39.405841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:40.406047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:41.406183      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:42.406280      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:43.406841      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:44.406912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:45.407360      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:46.408053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:47.408885      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:48.408972      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:49.409798      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:50.410060      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:51.410950      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:52.411873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:53.411917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:54.412123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:55.412994      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:56.413120      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:57.413881      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:58.414006      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:48:59.414895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:00.415663      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:01.415805      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:02.416873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:03.417766      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:04.418023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:05.418795      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:06.418896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:07.419341      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:08.419895      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 01/04/25 13:49:08.549
  I0104 13:49:09.064401 18 pod_client.go:173] Successfully updated pod "var-expansion-7fb4f9ac-e3c2-4df8-8c4d-8823f7972b1d"
  STEP: waiting for pod running @ 01/04/25 13:49:09.064
  E0104 13:49:09.420826      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:10.421116      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 01/04/25 13:49:11.074
  I0104 13:49:11.074346 18 delete.go:62] Deleting pod "var-expansion-7fb4f9ac-e3c2-4df8-8c4d-8823f7972b1d" in namespace "var-expansion-2892"
  I0104 13:49:11.086860 18 delete.go:70] Wait up to 5m0s for pod "var-expansion-7fb4f9ac-e3c2-4df8-8c4d-8823f7972b1d" to be fully deleted
  E0104 13:49:11.421216      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:12.421472      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:13.422365      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:14.422521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:15.422905      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:16.423112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:17.423205      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:18.423710      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:19.423855      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:20.424025      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:21.424921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:22.426078      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:23.426049      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:24.426159      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:25.426544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:26.427075      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:27.427165      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:28.427221      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:29.428108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:30.428902      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:31.429077      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:32.429917      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:33.430010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:34.430913      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:35.431012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:36.431111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:37.431369      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:38.431777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:39.432389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:40.432962      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:41.433103      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:42.433443      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:49:43.186253 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2892" for this suite. @ 01/04/25 13:49:43.191
• [154.686 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/04/25 13:49:43.199
  I0104 13:49:43.199194 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename projected @ 01/04/25 13:49:43.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:49:43.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:49:43.223
  STEP: Creating a pod to test downward API volume plugin @ 01/04/25 13:49:43.226
  E0104 13:49:43.433792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:44.434003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:45.434555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:46.434930      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:49:47.252
  I0104 13:49:47.256341 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downwardapi-volume-8829d4e9-acc0-48d2-9852-310a4e6e9cfa container client-container: <nil>
  STEP: delete the pod @ 01/04/25 13:49:47.27
  I0104 13:49:47.291833 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6081" for this suite. @ 01/04/25 13:49:47.296
• [4.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/04/25 13:49:47.304
  I0104 13:49:47.304271 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename container-probe @ 01/04/25 13:49:47.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:49:47.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:49:47.327
  STEP: Creating pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928 @ 01/04/25 13:49:47.329
  E0104 13:49:47.435404      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:48.435812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/04/25 13:49:49.352
  I0104 13:49:49.356100 18 container_probe.go:1749] Initial restart count of pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 is 0
  I0104 13:49:49.360861 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:49:49.436133      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:50.436372      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:49:51.367302 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:49:51.436476      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:52.436581      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:49:53.372185 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:49:53.437329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:54.437426      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:49:55.378556 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:49:55.437701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:56.437831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:49:57.383771 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:49:57.438899      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:49:58.439011      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:49:59.389063 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:49:59.439247      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:00.439333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:01.394301 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:01.439386      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:02.439904      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:03.401143 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:03.440354      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:04.441029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:05.406155 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:05.441407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:06.441732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:07.411513 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:07.442641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:08.442724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:09.416556 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:09.443753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:10.443863      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:11.422432 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:11.444664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:12.444981      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:13.427580 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:13.445727      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:14.445851      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:15.432914 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:15.446037      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:16.446175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:17.438185 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:17.446291      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:18.446528      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:19.443599 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:19.446701      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:20.447039      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:21.448000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:21.448967 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:22.448838      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:23.448932      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:23.455056 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:24.449051      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:25.449903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:25.460030 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:26.450912      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:27.451102      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:27.465648 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:28.451833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:29.452050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:29.471878 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:30.452942      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:31.453198      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:31.477922 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:32.453963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:33.454333      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:33.484170 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:34.455190      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:35.455940      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:35.489910 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:36.456204      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:37.456305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:37.495694 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:38.456625      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:39.456733      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:39.500992 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:40.456997      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:41.457127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:41.506447 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:42.458112      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:43.458212      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:43.513822 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:44.458908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:45.459013      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:45.519381 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:46.459903      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:47.460029      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:47.525380 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:48.460521      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:49.461334      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:49.530700 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:50.461731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:51.461737      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:51.535928 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:52.461731      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:53.462083      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:53.541761 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:54.462182      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:55.462368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:55.546969 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:56.462979      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:57.463879      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:57.552930 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:50:58.463982      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:50:59.464175      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:50:59.558416 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:00.464299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:01.464497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:01.564646 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:02.464608      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:03.464874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:03.570331 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:04.465010      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:05.465350      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:05.576105 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:06.466111      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:07.466441      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:07.582484 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:08.466578      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:09.466948      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:09.588070 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:10.466991      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:11.467957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:11.593952 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:12.468877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:13.468963      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:13.599311 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:14.470030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:15.470127      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:15.606121 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:16.470812      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:17.470935      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:17.611516 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:18.471061      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:19.471873      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:19.618186 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:20.471998      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:21.472188      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:21.623828 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:22.472326      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:23.472438      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:23.630206 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:24.472567      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:25.472787      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:25.636917 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:26.472829      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:27.473043      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:27.643239 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:28.473153      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:29.473347      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:29.648637 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:30.473436      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:31.473634      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:31.654956 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:32.473835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:33.474176      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:33.660747 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:34.474299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:35.474514      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:35.666164 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:36.475038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:37.475270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:37.672233 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:38.476311      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:39.476409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:39.678017 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:40.476890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:41.477000      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:41.684056 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:42.477790      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:43.477887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:43.689899 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:44.478801      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:45.478818      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:45.695835 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:46.479732      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:47.479833      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:47.701279 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:48.479939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:49.480889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:49.706957 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:50.481887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:51.482088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:51.712812 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:52.482274      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:53.482390      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:53.718713 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:54.482479      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:55.482715      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:55.725053 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:56.482835      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:57.482949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:57.730223 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:51:58.483200      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:51:59.483409      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:51:59.736100 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:00.483460      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:01.483726      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:01.741611 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:02.484422      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:03.484771      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:03.747636 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:04.485023      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:05.485162      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:05.754001 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:06.485792      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:07.486101      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:07.760402 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:08.486270      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:09.486489      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:09.766442 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:10.486603      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:11.486820      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:11.772990 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:12.487802      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:13.487900      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:13.778557 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:14.488003      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:15.488106      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:15.785165 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:16.488866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:17.488973      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:17.790961 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:18.489914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:19.490889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:19.796584 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:20.491368      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:21.491600      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:21.802271 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:22.491839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:23.491966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:23.807833 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:24.492108      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:25.492264      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:25.813571 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:26.493322      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:27.493465      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:27.819193 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:28.493906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:29.494126      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:29.825333 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:30.495089      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:31.495306      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:31.831511 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:32.496088      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:33.496323      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:33.837008 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:34.496753      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:35.496840      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:35.842667 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:36.497305      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:37.497488      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:37.848074 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:38.497604      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:39.498181      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:39.854483 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:40.498877      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:41.499875      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:41.861018 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:42.500777      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:43.500846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:43.866446 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:44.501870      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:45.501949      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:45.871660 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:46.502050      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:47.502259      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:47.877769 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:48.502413      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:49.502542      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:49.884398 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:50.502893      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:51.502897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:51.890536 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:52.502891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:53.503288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:53.895913 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:54.503523      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:55.503644      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:55.902227 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:56.503791      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:57.503824      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:57.907961 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:52:58.504749      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:52:59.504846      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:52:59.913089 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:00.505813      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:01.505939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:01.919536 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:02.506098      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:03.506253      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:03.924542 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:04.506862      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:05.506969      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:05.931494 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:06.507071      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:07.507192      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:07.936810 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:08.507297      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:09.507499      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:09.942366 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:10.507614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:11.508160      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:11.947523 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:12.508874      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:13.509889      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:13.953366 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:14.510888      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:15.511097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:15.958741 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:16.511199      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:17.511402      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:17.964996 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:18.511555      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:19.511878      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:19.970765 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:20.512019      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:21.512215      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:21.977640 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:22.513233      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:23.513595      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:23.982246 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:24.513721      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:25.513915      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:25.988001 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:26.514614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:27.514808      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:27.993380 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:28.515030      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:29.515880      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:29.998904 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:30.515976      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:31.516901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:32.005000 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:32.517654      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:33.518275      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:34.011457 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:34.518867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:35.519867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:36.017105 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:36.520662      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:37.520810      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:38.023137 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:38.521724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:39.521907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:40.029247 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:40.522797      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:41.522928      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:42.035296 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:42.523907      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:43.524038      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:44.041230 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:44.524908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:45.525037      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:46.046075 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:46.525695      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:47.526596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:48.051772 18 container_probe.go:1759] Get pod test-webserver-5bda784a-d035-424f-b8ab-c67f8e4120b1 in namespace container-probe-6928
  E0104 13:53:48.527330      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:49.527419      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/04/25 13:53:50.052
  I0104 13:53:50.067922 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6928" for this suite. @ 01/04/25 13:53:50.072
• [242.779 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/04/25 13:53:50.083
  I0104 13:53:50.083151 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename endpointslice @ 01/04/25 13:53:50.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:53:50.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:53:50.103
  E0104 13:53:50.527897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:51.527988      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/04/25 13:53:52.18
  STEP: referencing matching pods with named port @ 01/04/25 13:53:52.188
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/04/25 13:53:52.195
  STEP: recreating EndpointSlices after they've been deleted @ 01/04/25 13:53:52.203
  I0104 13:53:52.228620 18 endpointslice.go:938] EndpointSlice for Service endpointslice-1270/example-named-port not found
  E0104 13:53:52.528896      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:53.529871      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:54.234520 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1270" for this suite. @ 01/04/25 13:53:54.239
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 01/04/25 13:53:54.248
  I0104 13:53:54.248926 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:53:54.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:53:54.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:53:54.271
  STEP: starting the proxy server @ 01/04/25 13:53:54.273
  I0104 13:53:54.274153 18 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7015 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/04/25 13:53:54.306
  I0104 13:53:54.312278 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0104 13:53:54.313576 18 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:44743

  I0104 13:53:54.313606 18 kubectl.go:2229] kubectl proxy stderr: W0104 13:53:54.306258     941 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-7015" for this suite. @ 01/04/25 13:53:54.317
• [0.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/04/25 13:53:54.325
  I0104 13:53:54.325463 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename security-context @ 01/04/25 13:53:54.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:53:54.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:53:54.351
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/04/25 13:53:54.354
  E0104 13:53:54.530919      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:55.531064      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:53:56.373
  I0104 13:53:56.377051 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod security-context-47046ab9-d60c-4a91-aa2b-73e57c49a9cd container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:53:56.396
  I0104 13:53:56.418030 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7886" for this suite. @ 01/04/25 13:53:56.422
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/04/25 13:53:56.431
  I0104 13:53:56.431790 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename services @ 01/04/25 13:53:56.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:53:56.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:53:56.455
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-365 @ 01/04/25 13:53:56.458
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/04/25 13:53:56.47
  STEP: creating service externalsvc in namespace services-365 @ 01/04/25 13:53:56.47
  STEP: creating replication controller externalsvc in namespace services-365 @ 01/04/25 13:53:56.487
  I0104 13:53:56.494581      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-365, replica count: 2
  E0104 13:53:56.531621      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:57.532549      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:58.532714      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:53:59.532848      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:53:59.546064      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/04/25 13:53:59.551
  I0104 13:53:59.568462 18 resource.go:361] Creating new exec pod
  E0104 13:54:00.532957      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:01.533909      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:54:01.589556 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=services-365 exec execpodtfqxp -- /bin/sh -x -c nslookup clusterip-service.services-365.svc.cluster.local'
  I0104 13:54:01.691015 18 builder.go:146] stderr: "+ nslookup clusterip-service.services-365.svc.cluster.local\n"
  I0104 13:54:01.691070 18 builder.go:147] stdout: "Server:\t\t10.152.183.235\nAddress:\t10.152.183.235#53\n\nclusterip-service.services-365.svc.cluster.local\tcanonical name = externalsvc.services-365.svc.cluster.local.\nName:\texternalsvc.services-365.svc.cluster.local\nAddress: 10.152.183.247\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-365, will wait for the garbage collector to delete the pods @ 01/04/25 13:54:01.691
  I0104 13:54:01.755866 18 resources.go:139] Deleting ReplicationController externalsvc took: 10.39429ms
  I0104 13:54:01.856000 18 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.129838ms
  E0104 13:54:02.534724      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:03.535389      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:04.536150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:54:05.077078 18 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0104 13:54:05.090591 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-365" for this suite. @ 01/04/25 13:54:05.096
• [8.672 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/04/25 13:54:05.103
  I0104 13:54:05.103828 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:54:05.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:54:05.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:54:05.126
  STEP: Creating configMap with name configmap-test-volume-f5b7574d-0ef5-4eb9-a2fa-57bf607fe32d @ 01/04/25 13:54:05.129
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:54:05.134
  E0104 13:54:05.536921      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:06.537097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:54:07.156
  I0104 13:54:07.160965 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-configmaps-36667af0-80f5-440b-975b-54f0ae5cbe55 container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/04/25 13:54:07.168
  I0104 13:54:07.188385 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-99" for this suite. @ 01/04/25 13:54:07.193
• [2.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 01/04/25 13:54:07.201
  I0104 13:54:07.201793 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption @ 01/04/25 13:54:07.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:54:07.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:54:07.226
  I0104 13:54:07.247835 18 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0104 13:54:07.537664      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:08.537842      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:09.538537      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:10.538891      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:11.539524      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:12.539602      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:13.539898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:14.539985      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:15.540171      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:16.540346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:17.540650      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:18.540831      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:19.541890      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:20.542012      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:21.542161      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:22.542223      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:23.543147      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:24.543346      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:25.543477      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:26.543638      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:27.543804      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:28.544220      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:29.544378      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:30.544490      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:31.545554      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:32.545814      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:33.546652      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:34.546884      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:35.547053      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:36.547299      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:37.547383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:38.548097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:39.548925      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:40.549898      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:41.550387      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:42.550614      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:43.551261      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:44.551464      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:45.552041      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:46.552134      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:47.552231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:48.552645      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:49.552966      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:50.553914      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:51.554439      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:52.554565      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:53.555432      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:54.555530      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:55.556377      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:56.556593      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:57.556641      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:58.557607      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:54:59.558374      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:00.559355      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:01.559867      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:02.560887      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:03.560939      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:04.561069      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:05.561308      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:06.561425      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:07.253945 18 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/04/25 13:55:07.257
  I0104 13:55:07.257634 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/04/25 13:55:07.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:07.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:07.285
  STEP: Finding an available node @ 01/04/25 13:55:07.287
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/04/25 13:55:07.287
  E0104 13:55:07.561596      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:08.561897      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/04/25 13:55:09.314
  I0104 13:55:09.334412 18 preemption.go:585] found a healthy node: ip-172-31-8-94
  E0104 13:55:09.562544      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:10.562817      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:11.562908      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:12.563047      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:13.563993      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:14.564131      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:15.406309 18 preemption.go:708] pods created so far: [1 1 1]
  I0104 13:55:15.406342 18 preemption.go:709] length of pods created so far: 3
  E0104 13:55:15.564231      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:16.565310      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:17.420352 18 preemption.go:726] pods created so far: [2 2 1]
  E0104 13:55:17.565601      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:18.565741      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:19.565847      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:20.566037      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:21.566244      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:22.566427      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:23.566547      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:24.502909 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2619" for this suite. @ 01/04/25 13:55:24.506
  I0104 13:55:24.513858 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3774" for this suite. @ 01/04/25 13:55:24.518
• [77.326 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/04/25 13:55:24.527
  I0104 13:55:24.527575 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename disruption @ 01/04/25 13:55:24.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:24.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:24.551
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/04/25 13:55:24.553
  STEP: Waiting for the pdb to be processed @ 01/04/25 13:55:24.559
  E0104 13:55:24.567123      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:25.567288      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:26.568002      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/04/25 13:55:26.57
  STEP: Waiting for all pods to be running @ 01/04/25 13:55:26.57
  I0104 13:55:26.574468 18 disruption.go:680] pods: 0 < 3
  E0104 13:55:27.568148      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:28.568241      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 01/04/25 13:55:28.577
  STEP: Updating the pdb to allow a pod to be evicted @ 01/04/25 13:55:28.589
  STEP: Waiting for the pdb to be processed @ 01/04/25 13:55:28.601
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/04/25 13:55:28.605
  STEP: Waiting for all pods to be running @ 01/04/25 13:55:28.605
  STEP: Waiting for the pdb to observed all healthy pods @ 01/04/25 13:55:28.609
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/04/25 13:55:28.64
  STEP: Waiting for the pdb to be processed @ 01/04/25 13:55:28.659
  E0104 13:55:29.568839      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:30.568931      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 01/04/25 13:55:30.664
  STEP: locating a running pod @ 01/04/25 13:55:30.668
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/04/25 13:55:30.681
  STEP: Waiting for the pdb to be deleted @ 01/04/25 13:55:30.689
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/04/25 13:55:30.694
  STEP: Waiting for all pods to be running @ 01/04/25 13:55:30.694
  I0104 13:55:30.718312 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5921" for this suite. @ 01/04/25 13:55:30.722
• [6.207 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 01/04/25 13:55:30.736
  I0104 13:55:30.736754 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename downward-api @ 01/04/25 13:55:30.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:30.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:30.759
  STEP: Creating a pod to test downward api env vars @ 01/04/25 13:55:30.762
  E0104 13:55:31.569901      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:32.570097      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:33.570229      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:34.570329      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:55:34.789
  I0104 13:55:34.793445 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod downward-api-c48ed4c4-8e99-4aa4-a391-1116c1c365bd container dapi-container: <nil>
  STEP: delete the pod @ 01/04/25 13:55:34.801
  I0104 13:55:34.826585 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5543" for this suite. @ 01/04/25 13:55:34.831
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 01/04/25 13:55:34.839
  I0104 13:55:34.839893 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename kubectl @ 01/04/25 13:55:34.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:34.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:34.862
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/04/25 13:55:34.865
  I0104 13:55:34.865315 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7429 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0104 13:55:34.916036 18 builder.go:146] stderr: ""
  I0104 13:55:34.916079 18 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/04/25 13:55:34.916
  I0104 13:55:34.922007 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=kubectl-7429 delete pods e2e-test-httpd-pod'
  E0104 13:55:35.570407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:36.204920 18 builder.go:146] stderr: ""
  I0104 13:55:36.204962 18 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0104 13:55:36.205075 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7429" for this suite. @ 01/04/25 13:55:36.209
• [1.379 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/04/25 13:55:36.218
  I0104 13:55:36.218695 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-webhook @ 01/04/25 13:55:36.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:36.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:36.243
  STEP: Setting up server cert @ 01/04/25 13:55:36.245
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/04/25 13:55:36.54
  STEP: Deploying the custom resource conversion webhook pod @ 01/04/25 13:55:36.552
  STEP: Wait for the deployment to be ready @ 01/04/25 13:55:36.566
  E0104 13:55:36.570536      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:36.578983 18 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0104 13:55:37.570980      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:38.571186      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:55:38.593
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:55:38.608
  E0104 13:55:39.571936      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:39.609139 18 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0104 13:55:39.618085 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:55:40.572906      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:41.573301      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 01/04/25 13:55:42.175
  STEP: v2 custom resource should be converted @ 01/04/25 13:55:42.181
  E0104 13:55:42.573497      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:42.751032 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-345" for this suite. @ 01/04/25 13:55:42.754
• [6.547 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 01/04/25 13:55:42.766
  I0104 13:55:42.766231 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename job @ 01/04/25 13:55:42.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:42.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:42.788
  STEP: Creating a job @ 01/04/25 13:55:42.79
  STEP: Ensuring active pods == parallelism @ 01/04/25 13:55:42.798
  E0104 13:55:43.574407      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:44.574623      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 01/04/25 13:55:44.804
  STEP: deleting Job.batch foo in namespace job-7577, will wait for the garbage collector to delete the pods @ 01/04/25 13:55:44.804
  I0104 13:55:44.869157 18 resources.go:139] Deleting Job.batch foo took: 9.356024ms
  I0104 13:55:44.969641 18 resources.go:163] Terminating Job.batch foo pods took: 100.477484ms
  E0104 13:55:45.574794      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 01/04/25 13:55:46.27
  I0104 13:55:46.275424 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7577" for this suite. @ 01/04/25 13:55:46.28
• [3.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/04/25 13:55:46.289
  I0104 13:55:46.289244 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename proxy @ 01/04/25 13:55:46.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:46.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:46.315
  I0104 13:55:46.318400 18 proxy.go:293] Creating pod...
  E0104 13:55:46.575150      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:47.575383      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:48.337219 18 proxy.go:317] Creating service...
  I0104 13:55:48.350290 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/DELETE
  I0104 13:55:48.356769 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0104 13:55:48.356836 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/GET
  I0104 13:55:48.360958 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0104 13:55:48.360982 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/HEAD
  I0104 13:55:48.365112 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0104 13:55:48.365135 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/OPTIONS
  I0104 13:55:48.370433 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0104 13:55:48.370474 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/PATCH
  I0104 13:55:48.375283 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0104 13:55:48.375319 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/POST
  I0104 13:55:48.379288 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0104 13:55:48.379326 18 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/pods/agnhost/proxy/some/path/with/PUT
  I0104 13:55:48.384479 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0104 13:55:48.384507 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/DELETE
  I0104 13:55:48.391169 18 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0104 13:55:48.391196 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/GET
  I0104 13:55:48.397183 18 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0104 13:55:48.397211 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/HEAD
  I0104 13:55:48.404041 18 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0104 13:55:48.404065 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/OPTIONS
  I0104 13:55:48.410581 18 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0104 13:55:48.410612 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/PATCH
  I0104 13:55:48.417768 18 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0104 13:55:48.417795 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/POST
  I0104 13:55:48.425800 18 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0104 13:55:48.425825 18 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3998/services/test-service/proxy/some/path/with/PUT
  I0104 13:55:48.431948 18 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0104 13:55:48.432155 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3998" for this suite. @ 01/04/25 13:55:48.436
• [2.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/04/25 13:55:48.445
  I0104 13:55:48.445045 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename webhook @ 01/04/25 13:55:48.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:48.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:48.469
  STEP: Setting up server cert @ 01/04/25 13:55:48.498
  E0104 13:55:48.575864      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/04/25 13:55:48.806
  STEP: Deploying the webhook pod @ 01/04/25 13:55:48.815
  STEP: Wait for the deployment to be ready @ 01/04/25 13:55:48.828
  I0104 13:55:48.838792 18 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0104 13:55:49.576520      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:50.576765      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/04/25 13:55:50.853
  STEP: Verifying the service has paired with the endpoint @ 01/04/25 13:55:50.865
  E0104 13:55:51.576967      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:55:51.866469 18 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/04/25 13:55:51.876
  STEP: create a pod @ 01/04/25 13:55:51.889
  E0104 13:55:52.577391      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:53.577468      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/04/25 13:55:53.911
  I0104 13:55:53.911549 18 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3036955453 --namespace=webhook-5065 attach --namespace=webhook-5065 to-be-attached-pod -i -c=container1'
  I0104 13:55:53.979297 18 builder.go:135] rc: 1
  I0104 13:55:54.032156 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5065" for this suite. @ 01/04/25 13:55:54.036
  STEP: Destroying namespace "webhook-markers-9183" for this suite. @ 01/04/25 13:55:54.044
• [5.608 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/04/25 13:55:54.052
  I0104 13:55:54.052839 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename configmap @ 01/04/25 13:55:54.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:54.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:54.078
  STEP: Creating configMap with name configmap-test-volume-map-239d4ff0-15c5-40dd-a6c7-830a6dc07939 @ 01/04/25 13:55:54.08
  STEP: Creating a pod to test consume configMaps @ 01/04/25 13:55:54.088
  E0104 13:55:54.577571      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:55.577959      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:55:56.107
  I0104 13:55:56.111045 18 output.go:196] Trying to get logs from node ip-172-31-76-68 pod pod-configmaps-d0c16206-d3a2-4422-9661-8bfda09ee410 container agnhost-container: <nil>
  STEP: delete the pod @ 01/04/25 13:55:56.132
  I0104 13:55:56.153053 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6004" for this suite. @ 01/04/25 13:55:56.157
• [2.113 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/04/25 13:55:56.166
  I0104 13:55:56.166368 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename emptydir @ 01/04/25 13:55:56.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:55:56.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:55:56.193
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/04/25 13:55:56.196
  E0104 13:55:56.578522      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:57.578622      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:58.578757      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:55:59.578866      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/04/25 13:56:00.223
  I0104 13:56:00.227482 18 output.go:196] Trying to get logs from node ip-172-31-8-94 pod pod-b92207d3-0a26-43cc-bfd8-8bfa8b35ccc6 container test-container: <nil>
  STEP: delete the pod @ 01/04/25 13:56:00.236
  I0104 13:56:00.258113 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3029" for this suite. @ 01/04/25 13:56:00.262
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/04/25 13:56:00.269
  I0104 13:56:00.269560 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/04/25 13:56:00.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:56:00.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:56:00.29
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/04/25 13:56:00.293
  I0104 13:56:00.293380 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:56:00.579827      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:56:01.516216 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  E0104 13:56:01.580868      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:56:02.581470      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:56:03.582033      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:56:04.582136      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0104 13:56:05.582267      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0104 13:56:06.558606 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1495" for this suite. @ 01/04/25 13:56:06.566
• [6.305 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 01/04/25 13:56:06.574
  I0104 13:56:06.574797 18 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3036955453
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/04/25 13:56:06.575
  E0104 13:56:06.582789      18 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/04/25 13:56:06.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/04/25 13:56:06.598
  STEP: getting /apis @ 01/04/25 13:56:06.606
  STEP: getting /apis/admissionregistration.k8s.io @ 01/04/25 13:56:06.609
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/04/25 13:56:06.611
  STEP: creating @ 01/04/25 13:56:06.612
  STEP: getting @ 01/04/25 13:56:06.636
  STEP: listing @ 01/04/25 13:56:06.64
  STEP: watching @ 01/04/25 13:56:06.646
  I0104 13:56:06.646739 18 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 01/04/25 13:56:06.648
  STEP: updating @ 01/04/25 13:56:06.657
  I0104 13:56:06.695649 18 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 01/04/25 13:56:06.695
  STEP: patching /status @ 01/04/25 13:56:06.701
  STEP: updating /status @ 01/04/25 13:56:06.709
  STEP: deleting @ 01/04/25 13:56:06.746
  STEP: deleting a collection @ 01/04/25 13:56:06.764
  I0104 13:56:06.791960 18 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6286" for this suite. @ 01/04/25 13:56:06.797
• [0.235 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0104 13:56:06.809799 18 suites.go:34] Running AfterSuite actions on node 1
  I0104 13:56:06.809818 18 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.028 seconds]
------------------------------

Ran 404 of 6605 Specs in 6448.756 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h47m29.678910341s
Test Suite Passed
