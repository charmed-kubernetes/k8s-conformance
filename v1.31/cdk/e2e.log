  I1123 12:11:11.760948      20 e2e.go:109] Starting e2e run "03961b8f-91a3-4687-919f-37fd21897d4a" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1732363871 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1123 12:11:11.904854 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:11:11.906164 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1123 12:11:11.936836 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1123 12:11:11.942058 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1123 12:11:11.942088 20 e2e.go:245] e2e test version: v1.31.3
  I1123 12:11:11.942953 20 e2e.go:254] kube-apiserver version: v1.31.3
  I1123 12:11:11.943040 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:11:11.948383 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/23/24 12:11:12.109
  I1123 12:11:12.109367 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename prestop @ 11/23/24 12:11:12.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:12.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:12.139
  STEP: Creating server pod server in namespace prestop-8271 @ 11/23/24 12:11:12.141
  STEP: Waiting for pods to come up. @ 11/23/24 12:11:12.152
  STEP: Creating tester pod tester in namespace prestop-8271 @ 11/23/24 12:11:16.17
  STEP: Deleting pre-stop pod @ 11/23/24 12:11:18.189
  I1123 12:11:23.210211 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 11/23/24 12:11:23.21
  I1123 12:11:23.224415 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8271" for this suite. @ 11/23/24 12:11:23.228
• [11.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 11/23/24 12:11:23.239
  I1123 12:11:23.239274 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 12:11:23.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:23.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:23.261
  STEP: Creating a test externalName service @ 11/23/24 12:11:23.264
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7866.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7866.svc.cluster.local; sleep 1; done
   @ 11/23/24 12:11:23.269
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7866.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7866.svc.cluster.local; sleep 1; done
   @ 11/23/24 12:11:23.269
  STEP: creating a pod to probe DNS @ 11/23/24 12:11:23.269
  STEP: submitting the pod to kubernetes @ 11/23/24 12:11:23.269
  STEP: retrieving the pod @ 11/23/24 12:11:29.305
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:11:29.309
  I1123 12:11:29.320249 20 dns_common.go:552] DNS probes using dns-test-8f6c0685-bf2f-4599-ba2b-27881455de70 succeeded

  STEP: changing the externalName to bar.example.com @ 11/23/24 12:11:29.32
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7866.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7866.svc.cluster.local; sleep 1; done
   @ 11/23/24 12:11:29.329
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7866.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7866.svc.cluster.local; sleep 1; done
   @ 11/23/24 12:11:29.329
  STEP: creating a second pod to probe DNS @ 11/23/24 12:11:29.329
  STEP: submitting the pod to kubernetes @ 11/23/24 12:11:29.329
  STEP: retrieving the pod @ 11/23/24 12:11:37.365
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:11:37.369
  I1123 12:11:37.379139 20 dns_common.go:552] DNS probes using dns-test-befac2c4-c4b3-48c4-b4b8-74d8ee946576 succeeded

  STEP: changing the service to type=ClusterIP @ 11/23/24 12:11:37.379
  W1123 12:11:37.392990      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7866.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7866.svc.cluster.local; sleep 1; done
   @ 11/23/24 12:11:37.393
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7866.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7866.svc.cluster.local; sleep 1; done
   @ 11/23/24 12:11:37.393
  STEP: creating a third pod to probe DNS @ 11/23/24 12:11:37.393
  STEP: submitting the pod to kubernetes @ 11/23/24 12:11:37.397
  STEP: retrieving the pod @ 11/23/24 12:11:39.414
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:11:39.419
  I1123 12:11:39.429441 20 dns_common.go:552] DNS probes using dns-test-0bd9e7fd-fd14-4313-83ce-41ae475ffce2 succeeded

  STEP: deleting the pod @ 11/23/24 12:11:39.429
  STEP: deleting the pod @ 11/23/24 12:11:39.448
  STEP: deleting the pod @ 11/23/24 12:11:39.469
  STEP: deleting the test externalName service @ 11/23/24 12:11:39.49
  I1123 12:11:39.513025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7866" for this suite. @ 11/23/24 12:11:39.516
• [16.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 11/23/24 12:11:39.525
  I1123 12:11:39.525365 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:11:39.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:39.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:39.546
  STEP: Creating configMap configmap-8569/configmap-test-b616d236-de4d-4b1a-8de1-91390eddd5cf @ 11/23/24 12:11:39.548
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:11:39.554
  STEP: Saw pod success @ 11/23/24 12:11:43.578
  I1123 12:11:43.581727 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-ed8f3f7c-fbe4-49b1-b416-cf3b658eec5c container env-test: <nil>
  STEP: delete the pod @ 11/23/24 12:11:43.599
  I1123 12:11:43.623940 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8569" for this suite. @ 11/23/24 12:11:43.636
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 11/23/24 12:11:43.648
  I1123 12:11:43.648863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:11:43.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:43.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:43.69
  STEP: Creating configMap with name projected-configmap-test-volume-138467a7-1601-40e2-94e0-987cb8515af7 @ 11/23/24 12:11:43.693
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:11:43.698
  STEP: Saw pod success @ 11/23/24 12:11:47.726
  I1123 12:11:47.731795 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-configmaps-805bd5ed-a93a-4844-b198-47fcacdc44ad container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:11:47.739
  I1123 12:11:47.760019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9149" for this suite. @ 11/23/24 12:11:47.765
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 11/23/24 12:11:47.774
  I1123 12:11:47.774641 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:11:47.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:47.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:47.798
  STEP: Creating configMap with name projected-configmap-test-volume-map-9f46627f-b9f6-4c47-868c-13079dec3b60 @ 11/23/24 12:11:47.8
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:11:47.805
  STEP: Saw pod success @ 11/23/24 12:11:51.832
  I1123 12:11:51.836045 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-projected-configmaps-45d3fd43-d70e-4f8e-a1cc-b76d05c2b0ee container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:11:51.853
  I1123 12:11:51.876108 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5762" for this suite. @ 11/23/24 12:11:51.881
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 11/23/24 12:11:51.891
  I1123 12:11:51.891460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 12:11:51.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:51.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:51.914
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/23/24 12:11:51.916
  STEP: Saw pod success @ 11/23/24 12:11:55.944
  I1123 12:11:55.948593 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-a6dd8b21-fbf5-415c-bb56-2ea46f48ba97 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:11:55.957
  I1123 12:11:55.974873 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2569" for this suite. @ 11/23/24 12:11:55.979
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/23/24 12:11:55.988
  I1123 12:11:55.988553 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/23/24 12:11:55.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:56.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:56.014
  STEP: Cleaning up the secret @ 11/23/24 12:11:58.052
  STEP: Cleaning up the configmap @ 11/23/24 12:11:58.06
  STEP: Cleaning up the pod @ 11/23/24 12:11:58.066
  I1123 12:11:58.084658 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6277" for this suite. @ 11/23/24 12:11:58.089
• [2.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 11/23/24 12:11:58.097
  I1123 12:11:58.097667 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/23/24 12:11:58.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:58.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:58.12
  STEP: creating a policy with variables @ 11/23/24 12:11:58.127
  STEP: waiting until the marker is denied @ 11/23/24 12:11:58.148
  STEP: testing a replicated Deployment to be allowed @ 11/23/24 12:11:58.758
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/23/24 12:11:58.774
  I1123 12:11:58.820291 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8654" for this suite. @ 11/23/24 12:11:58.824
• [0.735 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 11/23/24 12:11:58.832
  I1123 12:11:58.832614 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:11:58.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:11:58.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:11:58.958
  STEP: Creating configMap configmap-7314/configmap-test-cd8b0b5d-1971-439e-afdb-f63b7f44a3f0 @ 11/23/24 12:11:58.96
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:11:58.966
  STEP: Saw pod success @ 11/23/24 12:12:02.989
  I1123 12:12:02.994494 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-0966f1f8-9c2a-4a86-af21-bb42af0af3ae container env-test: <nil>
  STEP: delete the pod @ 11/23/24 12:12:03.003
  I1123 12:12:03.027307 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7314" for this suite. @ 11/23/24 12:12:03.032
• [4.208 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/23/24 12:12:03.04
  I1123 12:12:03.040497 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename watch @ 11/23/24 12:12:03.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:03.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:03.065
  STEP: getting a starting resourceVersion @ 11/23/24 12:12:03.067
  STEP: starting a background goroutine to produce watch events @ 11/23/24 12:12:03.071
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/23/24 12:12:03.071
  I1123 12:12:05.847727 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1967" for this suite. @ 11/23/24 12:12:05.897
• [2.909 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 11/23/24 12:12:05.95
  I1123 12:12:05.950104 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:12:05.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:05.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:05.974
  STEP: Setting up server cert @ 11/23/24 12:12:06.003
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:12:06.171
  STEP: Deploying the webhook pod @ 11/23/24 12:12:06.181
  STEP: Wait for the deployment to be ready @ 11/23/24 12:12:06.195
  I1123 12:12:06.204219 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:12:08.217
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:12:08.229
  I1123 12:12:09.229136 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/23/24 12:12:09.239
  I1123 12:12:09.281623 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4726" for this suite. @ 11/23/24 12:12:09.284
  STEP: Destroying namespace "webhook-markers-1354" for this suite. @ 11/23/24 12:12:09.296
• [3.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/23/24 12:12:09.303
  I1123 12:12:09.303683 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubelet-test @ 11/23/24 12:12:09.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:09.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:09.327
  I1123 12:12:11.361012 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7710" for this suite. @ 11/23/24 12:12:11.365
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 11/23/24 12:12:11.375
  I1123 12:12:11.375535 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:12:11.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:11.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:11.398
  STEP: validating cluster-info @ 11/23/24 12:12:11.4
  I1123 12:12:11.400857 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4481 cluster-info'
  I1123 12:12:11.452397 20 builder.go:146] stderr: ""
  I1123 12:12:11.452422 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1123 12:12:11.452511 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4481" for this suite. @ 11/23/24 12:12:11.456
• [0.089 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/23/24 12:12:11.464
  I1123 12:12:11.465003 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 12:12:11.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:11.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:11.489
  STEP: Creating simple DaemonSet "daemon-set" @ 11/23/24 12:12:11.514
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/23/24 12:12:11.521
  I1123 12:12:11.526940 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:11.527007 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:11.530656 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:12:11.530685 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  I1123 12:12:12.526058 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:12.526114 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:12.530361 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:12:12.530389 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  I1123 12:12:13.526728 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:13.526777 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:13.530676 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:12:13.530910 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  I1123 12:12:14.525813 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:14.525859 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:14.529525 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 12:12:14.529547 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/23/24 12:12:14.533
  I1123 12:12:14.549206 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:14.549241 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:14.552903 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 12:12:14.552921 20 fixtures.go:130] Node ip-172-31-83-143 is running 0 daemon pod, expected 1
  I1123 12:12:15.551714 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:15.551761 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:15.555245 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 12:12:15.555265 20 fixtures.go:130] Node ip-172-31-83-143 is running 0 daemon pod, expected 1
  I1123 12:12:16.552227 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:16.552272 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:16.560427 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 12:12:16.560453 20 fixtures.go:130] Node ip-172-31-83-143 is running 0 daemon pod, expected 1
  I1123 12:12:17.549942 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:17.550006 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:17.554144 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 12:12:17.554164 20 fixtures.go:130] Node ip-172-31-83-143 is running 0 daemon pod, expected 1
  I1123 12:12:18.552493 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:18.552572 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:18.556706 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 12:12:18.556737 20 fixtures.go:130] Node ip-172-31-83-143 is running 0 daemon pod, expected 1
  I1123 12:12:19.550574 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:19.550623 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:12:19.555441 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 12:12:19.555464 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/23/24 12:12:19.558
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2124, will wait for the garbage collector to delete the pods @ 11/23/24 12:12:19.558
  I1123 12:12:19.621290 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.88634ms
  I1123 12:12:19.721948 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.656366ms
  I1123 12:12:21.527522 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:12:21.527553 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1123 12:12:21.535421 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5124"},"items":null}

  I1123 12:12:21.540026 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5125"},"items":null}

  I1123 12:12:21.557713 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2124" for this suite. @ 11/23/24 12:12:21.561
• [10.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 11/23/24 12:12:21.57
  I1123 12:12:21.570137 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:12:21.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:21.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:21.59
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8186 @ 11/23/24 12:12:21.592
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/23/24 12:12:21.609
  STEP: creating service externalsvc in namespace services-8186 @ 11/23/24 12:12:21.609
  STEP: creating replication controller externalsvc in namespace services-8186 @ 11/23/24 12:12:21.622
  I1123 12:12:21.630615      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8186, replica count: 2
  I1123 12:12:24.683049      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/23/24 12:12:24.689
  I1123 12:12:24.715366 20 resource.go:361] Creating new exec pod
  I1123 12:12:26.737722 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8186 exec execpod5vpqq -- /bin/sh -x -c nslookup nodeport-service.services-8186.svc.cluster.local'
  I1123 12:12:26.838246 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-8186.svc.cluster.local\n"
  I1123 12:12:26.838281 20 builder.go:147] stdout: "Server:\t\t10.152.183.219\nAddress:\t10.152.183.219#53\n\nnodeport-service.services-8186.svc.cluster.local\tcanonical name = externalsvc.services-8186.svc.cluster.local.\nName:\texternalsvc.services-8186.svc.cluster.local\nAddress: 10.152.183.217\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8186, will wait for the garbage collector to delete the pods @ 11/23/24 12:12:26.838
  I1123 12:12:26.902628 20 resources.go:139] Deleting ReplicationController externalsvc took: 7.985285ms
  I1123 12:12:27.003070 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.438579ms
  I1123 12:12:29.528002 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1123 12:12:29.541747 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8186" for this suite. @ 11/23/24 12:12:29.546
• [7.985 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 11/23/24 12:12:29.556
  I1123 12:12:29.556047 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 12:12:29.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:29.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:29.577
  STEP: Counting existing ResourceQuota @ 11/23/24 12:12:29.579
  STEP: Creating a ResourceQuota @ 11/23/24 12:12:34.582
  STEP: Ensuring resource quota status is calculated @ 11/23/24 12:12:34.591
  STEP: Creating a ReplicaSet @ 11/23/24 12:12:36.597
  STEP: Ensuring resource quota status captures replicaset creation @ 11/23/24 12:12:36.609
  STEP: Deleting a ReplicaSet @ 11/23/24 12:12:38.615
  STEP: Ensuring resource quota status released usage @ 11/23/24 12:12:38.624
  I1123 12:12:40.630412 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1981" for this suite. @ 11/23/24 12:12:40.634
• [11.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 11/23/24 12:12:40.645
  I1123 12:12:40.645717 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-webhook @ 11/23/24 12:12:40.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:40.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:40.668
  STEP: Setting up server cert @ 11/23/24 12:12:40.671
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/23/24 12:12:40.843
  STEP: Deploying the custom resource conversion webhook pod @ 11/23/24 12:12:40.852
  STEP: Wait for the deployment to be ready @ 11/23/24 12:12:40.866
  I1123 12:12:40.876241 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:12:42.89
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:12:42.901
  I1123 12:12:43.902077 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1123 12:12:43.912120 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Creating a v1 custom resource @ 11/23/24 12:12:46.47
  STEP: Create a v2 custom resource @ 11/23/24 12:12:46.489
  STEP: List CRs in v1 @ 11/23/24 12:12:46.514
  STEP: List CRs in v2 @ 11/23/24 12:12:46.518
  I1123 12:12:47.087550 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1395" for this suite. @ 11/23/24 12:12:47.091
• [6.456 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 11/23/24 12:12:47.101
  I1123 12:12:47.101786 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename lease-test @ 11/23/24 12:12:47.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:47.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:47.123
  I1123 12:12:47.194308 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8175" for this suite. @ 11/23/24 12:12:47.2
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 11/23/24 12:12:47.209
  I1123 12:12:47.209389 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:12:47.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:47.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:47.23
  STEP: Setting up server cert @ 11/23/24 12:12:47.268
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:12:47.55
  STEP: Deploying the webhook pod @ 11/23/24 12:12:47.555
  STEP: Wait for the deployment to be ready @ 11/23/24 12:12:47.568
  I1123 12:12:47.575673 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:12:49.59
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:12:49.602
  I1123 12:12:50.603084 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/23/24 12:12:50.613
  STEP: create a configmap that should be updated by the webhook @ 11/23/24 12:12:50.628
  I1123 12:12:50.697286 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1351" for this suite. @ 11/23/24 12:12:50.701
  STEP: Destroying namespace "webhook-markers-9463" for this suite. @ 11/23/24 12:12:50.708
• [3.511 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 11/23/24 12:12:50.72
  I1123 12:12:50.720409 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:12:50.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:50.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:50.742
  STEP: Creating configMap that has name configmap-test-emptyKey-9e7e5a1f-4979-4f29-b149-44c311ddb023 @ 11/23/24 12:12:50.744
  I1123 12:12:50.745949 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4006" for this suite. @ 11/23/24 12:12:50.75
• [0.039 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 11/23/24 12:12:50.759
  I1123 12:12:50.759753 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 12:12:50.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:50.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:50.78
  I1123 12:12:50.783201 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  W1123 12:12:53.317152      20 warnings.go:70] unknown field "alpha"
  W1123 12:12:53.317171      20 warnings.go:70] unknown field "beta"
  W1123 12:12:53.317175      20 warnings.go:70] unknown field "delta"
  W1123 12:12:53.317178      20 warnings.go:70] unknown field "epsilon"
  W1123 12:12:53.317181      20 warnings.go:70] unknown field "gamma"
  I1123 12:12:53.862115 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4000" for this suite. @ 11/23/24 12:12:53.866
• [3.118 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 11/23/24 12:12:53.877
  I1123 12:12:53.877326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename namespaces @ 11/23/24 12:12:53.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:53.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:53.9
  STEP: Read namespace status @ 11/23/24 12:12:53.903
  I1123 12:12:53.907475 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/23/24 12:12:53.907
  I1123 12:12:53.913040 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/23/24 12:12:53.913
  I1123 12:12:53.924147 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1123 12:12:53.924220 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7833" for this suite. @ 11/23/24 12:12:53.928
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 11/23/24 12:12:53.935
  I1123 12:12:53.935845 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 12:12:53.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:53.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:53.957
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/23/24 12:12:53.96
  STEP: Saw pod success @ 11/23/24 12:12:57.987
  I1123 12:12:57.992475 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-2c2b725c-fcb0-4310-87a5-cd0d611ff298 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:12:58.002
  I1123 12:12:58.024459 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7197" for this suite. @ 11/23/24 12:12:58.029
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 11/23/24 12:12:58.04
  I1123 12:12:58.040610 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:12:58.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:12:58.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:12:58.06
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4368 @ 11/23/24 12:12:58.062
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/23/24 12:12:58.072
  STEP: creating service externalsvc in namespace services-4368 @ 11/23/24 12:12:58.072
  STEP: creating replication controller externalsvc in namespace services-4368 @ 11/23/24 12:12:58.088
  I1123 12:12:58.094557      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4368, replica count: 2
  I1123 12:13:01.146354      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/23/24 12:13:01.151
  I1123 12:13:01.168251 20 resource.go:361] Creating new exec pod
  I1123 12:13:03.186622 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-4368 exec execpodb5jqh -- /bin/sh -x -c nslookup clusterip-service.services-4368.svc.cluster.local'
  I1123 12:13:03.294774 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-4368.svc.cluster.local\n"
  I1123 12:13:03.294817 20 builder.go:147] stdout: "Server:\t\t10.152.183.219\nAddress:\t10.152.183.219#53\n\nclusterip-service.services-4368.svc.cluster.local\tcanonical name = externalsvc.services-4368.svc.cluster.local.\nName:\texternalsvc.services-4368.svc.cluster.local\nAddress: 10.152.183.131\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4368, will wait for the garbage collector to delete the pods @ 11/23/24 12:13:03.295
  I1123 12:13:03.357228 20 resources.go:139] Deleting ReplicationController externalsvc took: 7.994916ms
  I1123 12:13:03.457615 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.382965ms
  I1123 12:13:06.578192 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1123 12:13:06.590478 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4368" for this suite. @ 11/23/24 12:13:06.596
• [8.566 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 11/23/24 12:13:06.606
  I1123 12:13:06.606332 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 12:13:06.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:13:06.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:13:06.628
  STEP: Creating a test headless service @ 11/23/24 12:13:06.63
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9201 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9201;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9201 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9201;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9201.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9201.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9201.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9201.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9201.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9201.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9201.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9201.svc;check="$$(dig +notcp +noall +answer +search 198.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.198_udp@PTR;check="$$(dig +tcp +noall +answer +search 198.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.198_tcp@PTR;sleep 1; done
   @ 11/23/24 12:13:06.651
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9201 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9201;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9201 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9201;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9201.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9201.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9201.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9201.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9201.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9201.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9201.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9201.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9201.svc;check="$$(dig +notcp +noall +answer +search 198.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.198_udp@PTR;check="$$(dig +tcp +noall +answer +search 198.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.198_tcp@PTR;sleep 1; done
   @ 11/23/24 12:13:06.651
  STEP: creating a pod to probe DNS @ 11/23/24 12:13:06.651
  STEP: submitting the pod to kubernetes @ 11/23/24 12:13:06.651
  STEP: retrieving the pod @ 11/23/24 12:13:08.674
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:13:08.678
  I1123 12:13:08.684690 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.690092 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.694308 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9201 from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.699454 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9201 from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.704731 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.708742 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.713818 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.718530 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.742662 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.747613 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.752003 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9201 from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.757782 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9201 from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.762739 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.767139 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.773319 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.779036 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9201.svc from pod dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2: the server could not find the requested resource (get pods dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2)
  I1123 12:13:08.798495 20 dns_common.go:489] Lookups using dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9201 wheezy_tcp@dns-test-service.dns-9201 wheezy_udp@dns-test-service.dns-9201.svc wheezy_tcp@dns-test-service.dns-9201.svc wheezy_udp@_http._tcp.dns-test-service.dns-9201.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9201.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9201 jessie_tcp@dns-test-service.dns-9201 jessie_udp@dns-test-service.dns-9201.svc jessie_tcp@dns-test-service.dns-9201.svc jessie_udp@_http._tcp.dns-test-service.dns-9201.svc jessie_tcp@_http._tcp.dns-test-service.dns-9201.svc]

  I1123 12:13:08.806834 20 dns_common.go:495] Pod client logs for webserver: 
  I1123 12:13:08.814693 20 dns_common.go:495] Pod client logs for querier: 
  I1123 12:13:08.820921 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I1123 12:13:13.805441 20 dns_common.go:527] DNS probes using dns-9201/dns-test-492b9a01-7fe7-4e07-821e-d83c11d7add2 succeeded

  STEP: deleting the pod @ 11/23/24 12:13:13.805
  STEP: deleting the test service @ 11/23/24 12:13:13.819
  STEP: deleting the test headless service @ 11/23/24 12:13:13.843
  I1123 12:13:13.859687 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9201" for this suite. @ 11/23/24 12:13:13.862
• [7.264 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 11/23/24 12:13:13.87
  I1123 12:13:13.870815 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename endpointslice @ 11/23/24 12:13:13.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:13:13.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:13:13.895
  I1123 12:13:13.913873 20 endpointslice.go:1045] Endpoints addresses: [172.31.0.34 172.31.69.136] , ports: [6443]
  I1123 12:13:13.913897 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.0.34 172.31.69.136] , ports: [6443]
  I1123 12:13:13.914017 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5222" for this suite. @ 11/23/24 12:13:13.918
• [0.058 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 11/23/24 12:13:13.929
  I1123 12:13:13.929219 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename security-context-test @ 11/23/24 12:13:13.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:13:13.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:13:13.955
  I1123 12:13:17.993719 20 security_context.go:538] Got logs for pod "busybox-privileged-false-7e4e72e6-e9ff-4488-ad2b-91065613ebfc": "ip: RTNETLINK answers: Operation not permitted\n"
  I1123 12:13:17.993836 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9063" for this suite. @ 11/23/24 12:13:17.998
• [4.077 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/23/24 12:13:18.005
  I1123 12:13:18.005852 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename cronjob @ 11/23/24 12:13:18.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:13:18.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:13:18.031
  STEP: Creating a cronjob @ 11/23/24 12:13:18.033
  STEP: Ensuring more than one job is running at a time @ 11/23/24 12:13:18.041
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/23/24 12:15:02.046
  STEP: Removing cronjob @ 11/23/24 12:15:02.051
  I1123 12:15:02.060161 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-629" for this suite. @ 11/23/24 12:15:02.064
• [104.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 11/23/24 12:15:02.072
  I1123 12:15:02.072463 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replication-controller @ 11/23/24 12:15:02.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:02.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:02.11
  I1123 12:15:02.113282 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/23/24 12:15:03.127
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/23/24 12:15:03.135
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/23/24 12:15:04.144
  I1123 12:15:04.154480 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/23/24 12:15:04.154
  I1123 12:15:05.164062 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8957" for this suite. @ 11/23/24 12:15:05.168
• [3.106 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 11/23/24 12:15:05.178
  I1123 12:15:05.178375 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:15:05.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:05.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:05.206
  STEP: Setting up server cert @ 11/23/24 12:15:05.236
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:15:05.378
  STEP: Deploying the webhook pod @ 11/23/24 12:15:05.386
  STEP: Wait for the deployment to be ready @ 11/23/24 12:15:05.399
  I1123 12:15:05.408395 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:15:07.421
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:15:07.435
  I1123 12:15:08.435704 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:15:08.445977 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2960-crds.webhook.example.com via the AdmissionRegistration API @ 11/23/24 12:15:08.956
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/23/24 12:15:08.97
  I1123 12:15:11.567267 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7685" for this suite. @ 11/23/24 12:15:11.572
  STEP: Destroying namespace "webhook-markers-298" for this suite. @ 11/23/24 12:15:11.582
• [6.410 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/23/24 12:15:11.588
  I1123 12:15:11.588845 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename hostport @ 11/23/24 12:15:11.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:11.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:11.612
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/23/24 12:15:11.618
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.41.64 on the node which pod1 resides and expect scheduled @ 11/23/24 12:15:15.643
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.41.64 but use UDP protocol on the node which pod2 resides @ 11/23/24 12:15:17.66
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/23/24 12:15:21.699
  I1123 12:15:21.699463 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.41.64 http://127.0.0.1:54323/hostname] Namespace:hostport-3177 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:15:21.699480 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:15:21.699945 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:15:21.700021 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3177/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.41.64+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.41.64, port: 54323 @ 11/23/24 12:15:21.746
  I1123 12:15:21.746283 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.41.64:54323/hostname] Namespace:hostport-3177 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:15:21.746297 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:15:21.746707 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:15:21.746750 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3177/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.41.64%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.41.64, port: 54323 UDP @ 11/23/24 12:15:21.794
  I1123 12:15:21.794755 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.41.64 54323] Namespace:hostport-3177 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:15:21.794771 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:15:21.795272 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:15:21.795315 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3177/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.41.64+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1123 12:15:26.830418 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3177" for this suite. @ 11/23/24 12:15:26.834
• [15.255 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 11/23/24 12:15:26.843
  I1123 12:15:26.844025 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:15:26.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:26.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:26.867
  STEP: Creating a pod to test downward api env vars @ 11/23/24 12:15:26.869
  STEP: Saw pod success @ 11/23/24 12:15:30.897
  I1123 12:15:30.901692 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downward-api-e3c16452-6121-4bd1-9b3d-684a5b773e96 container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 12:15:30.914
  I1123 12:15:30.935844 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2422" for this suite. @ 11/23/24 12:15:30.94
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 11/23/24 12:15:30.949
  I1123 12:15:30.949971 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 12:15:30.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:30.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:30.97
  STEP: Creating pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688 @ 11/23/24 12:15:30.972
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 12:15:32.993
  I1123 12:15:32.997937 20 container_probe.go:1749] Initial restart count of pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be is 0
  I1123 12:15:33.002320 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:35.008650 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:37.014343 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:39.020495 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:41.025496 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:43.031557 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:45.035754 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:47.042003 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:49.047809 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:51.053687 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:53.059574 20 container_probe.go:1759] Get pod liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be in namespace container-probe-688
  I1123 12:15:53.059609 20 container_probe.go:1763] Restart count of pod container-probe-688/liveness-c3454586-d2a8-48d7-b11a-b75e5b9a22be is now 1 (20.061379029s elapsed)
  STEP: deleting the pod @ 11/23/24 12:15:53.059
  I1123 12:15:53.077493 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-688" for this suite. @ 11/23/24 12:15:53.081
• [22.139 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 11/23/24 12:15:53.089
  I1123 12:15:53.089118 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename security-context-test @ 11/23/24 12:15:53.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:53.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:53.114
  I1123 12:15:57.158763 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5185" for this suite. @ 11/23/24 12:15:57.164
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/23/24 12:15:57.172
  I1123 12:15:57.172742 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:15:57.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:15:57.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:15:57.195
  STEP: Creating projection with secret that has name projected-secret-test-a886d98f-b96c-488a-9ce8-cf12434a2b7a @ 11/23/24 12:15:57.198
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:15:57.203
  STEP: Saw pod success @ 11/23/24 12:16:01.231
  I1123 12:16:01.234598 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-secrets-5245199b-4d88-4171-b65c-ad6a158b6c30 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:16:01.243
  I1123 12:16:01.265654 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1381" for this suite. @ 11/23/24 12:16:01.27
• [4.106 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 11/23/24 12:16:01.279
  I1123 12:16:01.279234 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:16:01.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:01.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:01.3
  STEP: Setting up server cert @ 11/23/24 12:16:01.329
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:16:01.409
  STEP: Deploying the webhook pod @ 11/23/24 12:16:01.418
  STEP: Wait for the deployment to be ready @ 11/23/24 12:16:01.43
  I1123 12:16:01.439824 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:16:03.454
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:16:03.469
  I1123 12:16:04.469283 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/23/24 12:16:04.479
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/23/24 12:16:04.515
  STEP: Creating a configMap that should not be mutated @ 11/23/24 12:16:04.523
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/23/24 12:16:04.537
  STEP: Creating a configMap that should be mutated @ 11/23/24 12:16:04.545
  I1123 12:16:04.726635 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8418" for this suite. @ 11/23/24 12:16:04.73
  STEP: Destroying namespace "webhook-markers-7115" for this suite. @ 11/23/24 12:16:04.739
• [3.468 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/23/24 12:16:04.747
  I1123 12:16:04.747180 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-pred @ 11/23/24 12:16:04.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:04.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:04.77
  I1123 12:16:04.772693 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1123 12:16:04.780411 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1123 12:16:04.785088 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-25 before test
  I1123 12:16:04.791860 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5lgnj from ingress-nginx-kubernetes-worker started at 2024-11-23 12:07:57 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.791878 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:16:04.791885 20 predicates.go:957] calico-node-wl5cp from kube-system started at 2024-11-23 12:07:48 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.791891 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:16:04.791897 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-23 12:10:58 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.791902 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1123 12:16:04.791908 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-fvv6x from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:04.791913 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:04.791918 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 12:16:04.791924 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-41-64 before test
  I1123 12:16:04.800117 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qlg9c from ingress-nginx-kubernetes-worker started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.800132 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:16:04.800139 20 predicates.go:957] calico-node-c4kkn from kube-system started at 2024-11-23 12:08:42 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.800145 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:16:04.800162 20 predicates.go:957] coredns-5b4857d7c8-kbgj6 from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.800167 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1123 12:16:04.800173 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tv6sb from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.800178 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1123 12:16:04.800184 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-99r5c from kube-system started at 2024-11-23 12:00:46 +0000 UTC (2 container statuses recorded)
  I1123 12:16:04.800189 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1123 12:16:04.800195 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1123 12:16:04.800201 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2r9wg from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.800210 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1123 12:16:04.800217 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-crnff from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.800222 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1123 12:16:04.800228 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-hhm79 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:04.800234 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:04.800239 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 12:16:04.800244 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-143 before test
  I1123 12:16:04.805921 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-xwwf7 from ingress-nginx-kubernetes-worker started at 2024-11-23 12:05:34 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.805938 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:16:04.805946 20 predicates.go:957] calico-node-m8xlh from kube-system started at 2024-11-23 12:08:52 +0000 UTC (1 container statuses recorded)
  I1123 12:16:04.805951 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:16:04.805980 20 predicates.go:957] sonobuoy-e2e-job-f5d65af88fb24f14 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:04.805986 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1123 12:16:04.805992 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:04.805999 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-wxftv from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:04.806007 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:04.806013 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-20-25 @ 11/23/24 12:16:04.821
  STEP: verifying the node has the label node ip-172-31-41-64 @ 11/23/24 12:16:04.833
  STEP: verifying the node has the label node ip-172-31-83-143 @ 11/23/24 12:16:04.844
  I1123 12:16:04.858202 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-5lgnj requesting resource cpu=0m on Node ip-172-31-20-25
  I1123 12:16:04.858228 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-qlg9c requesting resource cpu=0m on Node ip-172-31-41-64
  I1123 12:16:04.858235 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-xwwf7 requesting resource cpu=0m on Node ip-172-31-83-143
  I1123 12:16:04.858241 20 predicates.go:372] Pod calico-node-c4kkn requesting resource cpu=250m on Node ip-172-31-41-64
  I1123 12:16:04.858247 20 predicates.go:372] Pod calico-node-m8xlh requesting resource cpu=250m on Node ip-172-31-83-143
  I1123 12:16:04.858253 20 predicates.go:372] Pod calico-node-wl5cp requesting resource cpu=250m on Node ip-172-31-20-25
  I1123 12:16:04.858258 20 predicates.go:372] Pod coredns-5b4857d7c8-kbgj6 requesting resource cpu=100m on Node ip-172-31-41-64
  I1123 12:16:04.858264 20 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-tv6sb requesting resource cpu=0m on Node ip-172-31-41-64
  I1123 12:16:04.858270 20 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-99r5c requesting resource cpu=5m on Node ip-172-31-41-64
  I1123 12:16:04.858275 20 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-2r9wg requesting resource cpu=0m on Node ip-172-31-41-64
  I1123 12:16:04.858281 20 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-crnff requesting resource cpu=0m on Node ip-172-31-41-64
  I1123 12:16:04.858287 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-20-25
  I1123 12:16:04.858293 20 predicates.go:372] Pod sonobuoy-e2e-job-f5d65af88fb24f14 requesting resource cpu=0m on Node ip-172-31-83-143
  I1123 12:16:04.858299 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-fvv6x requesting resource cpu=0m on Node ip-172-31-20-25
  I1123 12:16:04.858305 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-hhm79 requesting resource cpu=0m on Node ip-172-31-41-64
  I1123 12:16:04.858312 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-wxftv requesting resource cpu=0m on Node ip-172-31-83-143
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/23/24 12:16:04.858
  I1123 12:16:04.858336 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-20-25
  I1123 12:16:04.869064 20 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-41-64
  I1123 12:16:04.877337 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-83-143
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/23/24 12:16:06.904
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173.180a98078d2e77fe], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6503/filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173 to ip-172-31-20-25] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173.180a9807abbacd8a], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173.180a9807bd64b781], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 296ms (296ms including waiting). Image size: 320368 bytes.] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173.180a9807be84e790], Reason = [Created], Message = [Created container filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173.180a9807c2988205], Reason = [Started], Message = [Started container filler-pod-5facf677-b227-43f2-b427-d7cf88fc4173] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b.180a98078da8aece], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6503/filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b to ip-172-31-41-64] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b.180a9807abe0d799], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b.180a9807bbf0bc7f], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 269ms (269ms including waiting). Image size: 320368 bytes.] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b.180a9807bcd460ee], Reason = [Created], Message = [Created container filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b.180a9807bf1bd6a6], Reason = [Started], Message = [Started container filler-pod-af9f3efc-0ef5-4a26-b0f5-18236d374b4b] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf.180a98078e166a50], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6503/filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf to ip-172-31-83-143] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf.180a9807acbf1fcb], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.10"] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf.180a9807bf068525], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.10" in 306ms (306ms including waiting). Image size: 320368 bytes.] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf.180a9807c084a7a5], Reason = [Created], Message = [Created container filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf.180a9807c3055839], Reason = [Started], Message = [Started container filler-pod-dc537905-ff5a-4fe5-a02a-92070a111bcf] @ 11/23/24 12:16:06.909
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.180a980806cc3e6f], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 11/23/24 12:16:06.925
  STEP: removing the label node off the node ip-172-31-20-25 @ 11/23/24 12:16:07.923
  STEP: verifying the node doesn't have the label node @ 11/23/24 12:16:07.937
  STEP: removing the label node off the node ip-172-31-41-64 @ 11/23/24 12:16:07.942
  STEP: verifying the node doesn't have the label node @ 11/23/24 12:16:07.953
  STEP: removing the label node off the node ip-172-31-83-143 @ 11/23/24 12:16:07.958
  STEP: verifying the node doesn't have the label node @ 11/23/24 12:16:07.97
  I1123 12:16:07.981088 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6503" for this suite. @ 11/23/24 12:16:07.985
• [3.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 11/23/24 12:16:07.994
  I1123 12:16:07.995012 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename events @ 11/23/24 12:16:07.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:08.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:08.022
  STEP: Create set of events @ 11/23/24 12:16:08.025
  I1123 12:16:08.032337 20 core_events.go:198] created test-event-1
  I1123 12:16:08.039840 20 core_events.go:198] created test-event-2
  I1123 12:16:08.044320 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/23/24 12:16:08.044
  STEP: delete collection of events @ 11/23/24 12:16:08.048
  I1123 12:16:08.048902 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/23/24 12:16:08.078
  I1123 12:16:08.078210 20 core_events.go:230] requesting list of events to confirm quantity
  I1123 12:16:08.081930 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6722" for this suite. @ 11/23/24 12:16:08.085
• [0.098 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 11/23/24 12:16:08.093
  I1123 12:16:08.093432 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:16:08.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:08.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:08.115
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:16:08.117
  STEP: Saw pod success @ 11/23/24 12:16:10.137
  I1123 12:16:10.142706 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-f2e42b0d-42f8-4aa7-8863-7b9ac41615ad container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:16:10.151
  I1123 12:16:10.174202 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5745" for this suite. @ 11/23/24 12:16:10.179
• [2.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 11/23/24 12:16:10.19
  I1123 12:16:10.190652 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 12:16:10.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:10.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:10.218
  STEP: creating a secret @ 11/23/24 12:16:10.221
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/23/24 12:16:10.229
  STEP: patching the secret @ 11/23/24 12:16:10.234
  STEP: deleting the secret using a LabelSelector @ 11/23/24 12:16:10.244
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/23/24 12:16:10.256
  I1123 12:16:10.261725 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9729" for this suite. @ 11/23/24 12:16:10.266
• [0.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 11/23/24 12:16:10.276
  I1123 12:16:10.276124 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 12:16:10.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:10.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:10.302
  STEP: Creating a job @ 11/23/24 12:16:10.304
  STEP: Ensuring active pods == parallelism @ 11/23/24 12:16:10.317
  STEP: Orphaning one of the Job's Pods @ 11/23/24 12:16:12.323
  I1123 12:16:12.844916 20 pod_client.go:173] Successfully updated pod "adopt-release-7457l"
  STEP: Checking that the Job readopts the Pod @ 11/23/24 12:16:12.844
  STEP: Removing the labels from the Job's Pod @ 11/23/24 12:16:14.854
  I1123 12:16:15.366434 20 pod_client.go:173] Successfully updated pod "adopt-release-7457l"
  STEP: Checking that the Job releases the Pod @ 11/23/24 12:16:15.366
  I1123 12:16:17.375529 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1613" for this suite. @ 11/23/24 12:16:17.38
• [7.112 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 11/23/24 12:16:17.388
  I1123 12:16:17.388407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename security-context @ 11/23/24 12:16:17.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:17.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:17.415
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/23/24 12:16:17.419
  STEP: Saw pod success @ 11/23/24 12:16:21.45
  I1123 12:16:21.454557 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod security-context-e9c6650d-519f-49d6-acc1-942db03fb33d container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:16:21.462
  I1123 12:16:21.488228 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2840" for this suite. @ 11/23/24 12:16:21.493
• [4.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 11/23/24 12:16:21.502
  I1123 12:16:21.502102 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 12:16:21.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:21.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:21.528
  STEP: Creating a test headless service @ 11/23/24 12:16:21.53
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-158.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-158.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-158.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-158.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-158.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-158.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-158.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-158.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_tcp@PTR;sleep 1; done
   @ 11/23/24 12:16:21.55
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-158.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-158.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-158.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-158.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-158.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-158.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-158.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-158.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-158.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_udp@PTR;check="$$(dig +tcp +noall +answer +search 131.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.131_tcp@PTR;sleep 1; done
   @ 11/23/24 12:16:21.55
  STEP: creating a pod to probe DNS @ 11/23/24 12:16:21.55
  STEP: submitting the pod to kubernetes @ 11/23/24 12:16:21.55
  STEP: retrieving the pod @ 11/23/24 12:16:23.574
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:16:23.579
  I1123 12:16:23.584530 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.590393 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.595940 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.600349 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.625617 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.629724 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.634680 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.640190 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-158.svc.cluster.local from pod dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f: the server could not find the requested resource (get pods dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f)
  I1123 12:16:23.658619 20 dns_common.go:489] Lookups using dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f failed for: [wheezy_udp@dns-test-service.dns-158.svc.cluster.local wheezy_tcp@dns-test-service.dns-158.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-158.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-158.svc.cluster.local jessie_udp@dns-test-service.dns-158.svc.cluster.local jessie_tcp@dns-test-service.dns-158.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-158.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-158.svc.cluster.local]

  I1123 12:16:23.666650 20 dns_common.go:495] Pod client logs for webserver: 
  I1123 12:16:23.674736 20 dns_common.go:495] Pod client logs for querier: 
  I1123 12:16:23.682256 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I1123 12:16:28.659228 20 dns_common.go:527] DNS probes using dns-158/dns-test-7b22fc2f-0be4-4277-92dd-c5f692134c8f succeeded

  STEP: deleting the pod @ 11/23/24 12:16:28.659
  STEP: deleting the test service @ 11/23/24 12:16:28.679
  STEP: deleting the test headless service @ 11/23/24 12:16:28.699
  I1123 12:16:28.713054 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-158" for this suite. @ 11/23/24 12:16:28.717
• [7.223 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 11/23/24 12:16:28.724
  I1123 12:16:28.724826 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 12:16:28.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:28.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:28.747
  STEP: Counting existing ResourceQuota @ 11/23/24 12:16:28.75
  STEP: Creating a ResourceQuota @ 11/23/24 12:16:33.754
  STEP: Ensuring resource quota status is calculated @ 11/23/24 12:16:33.762
  STEP: Creating a Pod that fits quota @ 11/23/24 12:16:35.767
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/23/24 12:16:35.785
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/23/24 12:16:37.79
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/23/24 12:16:37.792
  STEP: Ensuring a pod cannot update its resource requirements @ 11/23/24 12:16:37.794
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/23/24 12:16:37.8
  STEP: Deleting the pod @ 11/23/24 12:16:39.805
  STEP: Ensuring resource quota status released the pod usage @ 11/23/24 12:16:39.817
  I1123 12:16:41.824920 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-288" for this suite. @ 11/23/24 12:16:41.829
• [13.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 11/23/24 12:16:41.839
  I1123 12:16:41.839070 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 12:16:41.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:41.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:41.863
  STEP: reading a file in the container @ 11/23/24 12:16:43.89
  I1123 12:16:43.890535 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6019 pod-service-account-beee2a66-c363-43cc-81e0-3b0d62284867 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/23/24 12:16:44.003
  I1123 12:16:44.003869 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6019 pod-service-account-beee2a66-c363-43cc-81e0-3b0d62284867 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/23/24 12:16:44.113
  I1123 12:16:44.114008 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6019 pod-service-account-beee2a66-c363-43cc-81e0-3b0d62284867 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1123 12:16:44.224279 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6019"
  I1123 12:16:44.225806 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6019" for this suite. @ 11/23/24 12:16:44.229
• [2.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/23/24 12:16:44.237
  I1123 12:16:44.237985 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename tables @ 11/23/24 12:16:44.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:44.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:44.259
  I1123 12:16:44.263203 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1255" for this suite. @ 11/23/24 12:16:44.267
• [0.036 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 11/23/24 12:16:44.274
  I1123 12:16:44.274018 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 12:16:44.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:44.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:44.296
  STEP: create the rc @ 11/23/24 12:16:44.299
  W1123 12:16:44.309589      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/23/24 12:16:49.315
  STEP: wait for all pods to be garbage collected @ 11/23/24 12:16:49.323
  STEP: Gathering metrics @ 11/23/24 12:16:54.334
  W1123 12:16:54.340309      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1123 12:16:54.340338 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1123 12:16:54.340468 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1903" for this suite. @ 11/23/24 12:16:54.345
• [10.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/23/24 12:16:54.355
  I1123 12:16:54.355341 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-pred @ 11/23/24 12:16:54.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:54.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:54.379
  I1123 12:16:54.381268 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1123 12:16:54.390909 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1123 12:16:54.394610 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-25 before test
  I1123 12:16:54.399850 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5lgnj from ingress-nginx-kubernetes-worker started at 2024-11-23 12:07:57 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.399865 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:16:54.399872 20 predicates.go:957] calico-node-wl5cp from kube-system started at 2024-11-23 12:07:48 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.399877 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:16:54.399913 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-23 12:10:58 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.399921 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1123 12:16:54.399927 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-fvv6x from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:54.399932 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:54.399937 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 12:16:54.399942 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-41-64 before test
  I1123 12:16:54.406517 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qlg9c from ingress-nginx-kubernetes-worker started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.406533 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:16:54.406541 20 predicates.go:957] calico-node-c4kkn from kube-system started at 2024-11-23 12:08:42 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.406547 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:16:54.406553 20 predicates.go:957] coredns-5b4857d7c8-kbgj6 from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.406558 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1123 12:16:54.406565 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tv6sb from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.406579 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1123 12:16:54.406585 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-99r5c from kube-system started at 2024-11-23 12:00:46 +0000 UTC (2 container statuses recorded)
  I1123 12:16:54.406591 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1123 12:16:54.406596 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1123 12:16:54.406602 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2r9wg from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.406608 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1123 12:16:54.406614 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-crnff from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.406618 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1123 12:16:54.406624 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-hhm79 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:54.406629 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:54.406634 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 12:16:54.406640 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-143 before test
  I1123 12:16:54.412345 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-xwwf7 from ingress-nginx-kubernetes-worker started at 2024-11-23 12:05:34 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.412360 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:16:54.412367 20 predicates.go:957] calico-node-m8xlh from kube-system started at 2024-11-23 12:08:52 +0000 UTC (1 container statuses recorded)
  I1123 12:16:54.412373 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:16:54.412379 20 predicates.go:957] sonobuoy-e2e-job-f5d65af88fb24f14 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:54.412384 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1123 12:16:54.412389 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:54.412395 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-wxftv from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:16:54.412400 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:16:54.412406 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/23/24 12:16:54.412
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/23/24 12:16:56.438
  STEP: Trying to apply a random label on the found node. @ 11/23/24 12:16:56.456
  STEP: verifying the node has the label kubernetes.io/e2e-a67e7324-448c-41f5-a653-2b04d95fba3b 42 @ 11/23/24 12:16:56.464
  STEP: Trying to relaunch the pod, now with labels. @ 11/23/24 12:16:56.468
  STEP: removing the label kubernetes.io/e2e-a67e7324-448c-41f5-a653-2b04d95fba3b off the node ip-172-31-20-25 @ 11/23/24 12:16:58.49
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-a67e7324-448c-41f5-a653-2b04d95fba3b @ 11/23/24 12:16:58.503
  I1123 12:16:58.507506 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9993" for this suite. @ 11/23/24 12:16:58.512
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 11/23/24 12:16:58.519
  I1123 12:16:58.519239 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 12:16:58.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:16:58.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:16:58.541
  STEP: create the rc @ 11/23/24 12:16:58.549
  W1123 12:16:58.555651      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/23/24 12:17:02.643
  STEP: wait for the rc to be deleted @ 11/23/24 12:17:02.659
  I1123 12:17:03.690115 20 garbage_collector.go:670] 80 pods remaining
  I1123 12:17:03.690153 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1123 12:17:03.690160 20 garbage_collector.go:678] 
  I1123 12:17:04.674935 20 garbage_collector.go:670] 71 pods remaining
  I1123 12:17:04.676371 20 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1123 12:17:04.676388 20 garbage_collector.go:678] 
  I1123 12:17:05.684443 20 garbage_collector.go:670] 60 pods remaining
  I1123 12:17:05.684483 20 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1123 12:17:05.684664 20 garbage_collector.go:678] 
  I1123 12:17:06.685548 20 garbage_collector.go:670] 40 pods remaining
  I1123 12:17:06.685580 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1123 12:17:06.685587 20 garbage_collector.go:678] 
  I1123 12:17:07.669628 20 garbage_collector.go:670] 31 pods remaining
  I1123 12:17:07.670009 20 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1123 12:17:07.670016 20 garbage_collector.go:678] 
  I1123 12:17:08.669906 20 garbage_collector.go:670] 20 pods remaining
  I1123 12:17:08.669951 20 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1123 12:17:08.669993 20 garbage_collector.go:678] 
  STEP: Gathering metrics @ 11/23/24 12:17:09.671
  W1123 12:17:09.685759      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1123 12:17:09.685801 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1123 12:17:09.687221 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8877" for this suite. @ 11/23/24 12:17:09.692
• [11.184 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 11/23/24 12:17:09.703
  I1123 12:17:09.703050 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 12:17:09.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:17:09.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:17:09.73
  STEP: Creating service test in namespace statefulset-4054 @ 11/23/24 12:17:09.734
  STEP: Creating a new StatefulSet @ 11/23/24 12:17:09.74
  I1123 12:17:09.752802 20 wait.go:40] Found 0 stateful pods, waiting for 3
  I1123 12:17:19.755891 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:17:19.755928 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:17:19.755936 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:17:19.768444 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-4054 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:17:19.860353 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:17:19.860383 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:17:19.860392 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/23/24 12:17:29.872
  I1123 12:17:29.883225 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/23/24 12:17:29.883
  STEP: Updating Pods in reverse ordinal order @ 11/23/24 12:17:39.896
  I1123 12:17:39.900829 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-4054 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:17:39.990214 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:17:39.990251 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:17:39.990260 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:17:50.012557 20 wait.go:158] Waiting for StatefulSet statefulset-4054/ss2 to complete update
  I1123 12:17:50.012616 20 wait.go:165] Waiting for Pod statefulset-4054/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 11/23/24 12:18:00.017
  I1123 12:18:00.017219 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-4054 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:18:00.105311 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:18:00.105342 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:18:00.105368 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:18:10.127949 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 11/23/24 12:18:20.141
  I1123 12:18:20.146181 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-4054 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:18:20.228365 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:18:20.228397 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:18:20.228408 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:18:30.246900 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4054
  I1123 12:18:30.251438 20 rest.go:150] Scaling statefulset ss2 to 0
  I1123 12:18:40.270746 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 12:18:40.275428 20 rest.go:88] Deleting statefulset ss2
  I1123 12:18:40.291104 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4054" for this suite. @ 11/23/24 12:18:40.295
• [90.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 11/23/24 12:18:40.306
  I1123 12:18:40.306595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:18:40.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:40.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:40.331
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:18:40.334
  STEP: Saw pod success @ 11/23/24 12:18:44.362
  I1123 12:18:44.367066 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-d4beef54-4b08-4e00-abbe-dff06f80d6cd container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:18:44.385
  I1123 12:18:44.407277 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3603" for this suite. @ 11/23/24 12:18:44.411
• [4.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 11/23/24 12:18:44.418
  I1123 12:18:44.418764 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sysctl @ 11/23/24 12:18:44.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:44.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:44.442
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/23/24 12:18:44.444
  I1123 12:18:44.449101 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6353" for this suite. @ 11/23/24 12:18:44.454
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 11/23/24 12:18:44.462
  I1123 12:18:44.462860 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:18:44.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:44.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:44.486
  STEP: creating a Service @ 11/23/24 12:18:44.492
  STEP: watching for the Service to be added @ 11/23/24 12:18:44.513
  I1123 12:18:44.514597 20 service.go:3445] Found Service test-service-5nbfj in namespace services-8944 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30511}]
  I1123 12:18:44.514623 20 service.go:3452] Service test-service-5nbfj created
  STEP: Getting /status @ 11/23/24 12:18:44.514
  I1123 12:18:44.519384 20 service.go:3463] Service test-service-5nbfj has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/23/24 12:18:44.519
  STEP: watching for the Service to be patched @ 11/23/24 12:18:44.524
  I1123 12:18:44.525708 20 service.go:3486] observed Service test-service-5nbfj in namespace services-8944 with annotations: map[] & LoadBalancer: {[]}
  I1123 12:18:44.525749 20 service.go:3489] Found Service test-service-5nbfj in namespace services-8944 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0009b3af0 []}]}
  I1123 12:18:44.525758 20 service.go:3496] Service test-service-5nbfj has service status patched
  STEP: updating the ServiceStatus @ 11/23/24 12:18:44.525
  I1123 12:18:44.537132 20 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/23/24 12:18:44.537
  I1123 12:18:44.538352 20 service.go:3527] Observed Service test-service-5nbfj in namespace services-8944 with annotations: map[] & Conditions: []
  I1123 12:18:44.538372 20 service.go:3538] Observed Service test-service-5nbfj in namespace services-8944 with annotations: map[patchedstatus:true] & Conditions: []
  I1123 12:18:44.538394 20 service.go:3534] Found Service test-service-5nbfj in namespace services-8944 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1123 12:18:44.538405 20 service.go:3545] Service test-service-5nbfj has service status updated
  STEP: patching the service @ 11/23/24 12:18:44.538
  STEP: watching for the Service to be patched @ 11/23/24 12:18:44.546
  I1123 12:18:44.548395 20 service.go:3568] observed Service test-service-5nbfj in namespace services-8944 with labels: map[test-service-static:true]
  I1123 12:18:44.548446 20 service.go:3568] observed Service test-service-5nbfj in namespace services-8944 with labels: map[test-service-static:true]
  I1123 12:18:44.548459 20 service.go:3568] observed Service test-service-5nbfj in namespace services-8944 with labels: map[test-service-static:true]
  I1123 12:18:44.548483 20 service.go:3571] Found Service test-service-5nbfj in namespace services-8944 with labels: map[test-service:patched test-service-static:true]
  I1123 12:18:44.548491 20 service.go:3578] Service test-service-5nbfj patched
  STEP: deleting the service @ 11/23/24 12:18:44.548
  STEP: watching for the Service to be deleted @ 11/23/24 12:18:44.575
  I1123 12:18:44.577043 20 service.go:3602] Observed event: ADDED
  I1123 12:18:44.577062 20 service.go:3602] Observed event: MODIFIED
  I1123 12:18:44.577073 20 service.go:3602] Observed event: MODIFIED
  I1123 12:18:44.577105 20 service.go:3602] Observed event: MODIFIED
  I1123 12:18:44.577208 20 service.go:3598] Found Service test-service-5nbfj in namespace services-8944 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1123 12:18:44.577222 20 service.go:3607] Service test-service-5nbfj deleted
  I1123 12:18:44.577339 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8944" for this suite. @ 11/23/24 12:18:44.581
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 11/23/24 12:18:44.589
  I1123 12:18:44.589868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:18:44.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:44.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:44.608
  STEP: Creating a pod to test downward api env vars @ 11/23/24 12:18:44.61
  STEP: Saw pod success @ 11/23/24 12:18:46.63
  I1123 12:18:46.634777 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downward-api-d1e071a4-75b3-4b57-a988-0c81b0847f24 container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 12:18:46.643
  I1123 12:18:46.665897 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8940" for this suite. @ 11/23/24 12:18:46.67
• [2.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 11/23/24 12:18:46.678
  I1123 12:18:46.678571 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 12:18:46.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:46.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:46.703
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/23/24 12:18:46.706
  STEP: Saw pod success @ 11/23/24 12:18:48.725
  I1123 12:18:48.729571 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-ac0dcd43-d8a0-466b-ad1e-30c452963159 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:18:48.738
  I1123 12:18:48.759990 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9085" for this suite. @ 11/23/24 12:18:48.763
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 11/23/24 12:18:48.773
  I1123 12:18:48.773293 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename cronjob @ 11/23/24 12:18:48.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:48.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:48.796
  STEP: Creating a cronjob @ 11/23/24 12:18:48.798
  STEP: creating @ 11/23/24 12:18:48.798
  STEP: getting @ 11/23/24 12:18:48.803
  STEP: listing @ 11/23/24 12:18:48.807
  STEP: watching @ 11/23/24 12:18:48.811
  I1123 12:18:48.811767 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 11/23/24 12:18:48.812
  STEP: cluster-wide watching @ 11/23/24 12:18:48.815
  I1123 12:18:48.816008 20 cronjob.go:382] starting watch
  STEP: patching @ 11/23/24 12:18:48.816
  STEP: updating @ 11/23/24 12:18:48.823
  I1123 12:18:48.832608 20 cronjob.go:406] waiting for watch events with expected annotations
  I1123 12:18:48.832632 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 11/23/24 12:18:48.832
  STEP: updating /status @ 11/23/24 12:18:48.845
  STEP: get /status @ 11/23/24 12:18:48.853
  STEP: deleting @ 11/23/24 12:18:48.857
  STEP: deleting a collection @ 11/23/24 12:18:48.873
  I1123 12:18:48.888546 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9660" for this suite. @ 11/23/24 12:18:48.893
• [0.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/23/24 12:18:48.901
  I1123 12:18:48.901082 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename proxy @ 11/23/24 12:18:48.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:48.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:48.924
  I1123 12:18:48.927422 20 proxy.go:387] Creating pod...
  I1123 12:18:50.949627 20 proxy.go:411] Creating service...
  I1123 12:18:50.962618 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=DELETE
  I1123 12:18:50.968976 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1123 12:18:50.969006 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=OPTIONS
  I1123 12:18:50.972907 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1123 12:18:50.972934 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=PATCH
  I1123 12:18:50.978323 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1123 12:18:50.978378 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=POST
  I1123 12:18:50.983416 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1123 12:18:50.983443 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=PUT
  I1123 12:18:50.987514 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1123 12:18:50.987548 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=DELETE
  I1123 12:18:50.995868 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1123 12:18:50.995892 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1123 12:18:51.004666 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1123 12:18:51.004695 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=PATCH
  I1123 12:18:51.011230 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1123 12:18:51.011258 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=POST
  I1123 12:18:51.019149 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1123 12:18:51.019174 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=PUT
  I1123 12:18:51.026903 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1123 12:18:51.026928 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=GET
  I1123 12:18:51.030149 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1123 12:18:51.030184 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=GET
  I1123 12:18:51.036910 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1123 12:18:51.036946 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/pods/agnhost/proxy?method=HEAD
  I1123 12:18:51.040829 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1123 12:18:51.040844 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-476/services/e2e-proxy-test-service/proxy?method=HEAD
  I1123 12:18:51.047457 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1123 12:18:51.047571 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-476" for this suite. @ 11/23/24 12:18:51.051
• [2.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 11/23/24 12:18:51.059
  I1123 12:18:51.059743 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 12:18:51.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:51.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:51.081
  I1123 12:18:53.127334 20 delete.go:62] Deleting pod "var-expansion-7301839f-73a7-40ec-8f03-3f47cdaebf78" in namespace "var-expansion-6662"
  I1123 12:18:53.137037 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-7301839f-73a7-40ec-8f03-3f47cdaebf78" to be fully deleted
  I1123 12:18:55.146565 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6662" for this suite. @ 11/23/24 12:18:55.151
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 11/23/24 12:18:55.16
  I1123 12:18:55.160764 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pod-network-test @ 11/23/24 12:18:55.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:18:55.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:18:55.183
  STEP: Performing setup for networking test in namespace pod-network-test-3184 @ 11/23/24 12:18:55.185
  STEP: creating a selector @ 11/23/24 12:18:55.185
  STEP: Creating the service pods in kubernetes @ 11/23/24 12:18:55.185
  I1123 12:18:55.185850 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/23/24 12:19:07.282
  I1123 12:19:09.301851 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1123 12:19:09.301880 20 networking.go:42] Breadth first check of 192.168.120.79 on host 172.31.20.25...
  I1123 12:19:09.306797 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.80:9080/dial?request=hostname&protocol=http&host=192.168.120.79&port=8083&tries=1'] Namespace:pod-network-test-3184 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:19:09.306824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:19:09.307259 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:19:09.307302 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3184/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.80%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.120.79%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1123 12:19:09.355330 20 utils.go:356] Waiting for responses: map[]
  I1123 12:19:09.355350 20 utils.go:360] reached 192.168.120.79 after 0/1 tries
  I1123 12:19:09.355359 20 networking.go:42] Breadth first check of 192.168.125.47 on host 172.31.41.64...
  I1123 12:19:09.358887 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.80:9080/dial?request=hostname&protocol=http&host=192.168.125.47&port=8083&tries=1'] Namespace:pod-network-test-3184 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:19:09.358910 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:19:09.359282 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:19:09.359324 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3184/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.80%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.125.47%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1123 12:19:09.399772 20 utils.go:356] Waiting for responses: map[]
  I1123 12:19:09.399791 20 utils.go:360] reached 192.168.125.47 after 0/1 tries
  I1123 12:19:09.399802 20 networking.go:42] Breadth first check of 192.168.21.182 on host 172.31.83.143...
  I1123 12:19:09.404219 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.80:9080/dial?request=hostname&protocol=http&host=192.168.21.182&port=8083&tries=1'] Namespace:pod-network-test-3184 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:19:09.404234 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:19:09.404589 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:19:09.404624 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3184/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.80%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.21.182%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1123 12:19:09.444455 20 utils.go:356] Waiting for responses: map[]
  I1123 12:19:09.444476 20 utils.go:360] reached 192.168.21.182 after 0/1 tries
  I1123 12:19:09.444484 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1123 12:19:09.444600 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3184" for this suite. @ 11/23/24 12:19:09.448
• [14.296 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 11/23/24 12:19:09.457
  I1123 12:19:09.457263 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename namespaces @ 11/23/24 12:19:09.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:19:09.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:19:09.479
  STEP: Creating a test namespace @ 11/23/24 12:19:09.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:19:09.5
  STEP: Creating a pod in the namespace @ 11/23/24 12:19:09.502
  STEP: Waiting for the pod to have running status @ 11/23/24 12:19:09.515
  STEP: Deleting the namespace @ 11/23/24 12:19:11.525
  STEP: Waiting for the namespace to be removed. @ 11/23/24 12:19:11.533
  STEP: Recreating the namespace @ 11/23/24 12:19:22.538
  STEP: Verifying there are no pods in the namespace @ 11/23/24 12:19:22.56
  I1123 12:19:22.564067 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5852" for this suite. @ 11/23/24 12:19:22.568
  STEP: Destroying namespace "nsdeletetest-7874" for this suite. @ 11/23/24 12:19:22.578
  I1123 12:19:22.582877 20 framework.go:370] Namespace nsdeletetest-7874 was already deleted
  STEP: Destroying namespace "nsdeletetest-670" for this suite. @ 11/23/24 12:19:22.582
• [13.135 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 11/23/24 12:19:22.592
  I1123 12:19:22.592329 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/23/24 12:19:22.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:19:22.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:19:22.616
  I1123 12:19:22.623905 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:19:25.716320 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3451" for this suite. @ 11/23/24 12:19:25.721
• [3.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 11/23/24 12:19:25.729
  I1123 12:19:25.729991 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 12:19:25.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:19:25.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:19:25.753
  STEP: creating the pod @ 11/23/24 12:19:25.756
  STEP: waiting for pod running @ 11/23/24 12:19:25.764
  STEP: creating a file in subpath @ 11/23/24 12:19:27.775
  I1123 12:19:27.778528 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1879 PodName:var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:19:27.778553 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:19:27.778993 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:19:27.779034 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1879/pods/var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/23/24 12:19:27.814
  I1123 12:19:27.820722 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1879 PodName:var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 12:19:27.820745 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:19:27.821097 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 12:19:27.821133 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1879/pods/var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/23/24 12:19:27.854
  I1123 12:19:28.368474 20 pod_client.go:173] Successfully updated pod "var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2"
  STEP: waiting for annotated pod running @ 11/23/24 12:19:28.368
  STEP: deleting the pod gracefully @ 11/23/24 12:19:28.372
  I1123 12:19:28.372875 20 delete.go:62] Deleting pod "var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2" in namespace "var-expansion-1879"
  I1123 12:19:28.382709 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-f7e27519-f4ab-41e3-990c-2cbcdf4849a2" to be fully deleted
  I1123 12:20:00.472257 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1879" for this suite. @ 11/23/24 12:20:00.477
• [34.756 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 11/23/24 12:20:00.486
  I1123 12:20:00.486161 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 12:20:00.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:20:00.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:20:00.509
  STEP: creating a Deployment @ 11/23/24 12:20:00.518
  I1123 12:20:00.518078 20 deployment.go:507] Creating simple deployment test-deployment-d5d6z
  I1123 12:20:00.533325 20 deployment.go:222] deployment "test-deployment-d5d6z" doesn't have the required revision set
  STEP: Getting /status @ 11/23/24 12:20:02.55
  I1123 12:20:02.555531 20 deployment.go:532] Deployment test-deployment-d5d6z has Conditions: [{Available True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d5d6z-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/23/24 12:20:02.555
  I1123 12:20:02.568268 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 20, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 20, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 20, 0, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-d5d6z-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/23/24 12:20:02.568
  I1123 12:20:02.569750 20 deployment.go:579] Observed &Deployment event: ADDED
  I1123 12:20:02.569775 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d5d6z-f4dbbbf74"}
  I1123 12:20:02.569848 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1123 12:20:02.569868 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d5d6z-f4dbbbf74"}
  I1123 12:20:02.569877 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1123 12:20:02.569993 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1123 12:20:02.570021 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1123 12:20:02.570032 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-d5d6z-f4dbbbf74" is progressing.}
  I1123 12:20:02.570120 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1123 12:20:02.570143 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1123 12:20:02.570152 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d5d6z-f4dbbbf74" has successfully progressed.}
  I1123 12:20:02.570231 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1123 12:20:02.570246 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1123 12:20:02.570257 20 deployment.go:575] Observed Deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d5d6z-f4dbbbf74" has successfully progressed.}
  I1123 12:20:02.570268 20 deployment.go:572] Found Deployment test-deployment-d5d6z in namespace deployment-4072 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1123 12:20:02.570280 20 deployment.go:583] Deployment test-deployment-d5d6z has an updated status
  STEP: patching the Statefulset Status @ 11/23/24 12:20:02.57
  I1123 12:20:02.570324 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1123 12:20:02.579036 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/23/24 12:20:02.579
  I1123 12:20:02.580336 20 deployment.go:616] Observed &Deployment event: ADDED
  I1123 12:20:02.580357 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d5d6z-f4dbbbf74"}
  I1123 12:20:02.580430 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1123 12:20:02.580471 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-d5d6z-f4dbbbf74"}
  I1123 12:20:02.580484 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1123 12:20:02.580605 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1123 12:20:02.580681 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1123 12:20:02.580698 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:00 +0000 UTC 2024-11-23 12:20:00 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-d5d6z-f4dbbbf74" is progressing.}
  I1123 12:20:02.580776 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1123 12:20:02.580792 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1123 12:20:02.580809 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d5d6z-f4dbbbf74" has successfully progressed.}
  I1123 12:20:02.580877 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1123 12:20:02.580893 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1123 12:20:02.580902 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-23 12:20:01 +0000 UTC 2024-11-23 12:20:00 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-d5d6z-f4dbbbf74" has successfully progressed.}
  I1123 12:20:02.580911 20 deployment.go:612] Observed deployment test-deployment-d5d6z in namespace deployment-4072 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1123 12:20:02.581031 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1123 12:20:02.581059 20 deployment.go:609] Found deployment test-deployment-d5d6z in namespace deployment-4072 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1123 12:20:02.581068 20 deployment.go:620] Deployment test-deployment-d5d6z has a patched status
  I1123 12:20:02.587052 20 deployment.go:633] Deployment "test-deployment-d5d6z":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-d5d6z",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2917d3d6-8d6c-4fbc-a44d-3b35efc2ee14",
      ResourceVersion: (string) (len=5) "11143",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867961200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961202,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-d5d6z-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 12:20:02.592094 20 deployment.go:39] New ReplicaSet "test-deployment-d5d6z-f4dbbbf74" of Deployment "test-deployment-d5d6z":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-d5d6z-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f90ba5dc-cdd7-4dfe-8548-3ac640b96376",
      ResourceVersion: (string) (len=5) "11133",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867961200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-d5d6z",
          UID: (types.UID) (len=36) "2917d3d6-8d6c-4fbc-a44d-3b35efc2ee14",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 39 31  |k:{\"uid\":\"291|
              00000120  37 64 33 64 36 2d 38 64  36 63 2d 34 66 62 63 2d  |7d3d6-8d6c-4fbc-|
              00000130  61 34 34 64 2d 33 62 33  35 65 66 63 32 65 65 31  |a44d-3b35efc2ee1|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 12:20:02.599828 20 deployment.go:67] Pod "test-deployment-d5d6z-f4dbbbf74-c9pkh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-d5d6z-f4dbbbf74-c9pkh",
      GenerateName: (string) (len=32) "test-deployment-d5d6z-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-4072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fea413ef-e61d-416b-a4c9-7ce2ef4992eb",
      ResourceVersion: (string) (len=5) "11132",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867961200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-d5d6z-f4dbbbf74",
          UID: (types.UID) (len=36) "f90ba5dc-cdd7-4dfe-8548-3ac640b96376",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 39 30 62 61 35 64  63 2d 63 64 64 37 2d 34  |"f90ba5dc-cdd7-4|
              000000a0  64 66 65 2d 38 35 34 38  2d 33 61 63 36 34 30 62  |dfe-8548-3ac640b|
              000000b0  39 36 33 37 36 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |96376\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 38 33 5c 22 7d 22  |2.168.120.83\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srgg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srgg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961201,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867961200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867961200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867961201,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cac31c53d4962591976b3052db408562b1543e2f61417457acb4edc872c15cb7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-srgg7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 12:20:02.601801 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4072" for this suite. @ 11/23/24 12:20:02.606
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 11/23/24 12:20:02.615
  I1123 12:20:02.615115 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:20:02.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:20:02.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:20:02.637
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:20:02.64
  STEP: Saw pod success @ 11/23/24 12:20:04.662
  I1123 12:20:04.667100 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downwardapi-volume-e0fab84c-c9f4-4ba6-a7a3-83fee3eecc23 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:20:04.683
  I1123 12:20:04.703445 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8934" for this suite. @ 11/23/24 12:20:04.707
• [2.102 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/23/24 12:20:04.717
  I1123 12:20:04.717066 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:20:04.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:20:04.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:20:04.742
  STEP: Creating projection with secret that has name projected-secret-test-map-ac0a83b0-a6db-42ac-bfbc-9d37ac47dd51 @ 11/23/24 12:20:04.744
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:20:04.751
  STEP: Saw pod success @ 11/23/24 12:20:06.773
  I1123 12:20:06.777999 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-projected-secrets-e8ab640f-a30c-4ceb-a5d5-7157fd5f4215 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:20:06.786
  I1123 12:20:06.803576 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6953" for this suite. @ 11/23/24 12:20:06.807
• [2.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 11/23/24 12:20:06.815
  I1123 12:20:06.815818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 12:20:06.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:20:06.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:20:06.839
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/23/24 12:20:06.842
  I1123 12:20:06.843249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:20:08.275875 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:20:13.166945 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6019" for this suite. @ 11/23/24 12:20:13.174
• [6.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 11/23/24 12:20:13.184
  I1123 12:20:13.184589 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:20:13.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:20:13.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:20:13.21
  STEP: creating a replication controller @ 11/23/24 12:20:13.212
  I1123 12:20:13.212530 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 create -f -'
  I1123 12:20:13.305243 20 builder.go:146] stderr: ""
  I1123 12:20:13.305265 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/23/24 12:20:13.305
  I1123 12:20:13.305396 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 12:20:13.352168 20 builder.go:146] stderr: ""
  I1123 12:20:13.352189 20 builder.go:147] stdout: "update-demo-nautilus-bjfdl update-demo-nautilus-lpvtl "
  I1123 12:20:13.352221 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:13.395686 20 builder.go:146] stderr: ""
  I1123 12:20:13.395708 20 builder.go:147] stdout: ""
  I1123 12:20:13.395717 20 kubectl.go:2502] update-demo-nautilus-bjfdl is created but not running
  I1123 12:20:18.396082 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 12:20:18.455182 20 builder.go:146] stderr: ""
  I1123 12:20:18.455211 20 builder.go:147] stdout: "update-demo-nautilus-bjfdl update-demo-nautilus-lpvtl "
  I1123 12:20:18.455250 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:18.498643 20 builder.go:146] stderr: ""
  I1123 12:20:18.498668 20 builder.go:147] stdout: "true"
  I1123 12:20:18.498710 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 12:20:18.540776 20 builder.go:146] stderr: ""
  I1123 12:20:18.540806 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 12:20:18.540816 20 kubectl.go:2393] validating pod update-demo-nautilus-bjfdl
  I1123 12:20:18.547924 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 12:20:18.547990 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 12:20:18.548004 20 kubectl.go:2520] update-demo-nautilus-bjfdl is verified up and running
  I1123 12:20:18.548034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-lpvtl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:18.591735 20 builder.go:146] stderr: ""
  I1123 12:20:18.591757 20 builder.go:147] stdout: "true"
  I1123 12:20:18.591788 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-lpvtl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 12:20:18.634174 20 builder.go:146] stderr: ""
  I1123 12:20:18.634199 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 12:20:18.634212 20 kubectl.go:2393] validating pod update-demo-nautilus-lpvtl
  I1123 12:20:18.640137 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 12:20:18.640172 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 12:20:18.640181 20 kubectl.go:2520] update-demo-nautilus-lpvtl is verified up and running
  STEP: scaling down the replication controller @ 11/23/24 12:20:18.64
  I1123 12:20:18.640894 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1123 12:20:18.640923 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I1123 12:20:19.704246 20 builder.go:146] stderr: ""
  I1123 12:20:19.704282 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/23/24 12:20:19.704
  I1123 12:20:19.704796 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 12:20:19.767581 20 builder.go:146] stderr: ""
  I1123 12:20:19.767611 20 builder.go:147] stdout: "update-demo-nautilus-bjfdl update-demo-nautilus-lpvtl "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 11/23/24 12:20:19.767
  I1123 12:20:24.767842 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 12:20:24.815015 20 builder.go:146] stderr: ""
  I1123 12:20:24.815051 20 builder.go:147] stdout: "update-demo-nautilus-bjfdl "
  I1123 12:20:24.815087 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:24.859505 20 builder.go:146] stderr: ""
  I1123 12:20:24.859529 20 builder.go:147] stdout: "true"
  I1123 12:20:24.859570 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 12:20:24.904356 20 builder.go:146] stderr: ""
  I1123 12:20:24.904380 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 12:20:24.904390 20 kubectl.go:2393] validating pod update-demo-nautilus-bjfdl
  I1123 12:20:24.909796 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 12:20:24.909836 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 12:20:24.909849 20 kubectl.go:2520] update-demo-nautilus-bjfdl is verified up and running
  STEP: scaling up the replication controller @ 11/23/24 12:20:24.909
  I1123 12:20:24.910490 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1123 12:20:24.910522 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I1123 12:20:25.985550 20 builder.go:146] stderr: ""
  I1123 12:20:25.985585 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/23/24 12:20:25.985
  I1123 12:20:25.985672 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 12:20:26.035490 20 builder.go:146] stderr: ""
  I1123 12:20:26.035524 20 builder.go:147] stdout: "update-demo-nautilus-6n5hv update-demo-nautilus-bjfdl "
  I1123 12:20:26.035610 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-6n5hv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:26.079944 20 builder.go:146] stderr: ""
  I1123 12:20:26.079994 20 builder.go:147] stdout: ""
  I1123 12:20:26.080005 20 kubectl.go:2502] update-demo-nautilus-6n5hv is created but not running
  I1123 12:20:31.084041 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 12:20:31.131501 20 builder.go:146] stderr: ""
  I1123 12:20:31.131529 20 builder.go:147] stdout: "update-demo-nautilus-6n5hv update-demo-nautilus-bjfdl "
  I1123 12:20:31.131562 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-6n5hv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:31.175779 20 builder.go:146] stderr: ""
  I1123 12:20:31.175801 20 builder.go:147] stdout: "true"
  I1123 12:20:31.175835 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-6n5hv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 12:20:31.219057 20 builder.go:146] stderr: ""
  I1123 12:20:31.219081 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 12:20:31.219092 20 kubectl.go:2393] validating pod update-demo-nautilus-6n5hv
  I1123 12:20:31.226339 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 12:20:31.226381 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 12:20:31.226394 20 kubectl.go:2520] update-demo-nautilus-6n5hv is verified up and running
  I1123 12:20:31.226422 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 12:20:31.268007 20 builder.go:146] stderr: ""
  I1123 12:20:31.268026 20 builder.go:147] stdout: "true"
  I1123 12:20:31.268049 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods update-demo-nautilus-bjfdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 12:20:31.310722 20 builder.go:146] stderr: ""
  I1123 12:20:31.310743 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 12:20:31.310753 20 kubectl.go:2393] validating pod update-demo-nautilus-bjfdl
  I1123 12:20:31.316427 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 12:20:31.316469 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 12:20:31.316481 20 kubectl.go:2520] update-demo-nautilus-bjfdl is verified up and running
  STEP: using delete to clean up resources @ 11/23/24 12:20:31.316
  I1123 12:20:31.316563 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 delete --grace-period=0 --force -f -'
  I1123 12:20:31.365829 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 12:20:31.365852 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1123 12:20:31.365885 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get rc,svc -l name=update-demo --no-headers'
  I1123 12:20:31.427971 20 builder.go:146] stderr: "No resources found in kubectl-2306 namespace.\n"
  I1123 12:20:31.427999 20 builder.go:147] stdout: ""
  I1123 12:20:31.428034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2306 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1123 12:20:31.493891 20 builder.go:146] stderr: ""
  I1123 12:20:31.493947 20 builder.go:147] stdout: ""
  I1123 12:20:31.494244 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2306" for this suite. @ 11/23/24 12:20:31.499
• [18.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/23/24 12:20:31.512
  I1123 12:20:31.512994 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename cronjob @ 11/23/24 12:20:31.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:20:31.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:20:31.533
  STEP: Creating a suspended cronjob @ 11/23/24 12:20:31.535
  STEP: Ensuring no jobs are scheduled @ 11/23/24 12:20:31.543
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/23/24 12:25:31.543
  STEP: Removing cronjob @ 11/23/24 12:25:31.549
  I1123 12:25:31.557242 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9963" for this suite. @ 11/23/24 12:25:31.561
• [300.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 11/23/24 12:25:31.57
  I1123 12:25:31.570256 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption @ 11/23/24 12:25:31.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:25:31.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:25:31.59
  I1123 12:25:31.610524 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1123 12:26:31.617164 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/23/24 12:26:31.621
  I1123 12:26:31.645216 20 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1123 12:26:31.657209 20 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1123 12:26:31.678103 20 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1123 12:26:31.690846 20 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1123 12:26:31.820422 20 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1123 12:26:31.828866 20 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/23/24 12:26:31.828
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/23/24 12:26:33.866
  I1123 12:26:38.011045 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9707" for this suite. @ 11/23/24 12:26:38.016
• [66.455 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 11/23/24 12:26:38.025
  I1123 12:26:38.025160 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replicaset @ 11/23/24 12:26:38.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:38.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:38.047
  I1123 12:26:38.049662 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-3f064511-f5ea-49c0-b672-70a34d66e507
  I1123 12:26:38.059014 20 resource.go:87] Pod name my-hostname-basic-3f064511-f5ea-49c0-b672-70a34d66e507: Found 0 pods out of 1
  I1123 12:26:43.064216 20 resource.go:87] Pod name my-hostname-basic-3f064511-f5ea-49c0-b672-70a34d66e507: Found 1 pods out of 1
  I1123 12:26:43.064249 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-3f064511-f5ea-49c0-b672-70a34d66e507" is running
  I1123 12:26:43.067802 20 replica_set.go:220] Pod "my-hostname-basic-3f064511-f5ea-49c0-b672-70a34d66e507-4852p" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:26:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:26:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:26:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:26:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:26:38 +0000 UTC Reason: Message:}])
  I1123 12:26:43.067827 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/23/24 12:26:43.067
  I1123 12:26:43.085709 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6194" for this suite. @ 11/23/24 12:26:43.09
• [5.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 11/23/24 12:26:43.098
  I1123 12:26:43.098612 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename security-context-test @ 11/23/24 12:26:43.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:43.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:43.12
  I1123 12:26:47.152212 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9813" for this suite. @ 11/23/24 12:26:47.156
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/23/24 12:26:47.165
  I1123 12:26:47.165357 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename containers @ 11/23/24 12:26:47.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:47.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:47.185
  STEP: Creating a pod to test override all @ 11/23/24 12:26:47.188
  STEP: Saw pod success @ 11/23/24 12:26:51.215
  I1123 12:26:51.220105 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod client-containers-025e4791-c74d-4012-80dc-ea7c03171a1b container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:26:51.24
  I1123 12:26:51.259144 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1227" for this suite. @ 11/23/24 12:26:51.264
• [4.108 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 11/23/24 12:26:51.273
  I1123 12:26:51.273536 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:26:51.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:51.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:51.293
  STEP: Setting up server cert @ 11/23/24 12:26:51.317
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:26:51.54
  STEP: Deploying the webhook pod @ 11/23/24 12:26:51.545
  STEP: Wait for the deployment to be ready @ 11/23/24 12:26:51.557
  I1123 12:26:51.567505 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:26:53.583
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:26:53.597
  I1123 12:26:54.597488 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/23/24 12:26:54.686
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/23/24 12:26:54.716
  STEP: Deleting the collection of validation webhooks @ 11/23/24 12:26:54.743
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/23/24 12:26:54.82
  I1123 12:26:54.882693 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4300" for this suite. @ 11/23/24 12:26:54.886
  STEP: Destroying namespace "webhook-markers-7563" for this suite. @ 11/23/24 12:26:54.894
• [3.630 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 11/23/24 12:26:54.903
  I1123 12:26:54.903949 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename volumeattachment @ 11/23/24 12:26:54.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:54.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:54.92
  STEP: Create VolumeAttachment "va-e2e-v8qz9" on node "ip-172-31-83-143" @ 11/23/24 12:26:54.928
  STEP: Get VolumeAttachment "va-e2e-v8qz9" on node "ip-172-31-83-143" @ 11/23/24 12:26:54.935
  STEP: Patch VolumeAttachment "va-e2e-v8qz9" on node "ip-172-31-83-143" @ 11/23/24 12:26:54.94
  STEP: List VolumeAttachments with "va-e2e-v8qz9=patched" label @ 11/23/24 12:26:54.945
  STEP: Delete VolumeAttachment "va-e2e-v8qz9" on node "ip-172-31-83-143" @ 11/23/24 12:26:54.949
  STEP: Confirm deletion of VolumeAttachment "va-e2e-v8qz9" on node "ip-172-31-83-143" @ 11/23/24 12:26:54.956
  STEP: Create VolumeAttachment "va-e2e-tx7pk" on node "ip-172-31-20-25" @ 11/23/24 12:26:54.965
  STEP: Update the VolumeAttachment "va-e2e-tx7pk" on node "ip-172-31-20-25" with label "va-e2e=updated" @ 11/23/24 12:26:54.97
  STEP: Create VolumeAttachment "va-e2e-wswmw" on node "ip-172-31-83-143" @ 11/23/24 12:26:54.985
  STEP: Update the VolumeAttachment "va-e2e-wswmw" on node "ip-172-31-83-143" with label "va-e2e=updated" @ 11/23/24 12:26:54.991
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/23/24 12:26:55.004
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/23/24 12:26:55.017
  I1123 12:26:55.022120 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7543" for this suite. @ 11/23/24 12:26:55.027
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 11/23/24 12:26:55.036
  I1123 12:26:55.036738 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:26:55.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:55.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:55.057
  STEP: Setting up server cert @ 11/23/24 12:26:55.085
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:26:55.369
  STEP: Deploying the webhook pod @ 11/23/24 12:26:55.376
  STEP: Wait for the deployment to be ready @ 11/23/24 12:26:55.392
  I1123 12:26:55.402116 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:26:57.416
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:26:57.427
  I1123 12:26:58.427895 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/23/24 12:26:58.438
  I1123 12:26:58.488754 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9217" for this suite. @ 11/23/24 12:26:58.493
  STEP: Destroying namespace "webhook-markers-9899" for this suite. @ 11/23/24 12:26:58.504
• [3.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 11/23/24 12:26:58.513
  I1123 12:26:58.513739 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename podtemplate @ 11/23/24 12:26:58.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:58.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:58.532
  I1123 12:26:58.575271 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6447" for this suite. @ 11/23/24 12:26:58.579
• [0.073 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 11/23/24 12:26:58.586
  I1123 12:26:58.586658 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 12:26:58.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:58.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:58.605
  STEP: apply creating a deployment @ 11/23/24 12:26:58.607
  I1123 12:26:58.623989 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1546" for this suite. @ 11/23/24 12:26:58.628
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 11/23/24 12:26:58.637
  I1123 12:26:58.637748 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:26:58.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:26:58.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:26:58.657
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6786 @ 11/23/24 12:26:58.66
  STEP: changing the ExternalName service to type=NodePort @ 11/23/24 12:26:58.667
  STEP: creating replication controller externalname-service in namespace services-6786 @ 11/23/24 12:26:58.689
  I1123 12:26:58.696726      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6786, replica count: 2
  I1123 12:27:01.747636      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 12:27:01.747704 20 resource.go:361] Creating new exec pod
  I1123 12:27:04.771166 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-6786 exec execpodlp2kf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1123 12:27:04.859423 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1123 12:27:04.859463 20 builder.go:147] stdout: "externalname-service-82hhj"
  I1123 12:27:04.859552 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-6786 exec execpodlp2kf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  I1123 12:27:04.940490 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n"
  I1123 12:27:04.940539 20 builder.go:147] stdout: "externalname-service-82hhj"
  I1123 12:27:04.940628 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-6786 exec execpodlp2kf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.64 30937'
  I1123 12:27:05.026320 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 172.31.41.64 30937\nConnection to 172.31.41.64 30937 port [tcp/*] succeeded!\n"
  I1123 12:27:05.026358 20 builder.go:147] stdout: "externalname-service-82hhj"
  I1123 12:27:05.026505 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-6786 exec execpodlp2kf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.25 30937'
  I1123 12:27:05.105411 20 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.20.25 30937\necho hostName\nConnection to 172.31.20.25 30937 port [tcp/*] succeeded!\n"
  I1123 12:27:05.105447 20 builder.go:147] stdout: "externalname-service-82hhj"
  I1123 12:27:05.105527 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1123 12:27:05.134481 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6786" for this suite. @ 11/23/24 12:27:05.14
• [6.513 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 11/23/24 12:27:05.15
  I1123 12:27:05.150746 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:27:05.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:27:05.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:27:05.17
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f0e9bc6c-3f98-41ee-93b4-5a5c91c6d8d7 @ 11/23/24 12:27:05.177
  STEP: Creating the pod @ 11/23/24 12:27:05.182
  STEP: Updating configmap projected-configmap-test-upd-f0e9bc6c-3f98-41ee-93b4-5a5c91c6d8d7 @ 11/23/24 12:27:07.226
  STEP: waiting to observe update in volume @ 11/23/24 12:27:07.232
  I1123 12:28:37.698863 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6769" for this suite. @ 11/23/24 12:28:37.704
• [92.563 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 11/23/24 12:28:37.713
  I1123 12:28:37.713430 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:28:37.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:28:37.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:28:37.734
  STEP: Creating configMap with name cm-test-opt-del-d3e39bc4-6a69-4077-a064-35233ef5917f @ 11/23/24 12:28:37.741
  STEP: Creating configMap with name cm-test-opt-upd-0b090d18-3373-4cbc-bdbb-ad199072a332 @ 11/23/24 12:28:37.751
  STEP: Creating the pod @ 11/23/24 12:28:37.756
  STEP: Deleting configmap cm-test-opt-del-d3e39bc4-6a69-4077-a064-35233ef5917f @ 11/23/24 12:28:39.815
  STEP: Updating configmap cm-test-opt-upd-0b090d18-3373-4cbc-bdbb-ad199072a332 @ 11/23/24 12:28:39.824
  STEP: Creating configMap with name cm-test-opt-create-ccc02ca2-7d5c-4aa5-a64d-dbb8c6f44c78 @ 11/23/24 12:28:39.829
  STEP: waiting to observe update in volume @ 11/23/24 12:28:39.835
  I1123 12:28:43.880414 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5819" for this suite. @ 11/23/24 12:28:43.885
• [6.181 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/23/24 12:28:43.894
  I1123 12:28:43.894399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubelet-test @ 11/23/24 12:28:43.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:28:43.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:28:43.916
  I1123 12:28:43.948143 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3001" for this suite. @ 11/23/24 12:28:43.951
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 11/23/24 12:28:43.959
  I1123 12:28:43.959133 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:28:43.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:28:43.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:28:43.975
  STEP: Starting the proxy @ 11/23/24 12:28:43.977
  I1123 12:28:43.977741 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-6589 proxy --unix-socket=/tmp/kubectl-proxy-unix349099069/test'
  STEP: retrieving proxy /api/ output @ 11/23/24 12:28:44.01
  I1123 12:28:44.011450 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6589" for this suite. @ 11/23/24 12:28:44.016
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/23/24 12:28:44.028
  I1123 12:28:44.028102 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/23/24 12:28:44.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:28:44.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:28:44.047
  STEP: mirroring a new custom Endpoint @ 11/23/24 12:28:44.062
  I1123 12:28:44.075391 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 11/23/24 12:28:46.081
  I1123 12:28:46.094430 20 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 11/23/24 12:28:48.101
  I1123 12:28:48.114034 20 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1123 12:28:50.119548 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6247" for this suite. @ 11/23/24 12:28:50.124
• [6.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 11/23/24 12:28:50.133
  I1123 12:28:50.133937 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 12:28:50.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:28:50.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:28:50.155
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/23/24 12:28:50.158
  I1123 12:28:50.158457 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:28:51.384700 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:28:56.308145 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1435" for this suite. @ 11/23/24 12:28:56.316
• [6.191 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 11/23/24 12:28:56.324
  I1123 12:28:56.324785 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:28:56.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:28:56.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:28:56.344
  STEP: Creating a pod to test downward api env vars @ 11/23/24 12:28:56.347
  STEP: Saw pod success @ 11/23/24 12:29:00.379
  I1123 12:29:00.384112 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downward-api-e904d1ba-ebb3-4c51-bfa9-56ec263cfd66 container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 12:29:00.394
  I1123 12:29:00.415340 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1001" for this suite. @ 11/23/24 12:29:00.42
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 11/23/24 12:29:00.428
  I1123 12:29:00.428809 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:29:00.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:29:00.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:29:00.449
  STEP: creating service multiprotocol-test in namespace services-2205 @ 11/23/24 12:29:00.452
  STEP: creating pod pod1 in namespace services-2205 @ 11/23/24 12:29:00.463
  STEP: Creating pod pod1 in namespace services-2205 @ 11/23/24 12:29:00.463
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2205 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 11/23/24 12:29:02.497
  I1123 12:29:02.512229 20 service.go:4392] successfully validated that service multiprotocol-test in namespace services-2205 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 11/23/24 12:29:02.512
  I1123 12:29:02.512281 20 resource.go:361] Creating new exec pod
  I1123 12:29:04.528289 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80'
  I1123 12:29:04.612168 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.106 80\nConnection to 10.152.183.106 80 port [tcp/http] succeeded!\n"
  I1123 12:29:04.612206 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:29:04.612274 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.106 80'
  I1123 12:29:08.698945 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.106 80\nConnection to 10.152.183.106 80 port [udp/*] succeeded!\n"
  I1123 12:29:08.699004 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 11/23/24 12:29:08.699
  I1123 12:29:08.725779 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80'
  I1123 12:29:08.820850 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.106 80\nConnection to 10.152.183.106 80 port [tcp/http] succeeded!\n"
  I1123 12:29:08.820881 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:29:08.821106 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.106 80'
  I1123 12:29:12.915593 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.106 80\nConnection to 10.152.183.106 80 port [udp/*] succeeded!\n"
  I1123 12:29:12.915640 20 builder.go:147] stdout: ""
  I1123 12:29:12.915699 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.106 80'
  I1123 12:29:17.045016 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.106 80\nConnection to 10.152.183.106 80 port [udp/*] succeeded!\n"
  I1123 12:29:17.045059 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 11/23/24 12:29:17.045
  I1123 12:29:17.058235 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.106 80'
  I1123 12:29:21.153034 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.106 80\nConnection to 10.152.183.106 80 port [udp/*] succeeded!\n"
  I1123 12:29:21.153078 20 builder.go:147] stdout: "pod1"
  I1123 12:29:21.153170 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80'
  I1123 12:29:23.236053 20 builder.go:135] rc: 1
  I1123 12:29:23.236123 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.106 80
  nc: connect to 10.152.183.106 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1123 12:29:23.236185 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80'
  I1123 12:29:25.320658 20 builder.go:135] rc: 1
  I1123 12:29:25.320716 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.106 80
  nc: connect to 10.152.183.106 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1123 12:29:25.320780 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80'
  I1123 12:29:27.405497 20 builder.go:135] rc: 1
  I1123 12:29:27.405559 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2205 exec execpodsfpcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.106 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.106 80
  nc: connect to 10.152.183.106 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1123 12:29:27.405747 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2205" for this suite. @ 11/23/24 12:29:27.41
• [26.989 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 11/23/24 12:29:27.418
  I1123 12:29:27.418472 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 12:29:27.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:29:27.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:29:27.44
  STEP: create the rc @ 11/23/24 12:29:27.445
  W1123 12:29:27.452232      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/23/24 12:29:33.457
  STEP: wait for the rc to be deleted @ 11/23/24 12:29:33.467
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/23/24 12:29:38.472
  STEP: Gathering metrics @ 11/23/24 12:30:08.481
  W1123 12:30:08.487952      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1123 12:30:08.488004 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1123 12:30:08.488085 20 delete.go:95] Deleting pod "simpletest.rc-2gmbn" in namespace "gc-7691"
  I1123 12:30:08.507553 20 delete.go:95] Deleting pod "simpletest.rc-422cq" in namespace "gc-7691"
  I1123 12:30:08.528904 20 delete.go:95] Deleting pod "simpletest.rc-47kn4" in namespace "gc-7691"
  I1123 12:30:08.540926 20 delete.go:95] Deleting pod "simpletest.rc-4gv8w" in namespace "gc-7691"
  I1123 12:30:08.555666 20 delete.go:95] Deleting pod "simpletest.rc-4j2tz" in namespace "gc-7691"
  I1123 12:30:08.573020 20 delete.go:95] Deleting pod "simpletest.rc-4mp6p" in namespace "gc-7691"
  I1123 12:30:08.591403 20 delete.go:95] Deleting pod "simpletest.rc-4qz89" in namespace "gc-7691"
  I1123 12:30:08.606225 20 delete.go:95] Deleting pod "simpletest.rc-5nzmv" in namespace "gc-7691"
  I1123 12:30:08.618409 20 delete.go:95] Deleting pod "simpletest.rc-5sn9j" in namespace "gc-7691"
  I1123 12:30:08.655700 20 delete.go:95] Deleting pod "simpletest.rc-5x94d" in namespace "gc-7691"
  I1123 12:30:08.675317 20 delete.go:95] Deleting pod "simpletest.rc-67ggj" in namespace "gc-7691"
  I1123 12:30:08.691472 20 delete.go:95] Deleting pod "simpletest.rc-6k7wh" in namespace "gc-7691"
  I1123 12:30:08.707702 20 delete.go:95] Deleting pod "simpletest.rc-6ldbq" in namespace "gc-7691"
  I1123 12:30:08.728580 20 delete.go:95] Deleting pod "simpletest.rc-7592f" in namespace "gc-7691"
  I1123 12:30:08.744421 20 delete.go:95] Deleting pod "simpletest.rc-79n72" in namespace "gc-7691"
  I1123 12:30:08.758206 20 delete.go:95] Deleting pod "simpletest.rc-8dzz9" in namespace "gc-7691"
  I1123 12:30:08.774548 20 delete.go:95] Deleting pod "simpletest.rc-8f65z" in namespace "gc-7691"
  I1123 12:30:08.791173 20 delete.go:95] Deleting pod "simpletest.rc-8fwwj" in namespace "gc-7691"
  I1123 12:30:08.807139 20 delete.go:95] Deleting pod "simpletest.rc-8jc2t" in namespace "gc-7691"
  I1123 12:30:08.830782 20 delete.go:95] Deleting pod "simpletest.rc-94qj4" in namespace "gc-7691"
  I1123 12:30:08.847647 20 delete.go:95] Deleting pod "simpletest.rc-9dxgk" in namespace "gc-7691"
  I1123 12:30:08.858943 20 delete.go:95] Deleting pod "simpletest.rc-9fkxb" in namespace "gc-7691"
  I1123 12:30:08.881903 20 delete.go:95] Deleting pod "simpletest.rc-9fss7" in namespace "gc-7691"
  I1123 12:30:08.897166 20 delete.go:95] Deleting pod "simpletest.rc-9vwsn" in namespace "gc-7691"
  I1123 12:30:08.914022 20 delete.go:95] Deleting pod "simpletest.rc-bdpns" in namespace "gc-7691"
  I1123 12:30:08.943821 20 delete.go:95] Deleting pod "simpletest.rc-bswk9" in namespace "gc-7691"
  I1123 12:30:08.978087 20 delete.go:95] Deleting pod "simpletest.rc-bvzzl" in namespace "gc-7691"
  I1123 12:30:09.000837 20 delete.go:95] Deleting pod "simpletest.rc-c8cgx" in namespace "gc-7691"
  I1123 12:30:09.024579 20 delete.go:95] Deleting pod "simpletest.rc-c8jlj" in namespace "gc-7691"
  I1123 12:30:09.052545 20 delete.go:95] Deleting pod "simpletest.rc-csffn" in namespace "gc-7691"
  I1123 12:30:09.073410 20 delete.go:95] Deleting pod "simpletest.rc-d6hkj" in namespace "gc-7691"
  I1123 12:30:09.090116 20 delete.go:95] Deleting pod "simpletest.rc-dfnth" in namespace "gc-7691"
  I1123 12:30:09.110096 20 delete.go:95] Deleting pod "simpletest.rc-dgkrd" in namespace "gc-7691"
  I1123 12:30:09.127469 20 delete.go:95] Deleting pod "simpletest.rc-dl48f" in namespace "gc-7691"
  I1123 12:30:09.142031 20 delete.go:95] Deleting pod "simpletest.rc-dl67x" in namespace "gc-7691"
  I1123 12:30:09.157033 20 delete.go:95] Deleting pod "simpletest.rc-dl9lb" in namespace "gc-7691"
  I1123 12:30:09.176738 20 delete.go:95] Deleting pod "simpletest.rc-f52kw" in namespace "gc-7691"
  I1123 12:30:09.194211 20 delete.go:95] Deleting pod "simpletest.rc-ff24x" in namespace "gc-7691"
  I1123 12:30:09.209194 20 delete.go:95] Deleting pod "simpletest.rc-fjhgq" in namespace "gc-7691"
  I1123 12:30:09.224011 20 delete.go:95] Deleting pod "simpletest.rc-fm78t" in namespace "gc-7691"
  I1123 12:30:09.242859 20 delete.go:95] Deleting pod "simpletest.rc-frvdz" in namespace "gc-7691"
  I1123 12:30:09.257996 20 delete.go:95] Deleting pod "simpletest.rc-fv4fw" in namespace "gc-7691"
  I1123 12:30:09.270756 20 delete.go:95] Deleting pod "simpletest.rc-fx49k" in namespace "gc-7691"
  I1123 12:30:09.289669 20 delete.go:95] Deleting pod "simpletest.rc-g4twl" in namespace "gc-7691"
  I1123 12:30:09.310499 20 delete.go:95] Deleting pod "simpletest.rc-g5jxv" in namespace "gc-7691"
  I1123 12:30:09.329141 20 delete.go:95] Deleting pod "simpletest.rc-g6x5b" in namespace "gc-7691"
  I1123 12:30:09.342164 20 delete.go:95] Deleting pod "simpletest.rc-gbk7p" in namespace "gc-7691"
  I1123 12:30:09.353754 20 delete.go:95] Deleting pod "simpletest.rc-gfb5b" in namespace "gc-7691"
  I1123 12:30:09.369441 20 delete.go:95] Deleting pod "simpletest.rc-glqkm" in namespace "gc-7691"
  I1123 12:30:09.384748 20 delete.go:95] Deleting pod "simpletest.rc-gv58n" in namespace "gc-7691"
  I1123 12:30:09.407090 20 delete.go:95] Deleting pod "simpletest.rc-h9ttg" in namespace "gc-7691"
  I1123 12:30:09.422947 20 delete.go:95] Deleting pod "simpletest.rc-hl4q4" in namespace "gc-7691"
  I1123 12:30:09.438500 20 delete.go:95] Deleting pod "simpletest.rc-hmxr6" in namespace "gc-7691"
  I1123 12:30:09.451636 20 delete.go:95] Deleting pod "simpletest.rc-j2fsx" in namespace "gc-7691"
  I1123 12:30:09.468344 20 delete.go:95] Deleting pod "simpletest.rc-jhr2t" in namespace "gc-7691"
  I1123 12:30:09.481535 20 delete.go:95] Deleting pod "simpletest.rc-jhs9p" in namespace "gc-7691"
  I1123 12:30:09.498194 20 delete.go:95] Deleting pod "simpletest.rc-jhtm9" in namespace "gc-7691"
  I1123 12:30:09.514568 20 delete.go:95] Deleting pod "simpletest.rc-jt4xf" in namespace "gc-7691"
  I1123 12:30:09.529468 20 delete.go:95] Deleting pod "simpletest.rc-jxvjx" in namespace "gc-7691"
  I1123 12:30:09.541504 20 delete.go:95] Deleting pod "simpletest.rc-l2qth" in namespace "gc-7691"
  I1123 12:30:09.558021 20 delete.go:95] Deleting pod "simpletest.rc-l8ctt" in namespace "gc-7691"
  I1123 12:30:09.573052 20 delete.go:95] Deleting pod "simpletest.rc-m4tlc" in namespace "gc-7691"
  I1123 12:30:09.588094 20 delete.go:95] Deleting pod "simpletest.rc-m8rq4" in namespace "gc-7691"
  I1123 12:30:09.606909 20 delete.go:95] Deleting pod "simpletest.rc-mgcx4" in namespace "gc-7691"
  I1123 12:30:09.621656 20 delete.go:95] Deleting pod "simpletest.rc-mjgwv" in namespace "gc-7691"
  I1123 12:30:09.636639 20 delete.go:95] Deleting pod "simpletest.rc-mvrdw" in namespace "gc-7691"
  I1123 12:30:09.649308 20 delete.go:95] Deleting pod "simpletest.rc-nsrjm" in namespace "gc-7691"
  I1123 12:30:09.663902 20 delete.go:95] Deleting pod "simpletest.rc-p86rg" in namespace "gc-7691"
  I1123 12:30:09.677136 20 delete.go:95] Deleting pod "simpletest.rc-p87v9" in namespace "gc-7691"
  I1123 12:30:09.691871 20 delete.go:95] Deleting pod "simpletest.rc-pcm7x" in namespace "gc-7691"
  I1123 12:30:09.704432 20 delete.go:95] Deleting pod "simpletest.rc-pg94f" in namespace "gc-7691"
  I1123 12:30:09.717323 20 delete.go:95] Deleting pod "simpletest.rc-ph7zl" in namespace "gc-7691"
  I1123 12:30:09.731684 20 delete.go:95] Deleting pod "simpletest.rc-qgl6q" in namespace "gc-7691"
  I1123 12:30:09.745454 20 delete.go:95] Deleting pod "simpletest.rc-qxgx4" in namespace "gc-7691"
  I1123 12:30:09.785462 20 delete.go:95] Deleting pod "simpletest.rc-qxrts" in namespace "gc-7691"
  I1123 12:30:09.837629 20 delete.go:95] Deleting pod "simpletest.rc-r5mgt" in namespace "gc-7691"
  I1123 12:30:09.886904 20 delete.go:95] Deleting pod "simpletest.rc-rdtnz" in namespace "gc-7691"
  I1123 12:30:09.944547 20 delete.go:95] Deleting pod "simpletest.rc-rfphf" in namespace "gc-7691"
  I1123 12:30:09.990435 20 delete.go:95] Deleting pod "simpletest.rc-rqlkx" in namespace "gc-7691"
  I1123 12:30:10.034356 20 delete.go:95] Deleting pod "simpletest.rc-rz5lc" in namespace "gc-7691"
  I1123 12:30:10.086325 20 delete.go:95] Deleting pod "simpletest.rc-sd677" in namespace "gc-7691"
  I1123 12:30:10.133212 20 delete.go:95] Deleting pod "simpletest.rc-sqzzl" in namespace "gc-7691"
  I1123 12:30:10.189645 20 delete.go:95] Deleting pod "simpletest.rc-tbwf6" in namespace "gc-7691"
  I1123 12:30:10.243159 20 delete.go:95] Deleting pod "simpletest.rc-tx6nw" in namespace "gc-7691"
  I1123 12:30:10.294765 20 delete.go:95] Deleting pod "simpletest.rc-v48q4" in namespace "gc-7691"
  I1123 12:30:10.335922 20 delete.go:95] Deleting pod "simpletest.rc-v88wf" in namespace "gc-7691"
  I1123 12:30:10.389555 20 delete.go:95] Deleting pod "simpletest.rc-vd9ks" in namespace "gc-7691"
  I1123 12:30:10.439271 20 delete.go:95] Deleting pod "simpletest.rc-vmjc5" in namespace "gc-7691"
  I1123 12:30:10.491652 20 delete.go:95] Deleting pod "simpletest.rc-vx5wk" in namespace "gc-7691"
  I1123 12:30:10.541643 20 delete.go:95] Deleting pod "simpletest.rc-w2drk" in namespace "gc-7691"
  I1123 12:30:10.588890 20 delete.go:95] Deleting pod "simpletest.rc-w9h5l" in namespace "gc-7691"
  I1123 12:30:10.639217 20 delete.go:95] Deleting pod "simpletest.rc-wbj2d" in namespace "gc-7691"
  I1123 12:30:10.690750 20 delete.go:95] Deleting pod "simpletest.rc-wt564" in namespace "gc-7691"
  I1123 12:30:10.737834 20 delete.go:95] Deleting pod "simpletest.rc-xpm47" in namespace "gc-7691"
  I1123 12:30:10.789156 20 delete.go:95] Deleting pod "simpletest.rc-zdbmb" in namespace "gc-7691"
  I1123 12:30:10.841657 20 delete.go:95] Deleting pod "simpletest.rc-zfj7r" in namespace "gc-7691"
  I1123 12:30:10.886209 20 delete.go:95] Deleting pod "simpletest.rc-zfmkv" in namespace "gc-7691"
  I1123 12:30:10.935266 20 delete.go:95] Deleting pod "simpletest.rc-zvxtl" in namespace "gc-7691"
  I1123 12:30:10.987007 20 delete.go:95] Deleting pod "simpletest.rc-zx5sx" in namespace "gc-7691"
  I1123 12:30:11.035801 20 delete.go:95] Deleting pod "simpletest.rc-zxb2l" in namespace "gc-7691"
  I1123 12:30:11.140239 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7691" for this suite. @ 11/23/24 12:30:11.149
• [43.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 11/23/24 12:30:11.181
  I1123 12:30:11.181834 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:30:11.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:30:11.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:30:11.203
  STEP: Creating configMap with name configmap-test-volume-map-7502d148-add7-4636-83a5-898b38f180e2 @ 11/23/24 12:30:11.207
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:30:11.218
  STEP: Saw pod success @ 11/23/24 12:30:15.254
  I1123 12:30:15.259932 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-76a07c15-7d7f-4268-a2b4-751ab32e1bc8 container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:30:15.268
  I1123 12:30:15.287237 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6375" for this suite. @ 11/23/24 12:30:15.291
• [4.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 11/23/24 12:30:15.302
  I1123 12:30:15.302249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/23/24 12:30:15.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:30:15.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:30:15.321
  STEP: create the container to handle the HTTPGet hook request. @ 11/23/24 12:30:15.329
  STEP: create the pod with lifecycle hook @ 11/23/24 12:30:17.358
  STEP: check poststart hook @ 11/23/24 12:30:19.38
  STEP: delete the pod with lifecycle hook @ 11/23/24 12:30:19.391
  I1123 12:30:21.413520 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7881" for this suite. @ 11/23/24 12:30:21.418
• [6.125 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 11/23/24 12:30:21.427
  I1123 12:30:21.427555 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 12:30:21.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:30:21.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:30:21.449
  I1123 12:30:21.469138 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1123 12:30:21.469164 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1123 12:30:21.476491 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I1123 12:30:21.476509 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1123 12:30:21.484213 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1123 12:30:21.484231 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1123 12:30:21.492473 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1123 12:30:21.492489 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1123 12:30:21.500326 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1123 12:30:21.500344 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1123 12:30:21.511440 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1123 12:30:21.511457 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1123 12:30:21.517781 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1123 12:30:21.517798 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1123 12:30:21.527993 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1123 12:30:21.528014 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1123 12:30:21.536357 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1123 12:30:21.536440 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1123 12:30:21.536541 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-335" for this suite. @ 11/23/24 12:30:21.545
• [0.134 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 11/23/24 12:30:21.561
  I1123 12:30:21.561597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption @ 11/23/24 12:30:21.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:30:21.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:30:21.586
  I1123 12:30:21.601806 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1123 12:31:21.608846 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/23/24 12:31:21.613
  I1123 12:31:21.613735 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/23/24 12:31:21.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:31:21.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:31:21.633
  I1123 12:31:21.652262 20 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1123 12:31:21.656724 20 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1123 12:31:21.751644 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1146" for this suite. @ 11/23/24 12:31:21.755
  I1123 12:31:21.765131 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4267" for this suite. @ 11/23/24 12:31:21.768
• [60.215 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/23/24 12:31:21.777
  I1123 12:31:21.777048 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-watch @ 11/23/24 12:31:21.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:31:21.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:31:21.795
  I1123 12:31:21.797928 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Creating first CR  @ 11/23/24 12:31:24.336
  I1123 12:31:24.341618 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-23T12:31:24Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-23T12:31:24Z]] name:name1 resourceVersion:16211 uid:d1bee1c6-234d-482b-807f-0b741e6c6975] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 11/23/24 12:31:34.341
  I1123 12:31:34.349751 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-23T12:31:34Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-23T12:31:34Z]] name:name2 resourceVersion:16243 uid:89a116b8-89a4-4e88-8a3e-26d7ab1f952a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 11/23/24 12:31:44.35
  I1123 12:31:44.357472 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-23T12:31:24Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-23T12:31:44Z]] name:name1 resourceVersion:16265 uid:d1bee1c6-234d-482b-807f-0b741e6c6975] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 11/23/24 12:31:54.358
  I1123 12:31:54.365131 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-23T12:31:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-23T12:31:54Z]] name:name2 resourceVersion:16285 uid:89a116b8-89a4-4e88-8a3e-26d7ab1f952a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 11/23/24 12:32:04.367
  I1123 12:32:04.377603 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-23T12:31:24Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-23T12:31:44Z]] name:name1 resourceVersion:16305 uid:d1bee1c6-234d-482b-807f-0b741e6c6975] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 11/23/24 12:32:14.377
  I1123 12:32:14.387501 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-23T12:31:34Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-23T12:31:54Z]] name:name2 resourceVersion:16325 uid:89a116b8-89a4-4e88-8a3e-26d7ab1f952a] num:map[num1:9223372036854775807 num2:1000000]]}
  I1123 12:32:24.905076 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4141" for this suite. @ 11/23/24 12:32:24.909
• [63.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 11/23/24 12:32:24.918
  I1123 12:32:24.918909 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:32:24.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:32:24.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:32:24.942
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:32:24.945
  STEP: Saw pod success @ 11/23/24 12:32:28.973
  I1123 12:32:28.978803 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-e86a666e-afd8-4f94-a50d-8e12f2998e88 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:32:28.998
  I1123 12:32:29.018324 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2757" for this suite. @ 11/23/24 12:32:29.022
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/23/24 12:32:29.032
  I1123 12:32:29.032702 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:32:29.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:32:29.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:32:29.051
  STEP: Creating projection with secret that has name projected-secret-test-d051d3cd-76e1-4f06-b977-5ce5915924a1 @ 11/23/24 12:32:29.053
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:32:29.058
  STEP: Saw pod success @ 11/23/24 12:32:33.09
  I1123 12:32:33.094456 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-secrets-95e2e698-75b9-469a-a3c0-70b1453e036c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:32:33.103
  I1123 12:32:33.125976 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2903" for this suite. @ 11/23/24 12:32:33.131
• [4.107 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 11/23/24 12:32:33.139
  I1123 12:32:33.139543 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 12:32:33.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:32:33.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:32:33.159
  I1123 12:32:33.165377 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-5376"
  I1123 12:32:33.172638 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-5376"
  STEP: waiting for a new root ca configmap created @ 11/23/24 12:32:33.673
  I1123 12:32:33.678750 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-5376"
  I1123 12:32:33.684640 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-5376"
  STEP: waiting for the root ca configmap reconciled @ 11/23/24 12:32:34.185
  I1123 12:32:34.188885 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-5376"
  I1123 12:32:34.189032 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5376" for this suite. @ 11/23/24 12:32:34.193
• [1.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/23/24 12:32:34.204
  I1123 12:32:34.204658 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename watch @ 11/23/24 12:32:34.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:32:34.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:32:34.22
  STEP: creating a watch on configmaps with label A @ 11/23/24 12:32:34.223
  STEP: creating a watch on configmaps with label B @ 11/23/24 12:32:34.224
  STEP: creating a watch on configmaps with label A or B @ 11/23/24 12:32:34.226
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/23/24 12:32:34.227
  I1123 12:32:34.232654 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16443 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:34.232744 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16443 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/23/24 12:32:34.232
  I1123 12:32:34.242013 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16444 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:34.242090 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16444 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/23/24 12:32:34.242
  I1123 12:32:34.251019 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16445 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:34.251174 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16445 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/23/24 12:32:34.251
  I1123 12:32:34.259986 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16446 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:34.260024 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6446  b77288ba-b9d5-4a0a-9e6c-774d84bfed78 16446 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/23/24 12:32:34.26
  I1123 12:32:34.264833 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6446  327a841f-3ae1-490f-bec6-efb1debeab75 16447 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:34.264920 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6446  327a841f-3ae1-490f-bec6-efb1debeab75 16447 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/23/24 12:32:44.265
  I1123 12:32:44.276029 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6446  327a841f-3ae1-490f-bec6-efb1debeab75 16487 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:44.276071 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6446  327a841f-3ae1-490f-bec6-efb1debeab75 16487 0 2024-11-23 12:32:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-23 12:32:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:32:54.278699 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6446" for this suite. @ 11/23/24 12:32:54.284
• [20.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 11/23/24 12:32:54.293
  I1123 12:32:54.293847 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:32:54.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:32:54.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:32:54.314
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:32:54.316
  STEP: Saw pod success @ 11/23/24 12:32:58.346
  I1123 12:32:58.351484 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-23262ced-4896-4546-a313-9b61c32d0306 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:32:58.361
  I1123 12:32:58.378766 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7475" for this suite. @ 11/23/24 12:32:58.383
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 11/23/24 12:32:58.391
  I1123 12:32:58.391761 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:32:58.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:32:58.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:32:58.416
  STEP: Creating the pod @ 11/23/24 12:32:58.419
  I1123 12:33:00.969773 20 pod_client.go:173] Successfully updated pod "annotationupdate819f8f98-5f79-4798-b034-3229dd79a4c5"
  I1123 12:33:04.998908 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1052" for this suite. @ 11/23/24 12:33:05.004
• [6.621 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 11/23/24 12:33:05.013
  I1123 12:33:05.013362 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:33:05.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:05.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:05.034
  STEP: Setting up server cert @ 11/23/24 12:33:05.058
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:33:05.263
  STEP: Deploying the webhook pod @ 11/23/24 12:33:05.274
  STEP: Wait for the deployment to be ready @ 11/23/24 12:33:05.357
  I1123 12:33:05.368383 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:33:07.383
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:33:07.397
  I1123 12:33:08.397555 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:33:08.408092 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6691-crds.webhook.example.com via the AdmissionRegistration API @ 11/23/24 12:33:08.918
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/23/24 12:33:08.933
  I1123 12:33:11.530021 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7705" for this suite. @ 11/23/24 12:33:11.535
  STEP: Destroying namespace "webhook-markers-4398" for this suite. @ 11/23/24 12:33:11.543
• [6.541 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/23/24 12:33:11.554
  I1123 12:33:11.554047 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename events @ 11/23/24 12:33:11.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:11.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:11.573
  STEP: Create set of events @ 11/23/24 12:33:11.576
  STEP: get a list of Events with a label in the current namespace @ 11/23/24 12:33:11.592
  STEP: delete a list of events @ 11/23/24 12:33:11.596
  I1123 12:33:11.596614 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/23/24 12:33:11.625
  I1123 12:33:11.631093 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8910" for this suite. @ 11/23/24 12:33:11.635
• [0.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 11/23/24 12:33:11.644
  I1123 12:33:11.644418 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:33:11.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:11.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:11.661
  STEP: Setting up server cert @ 11/23/24 12:33:11.686
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:33:11.825
  STEP: Deploying the webhook pod @ 11/23/24 12:33:11.832
  STEP: Wait for the deployment to be ready @ 11/23/24 12:33:11.846
  I1123 12:33:11.856796 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:33:13.873
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:33:13.885
  I1123 12:33:14.885740 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/23/24 12:33:14.896
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/23/24 12:33:14.897
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/23/24 12:33:14.897
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/23/24 12:33:14.897
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/23/24 12:33:14.898
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/23/24 12:33:14.898
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/23/24 12:33:14.899
  I1123 12:33:14.948322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9234" for this suite. @ 11/23/24 12:33:14.953
  STEP: Destroying namespace "webhook-markers-2761" for this suite. @ 11/23/24 12:33:14.963
• [3.328 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/23/24 12:33:14.972
  I1123 12:33:14.972614 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename events @ 11/23/24 12:33:14.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:14.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:15
  STEP: creating a test event @ 11/23/24 12:33:15.003
  STEP: listing events in all namespaces @ 11/23/24 12:33:15.012
  STEP: listing events in test namespace @ 11/23/24 12:33:15.027
  STEP: listing events with field selection filtering on source @ 11/23/24 12:33:15.033
  STEP: listing events with field selection filtering on reportingController @ 11/23/24 12:33:15.038
  STEP: getting the test event @ 11/23/24 12:33:15.041
  STEP: patching the test event @ 11/23/24 12:33:15.046
  STEP: getting the test event @ 11/23/24 12:33:15.056
  STEP: updating the test event @ 11/23/24 12:33:15.061
  STEP: getting the test event @ 11/23/24 12:33:15.07
  STEP: deleting the test event @ 11/23/24 12:33:15.076
  STEP: listing events in all namespaces @ 11/23/24 12:33:15.088
  STEP: listing events in test namespace @ 11/23/24 12:33:15.1
  I1123 12:33:15.104304 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-435" for this suite. @ 11/23/24 12:33:15.109
• [0.144 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 11/23/24 12:33:15.116
  I1123 12:33:15.116523 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/23/24 12:33:15.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:15.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:15.137
  STEP: getting /apis @ 11/23/24 12:33:15.139
  STEP: getting /apis/storage.k8s.io @ 11/23/24 12:33:15.143
  STEP: getting /apis/storage.k8s.io/v1 @ 11/23/24 12:33:15.144
  STEP: creating @ 11/23/24 12:33:15.146
  STEP: watching @ 11/23/24 12:33:15.166
  I1123 12:33:15.166126 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 11/23/24 12:33:15.174
  STEP: listing in namespace @ 11/23/24 12:33:15.178
  STEP: listing across namespaces @ 11/23/24 12:33:15.181
  STEP: patching @ 11/23/24 12:33:15.187
  STEP: updating @ 11/23/24 12:33:15.193
  I1123 12:33:15.198556 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1123 12:33:15.198704 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/23/24 12:33:15.198
  STEP: deleting a collection @ 11/23/24 12:33:15.216
  I1123 12:33:15.237857 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8889" for this suite. @ 11/23/24 12:33:15.242
• [0.135 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/23/24 12:33:15.251
  I1123 12:33:15.251791 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename init-container @ 11/23/24 12:33:15.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:15.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:15.27
  STEP: creating the pod @ 11/23/24 12:33:15.272
  I1123 12:33:15.272586 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1123 12:33:18.427662 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6328" for this suite. @ 11/23/24 12:33:18.432
• [3.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 11/23/24 12:33:18.442
  I1123 12:33:18.442380 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename endpointslice @ 11/23/24 12:33:18.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:18.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:18.462
  I1123 12:33:20.540641 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9961" for this suite. @ 11/23/24 12:33:20.555
• [2.127 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/23/24 12:33:20.569
  I1123 12:33:20.569905 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 12:33:20.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:20.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:20.594
  I1123 12:33:20.608985 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1123 12:33:25.619437 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/23/24 12:33:25.619
  I1123 12:33:25.619510 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1123 12:33:27.624821 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1123 12:33:27.635341 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1123 12:33:29.646467 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1123 12:33:29.654629 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1123 12:33:29.663172 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1123 12:33:29.675863 20 deployment.go:313] Updating deployment test-rollover-deployment
  I1123 12:33:29.675886 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1123 12:33:31.686267 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1123 12:33:31.696396 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1123 12:33:31.705105 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1123 12:33:31.705155 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1123 12:33:33.716878 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1123 12:33:33.716936 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1123 12:33:35.716393 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1123 12:33:35.716458 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1123 12:33:37.715516 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1123 12:33:37.715578 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1123 12:33:39.716365 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1123 12:33:39.716427 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 33, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 33, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1123 12:33:41.716271 20 deployment.go:94] 
  I1123 12:33:41.716317 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I1123 12:33:41.729638 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9283e137-99ff-46a9-a917-00c50cb888ba",
      ResourceVersion: (string) (len=5) "17040",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 12:33:41.734600 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e11d135-c4a1-4579-b1b9-cdbbfe00c14f",
      ResourceVersion: (string) (len=5) "17030",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962009,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9283e137-99ff-46a9-a917-00c50cb888ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 38 33 65 31  33 37 2d 39 39 66 66 2d  |\"9283e137-99ff-|
              00000120  34 36 61 39 2d 61 39 31  37 2d 30 30 63 35 30 63  |46a9-a917-00c50c|
              00000130  62 38 38 38 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b888ba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 12:33:41.735108 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1123 12:33:41.735303 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f798c59e-edec-4236-ae95-54b21b2ac682",
      ResourceVersion: (string) (len=5) "17039",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962000,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9283e137-99ff-46a9-a917-00c50cb888ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 32 38 33 65 31 33 37  2d 39 39 66 66 2d 34 36  |9283e137-99ff-46|
              000000c0  61 39 2d 61 39 31 37 2d  30 30 63 35 30 63 62 38  |a9-a917-00c50cb8|
              000000d0  38 38 62 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |88ba\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962020,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 12:33:41.735987 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b15e6e99-78f5-47bf-a2c7-35d64724e9e1",
      ResourceVersion: (string) (len=5) "16992",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9283e137-99ff-46a9-a917-00c50cb888ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 38 33 65 31  33 37 2d 39 39 66 66 2d  |\"9283e137-99ff-|
              00000120  34 36 61 39 2d 61 39 31  37 2d 30 30 63 35 30 63  |46a9-a917-00c50c|
              00000130  62 38 38 38 62 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b888ba\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 12:33:41.742161 20 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-z9gzq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-z9gzq",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-9149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b91eddea-9323-42a8-a49f-00f663620d30",
      ResourceVersion: (string) (len=5) "17008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962009,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "3e11d135-c4a1-4579-b1b9-cdbbfe00c14f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 65  31 31 64 31 33 35 2d 63  |d\":\"3e11d135-c|
              00000090  34 61 31 2d 34 35 37 39  2d 62 31 62 39 2d 63 64  |4a1-4579-b1b9-cd|
              000000a0  62 62 66 65 30 30 63 31  34 66 5c 22 7d 22 3a 7b  |bbfe00c14f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 36 30 5c 22 7d 22  |2.168.21.160\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qjcx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qjcx4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962010,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962009,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962009,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867962010,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://6dd97836b61528858489e45fb8b8e05b17809e34a15df537fd7e04e52f9c14b9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qjcx4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 12:33:41.743231 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9149" for this suite. @ 11/23/24 12:33:41.748
• [21.189 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 11/23/24 12:33:41.758
  I1123 12:33:41.758840 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename disruption @ 11/23/24 12:33:41.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:41.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:41.777
  STEP: Waiting for the pdb to be processed @ 11/23/24 12:33:41.785
  STEP: Updating PodDisruptionBudget status @ 11/23/24 12:33:43.79
  STEP: Waiting for all pods to be running @ 11/23/24 12:33:43.803
  I1123 12:33:43.811317 20 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 11/23/24 12:33:45.809
  STEP: Waiting for the pdb to be processed @ 11/23/24 12:33:45.825
  STEP: Patching PodDisruptionBudget status @ 11/23/24 12:33:45.836
  STEP: Waiting for the pdb to be processed @ 11/23/24 12:33:45.848
  I1123 12:33:45.852277 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2464" for this suite. @ 11/23/24 12:33:45.856
• [4.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 11/23/24 12:33:45.865
  I1123 12:33:45.865536 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 12:33:45.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:45.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:45.884
  STEP: creating secret secrets-8971/secret-test-0ee6b96f-9499-43c1-a1e0-fda9f361e1e9 @ 11/23/24 12:33:45.886
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:33:45.891
  STEP: Saw pod success @ 11/23/24 12:33:49.919
  I1123 12:33:49.923365 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-5350fa62-470b-4f17-ab9d-d5a8ab80456f container env-test: <nil>
  STEP: delete the pod @ 11/23/24 12:33:49.933
  I1123 12:33:49.951384 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8971" for this suite. @ 11/23/24 12:33:49.956
• [4.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 11/23/24 12:33:49.965
  I1123 12:33:49.965497 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/23/24 12:33:49.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:49.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:49.984
  STEP: create the container to handle the HTTPGet hook request. @ 11/23/24 12:33:49.991
  STEP: create the pod with lifecycle hook @ 11/23/24 12:33:52.019
  STEP: delete the pod with lifecycle hook @ 11/23/24 12:33:54.044
  STEP: check prestop hook @ 11/23/24 12:33:56.065
  I1123 12:33:56.073505 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9961" for this suite. @ 11/23/24 12:33:56.079
• [6.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/23/24 12:33:56.087
  I1123 12:33:56.087711 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename watch @ 11/23/24 12:33:56.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:56.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:56.108
  STEP: creating a watch on configmaps @ 11/23/24 12:33:56.11
  STEP: creating a new configmap @ 11/23/24 12:33:56.111
  STEP: modifying the configmap once @ 11/23/24 12:33:56.116
  STEP: closing the watch once it receives two notifications @ 11/23/24 12:33:56.126
  I1123 12:33:56.126317 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8556  d1b4733d-7ad4-4a59-9370-d7790c96a59f 17236 0 2024-11-23 12:33:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-23 12:33:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:33:56.127022 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8556  d1b4733d-7ad4-4a59-9370-d7790c96a59f 17237 0 2024-11-23 12:33:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-23 12:33:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/23/24 12:33:56.127
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/23/24 12:33:56.136
  STEP: deleting the configmap @ 11/23/24 12:33:56.137
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/23/24 12:33:56.145
  I1123 12:33:56.145325 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8556  d1b4733d-7ad4-4a59-9370-d7790c96a59f 17238 0 2024-11-23 12:33:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-23 12:33:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:33:56.145459 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8556  d1b4733d-7ad4-4a59-9370-d7790c96a59f 17239 0 2024-11-23 12:33:56 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-23 12:33:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:33:56.145563 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8556" for this suite. @ 11/23/24 12:33:56.149
• [0.069 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/23/24 12:33:56.156
  I1123 12:33:56.156428 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename subpath @ 11/23/24 12:33:56.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:33:56.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:33:56.175
  STEP: Setting up data @ 11/23/24 12:33:56.177
  STEP: Creating pod pod-subpath-test-secret-jjh6 @ 11/23/24 12:33:56.187
  STEP: Creating a pod to test atomic-volume-subpath @ 11/23/24 12:33:56.187
  STEP: Saw pod success @ 11/23/24 12:34:18.27
  I1123 12:34:18.273867 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-subpath-test-secret-jjh6 container test-container-subpath-secret-jjh6: <nil>
  STEP: delete the pod @ 11/23/24 12:34:18.29
  STEP: Deleting pod pod-subpath-test-secret-jjh6 @ 11/23/24 12:34:18.31
  I1123 12:34:18.310097 20 delete.go:62] Deleting pod "pod-subpath-test-secret-jjh6" in namespace "subpath-8953"
  I1123 12:34:18.314197 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8953" for this suite. @ 11/23/24 12:34:18.318
• [22.172 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 11/23/24 12:34:18.328
  I1123 12:34:18.328775 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:34:18.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:18.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:18.349
  STEP: Setting up server cert @ 11/23/24 12:34:18.375
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:34:18.832
  STEP: Deploying the webhook pod @ 11/23/24 12:34:18.841
  STEP: Wait for the deployment to be ready @ 11/23/24 12:34:18.855
  I1123 12:34:18.865216 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:34:20.879
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:34:20.893
  I1123 12:34:21.894228 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/23/24 12:34:21.905
  STEP: create a pod that should be updated by the webhook @ 11/23/24 12:34:21.919
  I1123 12:34:21.990025 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7967" for this suite. @ 11/23/24 12:34:21.997
  STEP: Destroying namespace "webhook-markers-2066" for this suite. @ 11/23/24 12:34:22.006
• [3.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/23/24 12:34:22.013
  I1123 12:34:22.013993 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 12:34:22.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:22.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:22.031
  STEP: Creating secret with name secret-test-319d85cf-fcc3-4b4e-938e-cb821fd66454 @ 11/23/24 12:34:22.034
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:34:22.04
  STEP: Saw pod success @ 11/23/24 12:34:26.067
  I1123 12:34:26.070820 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-ad125abc-4cc2-4ce0-b024-e24e06b065cb container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:34:26.079
  I1123 12:34:26.101172 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4865" for this suite. @ 11/23/24 12:34:26.106
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/23/24 12:34:26.115
  I1123 12:34:26.115847 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-runtime @ 11/23/24 12:34:26.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:26.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:26.135
  STEP: create the container @ 11/23/24 12:34:26.138
  W1123 12:34:26.148252      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/23/24 12:34:26.148
  STEP: get the container status @ 11/23/24 12:34:29.172
  STEP: the container should be terminated @ 11/23/24 12:34:29.178
  STEP: the termination message should be set @ 11/23/24 12:34:29.178
  I1123 12:34:29.178796 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/23/24 12:34:29.178
  I1123 12:34:29.201015 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1826" for this suite. @ 11/23/24 12:34:29.205
• [3.100 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/23/24 12:34:29.215
  I1123 12:34:29.215447 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 12:34:29.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:29.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:29.241
  STEP: Create set of pods @ 11/23/24 12:34:29.245
  I1123 12:34:29.258465 20 pods.go:871] created test-pod-1
  I1123 12:34:29.269281 20 pods.go:871] created test-pod-2
  I1123 12:34:29.284078 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/23/24 12:34:29.284
  STEP: waiting for all pods to be deleted @ 11/23/24 12:34:31.329
  I1123 12:34:31.332981 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1123 12:34:32.333239 20 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  I1123 12:34:33.334426 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4952" for this suite. @ 11/23/24 12:34:33.338
• [4.131 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/23/24 12:34:33.346
  I1123 12:34:33.346597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename watch @ 11/23/24 12:34:33.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:33.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:33.364
  STEP: creating a watch on configmaps with a certain label @ 11/23/24 12:34:33.367
  STEP: creating a new configmap @ 11/23/24 12:34:33.368
  STEP: modifying the configmap once @ 11/23/24 12:34:33.373
  STEP: changing the label value of the configmap @ 11/23/24 12:34:33.383
  STEP: Expecting to observe a delete notification for the watched object @ 11/23/24 12:34:33.392
  I1123 12:34:33.392143 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6666  725e708f-d4bb-4f05-abb9-e9db05cce512 17594 0 2024-11-23 12:34:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-23 12:34:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:34:33.392247 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6666  725e708f-d4bb-4f05-abb9-e9db05cce512 17595 0 2024-11-23 12:34:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-23 12:34:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:34:33.392337 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6666  725e708f-d4bb-4f05-abb9-e9db05cce512 17596 0 2024-11-23 12:34:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-23 12:34:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/23/24 12:34:33.392
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/23/24 12:34:33.401
  STEP: changing the label value of the configmap back @ 11/23/24 12:34:43.402
  STEP: modifying the configmap a third time @ 11/23/24 12:34:43.413
  STEP: deleting the configmap @ 11/23/24 12:34:43.423
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/23/24 12:34:43.432
  I1123 12:34:43.432707 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6666  725e708f-d4bb-4f05-abb9-e9db05cce512 17648 0 2024-11-23 12:34:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-23 12:34:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:34:43.432846 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6666  725e708f-d4bb-4f05-abb9-e9db05cce512 17649 0 2024-11-23 12:34:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-23 12:34:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:34:43.432941 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6666  725e708f-d4bb-4f05-abb9-e9db05cce512 17650 0 2024-11-23 12:34:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-23 12:34:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 12:34:43.433103 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6666" for this suite. @ 11/23/24 12:34:43.438
• [10.101 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 11/23/24 12:34:43.448
  I1123 12:34:43.448723 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:34:43.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:43.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:43.472
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/23/24 12:34:43.475
  I1123 12:34:43.475437 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1604 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1123 12:34:43.530474 20 builder.go:146] stderr: ""
  I1123 12:34:43.530495 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/23/24 12:34:43.53
  I1123 12:34:43.533870 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1604 delete pods e2e-test-httpd-pod'
  I1123 12:34:45.479073 20 builder.go:146] stderr: ""
  I1123 12:34:45.479108 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1123 12:34:45.479226 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1604" for this suite. @ 11/23/24 12:34:45.484
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/23/24 12:34:45.493
  I1123 12:34:45.493574 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename proxy @ 11/23/24 12:34:45.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:45.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:45.515
  STEP: starting an echo server on multiple ports @ 11/23/24 12:34:45.53
  STEP: creating replication controller proxy-service-ktn9r in namespace proxy-7467 @ 11/23/24 12:34:45.53
  I1123 12:34:45.542413      20 runners.go:193] Created replication controller with name: proxy-service-ktn9r, namespace: proxy-7467, replica count: 1
  I1123 12:34:46.593266      20 runners.go:193] proxy-service-ktn9r Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1123 12:34:47.594307      20 runners.go:193] proxy-service-ktn9r Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 12:34:47.599284 20 proxy.go:230] setup took 2.08156272s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/23/24 12:34:47.599
  I1123 12:34:47.605662 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.148768ms)
  I1123 12:34:47.606458 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.771677ms)
  I1123 12:34:47.606462 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.703428ms)
  I1123 12:34:47.607492 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.883663ms)
  I1123 12:34:47.608452 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 8.745425ms)
  I1123 12:34:47.608495 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 8.770722ms)
  I1123 12:34:47.608707 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 9.157291ms)
  I1123 12:34:47.609864 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 10.238869ms)
  I1123 12:34:47.610057 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 10.697689ms)
  I1123 12:34:47.610073 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 10.48428ms)
  I1123 12:34:47.610357 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 10.894785ms)
  I1123 12:34:47.610561 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 11.13705ms)
  I1123 12:34:47.610889 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 11.246167ms)
  I1123 12:34:47.611096 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 11.435507ms)
  I1123 12:34:47.612156 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 12.373928ms)
  I1123 12:34:47.612234 20 proxy.go:558] (0) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 12.492475ms)
  I1123 12:34:47.616266 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 3.910963ms)
  I1123 12:34:47.616497 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 4.186156ms)
  I1123 12:34:47.618058 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 5.467101ms)
  I1123 12:34:47.618136 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 5.618062ms)
  I1123 12:34:47.619000 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.563441ms)
  I1123 12:34:47.619144 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.61003ms)
  I1123 12:34:47.619208 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.71702ms)
  I1123 12:34:47.619460 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.83381ms)
  I1123 12:34:47.619519 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 6.946004ms)
  I1123 12:34:47.619564 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 7.008868ms)
  I1123 12:34:47.619800 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 7.156914ms)
  I1123 12:34:47.620754 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.367266ms)
  I1123 12:34:47.620779 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.305608ms)
  I1123 12:34:47.620798 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.384426ms)
  I1123 12:34:47.621650 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 9.044652ms)
  I1123 12:34:47.622006 20 proxy.go:558] (1) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.555196ms)
  I1123 12:34:47.627143 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 5.054847ms)
  I1123 12:34:47.627781 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 5.426823ms)
  I1123 12:34:47.627813 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 5.587817ms)
  I1123 12:34:47.628240 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.974527ms)
  I1123 12:34:47.628304 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.163282ms)
  I1123 12:34:47.629000 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 6.818188ms)
  I1123 12:34:47.629297 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 7.008199ms)
  I1123 12:34:47.629316 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 7.207202ms)
  I1123 12:34:47.630370 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 8.124084ms)
  I1123 12:34:47.630382 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 8.175509ms)
  I1123 12:34:47.630421 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.091686ms)
  I1123 12:34:47.630439 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 8.13186ms)
  I1123 12:34:47.630514 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.482351ms)
  I1123 12:34:47.630641 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.496872ms)
  I1123 12:34:47.630807 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 8.780199ms)
  I1123 12:34:47.631387 20 proxy.go:558] (2) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.321739ms)
  I1123 12:34:47.636829 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 5.178822ms)
  I1123 12:34:47.636828 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.319645ms)
  I1123 12:34:47.637667 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 6.109923ms)
  I1123 12:34:47.637832 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.206498ms)
  I1123 12:34:47.638588 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 7.064102ms)
  I1123 12:34:47.638593 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 7.156812ms)
  I1123 12:34:47.641066 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 9.522873ms)
  I1123 12:34:47.641121 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 9.548135ms)
  I1123 12:34:47.641167 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 9.684809ms)
  I1123 12:34:47.641206 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 9.543053ms)
  I1123 12:34:47.641112 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 9.523582ms)
  I1123 12:34:47.641304 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 9.693934ms)
  I1123 12:34:47.641523 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 9.807877ms)
  I1123 12:34:47.641595 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.889549ms)
  I1123 12:34:47.641618 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 10.193075ms)
  I1123 12:34:47.642619 20 proxy.go:558] (3) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 10.937285ms)
  I1123 12:34:47.652000 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.061631ms)
  I1123 12:34:47.652139 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.8891ms)
  I1123 12:34:47.652303 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.165559ms)
  I1123 12:34:47.652392 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 5.159034ms)
  I1123 12:34:47.653091 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.912232ms)
  I1123 12:34:47.653283 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 7.281979ms)
  I1123 12:34:47.653336 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 7.520077ms)
  I1123 12:34:47.653395 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.382467ms)
  I1123 12:34:47.653408 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 7.514767ms)
  I1123 12:34:47.653422 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 7.270662ms)
  I1123 12:34:47.653722 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.614649ms)
  I1123 12:34:47.654081 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 7.153307ms)
  I1123 12:34:47.654098 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 7.010264ms)
  I1123 12:34:47.655908 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 10.236643ms)
  I1123 12:34:47.656027 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 9.836077ms)
  I1123 12:34:47.656653 20 proxy.go:558] (4) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 10.585854ms)
  I1123 12:34:47.660830 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 4.046231ms)
  I1123 12:34:47.662392 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.274481ms)
  I1123 12:34:47.662392 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.484214ms)
  I1123 12:34:47.662798 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 5.543629ms)
  I1123 12:34:47.663286 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.124451ms)
  I1123 12:34:47.663306 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.22028ms)
  I1123 12:34:47.663679 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 6.80024ms)
  I1123 12:34:47.664013 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 7.077866ms)
  I1123 12:34:47.664112 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 7.125233ms)
  I1123 12:34:47.664306 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 7.444425ms)
  I1123 12:34:47.664326 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.615709ms)
  I1123 12:34:47.664700 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 7.645109ms)
  I1123 12:34:47.665208 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.388615ms)
  I1123 12:34:47.665404 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.21164ms)
  I1123 12:34:47.665475 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.45582ms)
  I1123 12:34:47.665626 20 proxy.go:558] (5) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 8.400552ms)
  I1123 12:34:47.670529 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 4.825663ms)
  I1123 12:34:47.670529 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 4.65191ms)
  I1123 12:34:47.670796 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 4.73367ms)
  I1123 12:34:47.670816 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 4.882037ms)
  I1123 12:34:47.671168 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.279738ms)
  I1123 12:34:47.672547 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.528628ms)
  I1123 12:34:47.672574 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.786666ms)
  I1123 12:34:47.672575 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 6.754744ms)
  I1123 12:34:47.672640 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.726506ms)
  I1123 12:34:47.672652 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.806852ms)
  I1123 12:34:47.672753 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 7.103377ms)
  I1123 12:34:47.672798 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 6.826953ms)
  I1123 12:34:47.673764 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.725736ms)
  I1123 12:34:47.673866 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.122084ms)
  I1123 12:34:47.674156 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 8.160505ms)
  I1123 12:34:47.675244 20 proxy.go:558] (6) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 9.162474ms)
  I1123 12:34:47.680305 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 4.817284ms)
  I1123 12:34:47.681886 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.517672ms)
  I1123 12:34:47.682260 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.666309ms)
  I1123 12:34:47.682280 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 7.000859ms)
  I1123 12:34:47.682378 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 7.021594ms)
  I1123 12:34:47.682388 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 7.054872ms)
  I1123 12:34:47.682394 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.817713ms)
  I1123 12:34:47.682402 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 7.019566ms)
  I1123 12:34:47.682404 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 6.787309ms)
  I1123 12:34:47.682414 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 7.138854ms)
  I1123 12:34:47.682423 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 6.900204ms)
  I1123 12:34:47.682941 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.524256ms)
  I1123 12:34:47.683548 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.237413ms)
  I1123 12:34:47.683624 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.190243ms)
  I1123 12:34:47.685134 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 9.732235ms)
  I1123 12:34:47.685685 20 proxy.go:558] (7) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 10.128416ms)
  I1123 12:34:47.689610 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 3.888497ms)
  I1123 12:34:47.691778 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.710163ms)
  I1123 12:34:47.692015 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 5.991095ms)
  I1123 12:34:47.692015 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 6.036463ms)
  I1123 12:34:47.693157 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 7.278457ms)
  I1123 12:34:47.693196 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 7.157769ms)
  I1123 12:34:47.693551 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 7.465483ms)
  I1123 12:34:47.694039 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.239818ms)
  I1123 12:34:47.694081 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 8.137276ms)
  I1123 12:34:47.694249 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 8.253335ms)
  I1123 12:34:47.694329 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 8.220771ms)
  I1123 12:34:47.694579 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 8.671581ms)
  I1123 12:34:47.695023 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 8.952489ms)
  I1123 12:34:47.695042 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 9.182328ms)
  I1123 12:34:47.695164 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 9.235727ms)
  I1123 12:34:47.696205 20 proxy.go:558] (8) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 10.364345ms)
  I1123 12:34:47.700878 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 4.598493ms)
  I1123 12:34:47.701107 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 4.864163ms)
  I1123 12:34:47.702335 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.979468ms)
  I1123 12:34:47.702352 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.953778ms)
  I1123 12:34:47.702368 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 5.867411ms)
  I1123 12:34:47.702393 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.063575ms)
  I1123 12:34:47.702406 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.989418ms)
  I1123 12:34:47.702926 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 6.614897ms)
  I1123 12:34:47.703511 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.974493ms)
  I1123 12:34:47.703517 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 7.136776ms)
  I1123 12:34:47.703618 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 7.184554ms)
  I1123 12:34:47.704122 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 7.673805ms)
  I1123 12:34:47.704172 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 7.703221ms)
  I1123 12:34:47.704534 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.981829ms)
  I1123 12:34:47.705313 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 8.793561ms)
  I1123 12:34:47.706221 20 proxy.go:558] (9) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.732245ms)
  I1123 12:34:47.710310 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 3.960368ms)
  I1123 12:34:47.712348 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.810721ms)
  I1123 12:34:47.712561 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.130438ms)
  I1123 12:34:47.712567 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.978439ms)
  I1123 12:34:47.712621 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 6.000199ms)
  I1123 12:34:47.712681 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 6.076188ms)
  I1123 12:34:47.712801 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.340476ms)
  I1123 12:34:47.712815 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.303227ms)
  I1123 12:34:47.712930 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.43526ms)
  I1123 12:34:47.713099 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 6.845623ms)
  I1123 12:34:47.713158 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 6.683077ms)
  I1123 12:34:47.713606 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.036782ms)
  I1123 12:34:47.713787 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.457656ms)
  I1123 12:34:47.714676 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 8.276705ms)
  I1123 12:34:47.714820 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.266943ms)
  I1123 12:34:47.715810 20 proxy.go:558] (10) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 9.399518ms)
  I1123 12:34:47.719778 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 3.875788ms)
  I1123 12:34:47.720292 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 4.448843ms)
  I1123 12:34:47.721051 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.102036ms)
  I1123 12:34:47.721061 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 5.120452ms)
  I1123 12:34:47.721077 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.089238ms)
  I1123 12:34:47.721768 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 5.710108ms)
  I1123 12:34:47.722018 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 5.943833ms)
  I1123 12:34:47.722159 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.069338ms)
  I1123 12:34:47.722308 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.266646ms)
  I1123 12:34:47.722308 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 6.301863ms)
  I1123 12:34:47.724089 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.946677ms)
  I1123 12:34:47.724314 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 8.125996ms)
  I1123 12:34:47.724371 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.265714ms)
  I1123 12:34:47.724897 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.870342ms)
  I1123 12:34:47.725820 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 9.660023ms)
  I1123 12:34:47.726262 20 proxy.go:558] (11) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 10.140781ms)
  I1123 12:34:47.730777 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 4.494397ms)
  I1123 12:34:47.730842 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 4.519601ms)
  I1123 12:34:47.732314 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.932598ms)
  I1123 12:34:47.732362 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 5.774667ms)
  I1123 12:34:47.732379 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 5.955743ms)
  I1123 12:34:47.732431 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.824558ms)
  I1123 12:34:47.732482 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 5.968921ms)
  I1123 12:34:47.732495 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.013155ms)
  I1123 12:34:47.732676 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.106718ms)
  I1123 12:34:47.732722 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.225905ms)
  I1123 12:34:47.735545 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.082001ms)
  I1123 12:34:47.735553 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 9.189468ms)
  I1123 12:34:47.735571 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 9.171204ms)
  I1123 12:34:47.735872 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 9.336087ms)
  I1123 12:34:47.737290 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 10.738705ms)
  I1123 12:34:47.737293 20 proxy.go:558] (12) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 10.852061ms)
  I1123 12:34:47.742576 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.256929ms)
  I1123 12:34:47.742840 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.312875ms)
  I1123 12:34:47.742840 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 5.451207ms)
  I1123 12:34:47.744439 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.817723ms)
  I1123 12:34:47.744449 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.810819ms)
  I1123 12:34:47.744530 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 6.872903ms)
  I1123 12:34:47.744868 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 7.144892ms)
  I1123 12:34:47.744885 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 7.452432ms)
  I1123 12:34:47.744897 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 7.215289ms)
  I1123 12:34:47.745066 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 7.558788ms)
  I1123 12:34:47.745081 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 7.383748ms)
  I1123 12:34:47.745877 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.308999ms)
  I1123 12:34:47.746001 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.548069ms)
  I1123 12:34:47.746207 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 8.611391ms)
  I1123 12:34:47.747998 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 10.443939ms)
  I1123 12:34:47.748154 20 proxy.go:558] (13) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 10.674828ms)
  I1123 12:34:47.752379 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 4.134476ms)
  I1123 12:34:47.753974 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 5.598205ms)
  I1123 12:34:47.754570 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 6.056177ms)
  I1123 12:34:47.754885 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.472711ms)
  I1123 12:34:47.755131 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.851368ms)
  I1123 12:34:47.755439 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 7.009738ms)
  I1123 12:34:47.755537 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 7.045671ms)
  I1123 12:34:47.755555 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 7.094176ms)
  I1123 12:34:47.755675 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 7.301382ms)
  I1123 12:34:47.755709 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.318481ms)
  I1123 12:34:47.755911 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 7.611102ms)
  I1123 12:34:47.756167 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 7.988882ms)
  I1123 12:34:47.756952 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.634146ms)
  I1123 12:34:47.757300 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 8.825044ms)
  I1123 12:34:47.757404 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.959017ms)
  I1123 12:34:47.757919 20 proxy.go:558] (14) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.580617ms)
  I1123 12:34:47.762172 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 4.136651ms)
  I1123 12:34:47.762580 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 4.571761ms)
  I1123 12:34:47.762708 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 4.762744ms)
  I1123 12:34:47.763099 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 4.839695ms)
  I1123 12:34:47.763102 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 4.884234ms)
  I1123 12:34:47.764103 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.917084ms)
  I1123 12:34:47.764222 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 5.984559ms)
  I1123 12:34:47.764341 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.206473ms)
  I1123 12:34:47.764344 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.055244ms)
  I1123 12:34:47.764491 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.423129ms)
  I1123 12:34:47.764885 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 6.781532ms)
  I1123 12:34:47.765370 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 7.200524ms)
  I1123 12:34:47.766492 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.274912ms)
  I1123 12:34:47.766997 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.909699ms)
  I1123 12:34:47.766997 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.720258ms)
  I1123 12:34:47.768420 20 proxy.go:558] (15) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 10.266667ms)
  I1123 12:34:47.772394 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 3.864535ms)
  I1123 12:34:47.772399 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 3.957546ms)
  I1123 12:34:47.773551 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 5.050179ms)
  I1123 12:34:47.774001 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 5.367291ms)
  I1123 12:34:47.774016 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.260334ms)
  I1123 12:34:47.774177 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 5.403928ms)
  I1123 12:34:47.774309 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 5.729201ms)
  I1123 12:34:47.774320 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.757193ms)
  I1123 12:34:47.775142 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 6.435569ms)
  I1123 12:34:47.775502 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 6.761343ms)
  I1123 12:34:47.775585 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.928244ms)
  I1123 12:34:47.775615 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 6.891995ms)
  I1123 12:34:47.776006 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 7.387373ms)
  I1123 12:34:47.777101 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.499214ms)
  I1123 12:34:47.777110 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 8.428339ms)
  I1123 12:34:47.778793 20 proxy.go:558] (16) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 10.130793ms)
  I1123 12:34:47.783409 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 4.348927ms)
  I1123 12:34:47.783409 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 4.562758ms)
  I1123 12:34:47.783432 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 4.62067ms)
  I1123 12:34:47.784222 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 5.183152ms)
  I1123 12:34:47.784651 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 5.528245ms)
  I1123 12:34:47.784929 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.836151ms)
  I1123 12:34:47.785225 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 6.233821ms)
  I1123 12:34:47.785705 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.774342ms)
  I1123 12:34:47.785811 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 6.704275ms)
  I1123 12:34:47.785861 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.887205ms)
  I1123 12:34:47.786710 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.70519ms)
  I1123 12:34:47.787030 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.133624ms)
  I1123 12:34:47.787229 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.152423ms)
  I1123 12:34:47.787240 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 8.220616ms)
  I1123 12:34:47.788177 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 9.303433ms)
  I1123 12:34:47.788396 20 proxy.go:558] (17) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 9.48183ms)
  I1123 12:34:47.793204 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 4.785104ms)
  I1123 12:34:47.794036 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 5.451992ms)
  I1123 12:34:47.794699 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.156976ms)
  I1123 12:34:47.794998 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.304618ms)
  I1123 12:34:47.795267 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.597038ms)
  I1123 12:34:47.795361 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 6.63544ms)
  I1123 12:34:47.795378 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.777427ms)
  I1123 12:34:47.796010 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 7.448764ms)
  I1123 12:34:47.796117 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 7.643607ms)
  I1123 12:34:47.796416 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 7.707766ms)
  I1123 12:34:47.796471 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.816389ms)
  I1123 12:34:47.796521 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.017536ms)
  I1123 12:34:47.796629 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 7.993776ms)
  I1123 12:34:47.796847 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 8.077184ms)
  I1123 12:34:47.796934 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 8.318275ms)
  I1123 12:34:47.798417 20 proxy.go:558] (18) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 9.66769ms)
  I1123 12:34:47.802607 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:443/proxy/tlsrewritem... (200; 4.161044ms)
  I1123 12:34:47.802610 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">test<... (200; 4.121025ms)
  I1123 12:34:47.803949 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:460/proxy/: tls baz (200; 5.366184ms)
  I1123 12:34:47.804633 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 6.077983ms)
  I1123 12:34:47.804774 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.000556ms)
  I1123 12:34:47.804791 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:160/proxy/: foo (200; 6.262672ms)
  I1123 12:34:47.804802 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5/proxy/rewriteme">test</a> (200; 6.061391ms)
  I1123 12:34:47.805229 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/https:proxy-service-ktn9r-2qqg5:462/proxy/: tls qux (200; 6.566231ms)
  I1123 12:34:47.805661 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname2/proxy/: bar (200; 7.059796ms)
  I1123 12:34:47.805701 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/: <a href="/api/v1/namespaces/proxy-7467/pods/http:proxy-service-ktn9r-2qqg5:1080/proxy/rewriteme">... (200; 6.944539ms)
  I1123 12:34:47.805883 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/pods/proxy-service-ktn9r-2qqg5:162/proxy/: bar (200; 7.174177ms)
  I1123 12:34:47.805988 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/services/proxy-service-ktn9r:portname1/proxy/: foo (200; 7.308058ms)
  I1123 12:34:47.806654 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname2/proxy/: bar (200; 8.03307ms)
  I1123 12:34:47.807242 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname2/proxy/: tls qux (200; 8.547611ms)
  I1123 12:34:47.807418 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/services/https:proxy-service-ktn9r:tlsportname1/proxy/: tls baz (200; 8.77578ms)
  I1123 12:34:47.807515 20 proxy.go:558] (19) /api/v1/namespaces/proxy-7467/services/http:proxy-service-ktn9r:portname1/proxy/: foo (200; 8.790587ms)
  STEP: deleting ReplicationController proxy-service-ktn9r in namespace proxy-7467, will wait for the garbage collector to delete the pods @ 11/23/24 12:34:47.807
  I1123 12:34:47.871727 20 resources.go:139] Deleting ReplicationController proxy-service-ktn9r took: 8.671851ms
  I1123 12:34:47.972707 20 resources.go:163] Terminating ReplicationController proxy-service-ktn9r pods took: 100.978781ms
  I1123 12:34:50.473086 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7467" for this suite. @ 11/23/24 12:34:50.477
• [4.995 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 11/23/24 12:34:50.488
  I1123 12:34:50.488590 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pv @ 11/23/24 12:34:50.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:50.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:50.509
  STEP: Creating initial PV and PVC @ 11/23/24 12:34:50.512
  I1123 12:34:50.512131 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4535" @ 11/23/24 12:34:50.527
  STEP: Listing PVCs in namespace "pv-4535" @ 11/23/24 12:34:50.531
  STEP: Patching the PV "pv-4535-c8qhq" @ 11/23/24 12:34:50.537
  STEP: Patching the PVC "pvc-w8j9j" @ 11/23/24 12:34:50.548
  STEP: Getting PV "pv-4535-c8qhq" @ 11/23/24 12:34:50.556
  STEP: Getting PVC "pvc-w8j9j" @ 11/23/24 12:34:50.559
  STEP: Deleting PVC "pvc-w8j9j" @ 11/23/24 12:34:50.563
  STEP: Confirm deletion of PVC "pvc-w8j9j" @ 11/23/24 12:34:50.573
  STEP: Deleting PV "pv-4535-c8qhq" @ 11/23/24 12:34:52.581
  STEP: Confirm deletion of PV "pv-4535-c8qhq" @ 11/23/24 12:34:52.589
  STEP: Recreating another PV & PVC @ 11/23/24 12:34:54.6
  I1123 12:34:54.600494 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4535-vg8fz" @ 11/23/24 12:34:54.614
  STEP: Updating the PVC "pvc-t26cd" @ 11/23/24 12:34:54.648
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-t26cd=updated" @ 11/23/24 12:34:54.659
  STEP: Deleting PVC "pvc-t26cd" via DeleteCollection @ 11/23/24 12:34:54.663
  STEP: Confirm deletion of PVC "pvc-t26cd" @ 11/23/24 12:34:54.675
  STEP: Deleting PV "pv-4535-vg8fz" via DeleteCollection @ 11/23/24 12:34:56.689
  STEP: Confirm deletion of PV "pv-4535-vg8fz" @ 11/23/24 12:34:56.701
  I1123 12:34:58.711015 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1123 12:34:58.711042 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-t26cd"
  I1123 12:34:58.715038 20 pv.go:193] Deleting PersistentVolume "pv-4535-vg8fz"
  I1123 12:34:58.720083 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4535" for this suite. @ 11/23/24 12:34:58.724
• [8.245 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 11/23/24 12:34:58.733
  I1123 12:34:58.733336 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename csi-storageclass @ 11/23/24 12:34:58.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:58.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:58.756
  STEP: Creating a StorageClass @ 11/23/24 12:34:58.758
  STEP: Get StorageClass "e2e-vnhl5" @ 11/23/24 12:34:58.763
  STEP: Patching the StorageClass "e2e-vnhl5" @ 11/23/24 12:34:58.768
  STEP: Delete StorageClass "e2e-vnhl5" @ 11/23/24 12:34:58.775
  STEP: Confirm deletion of StorageClass "e2e-vnhl5" @ 11/23/24 12:34:58.783
  STEP: Create a replacement StorageClass @ 11/23/24 12:34:58.786
  STEP: Updating StorageClass "e2e-v2-wqfzx" @ 11/23/24 12:34:58.79
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-wqfzx=updated" @ 11/23/24 12:34:58.8
  STEP: Deleting StorageClass "e2e-v2-wqfzx" via DeleteCollection @ 11/23/24 12:34:58.803
  STEP: Confirm deletion of StorageClass "e2e-v2-wqfzx" @ 11/23/24 12:34:58.813
  I1123 12:34:58.817803 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-99" for this suite. @ 11/23/24 12:34:58.821
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 11/23/24 12:34:58.829
  I1123 12:34:58.829870 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 12:34:58.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:34:58.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:34:58.847
  STEP: Creating secret with name secret-test-dcae7715-e38c-425a-ad46-2eadcd880775 @ 11/23/24 12:34:58.849
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:34:58.855
  STEP: Saw pod success @ 11/23/24 12:35:02.882
  I1123 12:35:02.885761 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-41a86786-3519-4ea1-81c2-c4b8090bd34a container secret-env-test: <nil>
  STEP: delete the pod @ 11/23/24 12:35:02.896
  I1123 12:35:02.917660 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-950" for this suite. @ 11/23/24 12:35:02.922
• [4.101 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 11/23/24 12:35:02.931
  I1123 12:35:02.931422 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 12:35:02.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:02.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:02.956
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/23/24 12:35:02.959
  STEP: Saw pod success @ 11/23/24 12:35:06.986
  I1123 12:35:06.991754 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-bc9a0303-9450-42fe-9ef5-d64a9298d643 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:35:06.999
  I1123 12:35:07.016447 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7864" for this suite. @ 11/23/24 12:35:07.021
• [4.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 11/23/24 12:35:07.029
  I1123 12:35:07.029125 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:35:07.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:07.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:07.05
  I1123 12:35:07.054034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 create -f -'
  I1123 12:35:07.206553 20 builder.go:146] stderr: ""
  I1123 12:35:07.206768 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1123 12:35:07.206842 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 create -f -'
  I1123 12:35:07.350173 20 builder.go:146] stderr: ""
  I1123 12:35:07.350435 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/23/24 12:35:07.35
  I1123 12:35:08.356487 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:35:08.356523 20 framework.go:733] Found 0 / 1
  I1123 12:35:09.357379 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:35:09.357412 20 framework.go:733] Found 1 / 1
  I1123 12:35:09.357428 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1123 12:35:09.361765 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:35:09.361781 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1123 12:35:09.361825 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 describe pod agnhost-primary-jd22g'
  I1123 12:35:09.419855 20 builder.go:146] stderr: ""
  I1123 12:35:09.419908 20 builder.go:147] stdout: "Name:             agnhost-primary-jd22g\nNamespace:        kubectl-7020\nPriority:         0\nService Account:  default\nNode:             ip-172-31-20-25/172.31.20.25\nStart Time:       Sat, 23 Nov 2024 12:35:07 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.120.91\nIPs:\n  IP:           192.168.120.91\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://083155d8e4fe7e81bb28192440764ee521f26adc23b6184fddb1da0adf9f4b89\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 23 Nov 2024 12:35:07 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5nkkg (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-5nkkg:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7020/agnhost-primary-jd22g to ip-172-31-20-25\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I1123 12:35:09.419994 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 describe rc agnhost-primary'
  I1123 12:35:09.480581 20 builder.go:146] stderr: ""
  I1123 12:35:09.480612 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7020\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-jd22g\n"
  I1123 12:35:09.480654 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 describe service agnhost-primary'
  I1123 12:35:09.538540 20 builder.go:146] stderr: ""
  I1123 12:35:09.538567 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-7020\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.64\nIPs:                      10.152.183.64\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.120.91:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1123 12:35:09.544108 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 describe node ip-172-31-0-34'
  I1123 12:35:09.632292 20 builder.go:146] stderr: ""
  I1123 12:35:09.632356 20 builder.go:147] stdout: "Name:               ip-172-31-0-34\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-0-34\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 23 Nov 2024 11:52:13 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-0-34\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 23 Nov 2024 12:35:01 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 23 Nov 2024 12:08:33 +0000   Sat, 23 Nov 2024 12:08:33 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 23 Nov 2024 12:31:43 +0000   Sat, 23 Nov 2024 11:52:13 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 23 Nov 2024 12:31:43 +0000   Sat, 23 Nov 2024 11:52:13 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 23 Nov 2024 12:31:43 +0000   Sat, 23 Nov 2024 11:52:13 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 23 Nov 2024 12:31:43 +0000   Sat, 23 Nov 2024 11:54:10 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.0.34\n  Hostname:    ip-172-31-0-34\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967644Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865244Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec20ee3ce4b7841eee0d0ff2723bc37a\n  System UUID:                ec20ee3c-e4b7-841e-ee0d-0ff2723bc37a\n  Boot ID:                    d56a49b8-46c9-4fab-a76b-9dda4b678b51\n  Kernel Version:             6.8.0-1019-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.3\n  Kube-Proxy Version:         v1.31.3\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-7xcf6                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         26m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-h4c65    0 (0%)        0 (0%)      0 (0%)           0 (0%)         24m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 41m   kube-proxy       \n  Normal   Starting                 42m   kube-proxy       \n  Normal   Starting                 42m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      42m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  42m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  42m   kubelet          Node ip-172-31-0-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    42m   kubelet          Node ip-172-31-0-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     42m   kubelet          Node ip-172-31-0-34 status is now: NodeHasSufficientPID\n  Normal   Starting                 41m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      41m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  41m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  41m   kubelet          Node ip-172-31-0-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    41m   kubelet          Node ip-172-31-0-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     41m   kubelet          Node ip-172-31-0-34 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           41m   node-controller  Node ip-172-31-0-34 event: Registered Node ip-172-31-0-34 in Controller\n  Normal   NodeReady                40m   kubelet          Node ip-172-31-0-34 status is now: NodeReady\n"
  I1123 12:35:09.632428 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-7020 describe namespace kubectl-7020'
  I1123 12:35:09.689378 20 builder.go:146] stderr: ""
  I1123 12:35:09.689404 20 builder.go:147] stdout: "Name:         kubectl-7020\nLabels:       e2e-framework=kubectl\n              e2e-run=03961b8f-91a3-4687-919f-37fd21897d4a\n              kubernetes.io/metadata.name=kubectl-7020\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1123 12:35:09.689549 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7020" for this suite. @ 11/23/24 12:35:09.694
• [2.672 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 11/23/24 12:35:09.701
  I1123 12:35:09.701503 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:35:09.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:09.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:09.723
  STEP: Creating configMap with name configmap-test-volume-map-dd9b41ac-332e-4fc6-b998-3e97ec1a5c20 @ 11/23/24 12:35:09.726
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:35:09.73
  STEP: Saw pod success @ 11/23/24 12:35:13.759
  I1123 12:35:13.764480 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-configmaps-51c96c66-1b1a-4e5f-bd91-bfb4954dc72e container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:35:13.771
  I1123 12:35:13.792444 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-723" for this suite. @ 11/23/24 12:35:13.797
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/23/24 12:35:13.806
  I1123 12:35:13.806321 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svc-latency @ 11/23/24 12:35:13.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:13.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:13.823
  I1123 12:35:13.825455 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-5938 @ 11/23/24 12:35:13.825
  I1123 12:35:13.833029      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5938, replica count: 1
  I1123 12:35:14.883865      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 12:35:14.998369 20 service_latency.go:356] Created: latency-svc-wts8t
  I1123 12:35:15.003434 20 service_latency.go:363] Got endpoints: latency-svc-wts8t [19.199097ms]
  I1123 12:35:15.017191 20 service_latency.go:356] Created: latency-svc-2s7c7
  I1123 12:35:15.024287 20 service_latency.go:363] Got endpoints: latency-svc-2s7c7 [20.750356ms]
  I1123 12:35:15.028388 20 service_latency.go:356] Created: latency-svc-g58wl
  I1123 12:35:15.032932 20 service_latency.go:363] Got endpoints: latency-svc-g58wl [29.01116ms]
  I1123 12:35:15.039542 20 service_latency.go:356] Created: latency-svc-fw626
  I1123 12:35:15.043740 20 service_latency.go:356] Created: latency-svc-g4qg8
  I1123 12:35:15.045652 20 service_latency.go:363] Got endpoints: latency-svc-fw626 [41.773253ms]
  I1123 12:35:15.055261 20 service_latency.go:363] Got endpoints: latency-svc-g4qg8 [51.283928ms]
  I1123 12:35:15.057462 20 service_latency.go:356] Created: latency-svc-c9rfl
  I1123 12:35:15.063006 20 service_latency.go:363] Got endpoints: latency-svc-c9rfl [59.182592ms]
  I1123 12:35:15.070420 20 service_latency.go:356] Created: latency-svc-ll4zg
  I1123 12:35:15.074796 20 service_latency.go:356] Created: latency-svc-jf5w7
  I1123 12:35:15.086585 20 service_latency.go:363] Got endpoints: latency-svc-ll4zg [82.472197ms]
  I1123 12:35:15.092988 20 service_latency.go:356] Created: latency-svc-bp8p4
  I1123 12:35:15.098007 20 service_latency.go:363] Got endpoints: latency-svc-jf5w7 [93.87216ms]
  I1123 12:35:15.098025 20 service_latency.go:363] Got endpoints: latency-svc-bp8p4 [93.80521ms]
  I1123 12:35:15.103073 20 service_latency.go:356] Created: latency-svc-lgbjd
  I1123 12:35:15.107427 20 service_latency.go:356] Created: latency-svc-h5ths
  I1123 12:35:15.108740 20 service_latency.go:363] Got endpoints: latency-svc-lgbjd [104.584039ms]
  I1123 12:35:15.115615 20 service_latency.go:363] Got endpoints: latency-svc-h5ths [111.433437ms]
  I1123 12:35:15.117543 20 service_latency.go:356] Created: latency-svc-d52nj
  I1123 12:35:15.123559 20 service_latency.go:363] Got endpoints: latency-svc-d52nj [119.515444ms]
  I1123 12:35:15.127407 20 service_latency.go:356] Created: latency-svc-rk8gk
  I1123 12:35:15.134815 20 service_latency.go:363] Got endpoints: latency-svc-rk8gk [130.616683ms]
  I1123 12:35:15.134828 20 service_latency.go:356] Created: latency-svc-xhpml
  I1123 12:35:15.140713 20 service_latency.go:363] Got endpoints: latency-svc-xhpml [136.621433ms]
  I1123 12:35:15.142636 20 service_latency.go:356] Created: latency-svc-zl8vq
  I1123 12:35:15.149662 20 service_latency.go:363] Got endpoints: latency-svc-zl8vq [145.648319ms]
  I1123 12:35:15.156590 20 service_latency.go:356] Created: latency-svc-fjxp5
  I1123 12:35:15.163556 20 service_latency.go:363] Got endpoints: latency-svc-fjxp5 [159.496242ms]
  I1123 12:35:15.254025 20 service_latency.go:356] Created: latency-svc-fspqf
  I1123 12:35:15.254025 20 service_latency.go:356] Created: latency-svc-fq2lz
  I1123 12:35:15.254104 20 service_latency.go:356] Created: latency-svc-q6z9p
  I1123 12:35:15.274725 20 service_latency.go:356] Created: latency-svc-wwksx
  I1123 12:35:15.274921 20 service_latency.go:356] Created: latency-svc-899qr
  I1123 12:35:15.275011 20 service_latency.go:356] Created: latency-svc-rxddm
  I1123 12:35:15.275011 20 service_latency.go:356] Created: latency-svc-mn59p
  I1123 12:35:15.275086 20 service_latency.go:356] Created: latency-svc-rw8qx
  I1123 12:35:15.274921 20 service_latency.go:356] Created: latency-svc-6vkl4
  I1123 12:35:15.275097 20 service_latency.go:356] Created: latency-svc-qdwdt
  I1123 12:35:15.288174 20 service_latency.go:356] Created: latency-svc-n7cms
  I1123 12:35:15.288253 20 service_latency.go:356] Created: latency-svc-52cfm
  I1123 12:35:15.291091 20 service_latency.go:356] Created: latency-svc-6b8hn
  I1123 12:35:15.291212 20 service_latency.go:356] Created: latency-svc-crzjw
  I1123 12:35:15.291293 20 service_latency.go:356] Created: latency-svc-bdqqt
  I1123 12:35:15.299351 20 service_latency.go:363] Got endpoints: latency-svc-fspqf [236.316185ms]
  I1123 12:35:15.306233 20 service_latency.go:363] Got endpoints: latency-svc-fq2lz [273.28086ms]
  I1123 12:35:15.306422 20 service_latency.go:363] Got endpoints: latency-svc-q6z9p [208.38812ms]
  I1123 12:35:15.309043 20 service_latency.go:363] Got endpoints: latency-svc-mn59p [211.002466ms]
  I1123 12:35:15.309324 20 service_latency.go:363] Got endpoints: latency-svc-rw8qx [254.038168ms]
  I1123 12:35:15.325358 20 service_latency.go:356] Created: latency-svc-cjqtv
  I1123 12:35:15.328674 20 service_latency.go:363] Got endpoints: latency-svc-qdwdt [304.356517ms]
  I1123 12:35:15.328689 20 service_latency.go:363] Got endpoints: latency-svc-rxddm [219.923301ms]
  I1123 12:35:15.328772 20 service_latency.go:363] Got endpoints: latency-svc-899qr [193.932813ms]
  I1123 12:35:15.338155 20 service_latency.go:363] Got endpoints: latency-svc-crzjw [174.571032ms]
  I1123 12:35:15.338245 20 service_latency.go:363] Got endpoints: latency-svc-6vkl4 [197.508554ms]
  I1123 12:35:15.338320 20 service_latency.go:363] Got endpoints: latency-svc-wwksx [222.676083ms]
  I1123 12:35:15.346778 20 service_latency.go:363] Got endpoints: latency-svc-52cfm [260.169278ms]
  I1123 12:35:15.348343 20 service_latency.go:363] Got endpoints: latency-svc-cjqtv [48.963227ms]
  I1123 12:35:15.351112 20 service_latency.go:356] Created: latency-svc-m5t8b
  I1123 12:35:15.351349 20 service_latency.go:363] Got endpoints: latency-svc-bdqqt [305.672631ms]
  I1123 12:35:15.358163 20 service_latency.go:363] Got endpoints: latency-svc-n7cms [234.574737ms]
  I1123 12:35:15.358332 20 service_latency.go:363] Got endpoints: latency-svc-6b8hn [208.645753ms]
  I1123 12:35:15.366605 20 service_latency.go:363] Got endpoints: latency-svc-m5t8b [60.347067ms]
  I1123 12:35:15.367131 20 service_latency.go:356] Created: latency-svc-z5x2x
  I1123 12:35:15.372506 20 service_latency.go:363] Got endpoints: latency-svc-z5x2x [63.121758ms]
  I1123 12:35:15.374720 20 service_latency.go:356] Created: latency-svc-zxxdm
  I1123 12:35:15.383063 20 service_latency.go:363] Got endpoints: latency-svc-zxxdm [76.615555ms]
  I1123 12:35:15.385194 20 service_latency.go:356] Created: latency-svc-sqg8f
  I1123 12:35:15.394003 20 service_latency.go:363] Got endpoints: latency-svc-sqg8f [84.893765ms]
  I1123 12:35:15.396626 20 service_latency.go:356] Created: latency-svc-c6wmv
  I1123 12:35:15.404776 20 service_latency.go:363] Got endpoints: latency-svc-c6wmv [76.066256ms]
  I1123 12:35:15.406534 20 service_latency.go:356] Created: latency-svc-s5nv4
  I1123 12:35:15.415789 20 service_latency.go:363] Got endpoints: latency-svc-s5nv4 [87.003278ms]
  I1123 12:35:15.418051 20 service_latency.go:356] Created: latency-svc-58nn9
  I1123 12:35:15.425473 20 service_latency.go:356] Created: latency-svc-5zjkb
  I1123 12:35:15.431284 20 service_latency.go:356] Created: latency-svc-hbjcj
  I1123 12:35:15.439067 20 service_latency.go:356] Created: latency-svc-c44np
  I1123 12:35:15.445457 20 service_latency.go:356] Created: latency-svc-mvgf8
  I1123 12:35:15.452534 20 service_latency.go:356] Created: latency-svc-mmvsg
  I1123 12:35:15.453539 20 service_latency.go:363] Got endpoints: latency-svc-58nn9 [124.836074ms]
  I1123 12:35:15.461420 20 service_latency.go:356] Created: latency-svc-8jh72
  I1123 12:35:15.467556 20 service_latency.go:356] Created: latency-svc-l4dd2
  I1123 12:35:15.474418 20 service_latency.go:356] Created: latency-svc-l6wft
  I1123 12:35:15.479353 20 service_latency.go:356] Created: latency-svc-sp6p2
  I1123 12:35:15.486452 20 service_latency.go:356] Created: latency-svc-gl9xp
  I1123 12:35:15.492722 20 service_latency.go:356] Created: latency-svc-v9xtk
  I1123 12:35:15.500234 20 service_latency.go:356] Created: latency-svc-29jtd
  I1123 12:35:15.507911 20 service_latency.go:363] Got endpoints: latency-svc-5zjkb [169.726107ms]
  I1123 12:35:15.510193 20 service_latency.go:356] Created: latency-svc-zd5fr
  I1123 12:35:15.514048 20 service_latency.go:356] Created: latency-svc-qtghd
  I1123 12:35:15.522930 20 service_latency.go:356] Created: latency-svc-4z5vc
  I1123 12:35:15.529709 20 service_latency.go:356] Created: latency-svc-cpxjs
  I1123 12:35:15.554863 20 service_latency.go:363] Got endpoints: latency-svc-hbjcj [216.59675ms]
  I1123 12:35:15.567495 20 service_latency.go:356] Created: latency-svc-xngld
  I1123 12:35:15.604550 20 service_latency.go:363] Got endpoints: latency-svc-c44np [266.215185ms]
  I1123 12:35:15.620580 20 service_latency.go:356] Created: latency-svc-n2m8g
  I1123 12:35:15.655168 20 service_latency.go:363] Got endpoints: latency-svc-mvgf8 [308.361469ms]
  I1123 12:35:15.669165 20 service_latency.go:356] Created: latency-svc-gmlp5
  I1123 12:35:15.705404 20 service_latency.go:363] Got endpoints: latency-svc-mmvsg [357.030931ms]
  I1123 12:35:15.716154 20 service_latency.go:356] Created: latency-svc-ptz4f
  I1123 12:35:15.754638 20 service_latency.go:363] Got endpoints: latency-svc-8jh72 [403.268145ms]
  I1123 12:35:15.765657 20 service_latency.go:356] Created: latency-svc-msj2j
  I1123 12:35:15.804991 20 service_latency.go:363] Got endpoints: latency-svc-l4dd2 [446.642604ms]
  I1123 12:35:15.817523 20 service_latency.go:356] Created: latency-svc-bk5fz
  I1123 12:35:15.854719 20 service_latency.go:363] Got endpoints: latency-svc-l6wft [496.526568ms]
  I1123 12:35:15.866787 20 service_latency.go:356] Created: latency-svc-z8w5r
  I1123 12:35:15.904181 20 service_latency.go:363] Got endpoints: latency-svc-sp6p2 [537.434786ms]
  I1123 12:35:15.916779 20 service_latency.go:356] Created: latency-svc-m7r4b
  I1123 12:35:15.955465 20 service_latency.go:363] Got endpoints: latency-svc-gl9xp [582.840747ms]
  I1123 12:35:15.969497 20 service_latency.go:356] Created: latency-svc-2qphs
  I1123 12:35:16.004450 20 service_latency.go:363] Got endpoints: latency-svc-v9xtk [621.360793ms]
  I1123 12:35:16.015919 20 service_latency.go:356] Created: latency-svc-cxfcr
  I1123 12:35:16.053905 20 service_latency.go:363] Got endpoints: latency-svc-29jtd [659.872217ms]
  I1123 12:35:16.066227 20 service_latency.go:356] Created: latency-svc-cqfdg
  I1123 12:35:16.105695 20 service_latency.go:363] Got endpoints: latency-svc-zd5fr [700.890381ms]
  I1123 12:35:16.119650 20 service_latency.go:356] Created: latency-svc-qpq2n
  I1123 12:35:16.155391 20 service_latency.go:363] Got endpoints: latency-svc-qtghd [739.561472ms]
  I1123 12:35:16.170065 20 service_latency.go:356] Created: latency-svc-c6crm
  I1123 12:35:16.204379 20 service_latency.go:363] Got endpoints: latency-svc-4z5vc [750.806862ms]
  I1123 12:35:16.217468 20 service_latency.go:356] Created: latency-svc-cfp58
  I1123 12:35:16.255740 20 service_latency.go:363] Got endpoints: latency-svc-cpxjs [747.795918ms]
  I1123 12:35:16.270750 20 service_latency.go:356] Created: latency-svc-hf4z6
  I1123 12:35:16.306712 20 service_latency.go:363] Got endpoints: latency-svc-xngld [751.820184ms]
  I1123 12:35:16.320817 20 service_latency.go:356] Created: latency-svc-pf5pq
  I1123 12:35:16.353512 20 service_latency.go:363] Got endpoints: latency-svc-n2m8g [748.936393ms]
  I1123 12:35:16.366659 20 service_latency.go:356] Created: latency-svc-dwl7q
  I1123 12:35:16.407160 20 service_latency.go:363] Got endpoints: latency-svc-gmlp5 [751.936634ms]
  I1123 12:35:16.420823 20 service_latency.go:356] Created: latency-svc-xvnrj
  I1123 12:35:16.454915 20 service_latency.go:363] Got endpoints: latency-svc-ptz4f [749.485757ms]
  I1123 12:35:16.468770 20 service_latency.go:356] Created: latency-svc-mzmfz
  I1123 12:35:16.510109 20 service_latency.go:363] Got endpoints: latency-svc-msj2j [755.440844ms]
  I1123 12:35:16.530313 20 service_latency.go:356] Created: latency-svc-lwdz2
  I1123 12:35:16.558021 20 service_latency.go:363] Got endpoints: latency-svc-bk5fz [752.997854ms]
  I1123 12:35:16.580202 20 service_latency.go:356] Created: latency-svc-5hj8j
  I1123 12:35:16.605343 20 service_latency.go:363] Got endpoints: latency-svc-z8w5r [750.593452ms]
  I1123 12:35:16.616249 20 service_latency.go:356] Created: latency-svc-kt6l9
  I1123 12:35:16.654657 20 service_latency.go:363] Got endpoints: latency-svc-m7r4b [750.434971ms]
  I1123 12:35:16.666851 20 service_latency.go:356] Created: latency-svc-69wk4
  I1123 12:35:16.705495 20 service_latency.go:363] Got endpoints: latency-svc-2qphs [749.996008ms]
  I1123 12:35:16.719394 20 service_latency.go:356] Created: latency-svc-77q2w
  I1123 12:35:16.754521 20 service_latency.go:363] Got endpoints: latency-svc-cxfcr [750.038095ms]
  I1123 12:35:16.768883 20 service_latency.go:356] Created: latency-svc-rgmtp
  I1123 12:35:16.803846 20 service_latency.go:363] Got endpoints: latency-svc-cqfdg [749.910417ms]
  I1123 12:35:16.816323 20 service_latency.go:356] Created: latency-svc-2czr4
  I1123 12:35:16.857136 20 service_latency.go:363] Got endpoints: latency-svc-qpq2n [751.413758ms]
  I1123 12:35:16.869538 20 service_latency.go:356] Created: latency-svc-qnplk
  I1123 12:35:16.906229 20 service_latency.go:363] Got endpoints: latency-svc-c6crm [750.808174ms]
  I1123 12:35:16.918257 20 service_latency.go:356] Created: latency-svc-7h52n
  I1123 12:35:16.954267 20 service_latency.go:363] Got endpoints: latency-svc-cfp58 [749.852265ms]
  I1123 12:35:16.969164 20 service_latency.go:356] Created: latency-svc-mkgvk
  I1123 12:35:17.004747 20 service_latency.go:363] Got endpoints: latency-svc-hf4z6 [748.829675ms]
  I1123 12:35:17.019172 20 service_latency.go:356] Created: latency-svc-q7vwn
  I1123 12:35:17.054390 20 service_latency.go:363] Got endpoints: latency-svc-pf5pq [747.640884ms]
  I1123 12:35:17.066590 20 service_latency.go:356] Created: latency-svc-4qldk
  I1123 12:35:17.104938 20 service_latency.go:363] Got endpoints: latency-svc-dwl7q [751.395938ms]
  I1123 12:35:17.116077 20 service_latency.go:356] Created: latency-svc-x2q5k
  I1123 12:35:17.156521 20 service_latency.go:363] Got endpoints: latency-svc-xvnrj [749.269612ms]
  I1123 12:35:17.169888 20 service_latency.go:356] Created: latency-svc-h6792
  I1123 12:35:17.204636 20 service_latency.go:363] Got endpoints: latency-svc-mzmfz [749.6376ms]
  I1123 12:35:17.217172 20 service_latency.go:356] Created: latency-svc-dk9lk
  I1123 12:35:17.253944 20 service_latency.go:363] Got endpoints: latency-svc-lwdz2 [743.802624ms]
  I1123 12:35:17.266867 20 service_latency.go:356] Created: latency-svc-6qbw6
  I1123 12:35:17.304595 20 service_latency.go:363] Got endpoints: latency-svc-5hj8j [746.542519ms]
  I1123 12:35:17.317994 20 service_latency.go:356] Created: latency-svc-psd9x
  I1123 12:35:17.356331 20 service_latency.go:363] Got endpoints: latency-svc-kt6l9 [750.958035ms]
  I1123 12:35:17.368608 20 service_latency.go:356] Created: latency-svc-mlk2h
  I1123 12:35:17.404621 20 service_latency.go:363] Got endpoints: latency-svc-69wk4 [749.925403ms]
  I1123 12:35:17.425750 20 service_latency.go:356] Created: latency-svc-k58nh
  I1123 12:35:17.457592 20 service_latency.go:363] Got endpoints: latency-svc-77q2w [752.066739ms]
  I1123 12:35:17.480329 20 service_latency.go:356] Created: latency-svc-mlhbq
  I1123 12:35:17.505001 20 service_latency.go:363] Got endpoints: latency-svc-rgmtp [750.448808ms]
  I1123 12:35:17.518729 20 service_latency.go:356] Created: latency-svc-hpmzl
  I1123 12:35:17.555254 20 service_latency.go:363] Got endpoints: latency-svc-2czr4 [751.36859ms]
  I1123 12:35:17.568224 20 service_latency.go:356] Created: latency-svc-7t297
  I1123 12:35:17.605482 20 service_latency.go:363] Got endpoints: latency-svc-qnplk [748.319387ms]
  I1123 12:35:17.619405 20 service_latency.go:356] Created: latency-svc-pc28k
  I1123 12:35:17.655455 20 service_latency.go:363] Got endpoints: latency-svc-7h52n [749.179622ms]
  I1123 12:35:17.670008 20 service_latency.go:356] Created: latency-svc-5jf5m
  I1123 12:35:17.704378 20 service_latency.go:363] Got endpoints: latency-svc-mkgvk [750.079071ms]
  I1123 12:35:17.718252 20 service_latency.go:356] Created: latency-svc-7zwgt
  I1123 12:35:17.757018 20 service_latency.go:363] Got endpoints: latency-svc-q7vwn [752.238183ms]
  I1123 12:35:17.772047 20 service_latency.go:356] Created: latency-svc-7jv4c
  I1123 12:35:17.806182 20 service_latency.go:363] Got endpoints: latency-svc-4qldk [751.762618ms]
  I1123 12:35:17.820194 20 service_latency.go:356] Created: latency-svc-mbqlb
  I1123 12:35:17.853627 20 service_latency.go:363] Got endpoints: latency-svc-x2q5k [748.643727ms]
  I1123 12:35:17.865935 20 service_latency.go:356] Created: latency-svc-hz4hs
  I1123 12:35:17.904922 20 service_latency.go:363] Got endpoints: latency-svc-h6792 [748.31346ms]
  I1123 12:35:17.919476 20 service_latency.go:356] Created: latency-svc-ntqqd
  I1123 12:35:17.956399 20 service_latency.go:363] Got endpoints: latency-svc-dk9lk [751.734715ms]
  I1123 12:35:17.969114 20 service_latency.go:356] Created: latency-svc-8cxp5
  I1123 12:35:18.005338 20 service_latency.go:363] Got endpoints: latency-svc-6qbw6 [751.344937ms]
  I1123 12:35:18.016923 20 service_latency.go:356] Created: latency-svc-hjdnk
  I1123 12:35:18.056290 20 service_latency.go:363] Got endpoints: latency-svc-psd9x [751.66403ms]
  I1123 12:35:18.072978 20 service_latency.go:356] Created: latency-svc-lgg9w
  I1123 12:35:18.104693 20 service_latency.go:363] Got endpoints: latency-svc-mlk2h [748.007899ms]
  I1123 12:35:18.117012 20 service_latency.go:356] Created: latency-svc-wq984
  I1123 12:35:18.154279 20 service_latency.go:363] Got endpoints: latency-svc-k58nh [749.62739ms]
  I1123 12:35:18.168433 20 service_latency.go:356] Created: latency-svc-wjlk2
  I1123 12:35:18.206446 20 service_latency.go:363] Got endpoints: latency-svc-mlhbq [748.821368ms]
  I1123 12:35:18.220596 20 service_latency.go:356] Created: latency-svc-hcb7x
  I1123 12:35:18.254770 20 service_latency.go:363] Got endpoints: latency-svc-hpmzl [749.618937ms]
  I1123 12:35:18.265977 20 service_latency.go:356] Created: latency-svc-5fvqv
  I1123 12:35:18.304814 20 service_latency.go:363] Got endpoints: latency-svc-7t297 [749.528006ms]
  I1123 12:35:18.318201 20 service_latency.go:356] Created: latency-svc-422bd
  I1123 12:35:18.356188 20 service_latency.go:363] Got endpoints: latency-svc-pc28k [750.673596ms]
  I1123 12:35:18.369931 20 service_latency.go:356] Created: latency-svc-rp2b5
  I1123 12:35:18.404313 20 service_latency.go:363] Got endpoints: latency-svc-5jf5m [748.823768ms]
  I1123 12:35:18.417398 20 service_latency.go:356] Created: latency-svc-vzf6r
  I1123 12:35:18.454901 20 service_latency.go:363] Got endpoints: latency-svc-7zwgt [750.488761ms]
  I1123 12:35:18.466793 20 service_latency.go:356] Created: latency-svc-q2gd6
  I1123 12:35:18.506333 20 service_latency.go:363] Got endpoints: latency-svc-7jv4c [749.283604ms]
  I1123 12:35:18.518275 20 service_latency.go:356] Created: latency-svc-fpwdq
  I1123 12:35:18.554029 20 service_latency.go:363] Got endpoints: latency-svc-mbqlb [747.817733ms]
  I1123 12:35:18.566404 20 service_latency.go:356] Created: latency-svc-pcrtl
  I1123 12:35:18.604483 20 service_latency.go:363] Got endpoints: latency-svc-hz4hs [750.826354ms]
  I1123 12:35:18.619335 20 service_latency.go:356] Created: latency-svc-9jc54
  I1123 12:35:18.654860 20 service_latency.go:363] Got endpoints: latency-svc-ntqqd [749.910209ms]
  I1123 12:35:18.666267 20 service_latency.go:356] Created: latency-svc-gmkzw
  I1123 12:35:18.706674 20 service_latency.go:363] Got endpoints: latency-svc-8cxp5 [750.247354ms]
  I1123 12:35:18.719535 20 service_latency.go:356] Created: latency-svc-pgtln
  I1123 12:35:18.756216 20 service_latency.go:363] Got endpoints: latency-svc-hjdnk [750.846802ms]
  I1123 12:35:18.767401 20 service_latency.go:356] Created: latency-svc-tksf8
  I1123 12:35:18.805462 20 service_latency.go:363] Got endpoints: latency-svc-lgg9w [749.143214ms]
  I1123 12:35:18.819773 20 service_latency.go:356] Created: latency-svc-ccrnx
  I1123 12:35:18.853326 20 service_latency.go:363] Got endpoints: latency-svc-wq984 [748.596437ms]
  I1123 12:35:18.867521 20 service_latency.go:356] Created: latency-svc-g5rm4
  I1123 12:35:18.903236 20 service_latency.go:363] Got endpoints: latency-svc-wjlk2 [748.928993ms]
  I1123 12:35:18.917706 20 service_latency.go:356] Created: latency-svc-79ljq
  I1123 12:35:18.954576 20 service_latency.go:363] Got endpoints: latency-svc-hcb7x [748.099737ms]
  I1123 12:35:18.967495 20 service_latency.go:356] Created: latency-svc-bncw8
  I1123 12:35:19.004246 20 service_latency.go:363] Got endpoints: latency-svc-5fvqv [749.432469ms]
  I1123 12:35:19.015514 20 service_latency.go:356] Created: latency-svc-j8vgw
  I1123 12:35:19.053125 20 service_latency.go:363] Got endpoints: latency-svc-422bd [748.099711ms]
  I1123 12:35:19.064800 20 service_latency.go:356] Created: latency-svc-m28r9
  I1123 12:35:19.103220 20 service_latency.go:363] Got endpoints: latency-svc-rp2b5 [746.970119ms]
  I1123 12:35:19.119374 20 service_latency.go:356] Created: latency-svc-s87vk
  I1123 12:35:19.155312 20 service_latency.go:363] Got endpoints: latency-svc-vzf6r [750.96218ms]
  I1123 12:35:19.170036 20 service_latency.go:356] Created: latency-svc-rwvcg
  I1123 12:35:19.203886 20 service_latency.go:363] Got endpoints: latency-svc-q2gd6 [748.954817ms]
  I1123 12:35:19.217196 20 service_latency.go:356] Created: latency-svc-t2mhv
  I1123 12:35:19.254707 20 service_latency.go:363] Got endpoints: latency-svc-fpwdq [748.346915ms]
  I1123 12:35:19.267310 20 service_latency.go:356] Created: latency-svc-mpmpj
  I1123 12:35:19.307084 20 service_latency.go:363] Got endpoints: latency-svc-pcrtl [752.92407ms]
  I1123 12:35:19.320680 20 service_latency.go:356] Created: latency-svc-lptrk
  I1123 12:35:19.354206 20 service_latency.go:363] Got endpoints: latency-svc-9jc54 [749.694742ms]
  I1123 12:35:19.366566 20 service_latency.go:356] Created: latency-svc-lf8x4
  I1123 12:35:19.403849 20 service_latency.go:363] Got endpoints: latency-svc-gmkzw [748.950856ms]
  I1123 12:35:19.419614 20 service_latency.go:356] Created: latency-svc-6vkj9
  I1123 12:35:19.456371 20 service_latency.go:363] Got endpoints: latency-svc-pgtln [749.660898ms]
  I1123 12:35:19.469570 20 service_latency.go:356] Created: latency-svc-f4hlx
  I1123 12:35:19.505292 20 service_latency.go:363] Got endpoints: latency-svc-tksf8 [749.039606ms]
  I1123 12:35:19.517691 20 service_latency.go:356] Created: latency-svc-r2dqk
  I1123 12:35:19.554002 20 service_latency.go:363] Got endpoints: latency-svc-ccrnx [748.499144ms]
  I1123 12:35:19.567828 20 service_latency.go:356] Created: latency-svc-s6n9s
  I1123 12:35:19.604564 20 service_latency.go:363] Got endpoints: latency-svc-g5rm4 [751.214561ms]
  I1123 12:35:19.618580 20 service_latency.go:356] Created: latency-svc-vzs2f
  I1123 12:35:19.655085 20 service_latency.go:363] Got endpoints: latency-svc-79ljq [751.821935ms]
  I1123 12:35:19.670191 20 service_latency.go:356] Created: latency-svc-7vcl5
  I1123 12:35:19.705217 20 service_latency.go:363] Got endpoints: latency-svc-bncw8 [750.612064ms]
  I1123 12:35:19.719061 20 service_latency.go:356] Created: latency-svc-mm49k
  I1123 12:35:19.756048 20 service_latency.go:363] Got endpoints: latency-svc-j8vgw [751.760674ms]
  I1123 12:35:19.774417 20 service_latency.go:356] Created: latency-svc-d7z49
  I1123 12:35:19.804876 20 service_latency.go:363] Got endpoints: latency-svc-m28r9 [751.722508ms]
  I1123 12:35:19.817596 20 service_latency.go:356] Created: latency-svc-vhgcg
  I1123 12:35:19.854133 20 service_latency.go:363] Got endpoints: latency-svc-s87vk [750.882516ms]
  I1123 12:35:19.868362 20 service_latency.go:356] Created: latency-svc-xpx2j
  I1123 12:35:19.911716 20 service_latency.go:363] Got endpoints: latency-svc-rwvcg [756.37938ms]
  I1123 12:35:19.924303 20 service_latency.go:356] Created: latency-svc-wnwbh
  I1123 12:35:19.955394 20 service_latency.go:363] Got endpoints: latency-svc-t2mhv [751.479312ms]
  I1123 12:35:19.967330 20 service_latency.go:356] Created: latency-svc-ntlrs
  I1123 12:35:20.005431 20 service_latency.go:363] Got endpoints: latency-svc-mpmpj [750.693854ms]
  I1123 12:35:20.019319 20 service_latency.go:356] Created: latency-svc-d2vnv
  I1123 12:35:20.054068 20 service_latency.go:363] Got endpoints: latency-svc-lptrk [746.88552ms]
  I1123 12:35:20.067805 20 service_latency.go:356] Created: latency-svc-j886k
  I1123 12:35:20.104130 20 service_latency.go:363] Got endpoints: latency-svc-lf8x4 [749.895374ms]
  I1123 12:35:20.114594 20 service_latency.go:356] Created: latency-svc-bkv2j
  I1123 12:35:20.157746 20 service_latency.go:363] Got endpoints: latency-svc-6vkj9 [753.845478ms]
  I1123 12:35:20.171757 20 service_latency.go:356] Created: latency-svc-nmgs9
  I1123 12:35:20.206337 20 service_latency.go:363] Got endpoints: latency-svc-f4hlx [749.94455ms]
  I1123 12:35:20.218635 20 service_latency.go:356] Created: latency-svc-nr9jq
  I1123 12:35:20.252834 20 service_latency.go:363] Got endpoints: latency-svc-r2dqk [747.512696ms]
  I1123 12:35:20.264698 20 service_latency.go:356] Created: latency-svc-k7xl8
  I1123 12:35:20.303602 20 service_latency.go:363] Got endpoints: latency-svc-s6n9s [749.572424ms]
  I1123 12:35:20.314704 20 service_latency.go:356] Created: latency-svc-mwbtj
  I1123 12:35:20.355617 20 service_latency.go:363] Got endpoints: latency-svc-vzs2f [751.001246ms]
  I1123 12:35:20.370066 20 service_latency.go:356] Created: latency-svc-zpbbp
  I1123 12:35:20.405192 20 service_latency.go:363] Got endpoints: latency-svc-7vcl5 [750.071448ms]
  I1123 12:35:20.418282 20 service_latency.go:356] Created: latency-svc-bdqx6
  I1123 12:35:20.454449 20 service_latency.go:363] Got endpoints: latency-svc-mm49k [749.201624ms]
  I1123 12:35:20.468862 20 service_latency.go:356] Created: latency-svc-g6rrw
  I1123 12:35:20.505294 20 service_latency.go:363] Got endpoints: latency-svc-d7z49 [749.209174ms]
  I1123 12:35:20.517426 20 service_latency.go:356] Created: latency-svc-w9k7l
  I1123 12:35:20.558371 20 service_latency.go:363] Got endpoints: latency-svc-vhgcg [753.437088ms]
  I1123 12:35:20.572129 20 service_latency.go:356] Created: latency-svc-x9lzl
  I1123 12:35:20.605848 20 service_latency.go:363] Got endpoints: latency-svc-xpx2j [751.683647ms]
  I1123 12:35:20.618673 20 service_latency.go:356] Created: latency-svc-tq42x
  I1123 12:35:20.653741 20 service_latency.go:363] Got endpoints: latency-svc-wnwbh [741.989588ms]
  I1123 12:35:20.670351 20 service_latency.go:356] Created: latency-svc-cdk9x
  I1123 12:35:20.705347 20 service_latency.go:363] Got endpoints: latency-svc-ntlrs [749.921447ms]
  I1123 12:35:20.718944 20 service_latency.go:356] Created: latency-svc-84ldh
  I1123 12:35:20.755463 20 service_latency.go:363] Got endpoints: latency-svc-d2vnv [750.000592ms]
  I1123 12:35:20.767097 20 service_latency.go:356] Created: latency-svc-rlqvc
  I1123 12:35:20.805810 20 service_latency.go:363] Got endpoints: latency-svc-j886k [751.712898ms]
  I1123 12:35:20.819900 20 service_latency.go:356] Created: latency-svc-x7rgx
  I1123 12:35:20.855367 20 service_latency.go:363] Got endpoints: latency-svc-bkv2j [751.202904ms]
  I1123 12:35:20.867556 20 service_latency.go:356] Created: latency-svc-ck9vv
  I1123 12:35:20.904105 20 service_latency.go:363] Got endpoints: latency-svc-nmgs9 [746.327812ms]
  I1123 12:35:20.917731 20 service_latency.go:356] Created: latency-svc-brcvh
  I1123 12:35:20.955273 20 service_latency.go:363] Got endpoints: latency-svc-nr9jq [748.905361ms]
  I1123 12:35:20.969205 20 service_latency.go:356] Created: latency-svc-7467d
  I1123 12:35:21.006426 20 service_latency.go:363] Got endpoints: latency-svc-k7xl8 [753.558294ms]
  I1123 12:35:21.021775 20 service_latency.go:356] Created: latency-svc-hcg2w
  I1123 12:35:21.055767 20 service_latency.go:363] Got endpoints: latency-svc-mwbtj [752.135617ms]
  I1123 12:35:21.067100 20 service_latency.go:356] Created: latency-svc-d8bwc
  I1123 12:35:21.103406 20 service_latency.go:363] Got endpoints: latency-svc-zpbbp [747.273383ms]
  I1123 12:35:21.118878 20 service_latency.go:356] Created: latency-svc-9bgg5
  I1123 12:35:21.155876 20 service_latency.go:363] Got endpoints: latency-svc-bdqx6 [750.654048ms]
  I1123 12:35:21.170233 20 service_latency.go:356] Created: latency-svc-n8p94
  I1123 12:35:21.205452 20 service_latency.go:363] Got endpoints: latency-svc-g6rrw [750.772316ms]
  I1123 12:35:21.218664 20 service_latency.go:356] Created: latency-svc-9g7vz
  I1123 12:35:21.256602 20 service_latency.go:363] Got endpoints: latency-svc-w9k7l [751.278693ms]
  I1123 12:35:21.270372 20 service_latency.go:356] Created: latency-svc-lwt9b
  I1123 12:35:21.307541 20 service_latency.go:363] Got endpoints: latency-svc-x9lzl [749.055491ms]
  I1123 12:35:21.319228 20 service_latency.go:356] Created: latency-svc-t4zjn
  I1123 12:35:21.355982 20 service_latency.go:363] Got endpoints: latency-svc-tq42x [750.107226ms]
  I1123 12:35:21.368701 20 service_latency.go:356] Created: latency-svc-p6bkk
  I1123 12:35:21.406020 20 service_latency.go:363] Got endpoints: latency-svc-cdk9x [752.250853ms]
  I1123 12:35:21.422201 20 service_latency.go:356] Created: latency-svc-2zqk9
  I1123 12:35:21.454676 20 service_latency.go:363] Got endpoints: latency-svc-84ldh [748.806723ms]
  I1123 12:35:21.468027 20 service_latency.go:356] Created: latency-svc-8wlbc
  I1123 12:35:21.504539 20 service_latency.go:363] Got endpoints: latency-svc-rlqvc [749.008864ms]
  I1123 12:35:21.517702 20 service_latency.go:356] Created: latency-svc-g9cd8
  I1123 12:35:21.554343 20 service_latency.go:363] Got endpoints: latency-svc-x7rgx [748.504777ms]
  I1123 12:35:21.566897 20 service_latency.go:356] Created: latency-svc-z6dk2
  I1123 12:35:21.606871 20 service_latency.go:363] Got endpoints: latency-svc-ck9vv [751.477128ms]
  I1123 12:35:21.618720 20 service_latency.go:356] Created: latency-svc-rbshm
  I1123 12:35:21.652834 20 service_latency.go:363] Got endpoints: latency-svc-brcvh [748.704344ms]
  I1123 12:35:21.663669 20 service_latency.go:356] Created: latency-svc-crd5s
  I1123 12:35:21.704025 20 service_latency.go:363] Got endpoints: latency-svc-7467d [748.723341ms]
  I1123 12:35:21.718266 20 service_latency.go:356] Created: latency-svc-b9kl5
  I1123 12:35:21.754924 20 service_latency.go:363] Got endpoints: latency-svc-hcg2w [748.468433ms]
  I1123 12:35:21.770542 20 service_latency.go:356] Created: latency-svc-kzr2x
  I1123 12:35:21.804406 20 service_latency.go:363] Got endpoints: latency-svc-d8bwc [748.605611ms]
  I1123 12:35:21.817742 20 service_latency.go:356] Created: latency-svc-pbmxs
  I1123 12:35:21.853546 20 service_latency.go:363] Got endpoints: latency-svc-9bgg5 [750.088619ms]
  I1123 12:35:21.867200 20 service_latency.go:356] Created: latency-svc-gwdvf
  I1123 12:35:21.907828 20 service_latency.go:363] Got endpoints: latency-svc-n8p94 [751.924016ms]
  I1123 12:35:21.921248 20 service_latency.go:356] Created: latency-svc-gb25x
  I1123 12:35:21.956371 20 service_latency.go:363] Got endpoints: latency-svc-9g7vz [750.65575ms]
  I1123 12:35:21.969446 20 service_latency.go:356] Created: latency-svc-n5mm5
  I1123 12:35:22.003416 20 service_latency.go:363] Got endpoints: latency-svc-lwt9b [746.781999ms]
  I1123 12:35:22.016625 20 service_latency.go:356] Created: latency-svc-zdl5h
  I1123 12:35:22.054800 20 service_latency.go:363] Got endpoints: latency-svc-t4zjn [747.225212ms]
  I1123 12:35:22.067513 20 service_latency.go:356] Created: latency-svc-bshwz
  I1123 12:35:22.105062 20 service_latency.go:363] Got endpoints: latency-svc-p6bkk [749.04848ms]
  I1123 12:35:22.128722 20 service_latency.go:356] Created: latency-svc-kb9sq
  I1123 12:35:22.157269 20 service_latency.go:363] Got endpoints: latency-svc-2zqk9 [751.220593ms]
  I1123 12:35:22.174762 20 service_latency.go:356] Created: latency-svc-md74s
  I1123 12:35:22.205920 20 service_latency.go:363] Got endpoints: latency-svc-8wlbc [751.201428ms]
  I1123 12:35:22.217703 20 service_latency.go:356] Created: latency-svc-rhllf
  I1123 12:35:22.254438 20 service_latency.go:363] Got endpoints: latency-svc-g9cd8 [749.869125ms]
  I1123 12:35:22.269824 20 service_latency.go:356] Created: latency-svc-kvvj8
  I1123 12:35:22.304307 20 service_latency.go:363] Got endpoints: latency-svc-z6dk2 [749.933155ms]
  I1123 12:35:22.317614 20 service_latency.go:356] Created: latency-svc-zztbx
  I1123 12:35:22.357551 20 service_latency.go:363] Got endpoints: latency-svc-rbshm [750.651796ms]
  I1123 12:35:22.369245 20 service_latency.go:356] Created: latency-svc-gfwld
  I1123 12:35:22.406912 20 service_latency.go:363] Got endpoints: latency-svc-crd5s [754.050578ms]
  I1123 12:35:22.419784 20 service_latency.go:356] Created: latency-svc-kvgcb
  I1123 12:35:22.454632 20 service_latency.go:363] Got endpoints: latency-svc-b9kl5 [750.56765ms]
  I1123 12:35:22.468741 20 service_latency.go:356] Created: latency-svc-2hbvk
  I1123 12:35:22.506085 20 service_latency.go:363] Got endpoints: latency-svc-kzr2x [751.132038ms]
  I1123 12:35:22.518682 20 service_latency.go:356] Created: latency-svc-4j4bh
  I1123 12:35:22.556687 20 service_latency.go:363] Got endpoints: latency-svc-pbmxs [752.247806ms]
  I1123 12:35:22.570131 20 service_latency.go:356] Created: latency-svc-kks8g
  I1123 12:35:22.606335 20 service_latency.go:363] Got endpoints: latency-svc-gwdvf [752.760937ms]
  I1123 12:35:22.618474 20 service_latency.go:356] Created: latency-svc-k8hrh
  I1123 12:35:22.655621 20 service_latency.go:363] Got endpoints: latency-svc-gb25x [747.763438ms]
  I1123 12:35:22.668239 20 service_latency.go:356] Created: latency-svc-6dqwn
  I1123 12:35:22.704699 20 service_latency.go:363] Got endpoints: latency-svc-n5mm5 [748.297259ms]
  I1123 12:35:22.718806 20 service_latency.go:356] Created: latency-svc-dxqtf
  I1123 12:35:22.753579 20 service_latency.go:363] Got endpoints: latency-svc-zdl5h [750.130714ms]
  I1123 12:35:22.770143 20 service_latency.go:356] Created: latency-svc-gbdwl
  I1123 12:35:22.806879 20 service_latency.go:363] Got endpoints: latency-svc-bshwz [751.987592ms]
  I1123 12:35:22.819429 20 service_latency.go:356] Created: latency-svc-nkgbd
  I1123 12:35:22.856566 20 service_latency.go:363] Got endpoints: latency-svc-kb9sq [751.465654ms]
  I1123 12:35:22.904375 20 service_latency.go:363] Got endpoints: latency-svc-md74s [747.076654ms]
  I1123 12:35:22.956751 20 service_latency.go:363] Got endpoints: latency-svc-rhllf [750.798596ms]
  I1123 12:35:23.004777 20 service_latency.go:363] Got endpoints: latency-svc-kvvj8 [750.303582ms]
  I1123 12:35:23.055384 20 service_latency.go:363] Got endpoints: latency-svc-zztbx [751.044454ms]
  I1123 12:35:23.105651 20 service_latency.go:363] Got endpoints: latency-svc-gfwld [748.067074ms]
  I1123 12:35:23.155261 20 service_latency.go:363] Got endpoints: latency-svc-kvgcb [748.304891ms]
  I1123 12:35:23.204560 20 service_latency.go:363] Got endpoints: latency-svc-2hbvk [749.900606ms]
  I1123 12:35:23.256862 20 service_latency.go:363] Got endpoints: latency-svc-4j4bh [750.74081ms]
  I1123 12:35:23.305194 20 service_latency.go:363] Got endpoints: latency-svc-kks8g [748.476241ms]
  I1123 12:35:23.356446 20 service_latency.go:363] Got endpoints: latency-svc-k8hrh [750.075745ms]
  I1123 12:35:23.404806 20 service_latency.go:363] Got endpoints: latency-svc-6dqwn [749.152985ms]
  I1123 12:35:23.456297 20 service_latency.go:363] Got endpoints: latency-svc-dxqtf [751.567178ms]
  I1123 12:35:23.504581 20 service_latency.go:363] Got endpoints: latency-svc-gbdwl [750.968581ms]
  I1123 12:35:23.558144 20 service_latency.go:363] Got endpoints: latency-svc-nkgbd [751.234921ms]
  I1123 12:35:23.558323 20 service_latency.go:114] Latencies: [20.750356ms 29.01116ms 41.773253ms 48.963227ms 51.283928ms 59.182592ms 60.347067ms 63.121758ms 76.066256ms 76.615555ms 82.472197ms 84.893765ms 87.003278ms 93.80521ms 93.87216ms 104.584039ms 111.433437ms 119.515444ms 124.836074ms 130.616683ms 136.621433ms 145.648319ms 159.496242ms 169.726107ms 174.571032ms 193.932813ms 197.508554ms 208.38812ms 208.645753ms 211.002466ms 216.59675ms 219.923301ms 222.676083ms 234.574737ms 236.316185ms 254.038168ms 260.169278ms 266.215185ms 273.28086ms 304.356517ms 305.672631ms 308.361469ms 357.030931ms 403.268145ms 446.642604ms 496.526568ms 537.434786ms 582.840747ms 621.360793ms 659.872217ms 700.890381ms 739.561472ms 741.989588ms 743.802624ms 746.327812ms 746.542519ms 746.781999ms 746.88552ms 746.970119ms 747.076654ms 747.225212ms 747.273383ms 747.512696ms 747.640884ms 747.763438ms 747.795918ms 747.817733ms 748.007899ms 748.067074ms 748.099711ms 748.099737ms 748.297259ms 748.304891ms 748.31346ms 748.319387ms 748.346915ms 748.468433ms 748.476241ms 748.499144ms 748.504777ms 748.596437ms 748.605611ms 748.643727ms 748.704344ms 748.723341ms 748.806723ms 748.821368ms 748.823768ms 748.829675ms 748.905361ms 748.928993ms 748.936393ms 748.950856ms 748.954817ms 749.008864ms 749.039606ms 749.04848ms 749.055491ms 749.143214ms 749.152985ms 749.179622ms 749.201624ms 749.209174ms 749.269612ms 749.283604ms 749.432469ms 749.485757ms 749.528006ms 749.572424ms 749.618937ms 749.62739ms 749.6376ms 749.660898ms 749.694742ms 749.852265ms 749.869125ms 749.895374ms 749.900606ms 749.910209ms 749.910417ms 749.921447ms 749.925403ms 749.933155ms 749.94455ms 749.996008ms 750.000592ms 750.038095ms 750.071448ms 750.075745ms 750.079071ms 750.088619ms 750.107226ms 750.130714ms 750.247354ms 750.303582ms 750.434971ms 750.448808ms 750.488761ms 750.56765ms 750.593452ms 750.612064ms 750.651796ms 750.654048ms 750.65575ms 750.673596ms 750.693854ms 750.74081ms 750.772316ms 750.798596ms 750.806862ms 750.808174ms 750.826354ms 750.846802ms 750.882516ms 750.958035ms 750.96218ms 750.968581ms 751.001246ms 751.044454ms 751.132038ms 751.201428ms 751.202904ms 751.214561ms 751.220593ms 751.234921ms 751.278693ms 751.344937ms 751.36859ms 751.395938ms 751.413758ms 751.465654ms 751.477128ms 751.479312ms 751.567178ms 751.66403ms 751.683647ms 751.712898ms 751.722508ms 751.734715ms 751.760674ms 751.762618ms 751.820184ms 751.821935ms 751.924016ms 751.936634ms 751.987592ms 752.066739ms 752.135617ms 752.238183ms 752.247806ms 752.250853ms 752.760937ms 752.92407ms 752.997854ms 753.437088ms 753.558294ms 753.845478ms 754.050578ms 755.440844ms 756.37938ms]
  I1123 12:35:23.558375 20 service_latency.go:118] 50 %ile: 749.179622ms
  I1123 12:35:23.558384 20 service_latency.go:119] 90 %ile: 751.762618ms
  I1123 12:35:23.558391 20 service_latency.go:120] 99 %ile: 755.440844ms
  I1123 12:35:23.558397 20 service_latency.go:121] Total sample count: 200
  I1123 12:35:23.558544 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5938" for this suite. @ 11/23/24 12:35:23.564
• [9.767 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 11/23/24 12:35:23.573
  I1123 12:35:23.573657 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename apf @ 11/23/24 12:35:23.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:23.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:23.593
  STEP: getting /apis @ 11/23/24 12:35:23.596
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/23/24 12:35:23.599
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/23/24 12:35:23.6
  STEP: creating @ 11/23/24 12:35:23.601
  STEP: getting @ 11/23/24 12:35:23.619
  STEP: listing @ 11/23/24 12:35:23.622
  STEP: watching @ 11/23/24 12:35:23.628
  I1123 12:35:23.628147 20 flowcontrol.go:620] starting watch
  STEP: patching @ 11/23/24 12:35:23.629
  STEP: updating @ 11/23/24 12:35:23.635
  I1123 12:35:23.644843 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 11/23/24 12:35:23.644
  STEP: patching /status @ 11/23/24 12:35:23.649
  STEP: updating /status @ 11/23/24 12:35:23.656
  STEP: deleting @ 11/23/24 12:35:23.666
  STEP: deleting a collection @ 11/23/24 12:35:23.683
  I1123 12:35:23.709515 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5546" for this suite. @ 11/23/24 12:35:23.713
• [0.149 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 11/23/24 12:35:23.722
  I1123 12:35:23.722834 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-webhook @ 11/23/24 12:35:23.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:23.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:23.741
  STEP: Setting up server cert @ 11/23/24 12:35:23.743
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/23/24 12:35:24.019
  STEP: Deploying the custom resource conversion webhook pod @ 11/23/24 12:35:24.03
  STEP: Wait for the deployment to be ready @ 11/23/24 12:35:24.044
  I1123 12:35:24.051447 20 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/23/24 12:35:26.066
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:35:26.08
  I1123 12:35:27.081350 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1123 12:35:27.091342 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Creating a v1 custom resource @ 11/23/24 12:35:29.648
  STEP: v2 custom resource should be converted @ 11/23/24 12:35:29.654
  I1123 12:35:30.249173 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4885" for this suite. @ 11/23/24 12:35:30.255
• [6.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 11/23/24 12:35:30.264
  I1123 12:35:30.264023 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/23/24 12:35:30.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:30.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:30.282
  I1123 12:35:30.290259 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1579" for this suite. @ 11/23/24 12:35:30.294
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 11/23/24 12:35:30.302
  I1123 12:35:30.302835 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:35:30.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:30.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:30.321
  STEP: Setting up server cert @ 11/23/24 12:35:30.351
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:35:30.598
  STEP: Deploying the webhook pod @ 11/23/24 12:35:30.605
  STEP: Wait for the deployment to be ready @ 11/23/24 12:35:30.622
  I1123 12:35:30.636462 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:35:32.65
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:35:32.664
  I1123 12:35:33.665065 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:33.668506 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:34.665149 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:34.669992 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:35.665005 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:35.670609 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:36.664638 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:36.670708 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:37.664254 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:37.669994 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:38.664264 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:38.670120 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:39.665009 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:39.670558 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:40.665075 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:35:40.670686 20 util.go:423] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I1123 12:35:41.664683 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/23/24 12:35:41.674
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/23/24 12:35:41.691
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/23/24 12:35:41.696
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/23/24 12:35:41.709
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/23/24 12:35:41.724
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/23/24 12:35:41.732
  I1123 12:35:41.788941 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-126" for this suite. @ 11/23/24 12:35:41.792
  STEP: Destroying namespace "webhook-markers-367" for this suite. @ 11/23/24 12:35:41.803
• [11.512 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 11/23/24 12:35:41.814
  I1123 12:35:41.814622 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename disruption @ 11/23/24 12:35:41.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:41.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:41.832
  STEP: creating the pdb @ 11/23/24 12:35:41.834
  STEP: Waiting for the pdb to be processed @ 11/23/24 12:35:41.838
  STEP: updating the pdb @ 11/23/24 12:35:43.843
  STEP: Waiting for the pdb to be processed @ 11/23/24 12:35:43.855
  STEP: patching the pdb @ 11/23/24 12:35:45.861
  STEP: Waiting for the pdb to be processed @ 11/23/24 12:35:45.872
  STEP: Waiting for the pdb to be deleted @ 11/23/24 12:35:47.885
  I1123 12:35:47.888754 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3021" for this suite. @ 11/23/24 12:35:47.893
• [6.088 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/23/24 12:35:47.902
  I1123 12:35:47.902291 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-runtime @ 11/23/24 12:35:47.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:47.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:47.922
  STEP: create the container @ 11/23/24 12:35:47.924
  W1123 12:35:47.933926      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/23/24 12:35:47.934
  STEP: get the container status @ 11/23/24 12:35:49.95
  STEP: the container should be terminated @ 11/23/24 12:35:49.954
  STEP: the termination message should be set @ 11/23/24 12:35:49.954
  I1123 12:35:49.954605 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/23/24 12:35:49.954
  I1123 12:35:49.975153 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4622" for this suite. @ 11/23/24 12:35:49.979
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/23/24 12:35:49.989
  I1123 12:35:49.989903 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 12:35:49.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:50.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:50.01
  STEP: Saw pod success @ 11/23/24 12:35:56.076
  I1123 12:35:56.081520 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod client-envvars-55ff726b-4531-4ef2-a940-20eccf287572 container env3cont: <nil>
  STEP: delete the pod @ 11/23/24 12:35:56.089
  I1123 12:35:56.128862 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-82" for this suite. @ 11/23/24 12:35:56.134
• [6.152 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 11/23/24 12:35:56.142
  I1123 12:35:56.142280 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sysctl @ 11/23/24 12:35:56.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:35:56.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:35:56.163
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/23/24 12:35:56.165
  STEP: Watching for error events or started pod @ 11/23/24 12:35:56.174
  STEP: Waiting for pod completion @ 11/23/24 12:35:58.179
  STEP: Checking that the pod succeeded @ 11/23/24 12:36:00.193
  STEP: Getting logs from the pod @ 11/23/24 12:36:00.193
  STEP: Checking that the sysctl is actually updated @ 11/23/24 12:36:00.2
  I1123 12:36:00.201138 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9456" for this suite. @ 11/23/24 12:36:00.206
• [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 11/23/24 12:36:00.214
  I1123 12:36:00.214933 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:36:00.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:00.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:00.232
  STEP: creating a ConfigMap @ 11/23/24 12:36:00.235
  STEP: fetching the ConfigMap @ 11/23/24 12:36:00.239
  STEP: patching the ConfigMap @ 11/23/24 12:36:00.243
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/23/24 12:36:00.248
  STEP: deleting the ConfigMap by collection with a label selector @ 11/23/24 12:36:00.252
  STEP: listing all ConfigMaps in test namespace @ 11/23/24 12:36:00.263
  I1123 12:36:00.267280 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1003" for this suite. @ 11/23/24 12:36:00.271
• [0.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 11/23/24 12:36:00.279
  I1123 12:36:00.279624 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:36:00.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:00.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:00.3
  I1123 12:36:00.344557 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1673" for this suite. @ 11/23/24 12:36:00.348
• [0.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 11/23/24 12:36:00.359
  I1123 12:36:00.359357 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 12:36:00.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:00.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:00.374
  I1123 12:36:00.408418 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a8c62f71-0231-43c5-b805-2fb86b43b352", Controller:(*bool)(0xc0034c7c86), BlockOwnerDeletion:(*bool)(0xc0034c7c87)}}
  I1123 12:36:00.419846 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a40fa885-5ae1-4771-9cac-900227c8a84b", Controller:(*bool)(0xc002bfbd1e), BlockOwnerDeletion:(*bool)(0xc002bfbd1f)}}
  I1123 12:36:00.427093 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b3430452-51c4-417f-8575-7df894ba9850", Controller:(*bool)(0xc0034c7f96), BlockOwnerDeletion:(*bool)(0xc0034c7f97)}}
  I1123 12:36:05.443850 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6451" for this suite. @ 11/23/24 12:36:05.448
• [5.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 11/23/24 12:36:05.46
  I1123 12:36:05.460250 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:36:05.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:05.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:05.478
  STEP: Creating the pod @ 11/23/24 12:36:05.481
  I1123 12:36:08.031990 20 pod_client.go:173] Successfully updated pod "annotationupdated8fc1090-5a92-48c5-8c53-1c711559f7a4"
  I1123 12:36:10.051833 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7957" for this suite. @ 11/23/24 12:36:10.056
• [4.606 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 11/23/24 12:36:10.065
  I1123 12:36:10.065927 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:36:10.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:10.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:10.085
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:36:10.088
  STEP: Saw pod success @ 11/23/24 12:36:14.116
  I1123 12:36:14.122046 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-e5e4e91a-6d75-4c8c-81f6-4e37f044d15a container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:36:14.131
  I1123 12:36:14.150211 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6244" for this suite. @ 11/23/24 12:36:14.154
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 11/23/24 12:36:14.162
  I1123 12:36:14.162536 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:36:14.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:14.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:14.182
  I1123 12:36:14.184973 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8953 version'
  I1123 12:36:14.222521 20 builder.go:146] stderr: ""
  I1123 12:36:14.222547 20 builder.go:147] stdout: "Client Version: v1.31.3\nKustomize Version: v5.4.2\nServer Version: v1.31.3\n"
  I1123 12:36:14.222687 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8953" for this suite. @ 11/23/24 12:36:14.227
• [0.075 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/23/24 12:36:14.237
  I1123 12:36:14.237489 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 12:36:14.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:36:14.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:36:14.253
  STEP: Creating secret with name s-test-opt-del-298f2bf0-a552-4d55-b614-3a5f6adfc4b8 @ 11/23/24 12:36:14.261
  STEP: Creating secret with name s-test-opt-upd-69dadb27-37b4-4ed6-9f51-62f22ed115df @ 11/23/24 12:36:14.266
  STEP: Creating the pod @ 11/23/24 12:36:14.271
  STEP: Deleting secret s-test-opt-del-298f2bf0-a552-4d55-b614-3a5f6adfc4b8 @ 11/23/24 12:36:16.324
  STEP: Updating secret s-test-opt-upd-69dadb27-37b4-4ed6-9f51-62f22ed115df @ 11/23/24 12:36:16.333
  STEP: Creating secret with name s-test-opt-create-40c7378b-4f02-4da1-862b-a0ef6ed65fbc @ 11/23/24 12:36:16.34
  STEP: waiting to observe update in volume @ 11/23/24 12:36:16.345
  I1123 12:37:20.712707 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5130" for this suite. @ 11/23/24 12:37:20.717
• [66.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 11/23/24 12:37:20.725
  I1123 12:37:20.725818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename limitrange @ 11/23/24 12:37:20.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:20.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:20.746
  STEP: Creating LimitRange "e2e-limitrange-m2twp" in namespace "limitrange-1217" @ 11/23/24 12:37:20.748
  STEP: Creating another limitRange in another namespace @ 11/23/24 12:37:20.754
  I1123 12:37:20.769571 20 limit_range.go:299] Namespace "e2e-limitrange-m2twp-7510" created
  I1123 12:37:20.769588 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-m2twp" in namespace "e2e-limitrange-m2twp-7510"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-m2twp" @ 11/23/24 12:37:20.776
  I1123 12:37:20.780076 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-m2twp" in "limitrange-1217" namespace @ 11/23/24 12:37:20.78
  I1123 12:37:20.787282 20 limit_range.go:335] LimitRange "e2e-limitrange-m2twp" has been patched
  STEP: Delete LimitRange "e2e-limitrange-m2twp" by Collection with labelSelector: "e2e-limitrange-m2twp=patched" @ 11/23/24 12:37:20.787
  STEP: Confirm that the limitRange "e2e-limitrange-m2twp" has been deleted @ 11/23/24 12:37:20.796
  I1123 12:37:20.796813 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1123 12:37:20.800707 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-m2twp=patched"
  I1123 12:37:20.800729 20 limit_range.go:344] LimitRange "e2e-limitrange-m2twp" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-m2twp" @ 11/23/24 12:37:20.8
  I1123 12:37:20.804320 20 limit_range.go:350] Found 1 limitRange
  I1123 12:37:20.804403 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1217" for this suite. @ 11/23/24 12:37:20.809
  STEP: Destroying namespace "e2e-limitrange-m2twp-7510" for this suite. @ 11/23/24 12:37:20.818
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 11/23/24 12:37:20.827
  I1123 12:37:20.827238 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename security-context-test @ 11/23/24 12:37:20.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:20.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:20.843
  I1123 12:37:24.876980 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-729" for this suite. @ 11/23/24 12:37:24.881
• [4.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 11/23/24 12:37:24.89
  I1123 12:37:24.890861 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/23/24 12:37:24.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:24.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:24.914
  I1123 12:37:24.916289 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:37:25.941987 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-271" for this suite. @ 11/23/24 12:37:25.946
• [1.065 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 11/23/24 12:37:25.956
  I1123 12:37:25.956501 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:37:25.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:25.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:25.98
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:37:25.983
  STEP: Saw pod success @ 11/23/24 12:37:30.013
  I1123 12:37:30.018262 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downwardapi-volume-d00f7d68-b98e-4bdc-b8bb-9ae72a44a88a container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:37:30.026
  I1123 12:37:30.042654 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9879" for this suite. @ 11/23/24 12:37:30.046
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 11/23/24 12:37:30.054
  I1123 12:37:30.054866 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:37:30.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:30.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:30.072
  STEP: Setting up server cert @ 11/23/24 12:37:30.098
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:37:30.467
  STEP: Deploying the webhook pod @ 11/23/24 12:37:30.479
  STEP: Wait for the deployment to be ready @ 11/23/24 12:37:30.502
  I1123 12:37:30.523107 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:37:32.538
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:37:32.551
  I1123 12:37:33.552599 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/23/24 12:37:33.561
  STEP: verifying the mutating webhook match conditions @ 11/23/24 12:37:33.568
  STEP: updating the mutating webhook match conditions @ 11/23/24 12:37:33.573
  STEP: verifying the mutating webhook match conditions @ 11/23/24 12:37:33.582
  I1123 12:37:33.640358 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6945" for this suite. @ 11/23/24 12:37:33.643
  STEP: Destroying namespace "webhook-markers-412" for this suite. @ 11/23/24 12:37:33.653
• [3.607 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 11/23/24 12:37:33.662
  I1123 12:37:33.662470 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/23/24 12:37:33.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:33.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:33.687
  STEP: creating the policy @ 11/23/24 12:37:33.697
  STEP: waiting until the marker is denied @ 11/23/24 12:37:33.71
  STEP: testing a replicated Deployment to be allowed @ 11/23/24 12:37:34.12
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/23/24 12:37:34.138
  I1123 12:37:34.203985 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9248" for this suite. @ 11/23/24 12:37:34.208
• [0.556 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 11/23/24 12:37:34.218
  I1123 12:37:34.218067 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replication-controller @ 11/23/24 12:37:34.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:34.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:34.236
  STEP: Creating ReplicationController "e2e-rc-hsjj5" @ 11/23/24 12:37:34.239
  I1123 12:37:34.245315 20 rc.go:792] Get Replication Controller "e2e-rc-hsjj5" to confirm replicas
  I1123 12:37:35.246126 20 rc.go:792] Get Replication Controller "e2e-rc-hsjj5" to confirm replicas
  I1123 12:37:35.250546 20 rc.go:801] Found 1 replicas for "e2e-rc-hsjj5" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-hsjj5" @ 11/23/24 12:37:35.25
  STEP: Updating a scale subresource @ 11/23/24 12:37:35.253
  STEP: Verifying replicas where modified for replication controller "e2e-rc-hsjj5" @ 11/23/24 12:37:35.261
  I1123 12:37:35.261211 20 rc.go:792] Get Replication Controller "e2e-rc-hsjj5" to confirm replicas
  I1123 12:37:36.261320 20 rc.go:792] Get Replication Controller "e2e-rc-hsjj5" to confirm replicas
  I1123 12:37:36.266447 20 rc.go:801] Found 2 replicas for "e2e-rc-hsjj5" replication controller
  I1123 12:37:36.266618 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4109" for this suite. @ 11/23/24 12:37:36.271
• [2.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 11/23/24 12:37:36.28
  I1123 12:37:36.280498 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:37:36.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:36.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:36.3
  STEP: creating an Endpoint @ 11/23/24 12:37:36.306
  STEP: waiting for available Endpoint @ 11/23/24 12:37:36.312
  STEP: listing all Endpoints @ 11/23/24 12:37:36.314
  STEP: updating the Endpoint @ 11/23/24 12:37:36.318
  STEP: fetching the Endpoint @ 11/23/24 12:37:36.325
  STEP: patching the Endpoint @ 11/23/24 12:37:36.33
  STEP: fetching the Endpoint @ 11/23/24 12:37:36.338
  STEP: deleting the Endpoint by Collection @ 11/23/24 12:37:36.341
  STEP: waiting for Endpoint deletion @ 11/23/24 12:37:36.351
  STEP: fetching the Endpoint @ 11/23/24 12:37:36.353
  I1123 12:37:36.357263 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9388" for this suite. @ 11/23/24 12:37:36.361
• [0.089 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 11/23/24 12:37:36.369
  I1123 12:37:36.369543 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 12:37:36.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:37:36.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:37:36.389
  STEP: Creating service test in namespace statefulset-2190 @ 11/23/24 12:37:36.391
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/23/24 12:37:36.399
  STEP: Creating stateful set ss in namespace statefulset-2190 @ 11/23/24 12:37:36.412
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2190 @ 11/23/24 12:37:36.417
  I1123 12:37:36.423694 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I1123 12:37:46.426764 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/23/24 12:37:46.426
  I1123 12:37:46.432277 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:37:46.527476 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:37:46.527499 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:37:46.527509 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:37:46.532582 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1123 12:37:56.532398 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:37:56.532438 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1123 12:37:56.552368 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999981s
  I1123 12:37:57.558487 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.994417078s
  I1123 12:37:58.564307 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.988206597s
  I1123 12:37:59.570328 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.983054692s
  I1123 12:38:00.575854 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.976386027s
  I1123 12:38:01.580946 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.971494106s
  I1123 12:38:02.586947 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.965590752s
  I1123 12:38:03.592735 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.959620171s
  I1123 12:38:04.599348 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.954394509s
  I1123 12:38:05.604749 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 948.022966ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2190 @ 11/23/24 12:38:06.604
  I1123 12:38:06.610202 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:38:06.694509 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:38:06.694537 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:38:06.694556 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:38:06.698897 20 wait.go:40] Found 1 stateful pods, waiting for 3
  I1123 12:38:16.701091 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:38:16.701125 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:38:16.701134 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/23/24 12:38:16.701
  STEP: Scale down will halt with unhealthy stateful pod @ 11/23/24 12:38:16.701
  I1123 12:38:16.710826 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:38:16.795940 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:38:16.795989 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:38:16.796000 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:38:16.796040 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:38:16.887624 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:38:16.887660 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:38:16.887671 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:38:16.887756 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:38:16.992038 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:38:16.992074 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:38:16.992085 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:38:16.992093 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1123 12:38:16.998105 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1123 12:38:27.001768 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:38:27.001800 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:38:27.001807 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:38:27.019625 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999759s
  I1123 12:38:28.026339 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.99365289s
  I1123 12:38:29.032438 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.987175348s
  I1123 12:38:30.039208 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.981190883s
  I1123 12:38:31.044639 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.974921814s
  I1123 12:38:32.050585 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968831655s
  I1123 12:38:33.056892 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.962582893s
  I1123 12:38:34.062621 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.957249093s
  I1123 12:38:35.068860 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.951182987s
  I1123 12:38:36.075008 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 945.254623ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2190 @ 11/23/24 12:38:37.076
  I1123 12:38:37.082241 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:38:37.164380 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:38:37.164411 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:38:37.164420 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:38:37.164458 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:38:37.245730 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:38:37.245761 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:38:37.245770 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:38:37.245811 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-2190 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:38:37.332228 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:38:37.332260 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:38:37.332269 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:38:37.332321 20 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/23/24 12:38:47.343
  I1123 12:38:47.344053 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2190
  I1123 12:38:47.349437 20 rest.go:150] Scaling statefulset ss to 0
  I1123 12:38:47.357573 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 12:38:47.361254 20 rest.go:88] Deleting statefulset ss
  I1123 12:38:47.379977 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2190" for this suite. @ 11/23/24 12:38:47.385
• [71.027 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/23/24 12:38:47.396
  I1123 12:38:47.396432 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 12:38:47.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:38:47.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:38:47.416
  I1123 12:38:47.418969 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1123 12:38:47.427637 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1123 12:38:52.431865 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/23/24 12:38:52.431
  I1123 12:38:52.431940 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1123 12:38:52.438326 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1123 12:38:52.450427 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1123 12:38:54.463104 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1123 12:38:54.468027 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1123 12:38:54.481416 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "510bc246-a9d7-40b6-b4f9-6bc87296ea53",
      ResourceVersion: (string) (len=5) "21527",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 12:38:54.486247 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd042a17-7c96-4c8f-9d09-6ee0fa79dcba",
      ResourceVersion: (string) (len=5) "21517",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "510bc246-a9d7-40b6-b4f9-6bc87296ea53",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 31 30 62 63 32  34 36 2d 61 39 64 37 2d  |\"510bc246-a9d7-|
              00000120  34 30 62 36 2d 62 34 66  39 2d 36 62 63 38 37 32  |40b6-b4f9-6bc872|
              00000130  39 36 65 61 35 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |96ea53\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 12:38:54.486753 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1123 12:38:54.487085 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fed756e-cbaf-4013-bf22-85a24178c6ed",
      ResourceVersion: (string) (len=5) "21526",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962327,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "510bc246-a9d7-40b6-b4f9-6bc87296ea53",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962327,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 31 30 62 63 32 34  |"uid\":\"510bc24|
              000000b0  36 2d 61 39 64 37 2d 34  30 62 36 2d 62 34 66 39  |6-a9d7-40b6-b4f9|
              000000c0  2d 36 62 63 38 37 32 39  36 65 61 35 33 5c 22 7d  |-6bc87296ea53\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 12:38:54.492527 20 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-4pxl7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-4pxl7",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "770970b4-a31f-425c-b767-18fc936dc72c",
      ResourceVersion: (string) (len=5) "21516",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "cd042a17-7c96-4c8f-9d09-6ee0fa79dcba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 64  30 34 32 61 31 37 2d 37  |d\":\"cd042a17-7|
              00000090  63 39 36 2d 34 63 38 66  2d 39 64 30 39 2d 36 65  |c96-4c8f-9d09-6e|
              000000a0  65 30 66 61 37 39 64 63  62 61 5c 22 7d 22 3a 7b  |e0fa79dcba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 37 38 5c 22 7d 22  |2.168.21.178\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cnw77",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cnw77",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962333,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867962332,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867962332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867962333,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://1f3b604bdd603a441218dcb32ab877a70ea1e2e10288eb5cf6c0920cbea4fb21",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cnw77",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 12:38:54.493628 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1479" for this suite. @ 11/23/24 12:38:54.497
• [7.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 11/23/24 12:38:54.504
  I1123 12:38:54.504082 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename security-context @ 11/23/24 12:38:54.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:38:54.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:38:54.524
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/23/24 12:38:54.526
  STEP: Saw pod success @ 11/23/24 12:38:58.556
  I1123 12:38:58.561431 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod security-context-f58e7e93-5ca4-4df0-89b6-44a7dc97661a container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:38:58.581
  I1123 12:38:58.602162 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2080" for this suite. @ 11/23/24 12:38:58.606
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 11/23/24 12:38:58.615
  I1123 12:38:58.615627 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/23/24 12:38:58.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:38:58.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:38:58.636
  STEP: getting /apis @ 11/23/24 12:38:58.643
  STEP: getting /apis/admissionregistration.k8s.io @ 11/23/24 12:38:58.646
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/23/24 12:38:58.647
  STEP: creating @ 11/23/24 12:38:58.648
  STEP: getting @ 11/23/24 12:38:58.666
  STEP: listing @ 11/23/24 12:38:58.67
  STEP: watching @ 11/23/24 12:38:58.673
  I1123 12:38:58.673787 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 11/23/24 12:38:58.674
  STEP: updating @ 11/23/24 12:38:58.681
  I1123 12:38:58.691725 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 11/23/24 12:38:58.691
  STEP: deleting a collection @ 11/23/24 12:38:58.708
  I1123 12:38:58.734276 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6586" for this suite. @ 11/23/24 12:38:58.738
• [0.132 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 11/23/24 12:38:58.747
  I1123 12:38:58.747639 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:38:58.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:38:58.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:38:58.768
  STEP: Creating the pod @ 11/23/24 12:38:58.771
  I1123 12:39:01.320560 20 pod_client.go:173] Successfully updated pod "labelsupdate0c1dd991-2882-480b-9b1b-cc9dbf11a3ff"
  I1123 12:39:03.341236 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5597" for this suite. @ 11/23/24 12:39:03.346
• [4.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 11/23/24 12:39:03.354
  I1123 12:39:03.354783 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/23/24 12:39:03.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:39:03.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:39:03.378
  STEP: create the container to handle the HTTPGet hook request. @ 11/23/24 12:39:03.385
  STEP: create the pod with lifecycle hook @ 11/23/24 12:39:05.412
  STEP: check poststart hook @ 11/23/24 12:39:07.435
  STEP: delete the pod with lifecycle hook @ 11/23/24 12:39:07.455
  I1123 12:39:09.477401 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7608" for this suite. @ 11/23/24 12:39:09.482
• [6.138 seconds]
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 11/23/24 12:39:09.492
  I1123 12:39:09.492466 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename endpointslice @ 11/23/24 12:39:09.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:39:09.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:39:09.511
  STEP: getting /apis @ 11/23/24 12:39:09.514
  STEP: getting /apis/discovery.k8s.io @ 11/23/24 12:39:09.517
  STEP: getting /apis/discovery.k8s.iov1 @ 11/23/24 12:39:09.518
  STEP: creating @ 11/23/24 12:39:09.519
  STEP: getting @ 11/23/24 12:39:09.536
  STEP: listing @ 11/23/24 12:39:09.539
  STEP: watching @ 11/23/24 12:39:09.542
  I1123 12:39:09.542614 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 11/23/24 12:39:09.543
  STEP: cluster-wide watching @ 11/23/24 12:39:09.547
  I1123 12:39:09.547768 20 endpointslice.go:459] starting watch
  STEP: patching @ 11/23/24 12:39:09.548
  STEP: updating @ 11/23/24 12:39:09.554
  I1123 12:39:09.563801 20 endpointslice.go:482] waiting for watch events with expected annotations
  I1123 12:39:09.563836 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 11/23/24 12:39:09.563
  STEP: deleting a collection @ 11/23/24 12:39:09.578
  I1123 12:39:09.599853 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2003" for this suite. @ 11/23/24 12:39:09.603
• [0.121 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/23/24 12:39:09.613
  I1123 12:39:09.613381 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename cronjob @ 11/23/24 12:39:09.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:39:09.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:39:09.629
  STEP: Creating a ForbidConcurrent cronjob @ 11/23/24 12:39:09.632
  STEP: Ensuring a job is scheduled @ 11/23/24 12:39:09.638
  STEP: Ensuring exactly one is scheduled @ 11/23/24 12:40:01.644
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/23/24 12:40:01.647
  STEP: Ensuring no more jobs are scheduled @ 11/23/24 12:40:01.652
  STEP: Removing cronjob @ 11/23/24 12:40:01.656
  I1123 12:40:01.664227 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3636" for this suite. @ 11/23/24 12:40:01.669
• [52.062 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 11/23/24 12:40:01.675
  I1123 12:40:01.675940 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:40:01.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:40:01.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:40:01.707
  STEP: Creating a pod to test downward api env vars @ 11/23/24 12:40:01.71
  STEP: Saw pod success @ 11/23/24 12:40:03.734
  I1123 12:40:03.738364 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downward-api-bd5894bc-5bb7-43b7-bd3a-4c34b4246344 container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 12:40:03.757
  I1123 12:40:03.782348 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-43" for this suite. @ 11/23/24 12:40:03.786
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 11/23/24 12:40:03.794
  I1123 12:40:03.794020 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename endpointslice @ 11/23/24 12:40:03.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:40:03.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:40:03.814
  STEP: referencing a single matching pod @ 11/23/24 12:40:05.903
  STEP: referencing matching pods with named port @ 11/23/24 12:40:05.912
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/23/24 12:40:05.921
  STEP: recreating EndpointSlices after they've been deleted @ 11/23/24 12:40:05.929
  I1123 12:40:05.953760 20 endpointslice.go:938] EndpointSlice for Service endpointslice-3641/example-named-port not found
  I1123 12:40:07.960154 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3641" for this suite. @ 11/23/24 12:40:07.965
• [4.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/23/24 12:40:07.974
  I1123 12:40:07.974160 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename proxy @ 11/23/24 12:40:07.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:40:07.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:40:07.994
  I1123 12:40:07.997266 20 proxy.go:293] Creating pod...
  I1123 12:40:10.019247 20 proxy.go:317] Creating service...
  I1123 12:40:10.032824 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/DELETE
  I1123 12:40:10.043266 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1123 12:40:10.043293 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/GET
  I1123 12:40:10.047206 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1123 12:40:10.047232 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/HEAD
  I1123 12:40:10.052517 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1123 12:40:10.052572 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/OPTIONS
  I1123 12:40:10.058306 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1123 12:40:10.058332 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/PATCH
  I1123 12:40:10.062281 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1123 12:40:10.062304 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/POST
  I1123 12:40:10.067198 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1123 12:40:10.067224 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/pods/agnhost/proxy/some/path/with/PUT
  I1123 12:40:10.071439 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1123 12:40:10.071472 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/DELETE
  I1123 12:40:10.078990 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1123 12:40:10.079009 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/GET
  I1123 12:40:10.087083 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1123 12:40:10.087121 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/HEAD
  I1123 12:40:10.094249 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1123 12:40:10.094270 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/OPTIONS
  I1123 12:40:10.102204 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1123 12:40:10.102231 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/PATCH
  I1123 12:40:10.110220 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1123 12:40:10.110246 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/POST
  I1123 12:40:10.117159 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1123 12:40:10.117181 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7216/services/test-service/proxy/some/path/with/PUT
  I1123 12:40:10.124028 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1123 12:40:10.124158 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7216" for this suite. @ 11/23/24 12:40:10.128
• [2.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/23/24 12:40:10.137
  I1123 12:40:10.137696 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:40:10.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:40:10.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:40:10.159
  STEP: Creating secret with name s-test-opt-del-0a843322-b784-47a6-9e64-e7bce21d75a1 @ 11/23/24 12:40:10.165
  STEP: Creating secret with name s-test-opt-upd-f0e0b8cd-26f0-461e-b5a7-a10be854c925 @ 11/23/24 12:40:10.17
  STEP: Creating the pod @ 11/23/24 12:40:10.175
  STEP: Deleting secret s-test-opt-del-0a843322-b784-47a6-9e64-e7bce21d75a1 @ 11/23/24 12:40:12.224
  STEP: Updating secret s-test-opt-upd-f0e0b8cd-26f0-461e-b5a7-a10be854c925 @ 11/23/24 12:40:12.232
  STEP: Creating secret with name s-test-opt-create-3a56cbed-9a7e-458e-8bf5-231207ffe57b @ 11/23/24 12:40:12.237
  STEP: waiting to observe update in volume @ 11/23/24 12:40:12.241
  I1123 12:41:42.748169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9657" for this suite. @ 11/23/24 12:41:42.753
• [92.628 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 11/23/24 12:41:42.765
  I1123 12:41:42.765320 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:41:42.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:41:42.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:41:42.792
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:41:42.798
  STEP: Saw pod success @ 11/23/24 12:41:44.825
  I1123 12:41:44.829312 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downwardapi-volume-e94e4667-1789-427e-be04-80a34c6ee862 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:41:44.841
  I1123 12:41:44.862375 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1793" for this suite. @ 11/23/24 12:41:44.866
• [2.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 11/23/24 12:41:44.876
  I1123 12:41:44.876173 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:41:44.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:41:44.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:41:44.893
  STEP: Setting up server cert @ 11/23/24 12:41:44.917
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:41:45.136
  STEP: Deploying the webhook pod @ 11/23/24 12:41:45.148
  STEP: Wait for the deployment to be ready @ 11/23/24 12:41:45.163
  I1123 12:41:45.174870 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/23/24 12:41:47.19
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:41:47.206
  I1123 12:41:48.206429 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/23/24 12:41:48.215
  STEP: verifying the validating webhook match conditions @ 11/23/24 12:41:48.224
  STEP: updating the validating webhook match conditions @ 11/23/24 12:41:48.228
  STEP: verifying the validating webhook match conditions @ 11/23/24 12:41:48.236
  I1123 12:41:48.294109 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6789" for this suite. @ 11/23/24 12:41:48.298
  STEP: Destroying namespace "webhook-markers-3963" for this suite. @ 11/23/24 12:41:48.307
• [3.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 11/23/24 12:41:48.315
  I1123 12:41:48.315504 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 12:41:48.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:41:48.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:41:48.335
  STEP: Creating Indexed job @ 11/23/24 12:41:48.339
  STEP: Ensuring job reaches completions @ 11/23/24 12:41:48.346
  STEP: Ensuring pods with index for job exist @ 11/23/24 12:41:58.36
  I1123 12:41:58.365272 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7569" for this suite. @ 11/23/24 12:41:58.369
• [10.062 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 11/23/24 12:41:58.377
  I1123 12:41:58.377597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 12:41:58.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:41:58.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:41:58.396
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/23/24 12:41:58.399
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/23/24 12:41:58.399
  STEP: creating a pod to probe DNS @ 11/23/24 12:41:58.399
  STEP: submitting the pod to kubernetes @ 11/23/24 12:41:58.399
  STEP: retrieving the pod @ 11/23/24 12:42:00.423
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:42:00.427
  I1123 12:42:00.446212 20 dns_common.go:527] DNS probes using dns-9750/dns-test-1ee73703-e287-48bf-8334-fa0153122899 succeeded

  STEP: deleting the pod @ 11/23/24 12:42:00.446
  I1123 12:42:00.460085 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9750" for this suite. @ 11/23/24 12:42:00.465
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 11/23/24 12:42:00.48
  I1123 12:42:00.480214 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 12:42:00.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:42:00.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:42:00.499
  STEP: Creating pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385 @ 11/23/24 12:42:00.502
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 12:42:02.526
  I1123 12:42:02.531641 20 container_probe.go:1749] Initial restart count of pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 is 0
  I1123 12:42:02.536436 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:04.542878 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:06.549242 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:08.555247 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:10.560753 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:12.566759 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:14.572202 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:16.578854 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:18.583641 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:20.589520 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:22.594186 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:22.594219 20 container_probe.go:1763] Restart count of pod container-probe-6385/liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 is now 1 (20.062551552s elapsed)
  I1123 12:42:24.602834 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:26.608466 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:28.614433 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:30.620138 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:32.626066 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:34.632234 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:36.639685 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:38.644950 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:40.650729 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:42.655785 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:42.655820 20 container_probe.go:1763] Restart count of pod container-probe-6385/liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 is now 2 (40.124152545s elapsed)
  I1123 12:42:44.663249 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:46.669085 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:48.676410 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:50.682828 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:52.689083 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:54.695887 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:56.702388 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:42:58.708201 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:00.713295 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:02.718687 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:02.718724 20 container_probe.go:1763] Restart count of pod container-probe-6385/liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 is now 3 (1m0.187056309s elapsed)
  I1123 12:43:04.724149 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:06.729765 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:08.735533 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:10.740227 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:12.745313 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:14.751633 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:16.756560 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:18.762858 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:20.768983 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:22.778278 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:22.778314 20 container_probe.go:1763] Restart count of pod container-probe-6385/liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 is now 4 (1m20.246645778s elapsed)
  I1123 12:43:24.783225 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:26.790427 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:28.797589 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:30.804906 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:32.811678 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:34.821374 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:36.826132 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:38.833285 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:40.841126 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:42.847305 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:44.853195 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:46.859418 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:48.864789 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:50.871027 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:52.877138 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:54.882790 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:56.889632 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:43:58.895922 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:00.900985 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:02.906255 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:04.912815 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:06.918005 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:08.924711 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:10.930415 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:12.936745 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:14.943194 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:16.950234 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:18.955578 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:20.962507 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:22.968843 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:24.973735 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:26.980158 20 container_probe.go:1759] Get pod liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 in namespace container-probe-6385
  I1123 12:44:26.980193 20 container_probe.go:1763] Restart count of pod container-probe-6385/liveness-d435481f-0530-4b1b-a49d-e55800a5ef16 is now 5 (2m24.448525005s elapsed)
  STEP: deleting the pod @ 11/23/24 12:44:26.98
  I1123 12:44:26.995198 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6385" for this suite. @ 11/23/24 12:44:27
• [146.528 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 11/23/24 12:44:27.008
  I1123 12:44:27.008088 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:44:27.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:44:27.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:44:27.028
  STEP: creating Agnhost RC @ 11/23/24 12:44:27.03
  I1123 12:44:27.030985 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-37 create -f -'
  I1123 12:44:27.118944 20 builder.go:146] stderr: ""
  I1123 12:44:27.118992 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/23/24 12:44:27.119
  I1123 12:44:28.125178 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:44:28.125206 20 framework.go:733] Found 0 / 1
  I1123 12:44:29.125006 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:44:29.125043 20 framework.go:733] Found 1 / 1
  I1123 12:44:29.125057 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/23/24 12:44:29.125
  I1123 12:44:29.129254 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:44:29.129276 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1123 12:44:29.129323 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-37 patch pod agnhost-primary-ggr6l -p {"metadata":{"annotations":{"x":"y"}}}'
  I1123 12:44:29.184249 20 builder.go:146] stderr: ""
  I1123 12:44:29.184281 20 builder.go:147] stdout: "pod/agnhost-primary-ggr6l patched\n"
  STEP: checking annotations @ 11/23/24 12:44:29.184
  I1123 12:44:29.187982 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 12:44:29.187998 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1123 12:44:29.188135 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-37" for this suite. @ 11/23/24 12:44:29.192
• [2.193 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 11/23/24 12:44:29.2
  I1123 12:44:29.200864 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 12:44:29.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:44:29.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:44:29.22
  STEP: Creating pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778 @ 11/23/24 12:44:29.223
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 12:44:31.245
  I1123 12:44:31.249327 20 container_probe.go:1749] Initial restart count of pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 is 0
  I1123 12:44:31.254506 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:33.260063 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:35.266737 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:37.273293 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:39.279644 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:41.285280 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:43.291867 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:45.297416 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:47.302831 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:49.309466 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:51.316801 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:53.322033 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:55.329677 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:57.336450 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:44:59.343233 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:01.350313 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:03.355678 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:05.363312 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:07.369337 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:09.375251 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:11.381066 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:13.387560 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:15.395052 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:17.401609 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:19.407070 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:21.414016 20 container_probe.go:1759] Get pod busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 in namespace container-probe-6778
  I1123 12:45:21.414052 20 container_probe.go:1763] Restart count of pod container-probe-6778/busybox-82b3a4ca-8d79-4008-9beb-8e4e6bdffea5 is now 1 (50.164695233s elapsed)
  STEP: deleting the pod @ 11/23/24 12:45:21.414
  I1123 12:45:21.429073 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6778" for this suite. @ 11/23/24 12:45:21.432
• [52.241 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 11/23/24 12:45:21.441
  I1123 12:45:21.441645 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replication-controller @ 11/23/24 12:45:21.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:21.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:21.463
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/23/24 12:45:21.466
  STEP: When a replication controller with a matching selector is created @ 11/23/24 12:45:23.492
  STEP: Then the orphan pod is adopted @ 11/23/24 12:45:23.498
  I1123 12:45:24.509629 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7031" for this suite. @ 11/23/24 12:45:24.515
• [3.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 11/23/24 12:45:24.524
  I1123 12:45:24.524443 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 12:45:24.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:24.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:24.543
  STEP: Creating a pod to test substitution in container's args @ 11/23/24 12:45:24.546
  STEP: Saw pod success @ 11/23/24 12:45:28.572
  I1123 12:45:28.575914 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod var-expansion-875a987e-e769-46ec-b9ee-48013dcbde3a container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 12:45:28.593
  I1123 12:45:28.612116 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5060" for this suite. @ 11/23/24 12:45:28.615
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 11/23/24 12:45:28.625
  I1123 12:45:28.625231 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 12:45:28.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:28.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:28.645
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/23/24 12:45:28.647
  I1123 12:45:28.647891 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2688 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1123 12:45:28.703995 20 builder.go:146] stderr: ""
  I1123 12:45:28.704017 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/23/24 12:45:28.704
  I1123 12:45:28.704104 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2688 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1123 12:45:28.757717 20 builder.go:146] stderr: ""
  I1123 12:45:28.757740 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/23/24 12:45:28.757
  I1123 12:45:28.761492 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2688 delete pods e2e-test-httpd-pod'
  I1123 12:45:29.988454 20 builder.go:146] stderr: ""
  I1123 12:45:29.988492 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1123 12:45:29.988750 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2688" for this suite. @ 11/23/24 12:45:29.994
• [1.378 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 11/23/24 12:45:30.003
  I1123 12:45:30.003610 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:45:30.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:30.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:30.023
  STEP: Setting up server cert @ 11/23/24 12:45:30.049
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:45:30.176
  STEP: Deploying the webhook pod @ 11/23/24 12:45:30.186
  STEP: Wait for the deployment to be ready @ 11/23/24 12:45:30.203
  I1123 12:45:30.213892 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/23/24 12:45:32.226
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:45:32.24
  I1123 12:45:33.241034 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/23/24 12:45:33.251
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/23/24 12:45:33.251
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/23/24 12:45:33.265
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/23/24 12:45:34.279
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/23/24 12:45:34.279
  STEP: Having no error when timeout is longer than webhook latency @ 11/23/24 12:45:35.318
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/23/24 12:45:35.318
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/23/24 12:45:40.36
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/23/24 12:45:40.36
  I1123 12:45:45.462766 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3019" for this suite. @ 11/23/24 12:45:45.466
  STEP: Destroying namespace "webhook-markers-5245" for this suite. @ 11/23/24 12:45:45.475
• [15.479 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 11/23/24 12:45:45.482
  I1123 12:45:45.482697 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:45:45.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:45.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:45.504
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:45:45.507
  STEP: Saw pod success @ 11/23/24 12:45:49.538
  I1123 12:45:49.543297 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-e499dbb8-e520-4ad1-99af-048a10b6d765 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:45:49.553
  I1123 12:45:49.570251 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5827" for this suite. @ 11/23/24 12:45:49.574
• [4.104 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 11/23/24 12:45:49.586
  I1123 12:45:49.586559 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename ingress @ 11/23/24 12:45:49.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:49.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:49.607
  STEP: getting /apis @ 11/23/24 12:45:49.609
  STEP: getting /apis/networking.k8s.io @ 11/23/24 12:45:49.612
  STEP: getting /apis/networking.k8s.iov1 @ 11/23/24 12:45:49.613
  STEP: creating @ 11/23/24 12:45:49.614
  STEP: getting @ 11/23/24 12:45:49.632
  STEP: listing @ 11/23/24 12:45:49.643
  STEP: watching @ 11/23/24 12:45:49.648
  I1123 12:45:49.648194 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 11/23/24 12:45:49.649
  STEP: cluster-wide watching @ 11/23/24 12:45:49.652
  I1123 12:45:49.652817 20 ingress.go:198] starting watch
  STEP: patching @ 11/23/24 12:45:49.654
  STEP: updating @ 11/23/24 12:45:49.661
  I1123 12:45:49.675632 20 ingress.go:221] waiting for watch events with expected annotations
  I1123 12:45:49.675663 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 11/23/24 12:45:49.675
  STEP: updating /status @ 11/23/24 12:45:49.684
  STEP: get /status @ 11/23/24 12:45:49.696
  STEP: deleting @ 11/23/24 12:45:49.701
  STEP: deleting a collection @ 11/23/24 12:45:49.72
  I1123 12:45:49.741071 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7616" for this suite. @ 11/23/24 12:45:49.744
• [0.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 11/23/24 12:45:49.754
  I1123 12:45:49.754733 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 12:45:49.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:49.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:49.772
  STEP: apply creating a deployment @ 11/23/24 12:45:49.774
  I1123 12:45:49.791731 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4709" for this suite. @ 11/23/24 12:45:49.796
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 11/23/24 12:45:49.805
  I1123 12:45:49.805522 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:45:49.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:49.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:49.825
  STEP: creating service in namespace services-7756 @ 11/23/24 12:45:49.827
  STEP: creating service affinity-clusterip in namespace services-7756 @ 11/23/24 12:45:49.827
  STEP: creating replication controller affinity-clusterip in namespace services-7756 @ 11/23/24 12:45:49.839
  I1123 12:45:49.848394      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7756, replica count: 3
  I1123 12:45:52.899021      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 12:45:52.909913 20 resource.go:361] Creating new exec pod
  I1123 12:45:55.928119 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-7756 exec execpod-affinity45jcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1123 12:45:56.018394 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1123 12:45:56.018432 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:45:56.018556 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-7756 exec execpod-affinity45jcj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.50 80'
  I1123 12:45:56.101144 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.50 80\nConnection to 10.152.183.50 80 port [tcp/http] succeeded!\n"
  I1123 12:45:56.101176 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:45:56.101221 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-7756 exec execpod-affinity45jcj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.50:80/ ; done'
  I1123 12:45:56.231479 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.50:80/\n"
  I1123 12:45:56.231523 20 builder.go:147] stdout: "\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz\naffinity-clusterip-h5zkz"
  I1123 12:45:56.231535 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231544 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231556 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231562 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231569 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231577 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231583 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231610 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231620 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231626 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231632 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231639 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231645 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231689 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231696 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231705 20 service.go:242] Received response from host: affinity-clusterip-h5zkz
  I1123 12:45:56.231872 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7756, will wait for the garbage collector to delete the pods @ 11/23/24 12:45:56.247
  I1123 12:45:56.314447 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 10.29887ms
  I1123 12:45:56.414874 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.426171ms
  I1123 12:45:59.137065 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7756" for this suite. @ 11/23/24 12:45:59.142
• [9.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/23/24 12:45:59.15
  I1123 12:45:59.150196 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:45:59.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:45:59.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:45:59.167
  STEP: Creating configMap with name configmap-projected-all-test-volume-354564d0-61ac-47e9-84be-98e6ea1e224d @ 11/23/24 12:45:59.17
  STEP: Creating secret with name secret-projected-all-test-volume-84eab6f3-2452-489c-9182-897093d7e85d @ 11/23/24 12:45:59.176
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/23/24 12:45:59.181
  STEP: Saw pod success @ 11/23/24 12:46:03.209
  I1123 12:46:03.214383 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod projected-volume-d5ffe107-a8bf-4d00-b098-fb714d274f2b container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:46:03.223
  I1123 12:46:03.241608 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6406" for this suite. @ 11/23/24 12:46:03.245
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 11/23/24 12:46:03.255
  I1123 12:46:03.255531 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 12:46:03.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:03.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:03.275
  STEP: create the deployment @ 11/23/24 12:46:03.277
  W1123 12:46:03.285267      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/23/24 12:46:03.285
  STEP: delete the deployment @ 11/23/24 12:46:03.79
  STEP: wait for all rs to be garbage collected @ 11/23/24 12:46:03.799
  STEP: expected 0 pods, got 2 pods @ 11/23/24 12:46:03.804
  STEP: expected 0 rs, got 1 rs @ 11/23/24 12:46:03.81
  STEP: Gathering metrics @ 11/23/24 12:46:04.31
  W1123 12:46:04.315454      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1123 12:46:04.315483 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1123 12:46:04.315625 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9586" for this suite. @ 11/23/24 12:46:04.319
• [1.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 11/23/24 12:46:04.328
  I1123 12:46:04.328515 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replication-controller @ 11/23/24 12:46:04.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:04.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:04.349
  STEP: creating a ReplicationController @ 11/23/24 12:46:04.356
  STEP: waiting for RC to be added @ 11/23/24 12:46:04.362
  STEP: waiting for available Replicas @ 11/23/24 12:46:04.362
  STEP: patching ReplicationController @ 11/23/24 12:46:05.659
  STEP: waiting for RC to be modified @ 11/23/24 12:46:05.668
  STEP: patching ReplicationController status @ 11/23/24 12:46:05.669
  STEP: waiting for RC to be modified @ 11/23/24 12:46:05.674
  STEP: waiting for available Replicas @ 11/23/24 12:46:05.674
  STEP: fetching ReplicationController status @ 11/23/24 12:46:05.682
  STEP: patching ReplicationController scale @ 11/23/24 12:46:05.687
  STEP: waiting for RC to be modified @ 11/23/24 12:46:05.693
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/23/24 12:46:05.693
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/23/24 12:46:07.027
  STEP: updating ReplicationController status @ 11/23/24 12:46:07.031
  STEP: waiting for RC to be modified @ 11/23/24 12:46:07.04
  STEP: listing all ReplicationControllers @ 11/23/24 12:46:07.04
  STEP: checking that ReplicationController has expected values @ 11/23/24 12:46:07.045
  STEP: deleting ReplicationControllers by collection @ 11/23/24 12:46:07.045
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/23/24 12:46:07.058
  I1123 12:46:07.108713 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1123 12:46:07.108820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3733" for this suite. @ 11/23/24 12:46:07.113
• [2.792 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 11/23/24 12:46:07.12
  I1123 12:46:07.120322 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:46:07.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:07.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:07.138
  STEP: Setting up server cert @ 11/23/24 12:46:07.168
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:46:07.334
  STEP: Deploying the webhook pod @ 11/23/24 12:46:07.346
  STEP: Wait for the deployment to be ready @ 11/23/24 12:46:07.362
  I1123 12:46:07.371890 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 12:46:08.109080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:09.109122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 12:46:09.385
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:46:09.395
  E1123 12:46:10.110206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:46:10.395587 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 12:46:10.405593 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4230-crds.webhook.example.com via the AdmissionRegistration API @ 11/23/24 12:46:10.917
  STEP: Creating a custom resource while v1 is storage version @ 11/23/24 12:46:10.93
  E1123 12:46:11.111234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:12.111406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/23/24 12:46:12.961
  STEP: Patching the custom resource while v2 is storage version @ 11/23/24 12:46:12.979
  E1123 12:46:13.111479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:46:13.638329 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2374" for this suite. @ 11/23/24 12:46:13.643
  STEP: Destroying namespace "webhook-markers-1548" for this suite. @ 11/23/24 12:46:13.652
• [6.539 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 11/23/24 12:46:13.66
  I1123 12:46:13.660102 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replicaset @ 11/23/24 12:46:13.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:13.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:13.678
  I1123 12:46:13.695087 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1123 12:46:14.111586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:15.111818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:16.112717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:17.113265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:18.113366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:46:18.700652 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/23/24 12:46:18.7
  STEP: Scaling up "test-rs" replicaset @ 11/23/24 12:46:18.7
  I1123 12:46:18.712385 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/23/24 12:46:18.712
  I1123 12:46:18.723259 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6840 with ReadyReplicas 1, AvailableReplicas 1
  I1123 12:46:18.737087 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6840 with ReadyReplicas 1, AvailableReplicas 1
  I1123 12:46:18.757432 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6840 with ReadyReplicas 1, AvailableReplicas 1
  I1123 12:46:18.771408 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6840 with ReadyReplicas 1, AvailableReplicas 1
  E1123 12:46:19.113780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:46:20.008980 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6840 with ReadyReplicas 2, AvailableReplicas 2
  I1123 12:46:20.047183 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6840 with ReadyReplicas 3 found true
  I1123 12:46:20.047299 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6840" for this suite. @ 11/23/24 12:46:20.052
• [6.402 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/23/24 12:46:20.062
  I1123 12:46:20.062462 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 12:46:20.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:20.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:20.082
  STEP: creating the pod @ 11/23/24 12:46:20.084
  STEP: submitting the pod to kubernetes @ 11/23/24 12:46:20.084
  STEP: verifying QOS class is set on the pod @ 11/23/24 12:46:20.094
  I1123 12:46:20.102350 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8802" for this suite. @ 11/23/24 12:46:20.106
  E1123 12:46:20.113815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 11/23/24 12:46:20.119
  I1123 12:46:20.119700 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 12:46:20.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:20.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:20.138
  STEP: creating a ServiceAccount @ 11/23/24 12:46:20.152
  STEP: watching for the ServiceAccount to be added @ 11/23/24 12:46:20.162
  STEP: patching the ServiceAccount @ 11/23/24 12:46:20.164
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/23/24 12:46:20.169
  STEP: deleting the ServiceAccount @ 11/23/24 12:46:20.174
  I1123 12:46:20.192051 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7550" for this suite. @ 11/23/24 12:46:20.197
• [0.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 11/23/24 12:46:20.205
  I1123 12:46:20.205686 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/23/24 12:46:20.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:20.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:20.223
  I1123 12:46:20.226657 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 12:46:20.771881 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9689" for this suite. @ 11/23/24 12:46:20.779
• [0.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/23/24 12:46:20.789
  I1123 12:46:20.789216 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename init-container @ 11/23/24 12:46:20.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:20.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:20.807
  STEP: creating the pod @ 11/23/24 12:46:20.809
  I1123 12:46:20.810025 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1123 12:46:21.114202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:22.114242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:23.114473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:24.114591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:25.114725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:26.114826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:27.115161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:28.115279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:29.115497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:30.115605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:31.115742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:32.116560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:33.116750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:34.116984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:35.117849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:36.118019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:37.118350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:38.118579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:39.118770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:40.119035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:41.119210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:42.119234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:43.120205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:44.120433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:45.120564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:46.121453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:47.122199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:48.122272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:49.122391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:50.123181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:51.123252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:52.124173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:53.124287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:54.124529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:55.124722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:56.125189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:46:57.108133 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-2b912a24-05af-4c48-b6e4-0a47680e5ed1", GenerateName:"", Namespace:"init-container-8060", SelfLink:"", UID:"b798e54c-24e5-435f-911c-f375457ffede", ResourceVersion:"24245", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"810017809"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004333ef0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 12, 46, 57, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004333f50), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-xzmwq", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004054d00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xzmwq", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xzmwq", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xzmwq", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0029a9fc8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-83-143", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003b60280), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003492050)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003492070)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003492078), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00349207c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000e28950), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 23, 12, 46, 22, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.83.143", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.83.143"}}, PodIP:"192.168.21.189", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.21.189"}}, StartTime:time.Date(2024, time.November, 23, 12, 46, 20, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004eb1f0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004eb260)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://524fe6039a5e7ec0da0cacff959d764e5451de70f0d598680327e9573c13610d", Started:(*bool)(0xc00349212a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xzmwq", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e28980)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004054d60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00349213d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xzmwq", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e28990)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004054d40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0034920f4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xzmwq", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e28970)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1123 12:46:57.108423 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8060" for this suite. @ 11/23/24 12:46:57.113
• [36.335 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/23/24 12:46:57.124
  I1123 12:46:57.124685 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 12:46:57.125
  E1123 12:46:57.125438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:46:57.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:46:57.143
  STEP: creating the pod @ 11/23/24 12:46:57.145
  STEP: setting up watch @ 11/23/24 12:46:57.146
  STEP: submitting the pod to kubernetes @ 11/23/24 12:46:57.251
  STEP: verifying the pod is in kubernetes @ 11/23/24 12:46:57.262
  STEP: verifying pod creation was observed @ 11/23/24 12:46:57.269
  E1123 12:46:58.126096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:46:59.126134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/23/24 12:46:59.285
  STEP: verifying pod deletion was observed @ 11/23/24 12:46:59.295
  E1123 12:47:00.127176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:00.773989 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8822" for this suite. @ 11/23/24 12:47:00.778
• [3.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 11/23/24 12:47:00.786
  I1123 12:47:00.786593 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/23/24 12:47:00.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:00.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:00.809
  I1123 12:47:00.812149 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 12:47:01.128196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:02.128252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:03.128479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:03.864753 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1619" for this suite. @ 11/23/24 12:47:03.869
• [3.092 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 11/23/24 12:47:03.878
  I1123 12:47:03.878893 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 12:47:03.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:03.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:03.896
  STEP: Creating a test headless service @ 11/23/24 12:47:03.899
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5729.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5729.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/23/24 12:47:03.904
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5729.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5729.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/23/24 12:47:03.904
  STEP: creating a pod to probe DNS @ 11/23/24 12:47:03.904
  STEP: submitting the pod to kubernetes @ 11/23/24 12:47:03.904
  E1123 12:47:04.129322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:05.129437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/23/24 12:47:05.929
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:47:05.932
  I1123 12:47:05.952204 20 dns_common.go:527] DNS probes using dns-5729/dns-test-e661920c-33ad-43a0-8b0e-0fb369ce8e6d succeeded

  STEP: deleting the pod @ 11/23/24 12:47:05.952
  STEP: deleting the test headless service @ 11/23/24 12:47:05.967
  I1123 12:47:05.983370 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5729" for this suite. @ 11/23/24 12:47:05.99
• [2.119 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 11/23/24 12:47:05.997
  I1123 12:47:05.997691 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 12:47:05.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:06.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:06.016
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5435.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5435.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/23/24 12:47:06.018
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5435.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5435.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/23/24 12:47:06.018
  STEP: creating a pod to probe /etc/hosts @ 11/23/24 12:47:06.018
  STEP: submitting the pod to kubernetes @ 11/23/24 12:47:06.018
  E1123 12:47:06.130480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:07.130692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/23/24 12:47:08.042
  STEP: looking for the results for each expected name from probers @ 11/23/24 12:47:08.046
  I1123 12:47:08.069127 20 dns_common.go:527] DNS probes using dns-5435/dns-test-d7bd068c-aec2-4ba2-8bb4-73b2ddfc9f3e succeeded

  STEP: deleting the pod @ 11/23/24 12:47:08.069
  I1123 12:47:08.086991 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5435" for this suite. @ 11/23/24 12:47:08.093
• [2.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 11/23/24 12:47:08.101
  I1123 12:47:08.101091 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename aggregator @ 11/23/24 12:47:08.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:08.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:08.119
  I1123 12:47:08.121458 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Registering the sample API server. @ 11/23/24 12:47:08.121
  E1123 12:47:08.131534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:08.373666 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1123 12:47:08.412336 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1123 12:47:09.131688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:10.131783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:10.470521 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:11.132144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:12.132208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:12.476363 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:13.133111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:14.133281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:14.475809 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:15.134220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:16.134438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:16.475540 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:17.135400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:18.135547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:18.477633 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:19.136388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:20.136623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:20.476522 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:21.137124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:22.137200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:22.475657 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:23.138211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:24.139215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:24.476726 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:25.140196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:26.140356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:26.476416 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:27.141387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:28.142383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:28.475867 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:29.142455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:30.142571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:30.477884 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1123 12:47:31.143327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:32.143314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:32.600126 20 aggregator.go:755] Waited 114.960461ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/23/24 12:47:32.634
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/23/24 12:47:32.639
  STEP: List APIServices @ 11/23/24 12:47:32.648
  I1123 12:47:32.653232 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/23/24 12:47:32.653
  I1123 12:47:32.667110 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/23/24 12:47:32.667
  I1123 12:47:32.680331 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.November, 23, 12, 47, 32, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/23/24 12:47:32.68
  I1123 12:47:32.684950 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-11-23 12:47:32 +0000 UTC Passed all checks passed}
  I1123 12:47:32.684994 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1123 12:47:32.685005 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/23/24 12:47:32.685
  I1123 12:47:32.697204 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-828371970" @ 11/23/24 12:47:32.697
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/23/24 12:47:32.707
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/23/24 12:47:32.713
  STEP: Patch APIService Status @ 11/23/24 12:47:32.717
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/23/24 12:47:32.725
  I1123 12:47:32.730014 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-11-23 12:47:32 +0000 UTC Passed all checks passed}
  I1123 12:47:32.730038 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1123 12:47:32.730053 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1123 12:47:32.730065 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 11/23/24 12:47:32.73
  STEP: Confirm that the generated APIService has been deleted @ 11/23/24 12:47:32.74
  I1123 12:47:32.740970 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1123 12:47:32.745603 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1123 12:47:32.745628 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1123 12:47:32.870898 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-513" for this suite. @ 11/23/24 12:47:32.874
• [24.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 11/23/24 12:47:32.883
  I1123 12:47:32.883111 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 12:47:32.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:32.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:32.909
  I1123 12:47:32.911687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  W1123 12:47:32.912201      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00410ad40 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1123 12:47:33.143924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:34.144088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:35.144127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1123 12:47:35.449376      20 warnings.go:70] unknown field "alpha"
  W1123 12:47:35.449410      20 warnings.go:70] unknown field "beta"
  W1123 12:47:35.449414      20 warnings.go:70] unknown field "delta"
  W1123 12:47:35.449417      20 warnings.go:70] unknown field "epsilon"
  W1123 12:47:35.449420      20 warnings.go:70] unknown field "gamma"
  I1123 12:47:36.004831 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9094" for this suite. @ 11/23/24 12:47:36.009
• [3.134 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 11/23/24 12:47:36.016
  I1123 12:47:36.016995 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:47:36.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:36.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:36.037
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:47:36.04
  E1123 12:47:36.144845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:37.145005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:47:38.062
  I1123 12:47:38.067041 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-8bdb4b06-05ee-445d-b4e2-83b6024478ae container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:47:38.079
  I1123 12:47:38.104218 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8211" for this suite. @ 11/23/24 12:47:38.109
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 11/23/24 12:47:38.117
  I1123 12:47:38.117879 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/23/24 12:47:38.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:38.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:38.139
  I1123 12:47:38.141640 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 12:47:38.145728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:39.145892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:40.146001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:41.146111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:47:41.200595 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2498" for this suite. @ 11/23/24 12:47:41.204
• [3.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 11/23/24 12:47:41.21
  I1123 12:47:41.210788 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 12:47:41.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:41.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:41.229
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/23/24 12:47:41.233
  E1123 12:47:42.147183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:43.147278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:44.147336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:45.147451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:47:45.261
  I1123 12:47:45.267020 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-452c7890-1dab-4ea3-ab9c-7d9cf29bd9b0 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:47:45.275
  I1123 12:47:45.293981 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1989" for this suite. @ 11/23/24 12:47:45.298
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 11/23/24 12:47:45.307
  I1123 12:47:45.307701 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 12:47:45.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:45.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:45.326
  STEP: Creating a suspended job @ 11/23/24 12:47:45.334
  STEP: Patching the Job @ 11/23/24 12:47:45.34
  STEP: Watching for Job to be patched @ 11/23/24 12:47:45.361
  I1123 12:47:45.363226 20 job.go:1330] Event ADDED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-job-label:e2e-btc7z] and annotations: map[]
  I1123 12:47:45.363250 20 job.go:1330] Event MODIFIED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-job-label:e2e-btc7z] and annotations: map[]
  I1123 12:47:45.363262 20 job.go:1333] Event MODIFIED found for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[]
  STEP: Updating the job @ 11/23/24 12:47:45.363
  STEP: Watching for Job to be updated @ 11/23/24 12:47:45.373
  I1123 12:47:45.375037 20 job.go:1333] Event MODIFIED found for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  I1123 12:47:45.375069 20 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/23/24 12:47:45.375
  I1123 12:47:45.379879 20 job.go:1233] Job: e2e-btc7z as labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z]
  STEP: Waiting for job to complete @ 11/23/24 12:47:45.379
  E1123 12:47:46.147675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:47.148653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:48.148751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:49.148875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:50.149803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:51.150042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:52.150134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:53.150197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:54.151170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:55.151276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 11/23/24 12:47:55.391
  STEP: Watching for Job to be deleted @ 11/23/24 12:47:55.403
  I1123 12:47:55.405566 20 job.go:1330] Event MODIFIED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  I1123 12:47:55.405592 20 job.go:1330] Event MODIFIED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  I1123 12:47:55.405603 20 job.go:1330] Event MODIFIED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  I1123 12:47:55.405699 20 job.go:1330] Event MODIFIED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  I1123 12:47:55.405716 20 job.go:1330] Event MODIFIED observed for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  I1123 12:47:55.405748 20 job.go:1333] Event DELETED found for Job e2e-btc7z in namespace job-5778 with labels: map[e2e-btc7z:patched e2e-job-label:e2e-btc7z] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/23/24 12:47:55.405
  I1123 12:47:55.410194 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5778" for this suite. @ 11/23/24 12:47:55.417
• [10.125 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 11/23/24 12:47:55.432
  I1123 12:47:55.432852 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:47:55.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:55.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:55.451
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:47:55.454
  E1123 12:47:56.151360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:57.151532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:58.151943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:47:59.152131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:47:59.485
  I1123 12:47:59.490510 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-63b99928-496d-4126-9c73-1ce1863df30a container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:47:59.498
  I1123 12:47:59.516604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-962" for this suite. @ 11/23/24 12:47:59.52
• [4.095 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 11/23/24 12:47:59.528
  I1123 12:47:59.528322 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 12:47:59.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:47:59.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:47:59.55
  STEP: create the deployment @ 11/23/24 12:47:59.553
  W1123 12:47:59.560489      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/23/24 12:47:59.56
  STEP: delete the deployment @ 11/23/24 12:48:00.072
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/23/24 12:48:00.082
  E1123 12:48:00.152898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/23/24 12:48:00.6
  W1123 12:48:00.605773      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1123 12:48:00.605802 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1123 12:48:00.605988 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7731" for this suite. @ 11/23/24 12:48:00.61
• [1.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 11/23/24 12:48:00.619
  I1123 12:48:00.619532 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:48:00.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:48:00.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:48:00.637
  STEP: Creating configMap with name projected-configmap-test-volume-88c18f50-7200-4a75-8d0a-c060db3a72f7 @ 11/23/24 12:48:00.64
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:48:00.645
  E1123 12:48:01.154018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:02.155054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:03.156013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:04.156128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:48:04.67
  I1123 12:48:04.675150 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-configmaps-c961658c-1132-4770-939c-125a81ac9a74 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:48:04.682
  I1123 12:48:04.699561 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7237" for this suite. @ 11/23/24 12:48:04.703
• [4.091 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/23/24 12:48:04.71
  I1123 12:48:04.710654 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 12:48:04.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:48:04.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:48:04.729
  STEP: Creating secret with name secret-test-270b0f32-ebe4-4e93-873b-41327a6b0528 @ 11/23/24 12:48:04.734
  STEP: Creating a pod to test consume secrets @ 11/23/24 12:48:04.738
  E1123 12:48:05.156982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:06.157107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:07.157229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:08.157369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:48:08.763
  I1123 12:48:08.768591 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-4fa835d5-e7c0-4dfe-8f59-57624c521b0c container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 12:48:08.777
  I1123 12:48:08.794719 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6156" for this suite. @ 11/23/24 12:48:08.799
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 11/23/24 12:48:08.809
  I1123 12:48:08.809286 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 12:48:08.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:48:08.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:48:08.833
  STEP: Creating simple DaemonSet "daemon-set" @ 11/23/24 12:48:08.856
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/23/24 12:48:08.862
  I1123 12:48:08.867665 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:48:08.867700 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:48:08.871383 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:48:08.871396 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 12:48:09.157829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:48:09.866813 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:48:09.866866 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:48:09.870498 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:48:09.870530 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 12:48:10.157994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:48:10.867619 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:48:10.867662 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:48:10.871387 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 12:48:10.871407 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/23/24 12:48:10.874
  STEP: DeleteCollection of the DaemonSets @ 11/23/24 12:48:10.879
  STEP: Verify that ReplicaSets have been deleted @ 11/23/24 12:48:10.888
  I1123 12:48:10.903019 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25127"},"items":null}

  I1123 12:48:10.909813 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25130"},"items":[{"metadata":{"name":"daemon-set-8m7g6","generateName":"daemon-set-","namespace":"daemonsets-7648","uid":"d3723f43-21c3-4c4d-a6e2-12c5c4562a1a","resourceVersion":"25128","creationTimestamp":"2024-11-23T12:48:08Z","deletionTimestamp":"2024-11-23T12:48:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3752d2cd-0837-4798-b1b0-48c0e116d221","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-23T12:48:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3752d2cd-0837-4798-b1b0-48c0e116d221\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-23T12:48:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.125.15\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-brg9g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-brg9g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-41-64","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-41-64"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:08Z"}],"hostIP":"172.31.41.64","hostIPs":[{"ip":"172.31.41.64"}],"podIP":"192.168.125.15","podIPs":[{"ip":"192.168.125.15"}],"startTime":"2024-11-23T12:48:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-23T12:48:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b5e87f94370648c7f7570f2a0669b6486a849a75c3ab16815da2fe503024ae99","started":true,"volumeMounts":[{"name":"kube-api-access-brg9g","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-9sf2c","generateName":"daemon-set-","namespace":"daemonsets-7648","uid":"f1301071-f9fe-422d-9387-9898f916d3e2","resourceVersion":"25129","creationTimestamp":"2024-11-23T12:48:08Z","deletionTimestamp":"2024-11-23T12:48:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3752d2cd-0837-4798-b1b0-48c0e116d221","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-23T12:48:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3752d2cd-0837-4798-b1b0-48c0e116d221\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-23T12:48:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.120.79\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2jqd7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2jqd7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-25","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-25"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:08Z"}],"hostIP":"172.31.20.25","hostIPs":[{"ip":"172.31.20.25"}],"podIP":"192.168.120.79","podIPs":[{"ip":"192.168.120.79"}],"startTime":"2024-11-23T12:48:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-23T12:48:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7d2c40ab95b8ac6540ef491265bceae29c18013d76a3f846166ad56424dd7d14","started":true,"volumeMounts":[{"name":"kube-api-access-2jqd7","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-p6vn7","generateName":"daemon-set-","namespace":"daemonsets-7648","uid":"924f509b-4760-4cc3-a437-0df92fcb1fd8","resourceVersion":"25130","creationTimestamp":"2024-11-23T12:48:08Z","deletionTimestamp":"2024-11-23T12:48:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3752d2cd-0837-4798-b1b0-48c0e116d221","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-23T12:48:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3752d2cd-0837-4798-b1b0-48c0e116d221\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-23T12:48:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.21.175\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-m4s6s","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-m4s6s","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-83-143","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-83-143"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-23T12:48:08Z"}],"hostIP":"172.31.83.143","hostIPs":[{"ip":"172.31.83.143"}],"podIP":"192.168.21.175","podIPs":[{"ip":"192.168.21.175"}],"startTime":"2024-11-23T12:48:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-23T12:48:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2d50612122df3e768da3b371b01f5539ce60da162f2d970e2c6ed7bf34b27422","started":true,"volumeMounts":[{"name":"kube-api-access-m4s6s","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1123 12:48:10.926338 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7648" for this suite. @ 11/23/24 12:48:10.93
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 11/23/24 12:48:10.939
  I1123 12:48:10.939252 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/23/24 12:48:10.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:48:10.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:48:10.957
  I1123 12:48:10.960178 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 12:48:11.158185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:12.158334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:13.158814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:14.159720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:15.159794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:16.160530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:17.161230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:48:17.194118 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2479" for this suite. @ 11/23/24 12:48:17.199
• [6.268 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 11/23/24 12:48:17.207
  I1123 12:48:17.207232 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename cronjob @ 11/23/24 12:48:17.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:48:17.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:48:17.227
  STEP: Creating a ReplaceConcurrent cronjob @ 11/23/24 12:48:17.23
  STEP: Ensuring a job is scheduled @ 11/23/24 12:48:17.236
  E1123 12:48:18.161431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:19.161978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:20.162142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:21.162219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:22.162581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:23.162664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:24.163167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:25.163350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:26.164124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:27.165161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:28.165281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:29.165614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:30.165740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:31.165909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:32.166650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:33.166758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:34.166868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:35.166990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:36.167147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:37.167250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:38.167375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:39.167515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:40.167633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:41.167754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:42.168642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:43.168726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:44.168890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:45.169015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:46.169733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:47.169773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:48.170114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:49.170227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:50.170545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:51.170640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:52.171158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:53.171255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:54.172195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:55.172282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:56.172386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:57.172547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:58.172647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:48:59.173203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:00.173303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:01.173464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 11/23/24 12:49:01.241
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/23/24 12:49:01.247
  STEP: Ensuring the job is replaced with a new one @ 11/23/24 12:49:01.251
  E1123 12:49:02.174191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:03.174388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:04.174431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:05.174539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:06.174690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:07.175712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:08.175904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:09.176130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:10.176248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:11.176363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:12.176492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:13.177492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:14.177653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:15.177769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:16.177901      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:17.178896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:18.179123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:19.179321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:20.179413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:21.179529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:22.180420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:23.180612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:24.180723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:25.180908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:26.181016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:27.181128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:28.181232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:29.181325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:30.182142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:31.183177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:32.183585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:33.184204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:34.184241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:35.185184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:36.185539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:37.186020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:38.186441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:39.186649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:40.187096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:41.187295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:42.188162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:43.188401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:44.189249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:45.189442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:46.189539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:47.189589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:48.190083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:49.190268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:50.190388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:51.190576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:52.191387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:53.191538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:54.192067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:55.192098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:56.192186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:57.192271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:58.192366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:49:59.193147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:00.193256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:01.193363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 11/23/24 12:50:01.257
  I1123 12:50:01.267531 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2188" for this suite. @ 11/23/24 12:50:01.272
• [104.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 11/23/24 12:50:01.285
  I1123 12:50:01.285459 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 12:50:01.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:50:01.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:50:01.306
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:50:01.309
  E1123 12:50:02.194165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:03.194375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:04.194506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:05.194648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:50:05.342
  I1123 12:50:05.348052 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downwardapi-volume-4eadca1a-a233-4645-a27c-16f6108070f3 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:50:05.364
  I1123 12:50:05.382746 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-516" for this suite. @ 11/23/24 12:50:05.388
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 11/23/24 12:50:05.397
  I1123 12:50:05.397447 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:50:05.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:50:05.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:50:05.419
  STEP: creating service endpoint-test2 in namespace services-9802 @ 11/23/24 12:50:05.424
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9802 to expose endpoints map[] @ 11/23/24 12:50:05.438
  I1123 12:50:05.445748 20 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1123 12:50:06.195692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:06.454792 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9802 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9802 @ 11/23/24 12:50:06.454
  E1123 12:50:07.196174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:08.197178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9802 to expose endpoints map[pod1:[80]] @ 11/23/24 12:50:08.483
  I1123 12:50:08.497805 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9802 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/23/24 12:50:08.497
  I1123 12:50:08.497854 20 resource.go:361] Creating new exec pod
  E1123 12:50:09.197209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:10.197303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:11.197424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:11.516031 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9802 exec execpodzq8rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1123 12:50:11.603623 20 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1123 12:50:11.603671 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:50:11.603734 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9802 exec execpodzq8rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.87 80'
  I1123 12:50:11.689105 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.87 80\nConnection to 10.152.183.87 80 port [tcp/http] succeeded!\n"
  I1123 12:50:11.689134 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9802 @ 11/23/24 12:50:11.689
  E1123 12:50:12.197554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:13.197755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9802 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/23/24 12:50:13.716
  I1123 12:50:13.733391 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9802 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/23/24 12:50:13.733
  E1123 12:50:14.198663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:14.734450 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9802 exec execpodzq8rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1123 12:50:14.818017 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1123 12:50:14.818062 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:50:14.818135 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9802 exec execpodzq8rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.87 80'
  I1123 12:50:14.897488 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.87 80\nConnection to 10.152.183.87 80 port [tcp/http] succeeded!\n"
  I1123 12:50:14.897521 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9802 @ 11/23/24 12:50:14.897
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9802 to expose endpoints map[pod2:[80]] @ 11/23/24 12:50:14.911
  I1123 12:50:14.930238 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9802 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/23/24 12:50:14.93
  E1123 12:50:15.198904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:15.930978 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9802 exec execpodzq8rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1123 12:50:16.014007 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1123 12:50:16.014042 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:50:16.014105 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9802 exec execpodzq8rc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.87 80'
  I1123 12:50:16.097238 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.87 80\nConnection to 10.152.183.87 80 port [tcp/http] succeeded!\n"
  I1123 12:50:16.097270 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9802 @ 11/23/24 12:50:16.097
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9802 to expose endpoints map[] @ 11/23/24 12:50:16.114
  I1123 12:50:16.126231 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9802 exposes endpoints map[]
  I1123 12:50:16.149445 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9802" for this suite. @ 11/23/24 12:50:16.153
• [10.766 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 11/23/24 12:50:16.163
  I1123 12:50:16.163864 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 12:50:16.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:50:16.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:50:16.187
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/23/24 12:50:16.19
  E1123 12:50:16.199804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:17.200718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:18.200845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:19.201175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:20.201359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:50:20.222
  I1123 12:50:20.227129 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-b71cf748-3bf5-4f41-a571-6728e7cac407 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 12:50:20.236
  I1123 12:50:20.254067 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5181" for this suite. @ 11/23/24 12:50:20.258
• [4.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/23/24 12:50:20.265
  I1123 12:50:20.265319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubelet-test @ 11/23/24 12:50:20.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:50:20.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:50:20.282
  E1123 12:50:21.201450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:22.201830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:23.201952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:24.202126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:24.305237 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-812" for this suite. @ 11/23/24 12:50:24.31
• [4.053 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 11/23/24 12:50:24.318
  I1123 12:50:24.318749 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 12:50:24.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:50:24.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:50:24.336
  E1123 12:50:25.203176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:26.204156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:26.361186 20 delete.go:62] Deleting pod "var-expansion-72c325cb-0c8c-4a7e-98c4-92098add698b" in namespace "var-expansion-4522"
  I1123 12:50:26.369776 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-72c325cb-0c8c-4a7e-98c4-92098add698b" to be fully deleted
  E1123 12:50:27.205180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:28.205388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:50:28.379764 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4522" for this suite. @ 11/23/24 12:50:28.384
• [4.074 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 11/23/24 12:50:28.393
  I1123 12:50:28.393092 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption @ 11/23/24 12:50:28.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:50:28.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:50:28.413
  I1123 12:50:28.432173 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1123 12:50:29.205520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:30.205706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:31.205842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:32.205865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:33.206108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:34.206247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:35.206388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:36.206530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:37.206618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:38.207383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:39.207511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:40.207607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:41.207782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:42.208141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:43.208177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:44.208247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:45.208389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:46.208830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:47.209579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:48.209701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:49.210196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:50.210274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:51.210395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:52.211386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:53.211571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:54.211644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:55.212344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:56.213163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:57.213412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:58.213559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:50:59.214298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:00.215167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:01.215619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:02.216655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:03.217637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:04.217827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:05.218206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:06.218398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:07.218513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:08.218699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:09.219688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:10.219814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:11.220171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:12.221163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:13.222171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:14.223154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:15.223326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:16.224152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:17.224533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:18.224730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:19.225095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:20.225342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:21.225361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:22.226302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:23.226384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:24.227164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:25.227265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:26.227451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:27.227539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:28.227718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:28.437979 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/23/24 12:51:28.443
  I1123 12:51:28.443595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/23/24 12:51:28.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:51:28.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:51:28.464
  STEP: Finding an available node @ 11/23/24 12:51:28.467
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/23/24 12:51:28.467
  E1123 12:51:29.228786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:30.229028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/23/24 12:51:30.496
  I1123 12:51:30.514515 20 preemption.go:585] found a healthy node: ip-172-31-20-25
  E1123 12:51:31.229131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:32.229251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:33.229361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:34.229728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:35.229827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:36.230515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:36.581380 20 preemption.go:708] pods created so far: [1 1 1]
  I1123 12:51:36.581406 20 preemption.go:709] length of pods created so far: 3
  E1123 12:51:37.231086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:38.232173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:38.595162 20 preemption.go:726] pods created so far: [2 2 1]
  E1123 12:51:39.232280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:40.232385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:41.232477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:42.232555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:43.232647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:44.232770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:45.232879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:45.680467 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7287" for this suite. @ 11/23/24 12:51:45.685
  I1123 12:51:45.692362 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3791" for this suite. @ 11/23/24 12:51:45.695
• [77.312 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 11/23/24 12:51:45.705
  I1123 12:51:45.705559 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:51:45.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:51:45.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:51:45.723
  STEP: creating service multi-endpoint-test in namespace services-9059 @ 11/23/24 12:51:45.726
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9059 to expose endpoints map[] @ 11/23/24 12:51:45.737
  I1123 12:51:45.742283 20 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1123 12:51:46.232902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:46.754227 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9059 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9059 @ 11/23/24 12:51:46.754
  E1123 12:51:47.233118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:48.233225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9059 to expose endpoints map[pod1:[100]] @ 11/23/24 12:51:48.779
  I1123 12:51:48.792784 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9059 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9059 @ 11/23/24 12:51:48.792
  E1123 12:51:49.233310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:50.233431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9059 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/23/24 12:51:50.81
  I1123 12:51:50.828730 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9059 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/23/24 12:51:50.828
  I1123 12:51:50.828777 20 resource.go:361] Creating new exec pod
  E1123 12:51:51.234147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:52.234443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:53.235391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:53.843095 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9059 exec execpodzkh6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1123 12:51:53.936916 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1123 12:51:53.936954 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:51:53.937077 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9059 exec execpodzkh6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.69 80'
  I1123 12:51:54.016913 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.69 80\nConnection to 10.152.183.69 80 port [tcp/http] succeeded!\n"
  I1123 12:51:54.016943 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:51:54.017127 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9059 exec execpodzkh6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1123 12:51:54.102722 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1123 12:51:54.102748 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 12:51:54.102803 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-9059 exec execpodzkh6t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.69 81'
  I1123 12:51:54.178059 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.69 81\nConnection to 10.152.183.69 81 port [tcp/*] succeeded!\n"
  I1123 12:51:54.178084 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9059 @ 11/23/24 12:51:54.178
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9059 to expose endpoints map[pod2:[101]] @ 11/23/24 12:51:54.196
  I1123 12:51:54.212062 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9059 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9059 @ 11/23/24 12:51:54.212
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9059 to expose endpoints map[] @ 11/23/24 12:51:54.227
  E1123 12:51:54.235763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:54.237923 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9059 exposes endpoints map[]
  I1123 12:51:54.256617 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9059" for this suite. @ 11/23/24 12:51:54.26
• [8.564 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 11/23/24 12:51:54.269
  I1123 12:51:54.269735 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 12:51:54.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:51:54.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:51:54.292
  STEP: Setting up server cert @ 11/23/24 12:51:54.319
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 12:51:54.46
  STEP: Deploying the webhook pod @ 11/23/24 12:51:54.471
  STEP: Wait for the deployment to be ready @ 11/23/24 12:51:54.486
  I1123 12:51:54.496239 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 12:51:55.236294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:51:56.236449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 12:51:56.511
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 12:51:56.524
  E1123 12:51:57.237072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:57.524638 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/23/24 12:51:57.533
  STEP: create a namespace for the webhook @ 11/23/24 12:51:57.549
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/23/24 12:51:57.576
  I1123 12:51:57.644123 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6411" for this suite. @ 11/23/24 12:51:57.648
  STEP: Destroying namespace "webhook-markers-7964" for this suite. @ 11/23/24 12:51:57.655
  STEP: Destroying namespace "fail-closed-namespace-2807" for this suite. @ 11/23/24 12:51:57.663
• [3.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/23/24 12:51:57.671
  I1123 12:51:57.671840 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 12:51:57.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:51:57.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:51:57.691
  I1123 12:51:57.728358 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1123 12:51:57.734580 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1123 12:51:57.742082 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:51:57.742118 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:51:57.746719 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:51:57.746738 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 12:51:58.237279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:58.740517 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:51:58.740571 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:51:58.744846 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 12:51:58.744866 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 12:51:59.238166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:51:59.738698 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:51:59.738754 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:51:59.742646 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 12:51:59.742677 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1123 12:51:59.742691 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1123 12:51:59.753188 20 daemon_set.go:102] Updating DaemonSet daemon-set
  E1123 12:52:00.238811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:00.767999 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1123 12:52:00.777412 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I1123 12:52:00.777438 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1123 12:52:00.784713 20 daemon_set.go:1193] Wrong image for pod: daemon-set-mc786. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1123 12:52:00.784734 20 daemon_set.go:1198] Pod daemon-set-mc786 is not available
  I1123 12:52:00.789799 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:52:00.789840 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1123 12:52:01.238946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:01.786516 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:52:01.786570 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1123 12:52:02.240041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:02.781041 20 daemon_set.go:1198] Pod daemon-set-xwvfl is not available
  I1123 12:52:02.785386 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 12:52:02.785429 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/23/24 12:52:02.794
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2880, will wait for the garbage collector to delete the pods @ 11/23/24 12:52:02.794
  I1123 12:52:02.856219 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.686522ms
  I1123 12:52:02.956761 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.535864ms
  E1123 12:52:03.240501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:04.240589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:04.662347 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:52:04.662379 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1123 12:52:04.667402 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26523"},"items":null}

  I1123 12:52:04.671203 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26523"},"items":null}

  I1123 12:52:04.693568 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2880" for this suite. @ 11/23/24 12:52:04.697
• [7.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 11/23/24 12:52:04.708
  I1123 12:52:04.708205 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 12:52:04.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:52:04.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:52:04.726
  STEP: Creating configMap with name configmap-test-volume-e947d862-73f4-48fd-bf4d-e03c70d49866 @ 11/23/24 12:52:04.728
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:52:04.733
  E1123 12:52:05.240691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:06.240790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:07.241132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:08.241652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:52:08.759
  I1123 12:52:08.764264 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-83e1ee18-3e6b-4ff3-9a41-2202a6534b47 container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:52:08.782
  I1123 12:52:08.805980 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3889" for this suite. @ 11/23/24 12:52:08.81
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 11/23/24 12:52:08.818
  I1123 12:52:08.818364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:52:08.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:52:08.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:52:08.84
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 12:52:08.843
  E1123 12:52:09.241747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:10.241841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:11.242154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:12.243165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:52:12.869
  I1123 12:52:12.874310 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-abad036d-872d-404c-827f-84c0dd1702f9 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 12:52:12.883
  I1123 12:52:12.904551 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7504" for this suite. @ 11/23/24 12:52:12.909
• [4.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 11/23/24 12:52:12.918
  I1123 12:52:12.918665 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 12:52:12.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:52:12.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:52:12.939
  STEP: Counting existing ResourceQuota @ 11/23/24 12:52:12.942
  E1123 12:52:13.243772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:14.244623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:15.245107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:16.245237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:17.245304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/23/24 12:52:17.949
  STEP: Ensuring resource quota status is calculated @ 11/23/24 12:52:17.956
  E1123 12:52:18.245835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:19.245947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:19.962179 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1926" for this suite. @ 11/23/24 12:52:19.966
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 11/23/24 12:52:19.976
  I1123 12:52:19.976763 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 12:52:19.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:52:19.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:52:19.999
  STEP: Creating service test in namespace statefulset-361 @ 11/23/24 12:52:20.002
  STEP: Creating stateful set ss in namespace statefulset-361 @ 11/23/24 12:52:20.008
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-361 @ 11/23/24 12:52:20.017
  I1123 12:52:20.021173 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1123 12:52:20.246573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:21.246705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:22.247778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:23.247865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:24.248031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:25.248318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:26.248407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:27.248622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:28.248807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:29.249013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:30.023278 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/23/24 12:52:30.023
  I1123 12:52:30.027986 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:52:30.124920 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:52:30.124949 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:52:30.124972 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:52:30.130636 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1123 12:52:30.249815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:31.250021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:32.250979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:33.251095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:34.251213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:35.251304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:36.251439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:37.251636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:38.252178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:39.252257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:40.131760 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:52:40.131803 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1123 12:52:40.156278 20 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I1123 12:52:40.156340 20 resource.go:175] ss-0  ip-172-31-20-25  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:20 +0000 UTC  }]
  I1123 12:52:40.156347 20 resource.go:178] 
  I1123 12:52:40.156355 20 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E1123 12:52:40.252492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:41.162789 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.99086862s
  E1123 12:52:41.253038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:42.167600 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.984402231s
  E1123 12:52:42.253647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:43.172851 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.979747456s
  E1123 12:52:43.254061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:44.178573 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.974410202s
  E1123 12:52:44.254591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:45.183242 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968786378s
  E1123 12:52:45.255294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:46.189384 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.963261051s
  E1123 12:52:46.255433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:47.194684 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.957913291s
  E1123 12:52:47.255715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:48.201062 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.952660526s
  E1123 12:52:48.256105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:49.205811 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 946.297053ms
  E1123 12:52:49.256858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-361 @ 11/23/24 12:52:50.205
  I1123 12:52:50.211676 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1123 12:52:50.256909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:52:50.295473 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1123 12:52:50.295497 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:52:50.295523 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:52:50.295561 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:52:50.375289 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1123 12:52:50.375315 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:52:50.375326 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:52:50.375358 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1123 12:52:50.461726 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1123 12:52:50.461748 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1123 12:52:50.461757 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1123 12:52:50.466181 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:52:50.466203 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:52:50.466212 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/23/24 12:52:50.466
  I1123 12:52:50.471443 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:52:50.548144 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:52:50.548167 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:52:50.548178 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:52:50.548208 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:52:50.636324 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:52:50.636345 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:52:50.636354 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:52:50.636385 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=statefulset-361 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1123 12:52:50.725512 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1123 12:52:50.725534 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1123 12:52:50.725544 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1123 12:52:50.725604 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1123 12:52:50.729706 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1123 12:52:51.257102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:52.257240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:53.257316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:54.257422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:55.257599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:56.257903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:57.258021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:58.258132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:52:59.258314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:00.259156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:00.736185 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:53:00.736221 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:53:00.736230 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1123 12:53:00.752531 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1123 12:53:00.752581 20 resource.go:175] ss-0  ip-172-31-20-25   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:20 +0000 UTC  }]
  I1123 12:53:00.752600 20 resource.go:175] ss-1  ip-172-31-83-143  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:40 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:40 +0000 UTC  }]
  I1123 12:53:00.752622 20 resource.go:175] ss-2  ip-172-31-41-64   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:40 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:52:40 +0000 UTC  }]
  I1123 12:53:00.752627 20 resource.go:178] 
  I1123 12:53:00.752634 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1123 12:53:01.260190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:01.757556 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.995169026s
  E1123 12:53:02.260343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:02.762387 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.990201283s
  E1123 12:53:03.261115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:03.766880 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.985417627s
  E1123 12:53:04.261213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:04.772668 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.980216099s
  E1123 12:53:05.262202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:05.778791 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.974967347s
  E1123 12:53:06.263194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:06.784157 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.968852986s
  E1123 12:53:07.263808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:07.789157 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.963604583s
  E1123 12:53:08.264799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:08.796451 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.958503835s
  E1123 12:53:09.265041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:09.802774 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 951.325357ms
  E1123 12:53:10.265359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-361 @ 11/23/24 12:53:10.803
  I1123 12:53:10.808625 20 rest.go:150] Scaling statefulset ss to 0
  I1123 12:53:10.816718 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 12:53:10.821312 20 statefulset.go:138] Deleting all statefulset in ns statefulset-361
  I1123 12:53:10.824915 20 rest.go:150] Scaling statefulset ss to 0
  I1123 12:53:10.832803 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 12:53:10.837688 20 rest.go:88] Deleting statefulset ss
  I1123 12:53:10.852754 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-361" for this suite. @ 11/23/24 12:53:10.857
• [50.889 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 11/23/24 12:53:10.867
  I1123 12:53:10.867699 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replication-controller @ 11/23/24 12:53:10.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:10.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:10.887
  STEP: Creating replication controller my-hostname-basic-a3af1404-9397-49ba-9659-f93766d9f455 @ 11/23/24 12:53:10.889
  I1123 12:53:10.901786 20 resource.go:87] Pod name my-hostname-basic-a3af1404-9397-49ba-9659-f93766d9f455: Found 0 pods out of 1
  E1123 12:53:11.266375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:12.266437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:13.266669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:14.266779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:15.266867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:15.906395 20 resource.go:87] Pod name my-hostname-basic-a3af1404-9397-49ba-9659-f93766d9f455: Found 1 pods out of 1
  I1123 12:53:15.906434 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-a3af1404-9397-49ba-9659-f93766d9f455" are running
  I1123 12:53:15.910207 20 rc.go:523] Pod "my-hostname-basic-a3af1404-9397-49ba-9659-f93766d9f455-dk9vd" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:53:12 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:53:10 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:53:12 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:53:12 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-23 12:53:10 +0000 UTC Reason: Message:}])
  I1123 12:53:15.910228 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/23/24 12:53:15.91
  I1123 12:53:15.923563 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2192" for this suite. @ 11/23/24 12:53:15.927
• [5.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 11/23/24 12:53:15.933
  I1123 12:53:15.933770 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename runtimeclass @ 11/23/24 12:53:15.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:15.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:15.952
  E1123 12:53:16.267865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:17.268835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:18.001209 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7998" for this suite. @ 11/23/24 12:53:18.006
• [2.084 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/23/24 12:53:18.018
  I1123 12:53:18.018040 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename conformance-tests @ 11/23/24 12:53:18.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:18.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:18.037
  STEP: Getting node addresses @ 11/23/24 12:53:18.041
  I1123 12:53:18.041583 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1123 12:53:18.047686 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5466" for this suite. @ 11/23/24 12:53:18.051
• [0.044 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 11/23/24 12:53:18.062
  I1123 12:53:18.062191 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 12:53:18.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:18.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:18.081
  STEP: Creating configMap with name projected-configmap-test-volume-09bed9a4-bb2b-466c-9df1-1e08407bd63d @ 11/23/24 12:53:18.084
  STEP: Creating a pod to test consume configMaps @ 11/23/24 12:53:18.089
  E1123 12:53:18.269759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:19.269982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:20.270134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:21.270360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:53:22.119
  I1123 12:53:22.124634 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-configmaps-671ab6bf-40f1-41bc-b687-5947186b036e container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:53:22.135
  I1123 12:53:22.158411 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1376" for this suite. @ 11/23/24 12:53:22.163
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 11/23/24 12:53:22.172
  I1123 12:53:22.172992 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/23/24 12:53:22.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:22.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:22.191
  I1123 12:53:22.196723 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2283" for this suite. @ 11/23/24 12:53:22.2
• [0.035 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/23/24 12:53:22.208
  I1123 12:53:22.208111 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename containers @ 11/23/24 12:53:22.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:22.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:22.225
  STEP: Creating a pod to test override arguments @ 11/23/24 12:53:22.228
  E1123 12:53:22.271175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:23.271692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:24.272268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:25.273180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 12:53:26.25
  I1123 12:53:26.255593 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod client-containers-5edb7fdd-be2e-40f4-b076-582f7f4525a5 container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 12:53:26.264
  E1123 12:53:26.273746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:26.280838 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3973" for this suite. @ 11/23/24 12:53:26.285
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/23/24 12:53:26.295
  I1123 12:53:26.295245 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 12:53:26.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:26.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:26.313
  I1123 12:53:26.338158 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/23/24 12:53:26.346
  I1123 12:53:26.351542 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:26.351566 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/23/24 12:53:26.351
  I1123 12:53:26.372289 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:26.372310 20 fixtures.go:130] Node ip-172-31-41-64 is running 0 daemon pod, expected 1
  E1123 12:53:27.274122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:27.373817 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:27.373845 20 fixtures.go:130] Node ip-172-31-41-64 is running 0 daemon pod, expected 1
  E1123 12:53:28.274767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:28.372655 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1123 12:53:28.372682 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/23/24 12:53:28.377
  I1123 12:53:28.395294 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1123 12:53:28.395310 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1123 12:53:29.275363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:29.396792 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:29.396825 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/23/24 12:53:29.396
  I1123 12:53:29.410792 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:29.410817 20 fixtures.go:130] Node ip-172-31-41-64 is running 0 daemon pod, expected 1
  E1123 12:53:30.275748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:30.412460 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:30.412493 20 fixtures.go:130] Node ip-172-31-41-64 is running 0 daemon pod, expected 1
  E1123 12:53:31.275919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:31.412204 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1123 12:53:31.412239 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/23/24 12:53:31.419
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9849, will wait for the garbage collector to delete the pods @ 11/23/24 12:53:31.419
  I1123 12:53:31.481616 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.670949ms
  I1123 12:53:31.582628 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.00865ms
  E1123 12:53:32.275940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:32.797011 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 12:53:32.797046 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1123 12:53:32.800880 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27256"},"items":null}

  I1123 12:53:32.804715 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27256"},"items":null}

  I1123 12:53:32.830887 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9849" for this suite. @ 11/23/24 12:53:32.834
• [6.547 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 11/23/24 12:53:32.842
  I1123 12:53:32.842553 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 12:53:32.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:32.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:32.864
  STEP: fetching services @ 11/23/24 12:53:32.866
  I1123 12:53:32.870606 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1518" for this suite. @ 11/23/24 12:53:32.874
• [0.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 11/23/24 12:53:32.882
  I1123 12:53:32.882826 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 12:53:32.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:32.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:32.9
  STEP: Creating a ResourceQuota @ 11/23/24 12:53:32.903
  STEP: Getting a ResourceQuota @ 11/23/24 12:53:32.909
  STEP: Updating a ResourceQuota @ 11/23/24 12:53:32.914
  STEP: Verifying a ResourceQuota was modified @ 11/23/24 12:53:32.922
  STEP: Deleting a ResourceQuota @ 11/23/24 12:53:32.925
  STEP: Verifying the deleted ResourceQuota @ 11/23/24 12:53:32.932
  I1123 12:53:32.936288 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6397" for this suite. @ 11/23/24 12:53:32.94
• [0.066 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 11/23/24 12:53:32.951
  I1123 12:53:32.951648 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 12:53:32.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:53:32.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:53:32.977
  STEP: Creating pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043 @ 11/23/24 12:53:32.99
  E1123 12:53:33.276913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:34.277046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 12:53:35.013
  I1123 12:53:35.017669 20 container_probe.go:1749] Initial restart count of pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 is 0
  I1123 12:53:35.021250 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:35.277663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:36.277892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:37.026909 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:37.278168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:38.278416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:39.032753 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:39.279165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:40.279386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:41.038117 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:41.280433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:42.280609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:43.044665 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:43.281020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:44.281138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:45.049903 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:45.282158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:46.283182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:47.056167 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:47.283431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:48.284175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:49.062289 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:49.284558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:50.285287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:51.067781 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:51.286069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:52.286377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:53.073328 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:53.286554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:54.286774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:55.078298 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:55.287593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:56.287729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:57.084399 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:57.288677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:53:58.288819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:53:59.090585 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:53:59.288824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:00.288947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:01.095899 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:01.289120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:02.289307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:03.102036 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:03.289391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:04.289538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:05.107931 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:05.289646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:06.289727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:07.113162 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:07.290463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:08.291468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:09.119691 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:09.291924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:10.292086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:11.125290 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:11.292437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:12.292662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:13.131651 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:13.292840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:14.293057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:15.137763 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:15.294058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:16.294161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:17.142669 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:17.294873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:18.295025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:19.149323 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:19.295505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:20.295631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:21.154153 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:21.296383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:22.296541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:23.160461 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:23.296625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:24.296830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:25.165460 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:25.297679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:26.297882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:27.171733 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:27.298923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:28.299098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:29.177343 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:29.299526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:30.299632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:31.183240 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:31.300374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:32.300611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:33.189695 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:33.300979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:34.301099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:35.197133 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:35.301276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:36.301449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:37.202272 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:37.302412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:38.302535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:39.209117 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:39.303301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:40.303414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:41.215210 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:41.304448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:42.304520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:43.221885 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:43.305037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:44.305120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:45.227633 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:45.305779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:46.306004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:47.233843 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:47.306934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:48.307094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:49.239881 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:49.307992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:50.308147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:51.245352 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:51.308512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:52.308627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:53.250895 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:53.309012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:54.309187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:55.255812 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:55.309923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:56.310141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:57.262820 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:57.310934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:54:58.311093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:54:59.268088 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:54:59.312123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:00.312249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:01.273624 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:01.312688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:02.313086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:03.280140 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:03.313311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:04.314201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:05.285192 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:05.314276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:06.314452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:07.291280 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:07.315439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:08.315626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:09.298383 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:09.316556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:10.316699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:11.304333 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:11.317457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:12.317879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:13.311351 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:13.318466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:14.318624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:15.316654 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:15.318746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:16.319190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:17.319669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:17.322317 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:18.320316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:19.320519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:19.327917 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:20.321071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:21.321104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:21.333101 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:22.321280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:23.321480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:23.339273 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:24.322126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:25.322219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:25.344685 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:26.323176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:27.324175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:27.350383 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:28.324406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:29.324624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:29.357582 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:30.325644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:31.325806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:31.362374 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:32.326555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:33.326646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:33.368648 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:34.326709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:35.326926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:35.374277 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:36.327150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:37.327333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:37.380713 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:38.327698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:39.327992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:39.386869 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:40.328890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:41.329132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:41.392485 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:42.329410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:43.329523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:43.398529 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:44.329619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:45.329724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:45.405242 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:46.330143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:47.330238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:47.410909 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:48.331308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:49.332145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:49.416325 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:50.333174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:51.333281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:51.422716 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:52.333363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:53.333456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:53.428992 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:54.334216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:55.335178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:55.435615 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:56.335552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:57.335749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:57.442291 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:55:58.336107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:55:59.336327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:55:59.447238 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:00.336444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:01.336764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:01.454701 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:02.337754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:03.337999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:03.461075 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:04.338043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:05.338350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:05.466751 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:06.338677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:07.338734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:07.473103 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:08.338834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:09.338935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:09.478571 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:10.339058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:11.339777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:11.485108 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:12.339872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:13.340643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:13.491366 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:14.341087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:15.342154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:15.498713 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:16.343157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:17.344156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:17.504833 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:18.344254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:19.344458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:19.512182 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:20.345111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:21.345317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:21.517505 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:22.345405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:23.345577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:23.522867 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:24.345781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:25.345994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:25.530266 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:26.346943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:27.347088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:27.535662 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:28.347176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:29.347299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:29.540473 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:30.347377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:31.347591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:31.552272 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:32.348110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:33.348327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:33.557936 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:34.348734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:35.349421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:35.563748 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:36.349520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:37.350226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:37.570729 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:38.351177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:39.351282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:39.576708 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:40.352184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:41.352280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:41.582755 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:42.353167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:43.353279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:43.589542 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:44.354192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:45.354400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:45.596528 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:46.354406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:47.354810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:47.602622 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:48.354917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:49.355939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:49.608620 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:50.356418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:51.356539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:51.613628 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:52.357574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:53.357776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:53.619312 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:54.357896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:55.358020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:55.624126 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:56.359058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:57.359360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:57.629803 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:56:58.360160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:56:59.361192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:56:59.635677 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:00.361286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:01.362185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:01.643306 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:02.363176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:03.363373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:03.650205 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:04.364025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:05.364185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:05.656346 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:06.365190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:07.365454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:07.661761 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:08.365546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:09.365793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:09.668379 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:10.365922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:11.366120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:11.674227 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:12.367109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:13.367208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:13.680559 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:14.367355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:15.367456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:15.685943 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:16.367589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:17.367761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:17.691032 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:18.368259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:19.368441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:19.697384 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:20.368537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:21.368659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:21.703105 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:22.368874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:23.369012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:23.708674 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:24.369190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:25.369326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:25.714414 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:26.370207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:27.370556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:27.719620 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:28.371182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:29.371436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:29.726142 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:30.372118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:31.373158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:31.732335 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:32.374165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:33.375183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:33.737309 20 container_probe.go:1759] Get pod test-grpc-33d2667e-9843-4555-baed-8858227ef3d5 in namespace container-probe-3043
  E1123 12:57:34.376110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:35.376223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/23/24 12:57:35.737
  I1123 12:57:35.752231 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3043" for this suite. @ 11/23/24 12:57:35.757
• [242.816 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 11/23/24 12:57:35.767
  I1123 12:57:35.767528 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 12:57:35.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:57:35.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:57:35.787
  STEP: Creating a ResourceQuota @ 11/23/24 12:57:35.79
  STEP: Getting a ResourceQuota @ 11/23/24 12:57:35.795
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/23/24 12:57:35.8
  STEP: Patching the ResourceQuota @ 11/23/24 12:57:35.804
  STEP: Deleting a Collection of ResourceQuotas @ 11/23/24 12:57:35.811
  STEP: Verifying the deleted ResourceQuota @ 11/23/24 12:57:35.822
  I1123 12:57:35.826485 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8654" for this suite. @ 11/23/24 12:57:35.832
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/23/24 12:57:35.84
  I1123 12:57:35.840938 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 12:57:35.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:57:35.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:57:35.859
  STEP: creating a Pod with a static label @ 11/23/24 12:57:35.866
  STEP: watching for Pod to be ready @ 11/23/24 12:57:35.876
  I1123 12:57:35.877704 20 pods.go:945] observed Pod pod-test in namespace pods-909 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1123 12:57:35.882088 20 pods.go:945] observed Pod pod-test in namespace pods-909 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC  }]
  I1123 12:57:35.899224 20 pods.go:945] observed Pod pod-test in namespace pods-909 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC  }]
  E1123 12:57:36.376836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:36.847881 20 pods.go:948] Found Pod pod-test in namespace pods-909 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:36 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:36 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-23 12:57:35 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/23/24 12:57:36.852
  STEP: getting the Pod and ensuring that it's patched @ 11/23/24 12:57:36.861
  STEP: replacing the Pod's status Ready condition to False @ 11/23/24 12:57:36.865
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/23/24 12:57:36.877
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/23/24 12:57:36.877
  STEP: watching for the Pod to be deleted @ 11/23/24 12:57:36.888
  I1123 12:57:36.889683 20 pods.go:1058] observed event type MODIFIED
  E1123 12:57:37.377125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:38.378156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:38.848488 20 pods.go:1058] observed event type MODIFIED
  I1123 12:57:39.010898 20 pods.go:1058] observed event type MODIFIED
  E1123 12:57:39.378294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:39.855301 20 pods.go:1058] observed event type MODIFIED
  I1123 12:57:39.867291 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-909" for this suite. @ 11/23/24 12:57:39.87
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 11/23/24 12:57:39.88
  I1123 12:57:39.880596 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 12:57:39.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:57:39.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:57:39.9
  STEP: Creating service test in namespace statefulset-3107 @ 11/23/24 12:57:39.903
  STEP: Creating a new StatefulSet @ 11/23/24 12:57:39.909
  I1123 12:57:39.935561 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E1123 12:57:40.379186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:41.380203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:42.380803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:43.381022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:44.381137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:45.381218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:46.381304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:47.381629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:48.381717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:49.382144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:57:49.928803 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:57:49.928838 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:57:49.928846 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/23/24 12:57:49.943
  I1123 12:57:49.954816 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/23/24 12:57:49.954
  E1123 12:57:50.382250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:51.383175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:52.383251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:53.383358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:54.383485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:55.383591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:56.383666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:57.383765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:58.383875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:57:59.384006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/23/24 12:57:59.966
  STEP: Performing a canary update @ 11/23/24 12:57:59.966
  I1123 12:57:59.980315 20 statefulset.go:2507] Updating stateful set ss2
  I1123 12:57:59.988667 20 wait.go:74] Waiting for Pod statefulset-3107/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1123 12:58:00.384166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:01.384242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:02.384371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:03.384502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:04.384714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:05.385074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:06.384980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:07.384978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:08.385096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:09.385293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/23/24 12:58:09.992
  I1123 12:58:10.039539 20 wait.go:40] Found 2 stateful pods, waiting for 3
  E1123 12:58:10.386085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:11.386213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:12.387198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:13.387312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:14.387547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:15.387608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:16.387691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:17.387791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:18.388113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:19.388221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:58:20.038985 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:58:20.039020 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1123 12:58:20.039028 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/23/24 12:58:20.048
  I1123 12:58:20.061536 20 statefulset.go:2507] Updating stateful set ss2
  I1123 12:58:20.073399 20 wait.go:74] Waiting for Pod statefulset-3107/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1123 12:58:20.389079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:21.389177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:22.389372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:23.389499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:24.389597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:25.389798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:26.390168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:27.390820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:28.390988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:29.391119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:58:30.083379 20 statefulset.go:2507] Updating stateful set ss2
  I1123 12:58:30.094989 20 wait.go:56] Waiting for StatefulSet statefulset-3107/ss2 to complete update
  I1123 12:58:30.095014 20 wait.go:63] Waiting for Pod statefulset-3107/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1123 12:58:30.391199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:31.392187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:32.392280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:33.392345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:34.392445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:35.392559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:36.392654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:37.392807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:38.393173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:39.393276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:58:40.094297 20 statefulset.go:138] Deleting all statefulset in ns statefulset-3107
  I1123 12:58:40.098050 20 rest.go:150] Scaling statefulset ss2 to 0
  E1123 12:58:40.394169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:41.395165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:42.395309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:43.395449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:44.395623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:45.395732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:46.395852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:47.396077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:48.396214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:49.396399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 12:58:50.115530 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 12:58:50.119756 20 rest.go:88] Deleting statefulset ss2
  I1123 12:58:50.138587 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3107" for this suite. @ 11/23/24 12:58:50.144
• [70.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/23/24 12:58:50.154
  I1123 12:58:50.154452 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-pred @ 11/23/24 12:58:50.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 12:58:50.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 12:58:50.174
  I1123 12:58:50.178254 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1123 12:58:50.187728 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1123 12:58:50.191409 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-25 before test
  I1123 12:58:50.198442 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5lgnj from ingress-nginx-kubernetes-worker started at 2024-11-23 12:07:57 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.198659 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:58:50.198853 20 predicates.go:957] calico-node-wl5cp from kube-system started at 2024-11-23 12:07:48 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.199050 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:58:50.199062 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-23 12:10:58 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.199068 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1123 12:58:50.199197 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-fvv6x from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:58:50.199203 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:58:50.199209 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 12:58:50.199218 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-41-64 before test
  I1123 12:58:50.205695 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qlg9c from ingress-nginx-kubernetes-worker started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.205710 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:58:50.205717 20 predicates.go:957] calico-node-c4kkn from kube-system started at 2024-11-23 12:08:42 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.205723 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:58:50.205728 20 predicates.go:957] coredns-5b4857d7c8-kbgj6 from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.205733 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1123 12:58:50.205739 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tv6sb from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.205746 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1123 12:58:50.205753 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-99r5c from kube-system started at 2024-11-23 12:00:46 +0000 UTC (2 container statuses recorded)
  I1123 12:58:50.205758 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1123 12:58:50.205763 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1123 12:58:50.205769 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2r9wg from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.205774 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1123 12:58:50.205779 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-crnff from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.205785 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1123 12:58:50.205791 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-hhm79 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:58:50.205796 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:58:50.205801 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 12:58:50.205807 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-143 before test
  I1123 12:58:50.211618 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-xwwf7 from ingress-nginx-kubernetes-worker started at 2024-11-23 12:05:34 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.211632 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 12:58:50.211639 20 predicates.go:957] calico-node-m8xlh from kube-system started at 2024-11-23 12:08:52 +0000 UTC (1 container statuses recorded)
  I1123 12:58:50.211645 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 12:58:50.211652 20 predicates.go:957] sonobuoy-e2e-job-f5d65af88fb24f14 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:58:50.211658 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1123 12:58:50.211663 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:58:50.211669 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-wxftv from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 12:58:50.211675 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 12:58:50.211685 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/23/24 12:58:50.211
  E1123 12:58:50.397183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:51.398180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/23/24 12:58:52.238
  STEP: Trying to apply a random label on the found node. @ 11/23/24 12:58:52.262
  STEP: verifying the node has the label kubernetes.io/e2e-38e0ef6a-9959-4fec-b1d1-ce31f7b74c57 95 @ 11/23/24 12:58:52.271
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/23/24 12:58:52.276
  E1123 12:58:52.398241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:53.398448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.20.25 on the node which pod4 resides and expect not scheduled @ 11/23/24 12:58:54.296
  E1123 12:58:54.399298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:55.399457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:56.400138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:57.400436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:58.400743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:58:59.400886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:00.401458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:01.402184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:02.402422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:03.403184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:04.403792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:05.403902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:06.404769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:07.405280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:08.405503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:09.405626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:10.406428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:11.406616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:12.406762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:13.406988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:14.407581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:15.407805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:16.408397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:17.409154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:18.409658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:19.409852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:20.410446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:21.411428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:22.411748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:23.411886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:24.411866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:25.412184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:26.412645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:27.412808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:28.413498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:29.413649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:30.413694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:31.413873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:32.414157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:33.414255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:34.414470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:35.414579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:36.414676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:37.414785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:38.414997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:39.415112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:40.415279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:41.415423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:42.415661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:43.415811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:44.415904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:45.416025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:46.416205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:47.416325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:48.416514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:49.417095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:50.417213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:51.417351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:52.417559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:53.417693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:54.417786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:55.418125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:56.418220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:57.418311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:58.418453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 12:59:59.418571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:00.418728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:01.418865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:02.419091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:03.419226      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:04.419359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:05.419673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:06.419593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:07.420098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:08.420193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:09.421156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:10.421281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:11.422086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:12.423154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:13.423259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:14.424152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:15.424291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:16.425169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:17.425282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:18.425392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:19.425496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:20.425697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:21.425822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:22.425921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:23.426316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:24.426514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:25.427218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:26.427400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:27.427520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:28.427766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:29.428018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:30.428229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:31.428928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:32.429273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:33.429354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:34.430235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:35.430273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:36.430451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:37.431073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:38.431178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:39.431261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:40.431370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:41.431451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:42.432149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:43.433160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:44.434149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:45.434241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:46.435236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:47.435379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:48.435581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:49.436554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:50.436893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:51.437058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:52.437097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:53.437765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:54.437997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:55.438085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:56.438612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:57.438868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:58.439046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:00:59.439132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:00.439370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:01.439642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:02.439840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:03.440104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:04.440204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:05.441280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:06.441705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:07.442164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:08.442265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:09.443231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:10.443415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:11.444125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:12.444428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:13.444549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:14.444738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:15.444854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:16.445092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:17.445934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:18.446135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:19.447170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:20.448151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:21.449192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:22.449286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:23.449484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:24.449666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:25.450676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:26.450759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:27.450855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:28.451872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:29.452080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:30.453151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:31.454163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:32.455172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:33.455472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:34.456188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:35.457173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:36.457370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:37.457493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:38.457680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:39.458154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:40.459184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:41.459753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:42.459859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:43.460070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:44.460094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:45.460202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:46.460301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:47.460392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:48.460459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:49.461258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:50.461354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:51.461910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:52.462086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:53.463043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:54.463159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:55.464155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:56.465154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:57.465238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:58.465883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:01:59.466019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:00.466205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:01.466556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:02.466716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:03.466856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:04.467904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:05.468256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:06.468727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:07.469621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:08.470180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:09.470272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:10.470402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:11.470495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:12.470624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:13.470737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:14.471286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:15.472150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:16.472251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:17.473154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:18.474175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:19.475172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:20.475275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:21.476267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:22.476569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:23.476672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:24.476798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:25.476854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:26.477087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:27.477180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:28.477393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:29.477735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:30.477945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:31.478712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:32.478823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:33.478934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:34.479134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:35.479636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:36.479883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:37.479994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:38.481000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:39.481753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:40.482152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:41.482913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:42.483354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:43.483649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:44.484170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:45.484774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:46.484879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:47.485178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:48.485376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:49.485473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:50.485660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:51.486326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:52.486503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:53.486626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:54.486812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:55.487707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:56.487807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:57.488756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:58.489023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:02:59.489099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:00.489289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:01.490178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:02.490259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:03.491094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:04.491187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:05.491278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:06.491361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:07.491655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:08.491751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:09.492744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:10.493152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:11.493855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:12.494170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:13.495192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:14.495346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:15.496391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:16.496579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:17.496696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:18.496900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:19.497567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:20.497742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:21.498788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:22.498893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:23.499842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:24.499991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:25.500635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:26.501188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:27.501918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:28.502093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:29.502886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:30.503089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:31.503755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:32.503860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:33.504147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:34.504333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:35.505153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:36.505279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:37.506106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:38.506236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:39.506837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:40.506923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:41.507165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:42.507447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:43.507998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:44.508181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:45.508929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:46.509081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:47.510154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:48.510836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:49.511638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:50.511735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:51.512295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:52.512421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:53.512621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-38e0ef6a-9959-4fec-b1d1-ce31f7b74c57 off the node ip-172-31-20-25 @ 11/23/24 13:03:54.304
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-38e0ef6a-9959-4fec-b1d1-ce31f7b74c57 @ 11/23/24 13:03:54.318
  I1123 13:03:54.322361 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-807" for this suite. @ 11/23/24 13:03:54.328
• [304.184 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/23/24 13:03:54.338
  I1123 13:03:54.338628 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubelet-test @ 11/23/24 13:03:54.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:03:54.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:03:54.357
  STEP: Waiting for pod completion @ 11/23/24 13:03:54.371
  E1123 13:03:54.513112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:55.514189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:56.514474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:57.515201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:03:58.406384 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-776" for this suite. @ 11/23/24 13:03:58.41
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 11/23/24 13:03:58.421
  I1123 13:03:58.421146 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:03:58.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:03:58.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:03:58.445
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 13:03:58.449
  E1123 13:03:58.516160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:03:59.516322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:00.517146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:01.517398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:04:02.477
  I1123 13:04:02.481875 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-dcc308e7-930c-48b9-929f-da2beacff00c container client-container: <nil>
  STEP: delete the pod @ 11/23/24 13:04:02.491
  I1123 13:04:02.515774 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1123 13:04:02.517840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-3911" for this suite. @ 11/23/24 13:04:02.52
• [4.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 11/23/24 13:04:02.53
  I1123 13:04:02.530865 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:04:02.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:04:02.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:04:02.55
  I1123 13:04:02.555934 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:04:03.518040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/23/24 13:04:03.847
  I1123 13:04:03.847075 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 create -f -'
  E1123 13:04:04.518205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:05.518383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:04:05.912702 20 builder.go:146] stderr: ""
  I1123 13:04:05.912745 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9399-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1123 13:04:05.912800 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 delete e2e-test-crd-publish-openapi-9399-crds test-cr'
  I1123 13:04:05.967761 20 builder.go:146] stderr: ""
  I1123 13:04:05.967810 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9399-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1123 13:04:05.967906 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 apply -f -'
  I1123 13:04:06.027704 20 builder.go:146] stderr: ""
  I1123 13:04:06.027732 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9399-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1123 13:04:06.027768 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-1057 --namespace=crd-publish-openapi-1057 delete e2e-test-crd-publish-openapi-9399-crds test-cr'
  I1123 13:04:06.080932 20 builder.go:146] stderr: ""
  I1123 13:04:06.080979 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9399-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/23/24 13:04:06.08
  I1123 13:04:06.081051 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-1057 explain e2e-test-crd-publish-openapi-9399-crds'
  I1123 13:04:06.122532 20 builder.go:146] stderr: ""
  I1123 13:04:06.122580 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9399-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1123 13:04:06.519130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:04:07.368110 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1057" for this suite. @ 11/23/24 13:04:07.375
• [4.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/23/24 13:04:07.387
  I1123 13:04:07.387166 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename subpath @ 11/23/24 13:04:07.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:04:07.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:04:07.406
  STEP: Setting up data @ 11/23/24 13:04:07.409
  STEP: Creating pod pod-subpath-test-configmap-w6h5 @ 11/23/24 13:04:07.419
  STEP: Creating a pod to test atomic-volume-subpath @ 11/23/24 13:04:07.419
  E1123 13:04:07.519337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:08.519543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:09.520324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:10.520445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:11.520774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:12.521428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:13.521715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:14.522184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:15.522386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:16.523191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:17.523562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:18.523675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:19.524324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:20.524457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:21.525438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:22.525571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:23.526390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:24.526540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:25.526646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:26.526837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:27.527109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:28.527215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:29.527267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:30.527481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:04:31.504
  I1123 13:04:31.508717 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-subpath-test-configmap-w6h5 container test-container-subpath-configmap-w6h5: <nil>
  STEP: delete the pod @ 11/23/24 13:04:31.517
  E1123 13:04:31.528435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-configmap-w6h5 @ 11/23/24 13:04:31.537
  I1123 13:04:31.537623 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-w6h5" in namespace "subpath-7706"
  I1123 13:04:31.541469 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7706" for this suite. @ 11/23/24 13:04:31.545
• [24.167 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 11/23/24 13:04:31.554
  I1123 13:04:31.554033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption @ 11/23/24 13:04:31.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:04:31.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:04:31.573
  I1123 13:04:31.590860 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1123 13:04:32.528610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:33.528686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:34.529427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:35.529550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:36.529668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:37.530416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:38.530587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:39.530656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:40.530985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:41.531087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:42.531181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:43.531646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:44.532116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:45.533154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:46.534224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:47.534352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:48.534473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:49.534678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:50.535690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:51.536202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:52.536318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:53.536504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:54.537155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:55.537294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:56.538160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:57.538272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:58.538325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:04:59.538523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:00.538773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:01.539045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:02.539146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:03.539348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:04.540244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:05.540443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:06.540515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:07.541469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:08.542254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:09.543156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:10.543253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:11.544186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:12.544274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:13.545164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:14.546178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:15.546274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:16.546387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:17.546686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:18.546908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:19.547087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:20.547150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:21.547249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:22.547392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:23.547463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:24.547597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:25.547727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:26.547862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:27.548015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:28.548132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:29.548287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:30.548426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:31.548519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:05:31.597995 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 11/23/24 13:05:31.602
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 11/23/24 13:05:31.614
  I1123 13:05:31.629193 20 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 11/23/24 13:05:31.629
  E1123 13:05:32.549189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:33.549312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 11/23/24 13:05:33.64
  I1123 13:05:33.646611 20 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 11/23/24 13:05:33.646
  E1123 13:05:34.549466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:35.549593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 11/23/24 13:05:35.656
  I1123 13:05:35.660469 20 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1123 13:05:36.177200 20 pod_client.go:173] Successfully updated pod "victim-pod"
  I1123 13:05:36.220056 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4239" for this suite. @ 11/23/24 13:05:36.223
• [64.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 11/23/24 13:05:36.233
  I1123 13:05:36.233227 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 13:05:36.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:05:36.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:05:36.253
  STEP: Creating ServiceAccount "e2e-sa-9dtbj"  @ 11/23/24 13:05:36.255
  I1123 13:05:36.261313 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9dtbj"  @ 11/23/24 13:05:36.261
  I1123 13:05:36.270501 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I1123 13:05:36.270575 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6810" for this suite. @ 11/23/24 13:05:36.275
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 11/23/24 13:05:36.284
  I1123 13:05:36.284800 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:05:36.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:05:36.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:05:36.306
  STEP: Counting existing ResourceQuota @ 11/23/24 13:05:36.309
  E1123 13:05:36.549636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:37.549926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:38.550029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:39.551050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:40.551843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/23/24 13:05:41.313
  STEP: Ensuring resource quota status is calculated @ 11/23/24 13:05:41.32
  E1123 13:05:41.551904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:42.552018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 11/23/24 13:05:43.326
  STEP: Creating a NodePort Service @ 11/23/24 13:05:43.349
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/23/24 13:05:43.379
  STEP: Ensuring resource quota status captures service creation @ 11/23/24 13:05:43.406
  E1123 13:05:43.552479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:44.552578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 11/23/24 13:05:45.411
  STEP: Ensuring resource quota status released usage @ 11/23/24 13:05:45.462
  E1123 13:05:45.553347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:46.553508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:05:47.466977 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-316" for this suite. @ 11/23/24 13:05:47.471
• [11.194 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 11/23/24 13:05:47.479
  I1123 13:05:47.479333 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:05:47.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:05:47.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:05:47.497
  STEP: Creating Pod @ 11/23/24 13:05:47.5
  E1123 13:05:47.553895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:48.554093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 11/23/24 13:05:49.522
  I1123 13:05:49.522151 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9618 PodName:pod-sharedvolume-2e2fcc9e-bf19-461d-90f3-c0cf25b335c5 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:05:49.522170 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:05:49.522694 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:05:49.522758 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-9618/pods/pod-sharedvolume-2e2fcc9e-bf19-461d-90f3-c0cf25b335c5/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  E1123 13:05:49.555041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:05:49.568603 20 exec_util.go:111] Exec stderr: ""
  I1123 13:05:49.568713 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9618" for this suite. @ 11/23/24 13:05:49.573
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 11/23/24 13:05:49.581
  I1123 13:05:49.581380 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/23/24 13:05:49.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:05:49.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:05:49.6
  STEP: create the container to handle the HTTPGet hook request. @ 11/23/24 13:05:49.607
  E1123 13:05:50.555193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:51.555301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/23/24 13:05:51.633
  E1123 13:05:52.555422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:53.555608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 11/23/24 13:05:53.658
  E1123 13:05:54.555738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:55.555906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 11/23/24 13:05:55.68
  I1123 13:05:55.698664 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9142" for this suite. @ 11/23/24 13:05:55.703
• [6.132 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/23/24 13:05:55.713
  I1123 13:05:55.713814 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 13:05:55.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:05:55.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:05:55.738
  I1123 13:05:55.750146 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E1123 13:05:56.556085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:57.556250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:58.556457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:05:59.556792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:00.557031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:00.756765 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/23/24 13:06:00.756
  I1123 13:06:00.756838 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/23/24 13:06:00.767
  I1123 13:06:00.779107 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1307c05e-486e-4717-ba05-e695243d05dc",
      ResourceVersion: (string) (len=5) "29637",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867963960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 13:06:00.785571 20 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1123 13:06:00.785639 20 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1123 13:06:00.786084 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6235cf3-a688-4b34-a55f-8ac2deb8b056",
      ResourceVersion: (string) (len=5) "29638",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867963955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1307c05e-486e-4717-ba05-e695243d05dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 33 30 37 63 30 35  |"uid\":\"1307c05|
              00000040  65 2d 34 38 36 65 2d 34  37 31 37 2d 62 61 30 35  |e-486e-4717-ba05|
              00000050  2d 65 36 39 35 32 34 33  64 30 35 64 63 5c 22 7d  |-e695243d05dc\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 13:06:00.795778 20 deployment.go:67] Pod "test-cleanup-controller-wbxsh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-wbxsh",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2008",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1be4026f-c5d2-4d42-a531-009f9ad313f2",
      ResourceVersion: (string) (len=5) "29625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867963955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "c6235cf3-a688-4b34-a55f-8ac2deb8b056",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 36 32 33 35 63 66 33  |uid\":\"c6235cf3|
              00000080  2d 61 36 38 38 2d 34 62  33 34 2d 61 35 35 66 2d  |-a688-4b34-a55f-|
              00000090  38 61 63 32 64 65 62 38  62 30 35 36 5c 22 7d 22  |8ac2deb8b056\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 39 39 5c 22 7d 22  |2.168.120.99\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7cdmx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7cdmx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867963955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867963955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867963956,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://633997660f9e1196b015fbc7ecad1f84291990a0ead8644bf5e47f77e3bda164",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7cdmx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:06:00.797344 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2008" for this suite. @ 11/23/24 13:06:00.811
• [5.110 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 11/23/24 13:06:00.824
  I1123 13:06:00.824026 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replicaset @ 11/23/24 13:06:00.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:00.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:00.841
  STEP: Create a Replicaset @ 11/23/24 13:06:00.854
  STEP: Verify that the required pods have come up. @ 11/23/24 13:06:00.859
  I1123 13:06:00.868148 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1123 13:06:01.558025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:02.558338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:03.558569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:04.558675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:05.558760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:05.873435 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/23/24 13:06:05.873
  STEP: Getting /status @ 11/23/24 13:06:05.873
  I1123 13:06:05.880138 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/23/24 13:06:05.88
  I1123 13:06:05.889359 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/23/24 13:06:05.889
  I1123 13:06:05.891004 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1123 13:06:05.891077 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.891142 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.891254 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.891278 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-9510 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1123 13:06:05.891293 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/23/24 13:06:05.891
  I1123 13:06:05.891317 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1123 13:06:05.901110 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/23/24 13:06:05.901
  I1123 13:06:05.902747 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1123 13:06:05.902814 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.902921 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.903152 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.903169 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-9510 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1123 13:06:05.903227 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1123 13:06:05.903246 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-9510 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1123 13:06:05.903258 20 replica_set.go:729] Replicaset test-rs has a patched status
  I1123 13:06:05.903349 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9510" for this suite. @ 11/23/24 13:06:05.907
• [5.092 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 11/23/24 13:06:05.916
  I1123 13:06:05.916705 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:06:05.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:05.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:05.936
  STEP: creating a replication controller @ 11/23/24 13:06:05.939
  I1123 13:06:05.939132 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 create -f -'
  I1123 13:06:06.028047 20 builder.go:146] stderr: ""
  I1123 13:06:06.028076 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/23/24 13:06:06.028
  I1123 13:06:06.028148 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 13:06:06.075557 20 builder.go:146] stderr: ""
  I1123 13:06:06.075584 20 builder.go:147] stdout: "update-demo-nautilus-9ftcj update-demo-nautilus-r7gwf "
  I1123 13:06:06.075624 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods update-demo-nautilus-9ftcj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 13:06:06.118917 20 builder.go:146] stderr: ""
  I1123 13:06:06.118948 20 builder.go:147] stdout: ""
  I1123 13:06:06.118976 20 kubectl.go:2502] update-demo-nautilus-9ftcj is created but not running
  E1123 13:06:06.559412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:07.559308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:08.559394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:09.559514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:10.559739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:11.119123 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1123 13:06:11.190110 20 builder.go:146] stderr: ""
  I1123 13:06:11.192720 20 builder.go:147] stdout: "update-demo-nautilus-9ftcj update-demo-nautilus-r7gwf "
  I1123 13:06:11.193038 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods update-demo-nautilus-9ftcj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 13:06:11.275095 20 builder.go:146] stderr: ""
  I1123 13:06:11.275122 20 builder.go:147] stdout: "true"
  I1123 13:06:11.275158 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods update-demo-nautilus-9ftcj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 13:06:11.318645 20 builder.go:146] stderr: ""
  I1123 13:06:11.318671 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 13:06:11.318691 20 kubectl.go:2393] validating pod update-demo-nautilus-9ftcj
  I1123 13:06:11.325040 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 13:06:11.325079 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 13:06:11.325093 20 kubectl.go:2520] update-demo-nautilus-9ftcj is verified up and running
  I1123 13:06:11.325123 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods update-demo-nautilus-r7gwf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1123 13:06:11.369357 20 builder.go:146] stderr: ""
  I1123 13:06:11.369378 20 builder.go:147] stdout: "true"
  I1123 13:06:11.369412 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods update-demo-nautilus-r7gwf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1123 13:06:11.412377 20 builder.go:146] stderr: ""
  I1123 13:06:11.412398 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1123 13:06:11.412408 20 kubectl.go:2393] validating pod update-demo-nautilus-r7gwf
  I1123 13:06:11.418267 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1123 13:06:11.418302 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1123 13:06:11.418313 20 kubectl.go:2520] update-demo-nautilus-r7gwf is verified up and running
  STEP: using delete to clean up resources @ 11/23/24 13:06:11.418
  I1123 13:06:11.418371 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 delete --grace-period=0 --force -f -'
  I1123 13:06:11.469853 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:06:11.469874 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1123 13:06:11.469915 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get rc,svc -l name=update-demo --no-headers'
  I1123 13:06:11.529655 20 builder.go:146] stderr: "No resources found in kubectl-1229 namespace.\n"
  I1123 13:06:11.529677 20 builder.go:147] stdout: ""
  I1123 13:06:11.529711 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-1229 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E1123 13:06:11.560446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:11.601928 20 builder.go:146] stderr: ""
  I1123 13:06:11.601988 20 builder.go:147] stdout: ""
  I1123 13:06:11.602140 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1229" for this suite. @ 11/23/24 13:06:11.607
• [5.703 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/23/24 13:06:11.619
  I1123 13:06:11.619625 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-pred @ 11/23/24 13:06:11.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:11.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:11.649
  I1123 13:06:11.657267 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1123 13:06:11.665650 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1123 13:06:11.669614 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-20-25 before test
  I1123 13:06:11.680076 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5lgnj from ingress-nginx-kubernetes-worker started at 2024-11-23 12:07:57 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.680091 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 13:06:11.680099 20 predicates.go:957] calico-node-wl5cp from kube-system started at 2024-11-23 12:07:48 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.680104 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 13:06:11.680111 20 predicates.go:957] update-demo-nautilus-9ftcj from kubectl-1229 started at 2024-11-23 13:06:06 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.680116 20 predicates.go:959] 	Container update-demo ready: true, restart count 0
  I1123 13:06:11.680122 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-23 12:10:58 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.680128 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1123 13:06:11.680136 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-fvv6x from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 13:06:11.680141 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 13:06:11.680146 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 13:06:11.680152 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-41-64 before test
  I1123 13:06:11.687344 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-qlg9c from ingress-nginx-kubernetes-worker started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.687359 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 13:06:11.687367 20 predicates.go:957] calico-node-c4kkn from kube-system started at 2024-11-23 12:08:42 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.687372 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 13:06:11.687378 20 predicates.go:957] coredns-5b4857d7c8-kbgj6 from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.687422 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1123 13:06:11.687428 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tv6sb from kube-system started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.687434 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1123 13:06:11.687482 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-99r5c from kube-system started at 2024-11-23 12:00:46 +0000 UTC (2 container statuses recorded)
  I1123 13:06:11.687488 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1123 13:06:11.687493 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1123 13:06:11.687500 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-2r9wg from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.687505 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1123 13:06:11.687543 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-crnff from kubernetes-dashboard started at 2024-11-23 12:00:46 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.687548 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1123 13:06:11.687554 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-hhm79 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 13:06:11.687559 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 13:06:11.687566 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1123 13:06:11.687572 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-83-143 before test
  I1123 13:06:11.695051 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-xwwf7 from ingress-nginx-kubernetes-worker started at 2024-11-23 12:05:34 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.695070 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1123 13:06:11.695078 20 predicates.go:957] calico-node-m8xlh from kube-system started at 2024-11-23 12:08:52 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.695084 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1123 13:06:11.695090 20 predicates.go:957] update-demo-nautilus-r7gwf from kubectl-1229 started at 2024-11-23 13:06:06 +0000 UTC (1 container statuses recorded)
  I1123 13:06:11.695094 20 predicates.go:959] 	Container update-demo ready: true, restart count 0
  I1123 13:06:11.695154 20 predicates.go:957] sonobuoy-e2e-job-f5d65af88fb24f14 from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 13:06:11.695159 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1123 13:06:11.695165 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 13:06:11.695171 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-4a73ddedfdcb42a8-wxftv from sonobuoy started at 2024-11-23 12:11:01 +0000 UTC (2 container statuses recorded)
  I1123 13:06:11.695297 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1123 13:06:11.695303 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/23/24 13:06:11.695
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.180a9ac3a2c34dad], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 11/23/24 13:06:11.725
  E1123 13:06:12.560552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:12.722658 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8428" for this suite. @ 11/23/24 13:06:12.728
• [1.116 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 11/23/24 13:06:12.735
  I1123 13:06:12.735867 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 13:06:12.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:12.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:12.757
  STEP: Creating a pod to test downward api env vars @ 11/23/24 13:06:12.76
  E1123 13:06:13.560987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:14.561859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:15.562113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:16.562210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:06:16.786
  I1123 13:06:16.790772 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downward-api-0864bb0b-0bce-40a2-9953-75aee47da8ab container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 13:06:16.801
  I1123 13:06:16.822360 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2558" for this suite. @ 11/23/24 13:06:16.827
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 11/23/24 13:06:16.837
  I1123 13:06:16.838004 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pv @ 11/23/24 13:06:16.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:16.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:16.862
  STEP: Creating initial PV and PVC @ 11/23/24 13:06:16.866
  I1123 13:06:16.867003 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5144" @ 11/23/24 13:06:16.889
  STEP: Listing PVCs in namespace "pv-5144" @ 11/23/24 13:06:16.895
  STEP: Reading "pvc-6bw9f" Status @ 11/23/24 13:06:16.901
  STEP: Reading "pv-5144-dwtc4" Status @ 11/23/24 13:06:16.906
  STEP: Patching "pvc-6bw9f" Status @ 11/23/24 13:06:16.914
  STEP: Patching "pv-5144-dwtc4" Status @ 11/23/24 13:06:16.942
  STEP: Updating "pvc-6bw9f" Status @ 11/23/24 13:06:16.956
  STEP: Updating "pv-5144-dwtc4" Status @ 11/23/24 13:06:16.969
  I1123 13:06:16.980597 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1123 13:06:16.980618 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-6bw9f"
  I1123 13:06:16.990487 20 pv.go:193] Deleting PersistentVolume "pv-5144-dwtc4"
  I1123 13:06:17.006351 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5144" for this suite. @ 11/23/24 13:06:17.011
• [0.182 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 11/23/24 13:06:17.02
  I1123 13:06:17.020194 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:06:17.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:17.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:17.041
  STEP: Counting existing ResourceQuota @ 11/23/24 13:06:17.043
  E1123 13:06:17.563131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:18.563291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:19.563500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:20.564269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:21.565175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/23/24 13:06:22.048
  STEP: Ensuring resource quota status is calculated @ 11/23/24 13:06:22.056
  E1123 13:06:22.566000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:23.566256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 11/23/24 13:06:24.062
  STEP: Ensuring resource quota status captures replication controller creation @ 11/23/24 13:06:24.08
  E1123 13:06:24.566376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:25.566509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 11/23/24 13:06:26.087
  STEP: Ensuring resource quota status released usage @ 11/23/24 13:06:26.095
  E1123 13:06:26.566610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:27.566711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:28.100106 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1177" for this suite. @ 11/23/24 13:06:28.104
• [11.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 11/23/24 13:06:28.116
  I1123 13:06:28.116169 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:06:28.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:28.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:28.136
  STEP: creating service in namespace services-625 @ 11/23/24 13:06:28.14
  STEP: creating service affinity-nodeport-transition in namespace services-625 @ 11/23/24 13:06:28.14
  STEP: creating replication controller affinity-nodeport-transition in namespace services-625 @ 11/23/24 13:06:28.161
  I1123 13:06:28.172633      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-625, replica count: 3
  E1123 13:06:28.566795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:29.566911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:30.567090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:31.223872      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 13:06:31.238234 20 resource.go:361] Creating new exec pod
  E1123 13:06:31.567078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:32.567248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:33.567296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:34.261631 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-625 exec execpod-affinitymfgb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1123 13:06:34.343409 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1123 13:06:34.343446 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:06:34.343502 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-625 exec execpod-affinitymfgb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.149 80'
  I1123 13:06:34.426256 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.149 80\nConnection to 10.152.183.149 80 port [tcp/http] succeeded!\n"
  I1123 13:06:34.426287 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:06:34.426346 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-625 exec execpod-affinitymfgb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.64 30561'
  I1123 13:06:34.505478 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.64 30561\nConnection to 172.31.41.64 30561 port [tcp/*] succeeded!\n"
  I1123 13:06:34.505504 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:06:34.505617 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-625 exec execpod-affinitymfgb8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.25 30561'
  E1123 13:06:34.568134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:34.589045 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.25 30561\nConnection to 172.31.20.25 30561 port [tcp/*] succeeded!\n"
  I1123 13:06:34.589072 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:06:34.602240 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-625 exec execpod-affinitymfgb8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.25:30561/ ; done'
  I1123 13:06:34.741559 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n"
  I1123 13:06:34.741589 20 builder.go:147] stdout: "\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-l762q\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-l762q\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-l762q\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-ztm7q\naffinity-nodeport-transition-l762q\naffinity-nodeport-transition-pc2zx"
  I1123 13:06:34.741605 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741615 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.741623 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.741632 20 service.go:242] Received response from host: affinity-nodeport-transition-l762q
  I1123 13:06:34.741640 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741646 20 service.go:242] Received response from host: affinity-nodeport-transition-l762q
  I1123 13:06:34.741653 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.741659 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741666 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741672 20 service.go:242] Received response from host: affinity-nodeport-transition-l762q
  I1123 13:06:34.741678 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741684 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741691 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.741699 20 service.go:242] Received response from host: affinity-nodeport-transition-ztm7q
  I1123 13:06:34.741706 20 service.go:242] Received response from host: affinity-nodeport-transition-l762q
  I1123 13:06:34.741713 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.754807 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-625 exec execpod-affinitymfgb8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.25:30561/ ; done'
  I1123 13:06:34.874292 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:30561/\n"
  I1123 13:06:34.874323 20 builder.go:147] stdout: "\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx\naffinity-nodeport-transition-pc2zx"
  I1123 13:06:34.874334 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874341 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874348 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874354 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874360 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874366 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874373 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874380 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874400 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874407 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874414 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874420 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874426 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874433 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874439 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874446 20 service.go:242] Received response from host: affinity-nodeport-transition-pc2zx
  I1123 13:06:34.874503 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-625, will wait for the garbage collector to delete the pods @ 11/23/24 13:06:34.892
  I1123 13:06:34.956503 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 9.140304ms
  I1123 13:06:35.056569 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.062956ms
  E1123 13:06:35.568771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:36.569222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:37.569946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:38.085883 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-625" for this suite. @ 11/23/24 13:06:38.09
• [9.984 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 11/23/24 13:06:38.099
  I1123 13:06:38.099773 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename limitrange @ 11/23/24 13:06:38.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:38.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:38.117
  STEP: Creating a LimitRange @ 11/23/24 13:06:38.12
  STEP: Setting up watch @ 11/23/24 13:06:38.12
  STEP: Submitting a LimitRange @ 11/23/24 13:06:38.226
  STEP: Verifying LimitRange creation was observed @ 11/23/24 13:06:38.232
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/23/24 13:06:38.232
  I1123 13:06:38.236608 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1123 13:06:38.236632 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/23/24 13:06:38.236
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/23/24 13:06:38.242
  I1123 13:06:38.247514 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1123 13:06:38.247548 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/23/24 13:06:38.247
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/23/24 13:06:38.255
  I1123 13:06:38.263846 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1123 13:06:38.263871 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/23/24 13:06:38.263
  STEP: Failing to create a Pod with more than max resources @ 11/23/24 13:06:38.265
  STEP: Updating a LimitRange @ 11/23/24 13:06:38.267
  STEP: Verifying LimitRange updating is effective @ 11/23/24 13:06:38.274
  E1123 13:06:38.570097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:39.570282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/23/24 13:06:40.28
  STEP: Failing to create a Pod with more than max resources @ 11/23/24 13:06:40.287
  STEP: Deleting a LimitRange @ 11/23/24 13:06:40.29
  STEP: Verifying the LimitRange was deleted @ 11/23/24 13:06:40.3
  E1123 13:06:40.570919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:41.571221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:42.571609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:43.571735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:44.571806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:45.306362 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/23/24 13:06:45.306
  I1123 13:06:45.316390 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3569" for this suite. @ 11/23/24 13:06:45.326
• [7.239 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 11/23/24 13:06:45.338
  I1123 13:06:45.338788 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:06:45.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:45.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:45.365
  STEP: create deployment with httpd image @ 11/23/24 13:06:45.368
  I1123 13:06:45.368386 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8895 create -f -'
  I1123 13:06:45.443264 20 builder.go:146] stderr: ""
  I1123 13:06:45.443286 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/23/24 13:06:45.443
  I1123 13:06:45.443340 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8895 diff -f -'
  E1123 13:06:45.572688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:46.573179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:47.574151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:48.574361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:49.574467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:49.753992 20 builder.go:135] rc: 1
  I1123 13:06:49.754067 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8895 delete -f -'
  I1123 13:06:49.805803 20 builder.go:146] stderr: ""
  I1123 13:06:49.805834 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1123 13:06:49.806011 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8895" for this suite. @ 11/23/24 13:06:49.812
• [4.481 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/23/24 13:06:49.82
  I1123 13:06:49.820327 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename watch @ 11/23/24 13:06:49.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:49.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:49.84
  STEP: creating a new configmap @ 11/23/24 13:06:49.842
  STEP: modifying the configmap once @ 11/23/24 13:06:49.848
  STEP: modifying the configmap a second time @ 11/23/24 13:06:49.857
  STEP: deleting the configmap @ 11/23/24 13:06:49.867
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/23/24 13:06:49.874
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/23/24 13:06:49.875
  I1123 13:06:49.875815 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2823  d18c1032-fbfd-4a88-8769-5b907574bb54 30211 0 2024-11-23 13:06:49 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-23 13:06:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 13:06:49.875929 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2823  d18c1032-fbfd-4a88-8769-5b907574bb54 30212 0 2024-11-23 13:06:49 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-23 13:06:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1123 13:06:49.876021 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2823" for this suite. @ 11/23/24 13:06:49.879
• [0.067 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/23/24 13:06:49.887
  I1123 13:06:49.887229 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename init-container @ 11/23/24 13:06:49.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:49.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:49.906
  STEP: creating the pod @ 11/23/24 13:06:49.909
  I1123 13:06:49.909081 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1123 13:06:50.575037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:51.575310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:52.576299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:53.576987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:54.110073 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5270" for this suite. @ 11/23/24 13:06:54.115
• [4.235 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 11/23/24 13:06:54.122
  I1123 13:06:54.122819 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename podtemplate @ 11/23/24 13:06:54.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:54.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:54.143
  STEP: Create set of pod templates @ 11/23/24 13:06:54.145
  I1123 13:06:54.153387 20 podtemplates.go:143] created test-podtemplate-1
  I1123 13:06:54.159204 20 podtemplates.go:143] created test-podtemplate-2
  I1123 13:06:54.164498 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/23/24 13:06:54.164
  STEP: delete collection of pod templates @ 11/23/24 13:06:54.169
  I1123 13:06:54.169326 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/23/24 13:06:54.192
  I1123 13:06:54.192579 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1123 13:06:54.196603 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5441" for this suite. @ 11/23/24 13:06:54.201
• [0.088 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 11/23/24 13:06:54.21
  I1123 13:06:54.210364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:06:54.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:54.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:54.231
  STEP: creating the pod @ 11/23/24 13:06:54.233
  I1123 13:06:54.233631 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 create -f -'
  I1123 13:06:54.320689 20 builder.go:146] stderr: ""
  I1123 13:06:54.320711 20 builder.go:147] stdout: "pod/pause created\n"
  E1123 13:06:54.577513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:55.577651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/23/24 13:06:56.333
  I1123 13:06:56.333787 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 label pods pause testing-label=testing-label-value'
  I1123 13:06:56.388012 20 builder.go:146] stderr: ""
  I1123 13:06:56.388041 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/23/24 13:06:56.388
  I1123 13:06:56.388116 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 get pod pause -L testing-label'
  I1123 13:06:56.431909 20 builder.go:146] stderr: ""
  I1123 13:06:56.431936 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/23/24 13:06:56.431
  I1123 13:06:56.432013 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 label pods pause testing-label-'
  I1123 13:06:56.480464 20 builder.go:146] stderr: ""
  I1123 13:06:56.480491 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/23/24 13:06:56.48
  I1123 13:06:56.480561 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 get pod pause -L testing-label'
  I1123 13:06:56.524934 20 builder.go:146] stderr: ""
  I1123 13:06:56.524973 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 11/23/24 13:06:56.525
  I1123 13:06:56.525092 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 delete --grace-period=0 --force -f -'
  E1123 13:06:56.578431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:56.582121 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:06:56.582152 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1123 13:06:56.582180 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 get rc,svc -l name=pause --no-headers'
  I1123 13:06:56.631514 20 builder.go:146] stderr: "No resources found in kubectl-8591 namespace.\n"
  I1123 13:06:56.631536 20 builder.go:147] stdout: ""
  I1123 13:06:56.631569 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-8591 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1123 13:06:56.676162 20 builder.go:146] stderr: ""
  I1123 13:06:56.676183 20 builder.go:147] stdout: ""
  I1123 13:06:56.676296 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8591" for this suite. @ 11/23/24 13:06:56.68
• [2.478 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 11/23/24 13:06:56.688
  I1123 13:06:56.688984 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:06:56.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:06:56.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:06:56.707
  STEP: creating service nodeport-test with type=NodePort in namespace services-1860 @ 11/23/24 13:06:56.71
  STEP: creating replication controller nodeport-test in namespace services-1860 @ 11/23/24 13:06:56.728
  I1123 13:06:56.737507      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1860, replica count: 2
  E1123 13:06:57.578544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:58.579171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:06:59.579297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:06:59.788505      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 13:06:59.788537 20 resource.go:361] Creating new exec pod
  E1123 13:07:00.579397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:01.579537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:02.580340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:02.813813 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1860 exec execpodl4q5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1123 13:07:02.895159 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1123 13:07:02.895199 20 builder.go:147] stdout: ""
  E1123 13:07:03.580955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:03.814417 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1860 exec execpodl4q5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1123 13:07:03.897034 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1123 13:07:03.897077 20 builder.go:147] stdout: "nodeport-test-7xjpk"
  I1123 13:07:03.897151 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1860 exec execpodl4q5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.117 80'
  I1123 13:07:03.977914 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.117 80\nConnection to 10.152.183.117 80 port [tcp/http] succeeded!\n"
  I1123 13:07:03.977972 20 builder.go:147] stdout: "nodeport-test-dzjwp"
  I1123 13:07:03.978037 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1860 exec execpodl4q5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.143 32535'
  I1123 13:07:04.060205 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.143 32535\nConnection to 172.31.83.143 32535 port [tcp/*] succeeded!\n"
  I1123 13:07:04.060250 20 builder.go:147] stdout: "nodeport-test-7xjpk"
  I1123 13:07:04.060353 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1860 exec execpodl4q5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.25 32535'
  I1123 13:07:04.140848 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.25 32535\nConnection to 172.31.20.25 32535 port [tcp/*] succeeded!\n"
  I1123 13:07:04.140894 20 builder.go:147] stdout: ""
  E1123 13:07:04.581228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:05.060824 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1860 exec execpodl4q5s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.25 32535'
  I1123 13:07:05.154546 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.25 32535\nConnection to 172.31.20.25 32535 port [tcp/*] succeeded!\n"
  I1123 13:07:05.154585 20 builder.go:147] stdout: "nodeport-test-dzjwp"
  I1123 13:07:05.154829 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1860" for this suite. @ 11/23/24 13:07:05.159
• [8.478 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 11/23/24 13:07:05.166
  I1123 13:07:05.166848 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 13:07:05.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:07:05.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:07:05.187
  STEP: Creating pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661 @ 11/23/24 13:07:05.19
  E1123 13:07:05.581732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:06.581843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 13:07:07.212
  I1123 13:07:07.217097 20 container_probe.go:1749] Initial restart count of pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 is 0
  I1123 13:07:07.221011 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:07.582135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:08.582262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:09.226775 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:09.583167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:10.583253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:11.231131 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:11.583544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:12.583624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:13.235687 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:13.584087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:14.584210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:15.241783 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:15.584293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:16.584398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:17.246781 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:17.585181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:18.586184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:19.252808 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:19.586219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:20.586350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:21.257484 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:21.586980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:22.587126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:23.262584 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:23.588046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:24.588162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:25.268248 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:25.588705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:26.588914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:27.273677 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:27.589041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:28.589244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:29.280138 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:29.589358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:30.589505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:31.287614 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:31.590099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:32.591158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:33.292986 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:33.591282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:34.591751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:35.299420 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:35.591948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:36.592110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:37.305618 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:37.593024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:38.593136      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:39.311939 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:39.593211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:40.593414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:41.317153 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:41.593467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:42.593644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:43.321850 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:43.594152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:44.595242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:45.327629 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:45.596024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:46.596246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:47.332624 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:47.596991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:48.597206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:49.339412 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:49.597776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:50.598162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:51.344679 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:51.599000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:52.599290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:53.350208 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:53.599387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:54.599497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:55.355746 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:55.600029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:56.600149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:57.362084 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:57.600188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:07:58.600329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:07:59.368856 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:07:59.601212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:00.601859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:01.375184 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:01.602529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:02.603177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:03.382280 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:03.603600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:04.603809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:05.387535 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:05.604851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:06.604988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:07.393022 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:07.605340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:08.605468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:09.399795 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:09.606052      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:10.606217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:11.404653 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:11.606925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:12.607089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:13.410008 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:13.607122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:14.607240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:15.415563 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:15.607886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:16.608126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:17.420430 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:17.608636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:18.608811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:19.425319 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:19.609604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:20.609804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:21.430336 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:21.610709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:22.610803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:23.435846 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:23.611102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:24.611205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:25.441269 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:25.611537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:26.612182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:27.446352 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:27.612644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:28.612736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:29.452981 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:29.613180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:30.613293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:31.460030 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:31.614126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:32.614292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:33.465640 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:33.614895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:34.615077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:35.471848 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:35.616058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:36.616235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:37.477456 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:37.616727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:38.617587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:39.483818 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:39.618050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:40.618253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:41.490181 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:41.618311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:42.618471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:43.495989 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:43.619170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:44.619302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:45.502177 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:45.619328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:46.619519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:47.507046 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:47.620191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:48.620306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:49.512470 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:49.620649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:50.621705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:51.517815 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:51.622003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:52.622090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:53.522528 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:53.622598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:54.622715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:55.527543 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:55.623733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:56.624165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:57.533479 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:57.624646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:08:58.625556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:08:59.539470 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:08:59.626590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:00.626727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:01.546296 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:01.627430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:02.627548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:03.552683 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:03.627851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:04.628002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:05.557869 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:05.629141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:06.629325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:07.564229 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:07.629393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:08.629580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:09.570778 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:09.630044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:10.630227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:11.576441 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:11.630546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:12.630670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:13.582303 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:13.631433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:14.631552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:15.588011 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:15.632111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:16.632238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:17.595575 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:17.632652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:18.633234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:19.600635 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:19.633725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:20.634150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:21.607165 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:21.634262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:22.634549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:23.612908 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:23.635046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:24.635219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:25.617268 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:25.635329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:26.635477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:27.623588 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:27.635729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:28.635871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:29.629364 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:29.636509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:30.636683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:31.635258 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:31.637306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:32.637461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:33.637755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:33.642857 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:34.637889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:35.638091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:35.648655 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:36.638723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:37.638986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:37.655623 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:38.639659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:39.639873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:39.662010 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:40.640050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:41.640165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:41.667480 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:42.640335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:43.640447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:43.673284 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:44.641127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:45.641229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:45.679569 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:46.641316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:47.641414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:47.686825 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:48.641840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:49.642776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:49.692368 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:50.643113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:51.643212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:51.698451 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:52.643301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:53.643387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:53.703866 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:54.643566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:55.643685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:55.709812 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:56.644156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:57.644274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:57.715723 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:09:58.644385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:09:59.644590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:09:59.722182 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:00.645151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:01.645378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:01.727726 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:02.645779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:03.646037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:03.735378 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:04.646130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:05.646236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:05.740702 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:06.646667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:07.646779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:07.746111 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:08.647093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:09.647130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:09.752662 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:10.647611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:11.647796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:11.758050 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:12.647936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:13.648117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:13.763399 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:14.648347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:15.648466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:15.769281 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:16.649238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:17.649355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:17.774865 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:18.649772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:19.649883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:19.780624 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:20.650120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:21.650264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:21.786641 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:22.650398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:23.651193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:23.794396 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:24.652172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:25.652270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:25.800370 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:26.653179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:27.653286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:27.806125 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:28.653815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:29.654182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:29.812849 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:30.654746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:31.655110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:31.818531 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:32.655191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:33.655527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:33.823757 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:34.655622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:35.655821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:35.829785 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:36.656025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:37.656380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:37.836682 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:38.656541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:39.656665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:39.843303 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:40.656817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:41.657182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:41.848567 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:42.657077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:43.657263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:43.856091 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:44.657384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:45.657600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:45.862171 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:46.658086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:47.658571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:47.867765 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:48.658600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:49.658912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:49.874740 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:50.659088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:51.659330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:51.881398 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:52.659407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:53.659606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:53.888020 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:54.659725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:55.659931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:55.894481 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:56.660087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:57.660367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:57.900521 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:10:58.661431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:10:59.661537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:10:59.907497 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:11:00.662091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:01.662188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:01.914534 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:11:02.663139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:03.663232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:03.920071 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:11:04.663336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:05.663581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:05.927349 20 container_probe.go:1759] Get pod busybox-874c4cf2-635d-45de-bf1e-9b5bbb251b09 in namespace container-probe-7661
  E1123 13:11:06.664186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:07.665177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/23/24 13:11:07.927
  I1123 13:11:07.942160 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7661" for this suite. @ 11/23/24 13:11:07.948
• [242.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 11/23/24 13:11:07.959
  I1123 13:11:07.959745 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename runtimeclass @ 11/23/24 13:11:07.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:07.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:07.978
  I1123 13:11:07.989059 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8054" for this suite. @ 11/23/24 13:11:07.993
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 11/23/24 13:11:08.001
  I1123 13:11:08.001396 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename namespaces @ 11/23/24 13:11:08.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:08.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:08.018
  STEP: Creating namespace "e2e-ns-fkxk7" @ 11/23/24 13:11:08.02
  I1123 13:11:08.035242 20 namespace.go:411] Namespace "e2e-ns-fkxk7-4274" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-fkxk7-4274" @ 11/23/24 13:11:08.035
  I1123 13:11:08.047220 20 namespace.go:434] Namespace "e2e-ns-fkxk7-4274" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-fkxk7-4274" @ 11/23/24 13:11:08.047
  I1123 13:11:08.057620 20 namespace.go:463] Namespace "e2e-ns-fkxk7-4274" has []v1.FinalizerName{"kubernetes"}
  I1123 13:11:08.057696 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2484" for this suite. @ 11/23/24 13:11:08.062
  STEP: Destroying namespace "e2e-ns-fkxk7-4274" for this suite. @ 11/23/24 13:11:08.07
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 11/23/24 13:11:08.08
  I1123 13:11:08.080372 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 13:11:08.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:08.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:08.097
  STEP: Looking for a node to schedule job pod @ 11/23/24 13:11:08.1
  STEP: Creating a job @ 11/23/24 13:11:08.105
  STEP: Ensuring job fails @ 11/23/24 13:11:08.11
  E1123 13:11:08.665338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:09.665505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:10.666395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:11.666738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:12.122908 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4069" for this suite. @ 11/23/24 13:11:12.128
• [4.059 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/23/24 13:11:12.139
  I1123 13:11:12.139597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 13:11:12.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:12.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:12.162
  STEP: Create a pod @ 11/23/24 13:11:12.167
  E1123 13:11:12.666811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:13.667119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/23/24 13:11:14.189
  I1123 13:11:14.199103 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1123 13:11:14.199213 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6978" for this suite. @ 11/23/24 13:11:14.204
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 11/23/24 13:11:14.213
  I1123 13:11:14.213307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:11:14.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:14.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:14.23
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/23/24 13:11:14.233
  E1123 13:11:14.668188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:15.668412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:16.669169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:17.669288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:11:18.259
  I1123 13:11:18.264236 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-0706e6ff-37a5-4aee-ab31-3175d62d6df5 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:11:18.28
  I1123 13:11:18.299246 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4746" for this suite. @ 11/23/24 13:11:18.303
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 11/23/24 13:11:18.313
  I1123 13:11:18.313717 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename disruption @ 11/23/24 13:11:18.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:18.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:18.335
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:11:18.343
  E1123 13:11:18.670062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:19.670282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/23/24 13:11:20.376
  I1123 13:11:20.383615 20 disruption.go:691] running pods: 0 < 3
  E1123 13:11:20.671018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:21.671126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:22.388803 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4883" for this suite. @ 11/23/24 13:11:22.394
• [4.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 11/23/24 13:11:22.404
  I1123 13:11:22.404263 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:11:22.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:22.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:22.422
  E1123 13:11:22.671810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:23.672172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:24.673094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:25.674198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:26.674227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:27.674821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:28.675727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:29.676616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:30.677195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:31.677328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:32.677393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:33.678057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:34.678116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:35.678240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:36.678708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:37.678741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:38.679310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 11/23/24 13:11:39.431
  E1123 13:11:39.679426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:40.679891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:41.680713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:42.681262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:43.682168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/23/24 13:11:44.437
  STEP: Ensuring resource quota status is calculated @ 11/23/24 13:11:44.442
  E1123 13:11:44.683165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:45.683381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 11/23/24 13:11:46.448
  STEP: Ensuring resource quota status captures configMap creation @ 11/23/24 13:11:46.461
  E1123 13:11:46.684198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:47.685182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 11/23/24 13:11:48.468
  STEP: Ensuring resource quota status released usage @ 11/23/24 13:11:48.477
  E1123 13:11:48.685942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:49.686208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:50.483128 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2107" for this suite. @ 11/23/24 13:11:50.487
• [28.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 11/23/24 13:11:50.496
  I1123 13:11:50.496769 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 13:11:50.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:50.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:50.519
  STEP: Creating a pod to test service account token:  @ 11/23/24 13:11:50.522
  E1123 13:11:50.686673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:51.687725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:11:52.545
  I1123 13:11:52.548936 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod test-pod-a88eff2c-f478-4b7e-bf1e-b80fcf4e3223 container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:11:52.558
  I1123 13:11:52.580366 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3080" for this suite. @ 11/23/24 13:11:52.584
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 11/23/24 13:11:52.593
  I1123 13:11:52.593874 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename runtimeclass @ 11/23/24 13:11:52.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:52.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:52.619
  STEP: Deleting RuntimeClass runtimeclass-2107-delete-me @ 11/23/24 13:11:52.631
  STEP: Waiting for the RuntimeClass to disappear @ 11/23/24 13:11:52.644
  I1123 13:11:52.660626 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2107" for this suite. @ 11/23/24 13:11:52.665
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 11/23/24 13:11:52.679
  I1123 13:11:52.679326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:11:52.679
  E1123 13:11:52.688260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:52.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:52.706
  STEP: Setting up server cert @ 11/23/24 13:11:52.732
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:11:53.093
  STEP: Deploying the webhook pod @ 11/23/24 13:11:53.103
  STEP: Wait for the deployment to be ready @ 11/23/24 13:11:53.117
  I1123 13:11:53.125612 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 13:11:53.689283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:54.689530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:11:55.141
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:11:55.155
  E1123 13:11:55.689677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:11:56.156076 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/23/24 13:11:56.167
  STEP: create a pod @ 11/23/24 13:11:56.182
  E1123 13:11:56.689757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:57.690184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/23/24 13:11:58.201
  I1123 13:11:58.201336 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=webhook-6495 attach --namespace=webhook-6495 to-be-attached-pod -i -c=container1'
  I1123 13:11:58.262271 20 builder.go:135] rc: 1
  I1123 13:11:58.314725 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6495" for this suite. @ 11/23/24 13:11:58.319
  STEP: Destroying namespace "webhook-markers-9321" for this suite. @ 11/23/24 13:11:58.325
• [5.653 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 11/23/24 13:11:58.332
  I1123 13:11:58.332672 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pod-network-test @ 11/23/24 13:11:58.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:11:58.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:11:58.353
  STEP: Performing setup for networking test in namespace pod-network-test-505 @ 11/23/24 13:11:58.355
  STEP: creating a selector @ 11/23/24 13:11:58.355
  STEP: Creating the service pods in kubernetes @ 11/23/24 13:11:58.355
  I1123 13:11:58.355933 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1123 13:11:58.691244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:11:59.692181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:00.692642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:01.692752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:02.693171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:03.693294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:04.694194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:05.694413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:06.694518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:07.694646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:08.695230      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:09.695349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:10.695496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:11.695678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:12.696650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:13.696861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:14.697794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:15.698004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:16.698138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:17.698225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:18.699093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:19.699320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/23/24 13:12:20.477
  E1123 13:12:20.699351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:21.699489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:12:22.499722 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1123 13:12:22.499756 20 networking.go:42] Breadth first check of 192.168.120.69 on host 172.31.20.25...
  I1123 13:12:22.503476 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.110:9080/dial?request=hostname&protocol=udp&host=192.168.120.69&port=8081&tries=1'] Namespace:pod-network-test-505 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:12:22.503499 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:12:22.503929 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:12:22.503995 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-505/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.110%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.120.69%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1123 13:12:22.547627 20 utils.go:356] Waiting for responses: map[]
  I1123 13:12:22.547652 20 utils.go:360] reached 192.168.120.69 after 0/1 tries
  I1123 13:12:22.547660 20 networking.go:42] Breadth first check of 192.168.125.14 on host 172.31.41.64...
  I1123 13:12:22.552436 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.110:9080/dial?request=hostname&protocol=udp&host=192.168.125.14&port=8081&tries=1'] Namespace:pod-network-test-505 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:12:22.552454 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:12:22.552867 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:12:22.552906 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-505/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.110%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.125.14%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1123 13:12:22.591440 20 utils.go:356] Waiting for responses: map[]
  I1123 13:12:22.591479 20 utils.go:360] reached 192.168.125.14 after 0/1 tries
  I1123 13:12:22.591490 20 networking.go:42] Breadth first check of 192.168.21.143 on host 172.31.83.143...
  I1123 13:12:22.596886 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.120.110:9080/dial?request=hostname&protocol=udp&host=192.168.21.143&port=8081&tries=1'] Namespace:pod-network-test-505 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:12:22.596906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:12:22.597330 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:12:22.597371 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-505/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.120.110%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.21.143%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1123 13:12:22.633370 20 utils.go:356] Waiting for responses: map[]
  I1123 13:12:22.633391 20 utils.go:360] reached 192.168.21.143 after 0/1 tries
  I1123 13:12:22.633399 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1123 13:12:22.633523 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-505" for this suite. @ 11/23/24 13:12:22.639
• [24.317 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 11/23/24 13:12:22.649
  I1123 13:12:22.649692 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename events @ 11/23/24 13:12:22.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:12:22.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:12:22.667
  STEP: creating a test event @ 11/23/24 13:12:22.67
  STEP: listing all events in all namespaces @ 11/23/24 13:12:22.674
  STEP: patching the test event @ 11/23/24 13:12:22.679
  STEP: fetching the test event @ 11/23/24 13:12:22.687
  STEP: updating the test event @ 11/23/24 13:12:22.692
  E1123 13:12:22.700007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting the test event @ 11/23/24 13:12:22.705
  STEP: deleting the test event @ 11/23/24 13:12:22.708
  STEP: listing all events in all namespaces @ 11/23/24 13:12:22.718
  I1123 13:12:22.722432 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-334" for this suite. @ 11/23/24 13:12:22.726
• [0.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 11/23/24 13:12:22.736
  I1123 13:12:22.736881 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename chunking @ 11/23/24 13:12:22.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:12:22.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:12:22.758
  STEP: creating a large number of resources @ 11/23/24 13:12:22.761
  E1123 13:12:23.700758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:24.701334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:25.702274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:26.703103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:27.703612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:28.703919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:29.704365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:30.705279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:31.705739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:32.706379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:33.706653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:34.707277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:35.707329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:36.707782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:37.708366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:38.708448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:39.708631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 11/23/24 13:12:40.444
  I1123 13:12:40.494015 20 chunking.go:163] Retrieved 40/40 results with rv 32143 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 11/23/24 13:12:40.494
  E1123 13:12:40.709216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:41.709558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:42.709752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:43.710008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:44.710097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:45.710313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:46.711257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:47.712151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:48.713151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:49.714146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:50.715179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:51.715374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:52.715591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:53.715807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:54.716029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:55.716211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:56.716398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:57.716719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:58.716911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:12:59.717138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:13:00.502020 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:13:00.717253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:01.717458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:02.717752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:03.717877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:04.718089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:05.718310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:06.718498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:07.719146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:08.719389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:09.719587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:10.719716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:11.719934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:12.720291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:13.721171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:14.722169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:15.723155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:16.724203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:17.724279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:18.724487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:19.724706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:13:20.500602 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:13:20.724810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:21.725018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:22.725156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:23.725289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:24.725413      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:25.725610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:26.725780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:27.725900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:28.726092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:29.726237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:30.726312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:31.726427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:32.726725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:33.726900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:34.727177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:35.727286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:36.727503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:37.727820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:38.728028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:39.728302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:13:40.500548 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:13:40.728813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:41.728927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:42.729257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:43.729468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:44.729649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:45.729863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:46.730077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:47.730194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:48.730442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:49.731152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:50.731309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:51.732151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:52.732243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:53.733153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:54.733337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:55.734159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:56.734346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:57.734665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:58.734880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:13:59.735089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:14:00.501813 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:14:00.736078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:01.736199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:02.736523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:03.736645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:04.737248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:05.737450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:06.737638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:07.738021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:08.738201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:09.738416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:10.738614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:11.738803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:12.739174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:13.740151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:14.740346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:15.740818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:16.740915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:17.741086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:18.742163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:19.743150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:14:20.500301 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:14:20.743526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:21.743650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:22.744142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:23.744325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:24.744511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:25.744698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:26.744891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:27.745186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:28.745373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:29.745561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:30.746176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:31.746277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:32.746395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:33.747164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:34.747305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:35.747552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:36.747769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:37.748195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:38.748467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:39.748671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:14:40.501005 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:14:40.749296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:41.749598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:42.749635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:43.749710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:44.749904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:45.750742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:46.750856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:47.751078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:48.751177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:49.751277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:50.752146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:51.753153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:52.753600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:53.753803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:54.754172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:55.754368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:56.755148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:57.755488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:58.755581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:14:59.755781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:15:00.500906 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:15:00.756252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:01.756440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:02.756562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:03.756814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:04.757026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:05.757212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:06.757398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:07.757740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:08.757924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:09.758130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:10.758318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:11.758507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:12.758828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:13.759183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:14.759395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:15.759577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:16.759762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:17.760086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:18.760218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:19.761080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:15:20.502058 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:15:20.762128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:21.762167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:22.762261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:23.763216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:24.764165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:25.764361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:26.765229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:27.765348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:28.765556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:29.765749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:30.765937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:31.766243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:32.766439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:33.766698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:34.766889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:35.767089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:36.767271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:37.768158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:38.768347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:39.768535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:15:40.500545 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:15:40.768639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:41.769260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:42.769357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:43.770192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:44.771275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:45.771463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:46.772227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:47.773152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:48.774147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:49.775145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:50.775326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:51.776267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:52.776396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:53.776579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:54.776769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:55.776981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:56.777234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:57.777430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:58.778172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:15:59.778351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:16:00.500936 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:16:00.779264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:01.780241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:02.780795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:03.780879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:04.781086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:05.781241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:06.781703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:07.782154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:08.783177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:09.784166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:10.785155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:11.785214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:12.785516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:13.785712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:14.785743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:15.785978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:16.786329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:17.786536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:18.786651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:19.786849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:16:20.502742 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:16:20.787031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:21.787262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:22.787437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:23.787649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:24.788155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:25.788351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:26.788937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:27.789074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:28.789256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:29.789438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:30.789625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:31.789769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:32.790005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:33.790114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:34.790216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:35.790348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:36.790562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:37.790725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:38.790822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:39.791695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:16:40.500257 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:16:40.792458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:41.794331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:42.794214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:43.795252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:44.795299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:45.795482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:46.796337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:47.796430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:48.797202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:49.797381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:50.797639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:51.798615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:52.798716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:53.798904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:54.799088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:55.799269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:56.800267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:57.800748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:58.800845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:16:59.801056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:17:00.501744 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:17:00.801997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:01.802248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:02.803174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:03.803270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:04.804153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:05.804336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:06.804401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:07.804516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:08.804728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:09.804909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:10.805109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:11.805280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:12.805374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:13.805571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:14.806175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:15.806364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:16.806684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:17.806794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:18.807030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:19.807217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:17:20.500713 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:17:20.808061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:21.808227      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:22.808412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:23.808597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:24.808816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:25.809040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:26.809264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:27.809441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:28.809626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:29.809822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:30.809946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:31.810030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:32.810088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:33.810210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:34.810695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:35.810806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:36.811146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:37.811240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:38.812167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:39.812264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:17:40.499915 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:17:40.813145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:41.813996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:42.814105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:43.814312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:44.815175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:45.815382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:46.815874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:47.816005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:48.816198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:49.817189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:50.817288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:51.817373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:52.818194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:53.818297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:54.818507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:55.819093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:56.819407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:57.820166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:58.820237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:17:59.820284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:18:00.502062 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:18:00.820388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:01.821452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:02.821546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:03.822192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:04.823153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:05.824149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:06.825156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:07.825283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:08.825501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:09.825688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:10.825879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:11.826248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:12.826508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:13.827194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:14.827406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:15.827611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:16.827641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:17.828539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:18.828655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:19.828748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:18:20.500356 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:18:20.829711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:21.830437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:22.830647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:23.830758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:24.830994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:25.831093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:26.831436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:27.832156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:28.833145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:29.834160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:30.834260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:31.835263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:32.835383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:33.835569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:34.836151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:35.836326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:36.837282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:37.837400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:38.837591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:39.838056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:18:40.501737 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzIxNDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1123 13:18:40.839025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:41.839301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:42.839232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:43.839678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:44.839756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:45.840466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:46.841277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:47.842150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:48.843145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:49.844148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:50.844338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:51.845062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:52.845259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:53.845509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:54.846157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:55.846334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:56.846424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:57.846620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:58.846801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:18:59.847171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:19:00.500434 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1123 13:19:00.500467 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 11/23/24 13:19:00.5
  STEP: retrieving all remaining pages @ 11/23/24 13:19:00.505
  I1123 13:19:00.510801 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1123 13:19:00.515291 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1123 13:19:00.519513 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1123 13:19:00.525213 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1123 13:19:00.529314 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1123 13:19:00.533071 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1123 13:19:00.538360 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzI4NjQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1123 13:19:00.542338 20 chunking.go:221] Retrieved 40/40 results with rv 32864 and continue 
  I1123 13:19:00.542531 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9909" for this suite. @ 11/23/24 13:19:00.547
• [397.818 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 11/23/24 13:19:00.554
  I1123 13:19:00.555015 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:19:00.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:19:00.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:19:00.574
  STEP: Creating configMap with name cm-test-opt-del-2b3ea0c0-dbb9-45d5-bee6-94314a641422 @ 11/23/24 13:19:00.581
  STEP: Creating configMap with name cm-test-opt-upd-41067f71-0f92-4c37-bbc8-ad096ad01472 @ 11/23/24 13:19:00.586
  STEP: Creating the pod @ 11/23/24 13:19:00.592
  E1123 13:19:00.847635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:01.848330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-2b3ea0c0-dbb9-45d5-bee6-94314a641422 @ 11/23/24 13:19:02.655
  STEP: Updating configmap cm-test-opt-upd-41067f71-0f92-4c37-bbc8-ad096ad01472 @ 11/23/24 13:19:02.664
  STEP: Creating configMap with name cm-test-opt-create-88db31f6-6abc-4ed4-9957-08c4f0e4dace @ 11/23/24 13:19:02.671
  STEP: waiting to observe update in volume @ 11/23/24 13:19:02.677
  E1123 13:19:02.849211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:03.849338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:04.850027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:05.850127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:06.850620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:07.851190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:08.851628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:09.852186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:10.852682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:11.853725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:12.854473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:13.854606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:14.855619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:15.855825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:16.856633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:17.856768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:18.857434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:19.857656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:20.857909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:21.858186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:22.858946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:23.859138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:24.859587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:25.859682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:26.860541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:27.860659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:28.861387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:29.861507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:30.861871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:31.862535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:32.862678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:33.862810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:34.863137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:35.864190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:36.864996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:37.865156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:38.865144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:39.865295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:40.865504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:41.866350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:42.866562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:43.866691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:44.866792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:45.866899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:46.867793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:47.867915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:48.868069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:49.868164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:50.868280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:51.869342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:52.869556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:53.869674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:54.869841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:55.869944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:56.870000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:57.870120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:58.870262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:19:59.870337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:00.870439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:01.871185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:02.871393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:03.872089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:04.873178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:05.873741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:06.874766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:07.875195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:08.875408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:09.875508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:10.875759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:11.876246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:12.876454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:13.876517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:14.876609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:15.877181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:16.877257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:17.878180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:18.878251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:19.879179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:20.879263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:21.879947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:22.880089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:23.880404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:24.880602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:25.880660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:26.881511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:27.881609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:28.881702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:29.882118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:30.882154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:31.882237      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:32.882332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:20:33.170590 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5060" for this suite. @ 11/23/24 13:20:33.175
• [92.629 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 11/23/24 13:20:33.183
  I1123 13:20:33.183739 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename server-version @ 11/23/24 13:20:33.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:33.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:33.206
  STEP: Request ServerVersion @ 11/23/24 13:20:33.209
  STEP: Confirm major version @ 11/23/24 13:20:33.21
  I1123 13:20:33.210109 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 11/23/24 13:20:33.21
  I1123 13:20:33.210132 20 server_version.go:58] cleanMinorVersion: 31
  I1123 13:20:33.210140 20 server_version.go:62] Minor version: 31
  I1123 13:20:33.210202 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1428" for this suite. @ 11/23/24 13:20:33.214
• [0.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 11/23/24 13:20:33.221
  I1123 13:20:33.221343 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:20:33.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:33.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:33.241
  STEP: Setting up server cert @ 11/23/24 13:20:33.263
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:20:33.528
  STEP: Deploying the webhook pod @ 11/23/24 13:20:33.54
  STEP: Wait for the deployment to be ready @ 11/23/24 13:20:33.553
  I1123 13:20:33.563844 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 13:20:33.883192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:34.883295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:20:35.578
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:20:35.591
  E1123 13:20:35.883377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:20:36.592075 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/23/24 13:20:36.602
  STEP: create the configmap with a random name @ 11/23/24 13:20:36.619
  STEP: verify the configmap is mutated @ 11/23/24 13:20:36.63
  STEP: create the configmap with 'skip-me' name @ 11/23/24 13:20:36.63
  I1123 13:20:36.701993 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8153" for this suite. @ 11/23/24 13:20:36.706
  STEP: Destroying namespace "webhook-markers-1741" for this suite. @ 11/23/24 13:20:36.714
• [3.501 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/23/24 13:20:36.722
  I1123 13:20:36.722200 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/23/24 13:20:36.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:36.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:36.74
  STEP: Setting up the test @ 11/23/24 13:20:36.742
  STEP: Creating hostNetwork=false pod @ 11/23/24 13:20:36.742
  E1123 13:20:36.883738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:37.883894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 11/23/24 13:20:38.769
  E1123 13:20:38.884231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:39.884437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 11/23/24 13:20:40.789
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/23/24 13:20:40.789
  I1123 13:20:40.789319 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.789338 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.789791 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.789848 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1123 13:20:40.829427 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:40.829471 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.829481 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.829913 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.829979 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1123 13:20:40.863800 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:40.863834 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.863842 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.864252 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.864290 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E1123 13:20:40.884436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:20:40.898922 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:40.898949 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.898986 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.899351 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.899388 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1123 13:20:40.932937 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/23/24 13:20:40.933
  I1123 13:20:40.933098 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.933109 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.933508 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.933554 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1123 13:20:40.964738 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:40.964789 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.964797 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.965187 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.965235 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1123 13:20:40.996900 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/23/24 13:20:40.996
  I1123 13:20:40.996976 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:40.996985 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:40.997384 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:40.997439 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1123 13:20:41.040685 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:41.040717 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:41.040726 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:41.041172 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:41.041228 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1123 13:20:41.074390 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:41.074415 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:41.074423 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:41.074853 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:41.074895 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1123 13:20:41.111120 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:41.111147 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1916 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:41.111155 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:41.111562 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:41.111599 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1916/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1123 13:20:41.146141 20 exec_util.go:111] Exec stderr: ""
  I1123 13:20:41.146252 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1916" for this suite. @ 11/23/24 13:20:41.151
• [4.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 11/23/24 13:20:41.161
  I1123 13:20:41.161304 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:20:41.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:41.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:41.18
  STEP: validating api versions @ 11/23/24 13:20:41.183
  I1123 13:20:41.183189 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-3724 api-versions'
  I1123 13:20:41.225433 20 builder.go:146] stderr: ""
  I1123 13:20:41.225459 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1123 13:20:41.225573 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3724" for this suite. @ 11/23/24 13:20:41.232
• [0.080 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/23/24 13:20:41.241
  I1123 13:20:41.241419 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 13:20:41.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:41.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:41.259
  I1123 13:20:41.261924 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I1123 13:20:41.277133 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1123 13:20:41.884769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:42.884661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 11/23/24 13:20:43.295
  STEP: updating a scale subresource @ 11/23/24 13:20:43.3
  STEP: verifying the deployment Spec.Replicas was modified @ 11/23/24 13:20:43.307
  STEP: Patch a scale subresource @ 11/23/24 13:20:43.311
  I1123 13:20:43.333532 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "890cee0a-914b-4faf-9b16-e33ca2486f66",
      ResourceVersion: (string) (len=5) "33679",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867964841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 13:20:43.340609 20 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2014e77-edbe-4eeb-9065-bf9807843ef0",
      ResourceVersion: (string) (len=5) "33683",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867964841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "890cee0a-914b-4faf-9b16-e33ca2486f66",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 39 30 63 65 65  30 61 2d 39 31 34 62 2d  |\"890cee0a-914b-|
              00000120  34 66 61 66 2d 39 62 31  36 2d 65 33 33 63 61 32  |4faf-9b16-e33ca2|
              00000130  34 38 36 66 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |486f66\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 13:20:43.348873 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-fls5z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-fls5z",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f577f40-66f5-4906-bdce-177d9245f8e4",
      ResourceVersion: (string) (len=5) "33682",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867964843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "c2014e77-edbe-4eeb-9065-bf9807843ef0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  30 31 34 65 37 37 2d 65  |d\":\"c2014e77-e|
              00000090  64 62 65 2d 34 65 65 62  2d 39 30 36 35 2d 62 66  |dbe-4eeb-9065-bf|
              000000a0  39 38 30 37 38 34 33 65  66 30 5c 22 7d 22 3a 7b  |9807843ef0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gdtzm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gdtzm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:20:43.350362 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-x265f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-x265f",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f993a291-cfb7-4fcb-b6a7-f00cad3f1a24",
      ResourceVersion: (string) (len=5) "33672",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867964841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "c2014e77-edbe-4eeb-9065-bf9807843ef0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  30 31 34 65 37 37 2d 65  |d\":\"c2014e77-e|
              00000090  64 62 65 2d 34 65 65 62  2d 39 30 36 35 2d 62 66  |dbe-4eeb-9065-bf|
              000000a0  39 38 30 37 38 34 33 65  66 30 5c 22 7d 22 3a 7b  |9807843ef0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 37 32 5c 22 7d 22  |2.168.120.72\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mw8df",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mw8df",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867964841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867964841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867964841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3be7d60c709c9c744f3ba5c4555858d04ea7e76641087ac92e8a801807db6dd5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mw8df",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:20:43.352228 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6873" for this suite. @ 11/23/24 13:20:43.356
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 11/23/24 13:20:43.37
  I1123 13:20:43.370257 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 13:20:43.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:43.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:43.398
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/23/24 13:20:43.401
  I1123 13:20:43.414567 20 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2119  c06997e3-f608-4987-aaeb-c9f98b8aefd2 33703 0 2024-11-23 13:20:43 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-11-23 13:20:43 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-25vvr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-25vvr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1123 13:20:43.885403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:44.885495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/23/24 13:20:45.423
  I1123 13:20:45.423833 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2119 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:45.423851 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:45.424279 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:45.424318 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2119/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/23/24 13:20:45.472
  I1123 13:20:45.472065 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2119 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:20:45.472079 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:20:45.472483 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:20:45.472521 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2119/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1123 13:20:45.517711 20 dns.go:423] Deleting pod test-dns-nameservers...
  I1123 13:20:45.537317 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2119" for this suite. @ 11/23/24 13:20:45.541
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 11/23/24 13:20:45.551
  I1123 13:20:45.551671 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:20:45.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:45.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:45.572
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/23/24 13:20:45.575
  E1123 13:20:45.885678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:46.886326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:47.887041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:48.887100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:20:49.606
  I1123 13:20:49.610543 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-e26475b6-9144-4bc4-a50c-ef5fdce0b2a6 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:20:49.618
  I1123 13:20:49.639626 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8792" for this suite. @ 11/23/24 13:20:49.643
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/23/24 13:20:49.651
  I1123 13:20:49.651096 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename init-container @ 11/23/24 13:20:49.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:49.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:49.672
  STEP: creating the pod @ 11/23/24 13:20:49.676
  I1123 13:20:49.676268 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1123 13:20:49.887175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:50.887622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:51.888427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:52.888524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:20:53.099586 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-80" for this suite. @ 11/23/24 13:20:53.104
• [3.463 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 11/23/24 13:20:53.114
  I1123 13:20:53.114233 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 13:20:53.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:20:53.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:20:53.134
  STEP: Creating service test in namespace statefulset-3495 @ 11/23/24 13:20:53.136
  STEP: Creating statefulset ss in namespace statefulset-3495 @ 11/23/24 13:20:53.141
  I1123 13:20:53.153533 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1123 13:20:53.889465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:54.889733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:55.889800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:56.890207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:57.890338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:58.890419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:20:59.890834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:00.891769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:01.892334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:02.892431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:03.155207 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/23/24 13:21:03.164
  STEP: updating a scale subresource @ 11/23/24 13:21:03.168
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/23/24 13:21:03.175
  STEP: Patch a scale subresource @ 11/23/24 13:21:03.179
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/23/24 13:21:03.185
  I1123 13:21:03.191911 20 statefulset.go:138] Deleting all statefulset in ns statefulset-3495
  I1123 13:21:03.196419 20 rest.go:150] Scaling statefulset ss to 0
  E1123 13:21:03.892562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:04.892645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:05.892728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:06.893340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:07.893548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:08.893631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:09.893731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:10.894656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:11.895079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:12.896150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:13.217856 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 13:21:13.221804 20 rest.go:88] Deleting statefulset ss
  I1123 13:21:13.238855 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3495" for this suite. @ 11/23/24 13:21:13.243
• [20.138 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/23/24 13:21:13.252
  I1123 13:21:13.252561 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubelet-test @ 11/23/24 13:21:13.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:13.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:13.271
  E1123 13:21:13.896280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:14.896437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:15.305510 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1379" for this suite. @ 11/23/24 13:21:15.31
• [2.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 11/23/24 13:21:15.317
  I1123 13:21:15.317782 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pod-network-test @ 11/23/24 13:21:15.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:15.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:15.337
  STEP: Performing setup for networking test in namespace pod-network-test-2287 @ 11/23/24 13:21:15.339
  STEP: creating a selector @ 11/23/24 13:21:15.339
  STEP: Creating the service pods in kubernetes @ 11/23/24 13:21:15.339
  I1123 13:21:15.339826 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1123 13:21:15.897082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:16.897359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:17.898431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:18.898652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:19.898737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:20.898846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:21.899921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:22.900118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:23.900839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:24.901072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:25.901760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:26.902336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/23/24 13:21:27.437
  E1123 13:21:27.902662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:28.902757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:29.480120 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1123 13:21:29.480157 20 utils.go:496] Going to poll 192.168.120.78 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1123 13:21:29.483928 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.120.78:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2287 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:21:29.483974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:21:29.484400 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:21:29.484441 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2287/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.120.78%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1123 13:21:29.527317 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1123 13:21:29.527375 20 utils.go:496] Going to poll 192.168.125.42 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1123 13:21:29.532350 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.125.42:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2287 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:21:29.532364 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:21:29.532722 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:21:29.532763 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2287/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.125.42%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1123 13:21:29.573729 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1123 13:21:29.573773 20 utils.go:496] Going to poll 192.168.21.135 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1123 13:21:29.578612 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.21.135:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2287 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:21:29.578635 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:21:29.579019 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:21:29.579065 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2287/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.21.135%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1123 13:21:29.624225 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1123 13:21:29.624330 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2287" for this suite. @ 11/23/24 13:21:29.63
• [14.322 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 11/23/24 13:21:29.639
  I1123 13:21:29.639654 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:21:29.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:29.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:29.661
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 13:21:29.664
  E1123 13:21:29.903142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:30.904219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:31.904355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:32.904453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:21:33.689
  I1123 13:21:33.693747 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod downwardapi-volume-0d18af92-d3a6-40c2-b1ea-36df2afa942b container client-container: <nil>
  STEP: delete the pod @ 11/23/24 13:21:33.712
  I1123 13:21:33.733459 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8968" for this suite. @ 11/23/24 13:21:33.737
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 11/23/24 13:21:33.748
  I1123 13:21:33.748798 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:21:33.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:33.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:33.767
  STEP: Setting up server cert @ 11/23/24 13:21:33.794
  E1123 13:21:33.904900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:21:34
  STEP: Deploying the webhook pod @ 11/23/24 13:21:34.011
  STEP: Wait for the deployment to be ready @ 11/23/24 13:21:34.024
  I1123 13:21:34.037146 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 13:21:34.905067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:35.905157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:21:36.052
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:21:36.062
  E1123 13:21:36.906083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:37.063389 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/23/24 13:21:37.073
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/23/24 13:21:37.088
  STEP: Creating a dummy validating-webhook-configuration object @ 11/23/24 13:21:37.101
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/23/24 13:21:37.109
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/23/24 13:21:37.117
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/23/24 13:21:37.127
  I1123 13:21:37.203553 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5223" for this suite. @ 11/23/24 13:21:37.208
  STEP: Destroying namespace "webhook-markers-2856" for this suite. @ 11/23/24 13:21:37.216
• [3.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/23/24 13:21:37.223
  I1123 13:21:37.223488 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:21:37.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:37.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:37.241
  STEP: Creating secret with name secret-test-map-cb358ba0-7f6b-49ab-bd0f-ed24acc496ac @ 11/23/24 13:21:37.244
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:21:37.25
  E1123 13:21:37.907043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:38.907242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:39.907366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:40.907494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:21:41.282
  I1123 13:21:41.286753 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-12825384-d47f-4e92-bfb7-5e2f6bb726c5 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:21:41.294
  I1123 13:21:41.315322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-479" for this suite. @ 11/23/24 13:21:41.32
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 11/23/24 13:21:41.329
  I1123 13:21:41.329618 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replicaset @ 11/23/24 13:21:41.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:41.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:41.349
  STEP: Create a ReplicaSet @ 11/23/24 13:21:41.352
  STEP: Verify that the required pods have come up @ 11/23/24 13:21:41.357
  I1123 13:21:41.361558 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E1123 13:21:41.908513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:42.908379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:43.908521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:44.908593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:45.908712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:46.368483 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/23/24 13:21:46.368
  I1123 13:21:46.373449 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/23/24 13:21:46.373
  STEP: DeleteCollection of the ReplicaSets @ 11/23/24 13:21:46.379
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/23/24 13:21:46.394
  I1123 13:21:46.406723 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2195" for this suite. @ 11/23/24 13:21:46.419
• [5.106 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/23/24 13:21:46.436
  I1123 13:21:46.436193 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 13:21:46.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:46.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:46.463
  I1123 13:21:46.466650 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: creating the pod @ 11/23/24 13:21:46.467
  STEP: submitting the pod to kubernetes @ 11/23/24 13:21:46.467
  E1123 13:21:46.909686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:47.909794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:48.540529 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-274" for this suite. @ 11/23/24 13:21:48.546
• [2.120 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 11/23/24 13:21:48.556
  I1123 13:21:48.556167 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:21:48.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:48.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:48.575
  STEP: Creating projection with secret that has name secret-emptykey-test-58cf8f0a-7faf-441c-bcd1-60e1dcdd81db @ 11/23/24 13:21:48.577
  I1123 13:21:48.579272 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3697" for this suite. @ 11/23/24 13:21:48.583
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 11/23/24 13:21:48.591
  I1123 13:21:48.591592 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:21:48.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:48.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:48.61
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/23/24 13:21:48.612
  E1123 13:21:48.910860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:49.910984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:50.911495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:51.912326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:21:52.641
  I1123 13:21:52.645333 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-395c84f1-4395-4876-83b2-a7001905f072 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:21:52.652
  I1123 13:21:52.673871 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3453" for this suite. @ 11/23/24 13:21:52.679
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 11/23/24 13:21:52.687
  I1123 13:21:52.687938 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:21:52.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:52.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:52.708
  STEP: set up a multi version CRD @ 11/23/24 13:21:52.71
  I1123 13:21:52.710932 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:21:52.913048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:53.913855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:54.914710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 11/23/24 13:21:55.792
  STEP: check the unserved version gets removed @ 11/23/24 13:21:55.81
  E1123 13:21:55.915668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/23/24 13:21:56.608
  E1123 13:21:56.916235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:57.916762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:21:58.917375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:21:59.112885 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7959" for this suite. @ 11/23/24 13:21:59.119
• [6.439 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/23/24 13:21:59.126
  I1123 13:21:59.126921 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename certificates @ 11/23/24 13:21:59.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:59.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:59.148
  STEP: getting /apis @ 11/23/24 13:21:59.533
  STEP: getting /apis/certificates.k8s.io @ 11/23/24 13:21:59.536
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/23/24 13:21:59.537
  STEP: creating @ 11/23/24 13:21:59.538
  STEP: getting @ 11/23/24 13:21:59.555
  STEP: listing @ 11/23/24 13:21:59.559
  STEP: watching @ 11/23/24 13:21:59.563
  I1123 13:21:59.563821 20 certificates.go:316] starting watch
  STEP: patching @ 11/23/24 13:21:59.564
  STEP: updating @ 11/23/24 13:21:59.571
  I1123 13:21:59.577568 20 certificates.go:332] waiting for watch events with expected annotations
  I1123 13:21:59.577594 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 11/23/24 13:21:59.577
  STEP: patching /approval @ 11/23/24 13:21:59.581
  STEP: updating /approval @ 11/23/24 13:21:59.588
  STEP: getting /status @ 11/23/24 13:21:59.594
  STEP: patching /status @ 11/23/24 13:21:59.599
  STEP: updating /status @ 11/23/24 13:21:59.605
  STEP: deleting @ 11/23/24 13:21:59.613
  STEP: deleting a collection @ 11/23/24 13:21:59.63
  I1123 13:21:59.653178 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1552" for this suite. @ 11/23/24 13:21:59.657
• [0.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 11/23/24 13:21:59.664
  I1123 13:21:59.664528 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:21:59.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:21:59.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:21:59.685
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/23/24 13:21:59.688
  E1123 13:21:59.918007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:00.918699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:01.919238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:02.919625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:22:03.713
  I1123 13:22:03.717335 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-863c1f87-1b36-4180-9454-9b5c6d8f6b12 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:22:03.729
  I1123 13:22:03.750262 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1084" for this suite. @ 11/23/24 13:22:03.754
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 11/23/24 13:22:03.761
  I1123 13:22:03.761989 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 13:22:03.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:03.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:03.784
  STEP: Creating simple DaemonSet "daemon-set" @ 11/23/24 13:22:03.813
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/23/24 13:22:03.819
  I1123 13:22:03.826142 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:03.826191 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:03.829382 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:22:03.829402 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:22:03.920694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:04.823922 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:04.823986 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:04.828656 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:22:04.828677 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:22:04.920804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:05.824128 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:05.824190 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:05.827777 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 13:22:05.827811 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/23/24 13:22:05.833
  I1123 13:22:05.837538 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/23/24 13:22:05.837
  I1123 13:22:05.847385 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/23/24 13:22:05.847
  I1123 13:22:05.848935 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1123 13:22:05.849096 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.849291 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.849402 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.849470 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.849492 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3134 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1123 13:22:05.849502 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/23/24 13:22:05.849
  STEP: watching for the daemon set status to be patched @ 11/23/24 13:22:05.855
  I1123 13:22:05.857085 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1123 13:22:05.857177 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.857242 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.857390 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.857444 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.857459 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3134 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1123 13:22:05.857519 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1123 13:22:05.857556 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3134 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1123 13:22:05.857566 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/23/24 13:22:05.863
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3134, will wait for the garbage collector to delete the pods @ 11/23/24 13:22:05.863
  E1123 13:22:05.921019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:05.927364 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.550454ms
  I1123 13:22:06.028344 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.977621ms
  E1123 13:22:06.921651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:07.633542 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:22:07.633576 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1123 13:22:07.638424 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34749"},"items":null}

  I1123 13:22:07.642741 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34749"},"items":null}

  I1123 13:22:07.659667 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3134" for this suite. @ 11/23/24 13:22:07.664
• [3.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 11/23/24 13:22:07.672
  I1123 13:22:07.672684 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:22:07.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:07.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:07.693
  STEP: creating Agnhost RC @ 11/23/24 13:22:07.698
  I1123 13:22:07.698687 20 kubectl.go:1537] namespace kubectl-2748
  I1123 13:22:07.698730 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2748 create -f -'
  I1123 13:22:07.791317 20 builder.go:146] stderr: ""
  I1123 13:22:07.791358 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/23/24 13:22:07.791
  E1123 13:22:07.922102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:08.796627 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 13:22:08.796655 20 framework.go:733] Found 0 / 1
  E1123 13:22:08.922866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:09.795792 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 13:22:09.795824 20 framework.go:733] Found 1 / 1
  I1123 13:22:09.795838 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1123 13:22:09.800275 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1123 13:22:09.800298 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1123 13:22:09.800306 20 kubectl.go:1544] wait on agnhost-primary startup in kubectl-2748 
  I1123 13:22:09.800347 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2748 logs agnhost-primary-pmw7w agnhost-primary'
  I1123 13:22:09.853574 20 builder.go:146] stderr: ""
  I1123 13:22:09.853604 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 11/23/24 13:22:09.853
  I1123 13:22:09.853745 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2748 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1123 13:22:09.913041 20 builder.go:146] stderr: ""
  I1123 13:22:09.913070 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I1123 13:22:09.918017 20 utils.go:1203] Service rm2 in namespace kubectl-2748 found.
  E1123 13:22:09.923330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:10.923405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:11.923910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 11/23/24 13:22:11.928
  I1123 13:22:11.928155 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-2748 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1123 13:22:11.989006 20 builder.go:146] stderr: ""
  I1123 13:22:11.989045 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I1123 13:22:11.993092 20 utils.go:1203] Service rm3 in namespace kubectl-2748 found.
  E1123 13:22:12.924097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:13.924212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:14.003190 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2748" for this suite. @ 11/23/24 13:22:14.007
• [6.342 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 11/23/24 13:22:14.015
  I1123 13:22:14.015209 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 13:22:14.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:14.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:14.037
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 13:22:14.039
  E1123 13:22:14.924345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:15.924733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:16.925393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:17.925500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:22:18.065
  I1123 13:22:18.069669 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-371b6d9d-886d-4342-b89f-f0f6e7ce0d25 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 13:22:18.077
  I1123 13:22:18.099169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8628" for this suite. @ 11/23/24 13:22:18.103
• [4.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/23/24 13:22:18.111
  I1123 13:22:18.111195 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:22:18.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:18.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:18.133
  STEP: Creating secret with name secret-test-map-6d5bb4bc-0a2c-4736-a347-f79bf21d0499 @ 11/23/24 13:22:18.135
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:22:18.14
  E1123 13:22:18.925665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:19.926193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:20.926292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:21.926331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:22:22.165
  I1123 13:22:22.168820 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-2621ea68-f709-40ab-bab9-7cb24a92db14 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:22:22.178
  I1123 13:22:22.198613 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2116" for this suite. @ 11/23/24 13:22:22.203
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 11/23/24 13:22:22.211
  I1123 13:22:22.211898 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename discovery @ 11/23/24 13:22:22.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:22.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:22.233
  STEP: Setting up server cert @ 11/23/24 13:22:22.236
  I1123 13:22:22.549384 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1123 13:22:22.550277 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1123 13:22:22.550296 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1123 13:22:22.550303 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1123 13:22:22.550310 20 discovery.go:139] Checking APIGroup: apps
  I1123 13:22:22.551133 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1123 13:22:22.551145 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I1123 13:22:22.551151 20 discovery.go:154] apps/v1 matches apps/v1
  I1123 13:22:22.551158 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I1123 13:22:22.552048 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1123 13:22:22.552059 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1123 13:22:22.552065 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1123 13:22:22.552072 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1123 13:22:22.552887 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1123 13:22:22.552898 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1123 13:22:22.552904 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1123 13:22:22.552918 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1123 13:22:22.553740 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1123 13:22:22.553750 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1123 13:22:22.553756 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1123 13:22:22.553762 20 discovery.go:139] Checking APIGroup: autoscaling
  I1123 13:22:22.554606 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1123 13:22:22.554619 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1123 13:22:22.554626 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1123 13:22:22.554632 20 discovery.go:139] Checking APIGroup: batch
  I1123 13:22:22.555749 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1123 13:22:22.555769 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I1123 13:22:22.555775 20 discovery.go:154] batch/v1 matches batch/v1
  I1123 13:22:22.555781 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1123 13:22:22.556853 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1123 13:22:22.556874 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1123 13:22:22.556882 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1123 13:22:22.556888 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1123 13:22:22.557761 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1123 13:22:22.557772 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1123 13:22:22.557778 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1123 13:22:22.557784 20 discovery.go:139] Checking APIGroup: policy
  I1123 13:22:22.558596 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1123 13:22:22.558606 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I1123 13:22:22.558612 20 discovery.go:154] policy/v1 matches policy/v1
  I1123 13:22:22.558618 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1123 13:22:22.559439 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1123 13:22:22.559448 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1123 13:22:22.559455 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1123 13:22:22.559461 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1123 13:22:22.560310 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1123 13:22:22.560321 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1123 13:22:22.560327 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1123 13:22:22.560333 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1123 13:22:22.561223 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1123 13:22:22.561239 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1123 13:22:22.561247 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1123 13:22:22.561254 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1123 13:22:22.562107 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1123 13:22:22.562119 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1123 13:22:22.562125 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1123 13:22:22.562131 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1123 13:22:22.562948 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1123 13:22:22.562976 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1123 13:22:22.562982 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1123 13:22:22.562988 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1123 13:22:22.563782 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1123 13:22:22.563793 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1123 13:22:22.563799 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1123 13:22:22.563805 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I1123 13:22:22.564594 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1123 13:22:22.564604 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1123 13:22:22.564609 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1123 13:22:22.564615 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1123 13:22:22.565705 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1123 13:22:22.565726 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1123 13:22:22.565732 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1123 13:22:22.565738 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1123 13:22:22.566675 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1123 13:22:22.566698 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1123 13:22:22.566704 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1123 13:22:22.566711 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1123 13:22:22.567769 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1123 13:22:22.567788 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1123 13:22:22.567809 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1123 13:22:22.567930 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2834" for this suite. @ 11/23/24 13:22:22.572
• [0.369 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 11/23/24 13:22:22.58
  I1123 13:22:22.580930 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:22:22.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:22.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:22.601
  STEP: set up a multi version CRD @ 11/23/24 13:22:22.603
  I1123 13:22:22.603920 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:22:22.927411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:23.927720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:24.928033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 11/23/24 13:22:25.712
  STEP: check the new version name is served @ 11/23/24 13:22:25.724
  E1123 13:22:25.929073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 11/23/24 13:22:26.484
  E1123 13:22:26.929179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/23/24 13:22:27.086
  E1123 13:22:27.930076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:28.930544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:29.607444 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3236" for this suite. @ 11/23/24 13:22:29.616
• [7.044 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/23/24 13:22:29.625
  I1123 13:22:29.625158 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 13:22:29.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:29.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:29.644
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/23/24 13:22:29.667
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/23/24 13:22:29.674
  I1123 13:22:29.678246 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:29.678279 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:29.681677 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:22:29.681696 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:22:29.931130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:30.681437 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:30.681486 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:30.685101 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 13:22:30.685120 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:22:30.931207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:31.680435 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:31.680486 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:31.684265 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 13:22:31.684284 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/23/24 13:22:31.687
  I1123 13:22:31.706732 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:31.706766 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:31.711377 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 13:22:31.711395 20 fixtures.go:130] Node ip-172-31-41-64 is running 0 daemon pod, expected 1
  E1123 13:22:31.931784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:32.709022 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:32.709069 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:22:32.713212 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 13:22:32.713232 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/23/24 13:22:32.713
  STEP: Deleting DaemonSet "daemon-set" @ 11/23/24 13:22:32.722
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8830, will wait for the garbage collector to delete the pods @ 11/23/24 13:22:32.722
  I1123 13:22:32.787394 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.555623ms
  I1123 13:22:32.888467 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.069912ms
  E1123 13:22:32.932831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:33.933806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:34.693136 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:22:34.693168 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1123 13:22:34.698286 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35103"},"items":null}

  I1123 13:22:34.701590 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35103"},"items":null}

  I1123 13:22:34.715897 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8830" for this suite. @ 11/23/24 13:22:34.719
• [5.102 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/23/24 13:22:34.727
  I1123 13:22:34.727294 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:22:34.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:34.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:34.744
  STEP: Creating secret with name secret-test-e3fa8aca-fb25-4e7c-92ed-053c7e4038a6 @ 11/23/24 13:22:34.747
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:22:34.751
  E1123 13:22:34.934337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:35.934567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:36.935439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:37.935596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:22:38.782
  I1123 13:22:38.787632 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-f1909af1-9b71-443d-8267-c8b6f9b26248 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:22:38.796
  I1123 13:22:38.815396 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3780" for this suite. @ 11/23/24 13:22:38.819
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 11/23/24 13:22:38.827
  I1123 13:22:38.827447 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename runtimeclass @ 11/23/24 13:22:38.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:38.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:38.846
  E1123 13:22:38.935776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:39.935926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:40.882604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3927" for this suite. @ 11/23/24 13:22:40.886
• [2.069 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/23/24 13:22:40.896
  I1123 13:22:40.896186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename containers @ 11/23/24 13:22:40.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:40.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:40.914
  STEP: Creating a pod to test override command @ 11/23/24 13:22:40.919
  E1123 13:22:40.936826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:41.936993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:42.937211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:43.937378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:44.937465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:22:44.95
  I1123 13:22:44.954493 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod client-containers-08858d70-0c02-4b35-95cb-fb572680dfbe container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:22:44.962
  I1123 13:22:44.984185 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-464" for this suite. @ 11/23/24 13:22:44.987
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 11/23/24 13:22:44.997
  I1123 13:22:44.997215 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:22:44.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:45.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:45.014
  STEP: Creating configMap with name configmap-test-volume-e3d9a5ae-08a4-488d-8c6e-66d2c94a23e8 @ 11/23/24 13:22:45.017
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:22:45.021
  E1123 13:22:45.937611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:46.938398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:47.938570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:48.938660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:22:49.052
  I1123 13:22:49.056757 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-3d9784d2-dc25-482c-b674-5fec59c5505d container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:22:49.066
  I1123 13:22:49.088735 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1698" for this suite. @ 11/23/24 13:22:49.093
• [4.105 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/23/24 13:22:49.101
  I1123 13:22:49.101926 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/23/24 13:22:49.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:22:49.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:22:49.121
  STEP: Creating 50 configmaps @ 11/23/24 13:22:49.123
  STEP: Creating RC which spawns configmap-volume pods @ 11/23/24 13:22:49.391
  I1123 13:22:49.482338 20 resource.go:87] Pod name wrapped-volume-race-7abdc8b7-dfb6-498f-8282-2352f3b2eb95: Found 3 pods out of 5
  E1123 13:22:49.939704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:50.939807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:51.940178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:52.940308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:53.940743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:54.491795 20 resource.go:87] Pod name wrapped-volume-race-7abdc8b7-dfb6-498f-8282-2352f3b2eb95: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/23/24 13:22:54.491
  STEP: Creating RC which spawns configmap-volume pods @ 11/23/24 13:22:54.518
  I1123 13:22:54.536356 20 resource.go:87] Pod name wrapped-volume-race-8291def8-131c-41dc-bd2f-c89ab5f9c3ec: Found 0 pods out of 5
  E1123 13:22:54.940852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:55.941184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:56.941854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:57.942574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:22:58.943073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:22:59.544851 20 resource.go:87] Pod name wrapped-volume-race-8291def8-131c-41dc-bd2f-c89ab5f9c3ec: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/23/24 13:22:59.544
  STEP: Creating RC which spawns configmap-volume pods @ 11/23/24 13:22:59.571
  I1123 13:22:59.588468 20 resource.go:87] Pod name wrapped-volume-race-285d691a-ef35-41b8-8dbc-a1d07766a01e: Found 0 pods out of 5
  E1123 13:22:59.944022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:00.944099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:01.944415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:02.944704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:03.944867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:04.596536 20 resource.go:87] Pod name wrapped-volume-race-285d691a-ef35-41b8-8dbc-a1d07766a01e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/23/24 13:23:04.596
  STEP: deleting ReplicationController wrapped-volume-race-285d691a-ef35-41b8-8dbc-a1d07766a01e in namespace emptydir-wrapper-1838, will wait for the garbage collector to delete the pods @ 11/23/24 13:23:04.617
  I1123 13:23:04.681909 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-285d691a-ef35-41b8-8dbc-a1d07766a01e took: 9.301589ms
  I1123 13:23:04.782663 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-285d691a-ef35-41b8-8dbc-a1d07766a01e pods took: 100.738419ms
  E1123 13:23:04.945880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:05.946258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-8291def8-131c-41dc-bd2f-c89ab5f9c3ec in namespace emptydir-wrapper-1838, will wait for the garbage collector to delete the pods @ 11/23/24 13:23:06.583
  I1123 13:23:06.647187 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-8291def8-131c-41dc-bd2f-c89ab5f9c3ec took: 6.9145ms
  I1123 13:23:06.748000 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-8291def8-131c-41dc-bd2f-c89ab5f9c3ec pods took: 100.81172ms
  E1123 13:23:06.947574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7abdc8b7-dfb6-498f-8282-2352f3b2eb95 in namespace emptydir-wrapper-1838, will wait for the garbage collector to delete the pods @ 11/23/24 13:23:07.849
  I1123 13:23:07.914708 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-7abdc8b7-dfb6-498f-8282-2352f3b2eb95 took: 8.761292ms
  E1123 13:23:07.948396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:08.015089 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-7abdc8b7-dfb6-498f-8282-2352f3b2eb95 pods took: 100.378521ms
  E1123 13:23:08.949174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 11/23/24 13:23:09.615
  E1123 13:23:09.950171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:10.011459 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1838" for this suite. @ 11/23/24 13:23:10.015
• [20.923 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 11/23/24 13:23:10.024
  I1123 13:23:10.024810 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename ingressclass @ 11/23/24 13:23:10.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:23:10.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:23:10.046
  STEP: getting /apis @ 11/23/24 13:23:10.048
  STEP: getting /apis/networking.k8s.io @ 11/23/24 13:23:10.051
  STEP: getting /apis/networking.k8s.iov1 @ 11/23/24 13:23:10.052
  STEP: creating @ 11/23/24 13:23:10.053
  STEP: getting @ 11/23/24 13:23:10.069
  STEP: listing @ 11/23/24 13:23:10.074
  STEP: watching @ 11/23/24 13:23:10.077
  I1123 13:23:10.077907 20 ingressclass.go:348] starting watch
  STEP: patching @ 11/23/24 13:23:10.078
  STEP: updating @ 11/23/24 13:23:10.083
  I1123 13:23:10.091773 20 ingressclass.go:364] waiting for watch events with expected annotations
  I1123 13:23:10.091837 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 11/23/24 13:23:10.091
  STEP: deleting a collection @ 11/23/24 13:23:10.107
  I1123 13:23:10.129207 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6531" for this suite. @ 11/23/24 13:23:10.134
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 11/23/24 13:23:10.144
  I1123 13:23:10.144432 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:23:10.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:23:10.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:23:10.162
  STEP: starting the proxy server @ 11/23/24 13:23:10.164
  I1123 13:23:10.164981 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-9175 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/23/24 13:23:10.198
  I1123 13:23:10.202944 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1123 13:23:10.204030 20 kubectl.go:2229] kubectl proxy stderr: W1123 13:23:10.197852     693 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I1123 13:23:10.204030 20 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:41755

  STEP: Destroying namespace "kubectl-9175" for this suite. @ 11/23/24 13:23:10.207
• [0.072 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/23/24 13:23:10.216
  I1123 13:23:10.216828 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename subpath @ 11/23/24 13:23:10.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:23:10.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:23:10.235
  STEP: Setting up data @ 11/23/24 13:23:10.238
  STEP: Creating pod pod-subpath-test-downwardapi-8k2h @ 11/23/24 13:23:10.248
  STEP: Creating a pod to test atomic-volume-subpath @ 11/23/24 13:23:10.248
  E1123 13:23:10.950636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:11.951408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:12.952225      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:13.952314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:14.952398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:15.953180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:16.953373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:17.954194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:18.954313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:19.954410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:20.955175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:21.955348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:22.955721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:23.955767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:24.955889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:25.956126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:26.957050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:27.957174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:28.957274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:29.957401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:30.957492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:31.958408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:32.959229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:33.959320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:23:34.34
  I1123 13:23:34.344332 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-subpath-test-downwardapi-8k2h container test-container-subpath-downwardapi-8k2h: <nil>
  STEP: delete the pod @ 11/23/24 13:23:34.354
  STEP: Deleting pod pod-subpath-test-downwardapi-8k2h @ 11/23/24 13:23:34.376
  I1123 13:23:34.376170 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-8k2h" in namespace "subpath-5783"
  I1123 13:23:34.381024 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5783" for this suite. @ 11/23/24 13:23:34.385
• [24.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/23/24 13:23:34.394
  I1123 13:23:34.394687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 13:23:34.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:23:34.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:23:34.415
  STEP: creating a Deployment @ 11/23/24 13:23:34.421
  STEP: waiting for Deployment to be created @ 11/23/24 13:23:34.428
  STEP: waiting for all Replicas to be Ready @ 11/23/24 13:23:34.43
  I1123 13:23:34.431334 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.431352 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.438696 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.438720 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.458540 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.458566 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.479861 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1123 13:23:34.479884 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1123 13:23:34.959397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:35.441718 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1123 13:23:35.441750 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1123 13:23:35.547017 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/23/24 13:23:35.547
  I1123 13:23:35.556527 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/23/24 13:23:35.556
  I1123 13:23:35.557931 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.557943 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.557951 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.557974 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.557988 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.557995 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.558125 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.558141 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 0
  I1123 13:23:35.558216 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:35.558259 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:35.558298 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.558306 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.558314 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.558320 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.569865 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.569878 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.596926 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.596943 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:35.604315 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:35.604334 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:35.627110 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:35.627133 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  E1123 13:23:35.959512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:36.461353 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:36.461388 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:36.482089 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  STEP: listing Deployments @ 11/23/24 13:23:36.482
  I1123 13:23:36.487597 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/23/24 13:23:36.487
  I1123 13:23:36.500392 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/23/24 13:23:36.5
  I1123 13:23:36.510027 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1123 13:23:36.515154 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1123 13:23:36.541101 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1123 13:23:36.558685 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1123 13:23:36.570466 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1123 13:23:36.961007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:37.490067 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1123 13:23:37.528520 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1123 13:23:37.537506 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1123 13:23:37.961725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:38.561612 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/23/24 13:23:38.592
  STEP: fetching the DeploymentStatus @ 11/23/24 13:23:38.601
  I1123 13:23:38.606725 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:38.606776 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:38.606839 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:38.606986 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:38.607000 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 1
  I1123 13:23:38.607010 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:38.607145 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:38.607178 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 2
  I1123 13:23:38.607189 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-5653 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/23/24 13:23:38.607
  I1123 13:23:38.619350 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619421 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619453 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619462 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619516 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619523 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619575 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619706 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619721 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619814 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619826 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.619876 20 deployment.go:475] observed event type MODIFIED
  I1123 13:23:38.624381 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1123 13:23:38.628904 20 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07cb5182-776d-44a6-9aa1-a3eb5edc6833",
      ResourceVersion: (string) (len=5) "36142",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3ef0c2ee-ef57-420b-98b9-cebc862a136a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 65 66 30  63 32 65 65 2d 65 66 35  |":\"3ef0c2ee-ef5|
              00000130  37 2d 34 32 30 62 2d 39  38 62 39 2d 63 65 62 63  |7-420b-98b9-cebc|
              00000140  38 36 32 61 31 33 36 61  5c 22 7d 22 3a 7b 7d 7d  |862a136a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1123 13:23:38.634497 20 deployment.go:669] pod: "test-deployment-6c86c7f765-cmjt9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-cmjt9",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-5653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d3ed0f6-6a68-45df-83ec-594cc92d7a11",
      ResourceVersion: (string) (len=5) "36141",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "07cb5182-776d-44a6-9aa1-a3eb5edc6833",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 37 63 62 35 31 38 32  |uid\":\"07cb5182|
              000000a0  2d 37 37 36 64 2d 34 34  61 36 2d 39 61 61 31 2d  |-776d-44a6-9aa1-|
              000000b0  61 33 65 62 35 65 64 63  36 38 33 33 5c 22 7d 22  |a3eb5edc6833\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 37 33 5c 22 7d 22  |2.168.21.173\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kzm9k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kzm9k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867965018,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://23d1ae347964804681c73a21e5eaf6a1ac8b2e05ddd29bb5dfedeab285435066",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kzm9k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1123 13:23:38.635993 20 deployment.go:669] pod: "test-deployment-6c86c7f765-ktb9n":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-ktb9n",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-5653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b85cb077-5df4-4030-80e5-fb941d7d90dd",
      ResourceVersion: (string) (len=5) "36105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "07cb5182-776d-44a6-9aa1-a3eb5edc6833",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 37 63 62 35 31 38 32  |uid\":\"07cb5182|
              000000a0  2d 37 37 36 64 2d 34 34  61 36 2d 39 61 61 31 2d  |-776d-44a6-9aa1-|
              000000b0  61 33 65 62 35 65 64 63  36 38 33 33 5c 22 7d 22  |a3eb5edc6833\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 39 33 5c 22 7d 22  |2.168.120.93\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbrf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbrf4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965016,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867965017,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92bdcabe9f60e234671a40b555fb16a4c14c5b0ddbbbd8a9835fae8c5e9c25d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rbrf4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1123 13:23:38.637826 20 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4461c8c-3d51-4afd-99f2-2bca352ffd2b",
      ResourceVersion: (string) (len=5) "36152",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3ef0c2ee-ef57-420b-98b9-cebc862a136a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 65 66 30  63 32 65 65 2d 65 66 35  |":\"3ef0c2ee-ef5|
              00000130  37 2d 34 32 30 62 2d 39  38 62 39 2d 63 65 62 63  |7-420b-98b9-cebc|
              00000140  38 36 32 61 31 33 36 61  5c 22 7d 22 3a 7b 7d 7d  |862a136a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1123 13:23:38.647251 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-6hhhw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-6hhhw",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-5653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "deca9863-71e1-47b6-af51-1ea0f1c0f31e",
      ResourceVersion: (string) (len=5) "36148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965020,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "d4461c8c-3d51-4afd-99f2-2bca352ffd2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 34 34 36 31 63 38 63  |uid\":\"d4461c8c|
              000000a0  2d 33 64 35 31 2d 34 61  66 64 2d 39 39 66 32 2d  |-3d51-4afd-99f2-|
              000000b0  32 62 63 61 33 35 32 66  66 64 32 62 5c 22 7d 22  |2bca352ffd2b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 39 35 5c 22 7d 22  |2.168.120.95\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w7zsq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w7zsq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965015,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965015,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867965016,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://4df24c9c0b9ee5ddee1b4e773a574d952bfd9a87927804fc2312541690b74b27",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w7zsq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1123 13:23:38.649887 20 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a96a9e00-325a-4084-aa20-e6b54fa5b24b",
      ResourceVersion: (string) (len=5) "36055",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867965014,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3ef0c2ee-ef57-420b-98b9-cebc862a136a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 65 66 30  63 32 65 65 2d 65 66 35  |":\"3ef0c2ee-ef5|
              00000130  37 2d 34 32 30 62 2d 39  38 62 39 2d 63 65 62 63  |7-420b-98b9-cebc|
              00000140  38 36 32 61 31 33 36 61  5c 22 7d 22 3a 7b 7d 7d  |862a136a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867965016,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1123 13:23:38.658472 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5653" for this suite. @ 11/23/24 13:23:38.663
• [4.277 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 11/23/24 13:23:38.672
  I1123 13:23:38.672337 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 13:23:38.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:23:38.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:23:38.689
  STEP: Creating pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960 @ 11/23/24 13:23:38.692
  E1123 13:23:38.962477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:39.962627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 13:23:40.715
  I1123 13:23:40.720831 20 container_probe.go:1749] Initial restart count of pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 is 0
  I1123 13:23:40.724873 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:40.963127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:41.963337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:42.730210 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:42.963636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:43.964448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:44.734869 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:44.965128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:45.965345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:46.740088 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:46.965483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:47.965695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:48.747417 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:48.966735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:49.967572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:50.753826 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:50.968118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:51.968335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:52.759470 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:52.969326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:53.969464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:54.766490 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:54.969877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:55.970105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:56.772328 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:56.970556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:57.970642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:23:58.779847 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:23:58.971155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:23:59.971287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:00.786345 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:00.971575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:01.972425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:02.792757 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:02.973215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:03.973418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:04.798796 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:04.974117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:05.974228      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:06.804028 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:06.974246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:07.974438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:08.809039 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:08.975282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:09.975500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:10.815694 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:10.976080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:11.976311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:12.820550 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:12.976393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:13.976536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:14.826878 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:14.977058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:15.977290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:16.832421 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:16.977743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:17.977988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:18.837654 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:18.978894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:19.979294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:20.843766 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:20.980023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:21.980128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:22.848973 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:22.982117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:23.981517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:24.857054 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:24.982258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:25.982381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:26.862337 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:26.982477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:27.982582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:28.867898 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:28.983076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:29.984182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:30.875090 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:30.984533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:31.985494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:32.881590 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:32.987622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:33.986514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:34.886774 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:34.986938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:35.987258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:36.893173 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:36.987294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:37.987493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:38.899136 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:38.988330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:39.988468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:40.904821 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:40.989015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:41.989309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:42.911396 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:42.989570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:43.989691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:44.916263 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:44.990379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:45.990518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:46.923480 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:46.990547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:47.990686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:48.928820 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:48.990944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:49.991116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:50.933990 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:50.992073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:51.993161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:52.941478 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:52.993535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:53.993651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:54.946832 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:54.993943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:55.994115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:56.952280 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:56.994392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:57.994519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:24:58.959005 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:24:58.995075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:24:59.995224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:00.964634 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:00.995764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:01.996709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:02.973551 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:02.997222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:03.998064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:04.979203 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:04.998463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:05.998697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:06.986560 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:06.999631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:07.999809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:08.992316 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:09.000412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:10.000600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:10.998668 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:11.000701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:12.001452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:13.002181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:13.003834 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:14.002340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:15.002436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:15.009860 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:16.003179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:17.003384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:17.015733 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:18.003782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:19.004123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:19.022650 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:20.004684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:21.004891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:21.027860 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:22.005503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:23.006177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:23.033243 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:24.007172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:25.007309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:25.038630 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:26.007431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:27.008440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:27.046087 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:28.009112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:29.009224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:29.051528 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:30.010181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:31.010314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:31.057501 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:32.010384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:33.010465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:33.062507 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:34.011498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:35.011595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:35.068378 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:36.012119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:37.012657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:37.074206 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:38.013114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:39.013994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:39.081887 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:40.014791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:41.015018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:41.087213 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:42.015119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:43.015316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:43.092568 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:44.015441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:45.016259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:45.098186 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:46.016316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:47.016417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:47.105024 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:48.016530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:49.017158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:49.110602 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:50.017268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:51.017469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:51.117242 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:52.018336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:53.018454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:53.122748 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:54.018575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:55.018771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:55.128269 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:56.018980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:57.019078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:57.134810 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:25:58.019194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:25:59.020182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:25:59.140322 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:00.020302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:01.021335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:01.146041 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:02.022081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:03.022117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:03.151537 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:04.023194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:05.023306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:05.159160 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:06.024092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:07.025162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:07.165203 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:08.025209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:09.025398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:09.170727 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:10.025552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:11.025685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:11.175744 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:12.026698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:13.026809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:13.182726 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:14.027723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:15.027843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:15.187730 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:16.028769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:17.029477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:17.195230 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:18.030122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:19.030220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:19.200403 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:20.030319      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:21.030410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:21.207203 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:22.031115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:23.031730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:23.214301 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:24.032110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:25.032204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:25.218111 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:26.033032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:27.033181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:27.224080 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:28.034182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:29.034333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:29.230821 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:30.034939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:31.035118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:31.236804 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:32.035436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:33.035607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:33.241489 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:34.035743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:35.035854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:35.247226 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:36.035990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:37.036114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:37.252415 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:38.036365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:39.036484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:39.258918 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:40.037171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:41.037271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:41.265239 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:42.038186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:43.038302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:43.270641 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:44.038411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:45.038532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:45.275397 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:46.039212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:47.039439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:47.280809 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:48.039547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:49.039768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:49.286765 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:50.040625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:51.040731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:51.291824 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:52.041486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:53.041593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:53.297228 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:54.041994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:55.042164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:55.302676 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:56.043169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:57.044185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:57.308776 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:26:58.044539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:26:59.044657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:26:59.314162 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:00.044720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:01.045204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:01.319166 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:02.046193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:03.046322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:03.324717 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:04.046438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:05.046573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:05.330471 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:06.047280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:07.048160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:07.334805 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:08.048369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:09.048482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:09.340983 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:10.048770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:11.049010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:11.347152 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:12.049597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:13.049717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:13.353643 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:14.050558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:15.050671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:15.360459 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:16.051122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:17.052089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:17.366443 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:18.053165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:19.054190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:19.372055 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:20.054762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:21.054860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:21.378351 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:22.054978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:23.055189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:23.383724 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:24.055304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:25.055416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:25.389558 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:26.056199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:27.056297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:27.395368 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:28.056929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:29.057064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:29.400504 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:30.057204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:31.057316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:31.407214 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:32.058088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:33.058191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:33.412629 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:34.058341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:35.058479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:35.417150 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:36.058862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:37.059123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:37.423588 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:38.059291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:39.059659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:39.428717 20 container_probe.go:1759] Get pod test-webserver-dc9e82aa-5a3d-46e5-91c8-6af90595be06 in namespace container-probe-8960
  E1123 13:27:40.060174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:41.060448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/23/24 13:27:41.429
  I1123 13:27:41.444344 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8960" for this suite. @ 11/23/24 13:27:41.449
• [242.786 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 11/23/24 13:27:41.458
  I1123 13:27:41.458766 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:27:41.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:27:41.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:27:41.484
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/23/24 13:27:41.487
  E1123 13:27:42.060735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:43.060829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:44.061166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:45.061198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:27:45.515
  I1123 13:27:45.519377 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-9e87a3a4-cc43-459b-9781-f183c86efb47 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:27:45.541
  I1123 13:27:45.563183 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2286" for this suite. @ 11/23/24 13:27:45.568
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 11/23/24 13:27:45.577
  I1123 13:27:45.577367 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replication-controller @ 11/23/24 13:27:45.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:27:45.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:27:45.595
  STEP: Given a ReplicationController is created @ 11/23/24 13:27:45.598
  STEP: When the matched label of one of its pods change @ 11/23/24 13:27:45.604
  I1123 13:27:45.608892 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1123 13:27:46.061289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:47.062173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:48.063173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:49.063300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:50.063487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:50.614136 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/23/24 13:27:50.626
  E1123 13:27:51.064196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:51.642593 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8166" for this suite. @ 11/23/24 13:27:51.646
• [6.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/23/24 13:27:51.654
  I1123 13:27:51.654033 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-runtime @ 11/23/24 13:27:51.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:27:51.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:27:51.675
  STEP: create the container @ 11/23/24 13:27:51.677
  W1123 13:27:51.687763      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/23/24 13:27:51.687
  E1123 13:27:52.064646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:53.064783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:54.065776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/23/24 13:27:54.713
  STEP: the container should be terminated @ 11/23/24 13:27:54.716
  STEP: the termination message should be set @ 11/23/24 13:27:54.716
  I1123 13:27:54.716983 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/23/24 13:27:54.717
  I1123 13:27:54.739834 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2466" for this suite. @ 11/23/24 13:27:54.745
• [3.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 11/23/24 13:27:54.755
  I1123 13:27:54.755598 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:27:54.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:27:54.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:27:54.774
  STEP: creating service in namespace services-2002 @ 11/23/24 13:27:54.776
  STEP: creating service affinity-nodeport in namespace services-2002 @ 11/23/24 13:27:54.776
  STEP: creating replication controller affinity-nodeport in namespace services-2002 @ 11/23/24 13:27:54.798
  I1123 13:27:54.809714      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-2002, replica count: 3
  E1123 13:27:55.065839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:56.066768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:57.067516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:27:57.860037      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 13:27:57.874018 20 resource.go:361] Creating new exec pod
  E1123 13:27:58.067558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:27:59.068238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:00.068418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:00.895503 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2002 exec execpod-affinity4gtrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1123 13:28:00.982126 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1123 13:28:00.982168 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:28:00.982231 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2002 exec execpod-affinity4gtrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  I1123 13:28:01.060434 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.125 80\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  I1123 13:28:01.060471 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:28:01.060536 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2002 exec execpod-affinity4gtrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.64 31087'
  E1123 13:28:01.068465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:01.144565 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.64 31087\nConnection to 172.31.41.64 31087 port [tcp/*] succeeded!\n"
  I1123 13:28:01.144606 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:28:01.144758 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2002 exec execpod-affinity4gtrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.83.143 31087'
  I1123 13:28:01.221034 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.83.143 31087\nConnection to 172.31.83.143 31087 port [tcp/*] succeeded!\n"
  I1123 13:28:01.221063 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:28:01.221112 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-2002 exec execpod-affinity4gtrj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.20.25:31087/ ; done'
  I1123 13:28:01.348256 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.20.25:31087/\n"
  I1123 13:28:01.348295 20 builder.go:147] stdout: "\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8\naffinity-nodeport-4hwp8"
  I1123 13:28:01.348308 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348317 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348324 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348330 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348337 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348346 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348352 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348365 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348371 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348377 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348384 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348390 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348395 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348401 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348408 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348414 20 service.go:242] Received response from host: affinity-nodeport-4hwp8
  I1123 13:28:01.348546 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2002, will wait for the garbage collector to delete the pods @ 11/23/24 13:28:01.364
  I1123 13:28:01.430621 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 8.626788ms
  I1123 13:28:01.531665 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.032561ms
  E1123 13:28:02.069070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:03.069348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:04.070297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:04.260827 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2002" for this suite. @ 11/23/24 13:28:04.265
• [9.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 11/23/24 13:28:04.276
  I1123 13:28:04.276697 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:28:04.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:04.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:04.295
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/23/24 13:28:04.298
  I1123 13:28:04.298237 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-5735 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1123 13:28:04.353292 20 builder.go:146] stderr: ""
  I1123 13:28:04.353325 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/23/24 13:28:04.353
  E1123 13:28:05.071338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:06.072071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:07.072145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:08.072247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:09.072318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/23/24 13:28:09.403
  I1123 13:28:09.403860 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-5735 get pod e2e-test-httpd-pod -o json'
  I1123 13:28:09.448483 20 builder.go:146] stderr: ""
  I1123 13:28:09.448582 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-11-23T13:28:04Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5735\",\n        \"resourceVersion\": \"37053\",\n        \"uid\": \"7bce66cf-8a4c-4c68-973b-69c7fc66e77e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8hnxb\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-20-25\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-8hnxb\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-23T13:28:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-23T13:28:04Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-23T13:28:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-23T13:28:05Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-23T13:28:04Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://7782d8e1c9bb6c224cccae1a4d8ca8956500bec73e5906445913311d99afe511\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-11-23T13:28:04Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8hnxb\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.20.25\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.20.25\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.120.115\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.120.115\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-11-23T13:28:04Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/23/24 13:28:09.448
  I1123 13:28:09.448667 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-5735 replace -f -'
  I1123 13:28:09.534179 20 builder.go:146] stderr: ""
  I1123 13:28:09.534213 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 11/23/24 13:28:09.534
  I1123 13:28:09.538864 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-5735 delete pods e2e-test-httpd-pod'
  E1123 13:28:10.072419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:10.881159 20 builder.go:146] stderr: ""
  I1123 13:28:10.881195 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1123 13:28:10.881331 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5735" for this suite. @ 11/23/24 13:28:10.885
• [6.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 11/23/24 13:28:10.894
  I1123 13:28:10.894976 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl @ 11/23/24 13:28:10.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:10.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:10.913
  STEP: creating all guestbook components @ 11/23/24 13:28:10.915
  I1123 13:28:10.915693 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1123 13:28:10.915747 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 create -f -'
  I1123 13:28:11.009047 20 builder.go:146] stderr: ""
  I1123 13:28:11.009076 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1123 13:28:11.009118 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1123 13:28:11.009173 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 create -f -'
  E1123 13:28:11.072750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:11.105165 20 builder.go:146] stderr: ""
  I1123 13:28:11.105189 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1123 13:28:11.105274 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1123 13:28:11.105401 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 create -f -'
  I1123 13:28:11.194000 20 builder.go:146] stderr: ""
  I1123 13:28:11.194037 20 builder.go:147] stdout: "service/frontend created\n"
  I1123 13:28:11.194097 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1123 13:28:11.194164 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 create -f -'
  I1123 13:28:11.258331 20 builder.go:146] stderr: ""
  I1123 13:28:11.258359 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1123 13:28:11.258494 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1123 13:28:11.258585 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 create -f -'
  I1123 13:28:11.330365 20 builder.go:146] stderr: ""
  I1123 13:28:11.330395 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1123 13:28:11.330446 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1123 13:28:11.330573 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 create -f -'
  I1123 13:28:11.391781 20 builder.go:146] stderr: ""
  I1123 13:28:11.391811 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/23/24 13:28:11.391
  I1123 13:28:11.391851 20 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E1123 13:28:12.073471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:13.074368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:14.074589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:15.074660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:16.074795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:16.443080 20 kubectl.go:2276] Waiting for frontend to serve content.
  I1123 13:28:16.458203 20 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1123 13:28:16.472185 20 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/23/24 13:28:16.485
  I1123 13:28:16.485319 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 delete --grace-period=0 --force -f -'
  I1123 13:28:16.550505 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:28:16.550531 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/23/24 13:28:16.55
  I1123 13:28:16.550724 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 delete --grace-period=0 --force -f -'
  I1123 13:28:16.615413 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:28:16.615442 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/23/24 13:28:16.615
  I1123 13:28:16.615567 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 delete --grace-period=0 --force -f -'
  I1123 13:28:16.680341 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:28:16.680397 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/23/24 13:28:16.68
  I1123 13:28:16.680511 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 delete --grace-period=0 --force -f -'
  I1123 13:28:16.730415 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:28:16.730446 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/23/24 13:28:16.73
  I1123 13:28:16.730649 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 delete --grace-period=0 --force -f -'
  I1123 13:28:16.788926 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:28:16.788979 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/23/24 13:28:16.789
  I1123 13:28:16.789165 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-4629 delete --grace-period=0 --force -f -'
  I1123 13:28:16.846287 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1123 13:28:16.846327 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1123 13:28:16.846435 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4629" for this suite. @ 11/23/24 13:28:16.851
• [5.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 11/23/24 13:28:16.86
  I1123 13:28:16.860268 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:28:16.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:16.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:16.887
  STEP: Creating the pod @ 11/23/24 13:28:16.89
  E1123 13:28:17.075279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:18.075382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:19.075684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:19.450998 20 pod_client.go:173] Successfully updated pod "labelsupdate14f8214f-9f51-4dc9-b24c-f658c1ee1fad"
  E1123 13:28:20.075779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:21.076013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:21.468357 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6212" for this suite. @ 11/23/24 13:28:21.473
• [4.620 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 11/23/24 13:28:21.48
  I1123 13:28:21.480835 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:28:21.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:21.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:21.5
  STEP: Creating configMap with name configmap-test-volume-map-f2bbc9e9-e30a-43ca-8f8a-9f6b404543f0 @ 11/23/24 13:28:21.503
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:28:21.508
  E1123 13:28:22.076892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:23.077163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:24.077988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:25.078106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:28:25.537
  I1123 13:28:25.541615 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-c826a660-1b72-4b4d-bf70-6dcb8fce702e container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:28:25.549
  I1123 13:28:25.572825 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1120" for this suite. @ 11/23/24 13:28:25.578
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 11/23/24 13:28:25.588
  I1123 13:28:25.588840 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename runtimeclass @ 11/23/24 13:28:25.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:25.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:25.607
  STEP: getting /apis @ 11/23/24 13:28:25.61
  STEP: getting /apis/node.k8s.io @ 11/23/24 13:28:25.614
  STEP: getting /apis/node.k8s.io/v1 @ 11/23/24 13:28:25.615
  STEP: creating @ 11/23/24 13:28:25.618
  STEP: watching @ 11/23/24 13:28:25.639
  I1123 13:28:25.639147 20 runtimeclass.go:275] starting watch
  STEP: getting @ 11/23/24 13:28:25.645
  STEP: listing @ 11/23/24 13:28:25.648
  STEP: patching @ 11/23/24 13:28:25.653
  STEP: updating @ 11/23/24 13:28:25.659
  I1123 13:28:25.664909 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 11/23/24 13:28:25.665
  STEP: deleting a collection @ 11/23/24 13:28:25.682
  I1123 13:28:25.703187 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-170" for this suite. @ 11/23/24 13:28:25.707
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 11/23/24 13:28:25.716
  I1123 13:28:25.716568 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename disruption @ 11/23/24 13:28:25.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:25.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:25.736
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/23/24 13:28:25.739
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:28:25.745
  E1123 13:28:26.078995      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:27.079472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/23/24 13:28:27.759
  STEP: Waiting for all pods to be running @ 11/23/24 13:28:27.759
  I1123 13:28:27.763106 20 disruption.go:680] pods: 0 < 3
  E1123 13:28:28.079585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:29.079804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/23/24 13:28:29.765
  STEP: Updating the pdb to allow a pod to be evicted @ 11/23/24 13:28:29.779
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:28:29.79
  E1123 13:28:30.080522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:31.080619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/23/24 13:28:31.795
  STEP: Waiting for all pods to be running @ 11/23/24 13:28:31.795
  STEP: Waiting for the pdb to observed all healthy pods @ 11/23/24 13:28:31.8
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/23/24 13:28:31.83
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:28:31.847
  E1123 13:28:32.081008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:33.081128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/23/24 13:28:33.852
  STEP: locating a running pod @ 11/23/24 13:28:33.857
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/23/24 13:28:33.869
  STEP: Waiting for the pdb to be deleted @ 11/23/24 13:28:33.878
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/23/24 13:28:33.882
  STEP: Waiting for all pods to be running @ 11/23/24 13:28:33.882
  I1123 13:28:33.909184 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7422" for this suite. @ 11/23/24 13:28:33.916
• [8.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 11/23/24 13:28:33.929
  I1123 13:28:33.929455 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:28:33.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:33.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:33.956
  I1123 13:28:33.959491 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:28:34.081728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:35.090369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/23/24 13:28:35.25
  I1123 13:28:35.250257 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 create -f -'
  I1123 13:28:35.309137 20 builder.go:146] stderr: ""
  I1123 13:28:35.309171 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3416-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1123 13:28:35.309266 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 delete e2e-test-crd-publish-openapi-3416-crds test-foo'
  I1123 13:28:35.375111 20 builder.go:146] stderr: ""
  I1123 13:28:35.375152 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3416-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1123 13:28:35.375187 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 apply -f -'
  I1123 13:28:35.434940 20 builder.go:146] stderr: ""
  I1123 13:28:35.435000 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3416-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1123 13:28:35.435034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 delete e2e-test-crd-publish-openapi-3416-crds test-foo'
  I1123 13:28:35.486990 20 builder.go:146] stderr: ""
  I1123 13:28:35.487028 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3416-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/23/24 13:28:35.487
  I1123 13:28:35.487093 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 create -f -'
  I1123 13:28:35.530766 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/23/24 13:28:35.53
  I1123 13:28:35.530861 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 create -f -'
  I1123 13:28:35.581507 20 builder.go:135] rc: 1
  I1123 13:28:35.581588 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 apply -f -'
  I1123 13:28:35.635744 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/23/24 13:28:35.635
  I1123 13:28:35.635997 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 create -f -'
  I1123 13:28:35.679073 20 builder.go:135] rc: 1
  I1123 13:28:35.679205 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 --namespace=crd-publish-openapi-5294 apply -f -'
  I1123 13:28:35.734144 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/23/24 13:28:35.734
  I1123 13:28:35.734242 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 explain e2e-test-crd-publish-openapi-3416-crds'
  I1123 13:28:35.777719 20 builder.go:146] stderr: ""
  I1123 13:28:35.777761 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3416-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/23/24 13:28:35.778
  I1123 13:28:35.778161 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 explain e2e-test-crd-publish-openapi-3416-crds.metadata'
  I1123 13:28:35.820562 20 builder.go:146] stderr: ""
  I1123 13:28:35.820757 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3416-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1123 13:28:35.821020 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 explain e2e-test-crd-publish-openapi-3416-crds.spec'
  I1123 13:28:35.862419 20 builder.go:146] stderr: ""
  I1123 13:28:35.862450 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3416-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1123 13:28:35.862539 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 explain e2e-test-crd-publish-openapi-3416-crds.spec.bars'
  I1123 13:28:35.904994 20 builder.go:146] stderr: ""
  I1123 13:28:35.905027 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3416-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/23/24 13:28:35.905
  I1123 13:28:35.905184 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-5294 explain e2e-test-crd-publish-openapi-3416-crds.spec.bars2'
  I1123 13:28:35.945433 20 builder.go:135] rc: 1
  E1123 13:28:36.091027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:37.091669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:28:37.161019 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5294" for this suite. @ 11/23/24 13:28:37.168
• [3.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 11/23/24 13:28:37.178
  I1123 13:28:37.178242 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 13:28:37.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:28:37.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:28:37.196
  STEP: creating the pod with failed condition @ 11/23/24 13:28:37.199
  E1123 13:28:38.091779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:39.091868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:40.092113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:41.092207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:42.092674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:43.092925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:44.093133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:45.093231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:46.093334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:47.093482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:48.093600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:49.094233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:50.094246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:51.094468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:52.095374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:53.095494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:54.095616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:55.095768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:56.096714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:57.097505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:58.097617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:28:59.097773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:00.097898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:01.098086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:02.098347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:03.098570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:04.099497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:05.099509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:06.099732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:07.100123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:08.100264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:09.101143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:10.101232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:11.101322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:12.102158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:13.102252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:14.103154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:15.103257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:16.103353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:17.103449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:18.103571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:19.103764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:20.104094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:21.104284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:22.104497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:23.104693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:24.105233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:25.105442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:26.106085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:27.106214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:28.106328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:29.106525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:30.106671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:31.106855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:32.106948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:33.107100      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:34.107197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:35.107442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:36.108158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:37.108425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:38.108905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:39.109175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:40.109274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:41.110158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:42.111154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:43.112150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:44.113046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:45.113096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:46.114154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:47.114254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:48.114333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:49.114430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:50.114564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:51.114680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:52.114783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:53.115223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:54.115320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:55.115436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:56.115569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:57.115639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:58.115737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:29:59.115842      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:00.115985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:01.116122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:02.116649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:03.116859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:04.117010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:05.117219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:06.117335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:07.117516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:08.117664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:09.117793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:10.118595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:11.118680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:12.119247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:13.119460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:14.119602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:15.119706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:16.119844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:17.120916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:18.121116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:19.121214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:20.122206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:21.123157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:22.124187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:23.124395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:24.124481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:25.124560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:26.125191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:27.125460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:28.125585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:29.125740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:30.126738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:31.126950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:32.127020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:33.127121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:34.127247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:35.127461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:36.127626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:37.127913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 11/23/24 13:30:37.21
  I1123 13:30:37.726692 20 pod_client.go:173] Successfully updated pod "var-expansion-a8de345b-e1e6-48e3-afe0-13b9ac30b7ac"
  STEP: waiting for pod running @ 11/23/24 13:30:37.726
  E1123 13:30:38.127858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:39.128086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 11/23/24 13:30:39.735
  I1123 13:30:39.735707 20 delete.go:62] Deleting pod "var-expansion-a8de345b-e1e6-48e3-afe0-13b9ac30b7ac" in namespace "var-expansion-2992"
  I1123 13:30:39.746323 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-a8de345b-e1e6-48e3-afe0-13b9ac30b7ac" to be fully deleted
  E1123 13:30:40.129035      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:41.129142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:42.130173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:43.130271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:44.130329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:45.130444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:46.131080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:47.131129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:48.132140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:49.132254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:50.133186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:51.133279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:52.133389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:53.134179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:54.134279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:55.134406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:56.135161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:57.135275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:58.135381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:30:59.135500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:00.136051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:01.136138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:02.136405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:03.136521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:04.136646      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:05.136836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:06.137871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:07.138006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:08.138862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:09.139101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:10.139207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:11.139412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:11.844976 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2992" for this suite. @ 11/23/24 13:31:11.85
• [154.681 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/23/24 13:31:11.859
  I1123 13:31:11.859509 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename subpath @ 11/23/24 13:31:11.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:31:11.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:31:11.878
  STEP: Setting up data @ 11/23/24 13:31:11.881
  STEP: Creating pod pod-subpath-test-configmap-ck75 @ 11/23/24 13:31:11.892
  STEP: Creating a pod to test atomic-volume-subpath @ 11/23/24 13:31:11.892
  E1123 13:31:12.139798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:13.140031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:14.140486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:15.140620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:16.140692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:17.141595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:18.142170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:19.142272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:20.143194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:21.143266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:22.144038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:23.144251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:24.144343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:25.145204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:26.146201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:27.146482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:28.147467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:29.147574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:30.148048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:31.148257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:32.149070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:33.149255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:34.149661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:35.149868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:31:35.982
  I1123 13:31:35.987863 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-subpath-test-configmap-ck75 container test-container-subpath-configmap-ck75: <nil>
  STEP: delete the pod @ 11/23/24 13:31:35.999
  STEP: Deleting pod pod-subpath-test-configmap-ck75 @ 11/23/24 13:31:36.019
  I1123 13:31:36.019630 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-ck75" in namespace "subpath-8320"
  I1123 13:31:36.023691 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8320" for this suite. @ 11/23/24 13:31:36.027
• [24.176 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 11/23/24 13:31:36.035
  I1123 13:31:36.035572 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:31:36.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:31:36.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:31:36.055
  STEP: Setting up server cert @ 11/23/24 13:31:36.078
  E1123 13:31:36.150441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:31:36.195
  STEP: Deploying the webhook pod @ 11/23/24 13:31:36.206
  STEP: Wait for the deployment to be ready @ 11/23/24 13:31:36.218
  I1123 13:31:36.226827 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 13:31:37.150622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:38.150727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:31:38.241
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:31:38.253
  E1123 13:31:39.150810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:39.254055 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/23/24 13:31:39.34
  STEP: Creating a configMap that should be mutated @ 11/23/24 13:31:39.351
  STEP: Deleting the collection of validation webhooks @ 11/23/24 13:31:39.379
  STEP: Creating a configMap that should not be mutated @ 11/23/24 13:31:39.455
  I1123 13:31:39.533096 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9121" for this suite. @ 11/23/24 13:31:39.538
  STEP: Destroying namespace "webhook-markers-7211" for this suite. @ 11/23/24 13:31:39.547
• [3.522 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 11/23/24 13:31:39.557
  I1123 13:31:39.557581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replicaset @ 11/23/24 13:31:39.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:31:39.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:31:39.578
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/23/24 13:31:39.58
  I1123 13:31:39.589346 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1123 13:31:40.150893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:41.151016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:42.151165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:43.151264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:44.151339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:44.595404 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/23/24 13:31:44.595
  STEP: getting scale subresource @ 11/23/24 13:31:44.595
  STEP: updating a scale subresource @ 11/23/24 13:31:44.598
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/23/24 13:31:44.604
  STEP: Patch a scale subresource @ 11/23/24 13:31:44.608
  I1123 13:31:44.624242 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5413" for this suite. @ 11/23/24 13:31:44.628
• [5.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 11/23/24 13:31:44.643
  I1123 13:31:44.643108 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 13:31:44.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:31:44.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:31:44.667
  STEP: Creating pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546 @ 11/23/24 13:31:44.672
  E1123 13:31:45.152163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:46.153179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 13:31:46.695
  I1123 13:31:46.700937 20 container_probe.go:1749] Initial restart count of pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a is 0
  I1123 13:31:46.705370 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:47.154017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:48.154142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:48.710582 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:49.155090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:50.155305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:50.716441 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:51.156079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:52.156371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:52.721702 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:53.157166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:54.157341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:54.726608 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:55.158189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:56.158339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:56.731728 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:57.159342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:31:58.159443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:31:58.737455 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:31:59.159890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:00.160055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:00.743489 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:01.161032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:02.161135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:02.748592 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:03.162090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:04.162141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:04.754505 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:05.163004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:06.163121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:06.759356 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:07.164168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:08.164356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:08.765664 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:09.165272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:10.166316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:10.771813 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:11.166271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:12.166569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:12.777631 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:13.167183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:14.167326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:14.782846 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:15.168184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:16.168395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:16.791213 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:17.168613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:18.168831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:18.798795 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:19.168933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:20.169122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:20.803527 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:21.170023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:22.170175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:22.810300 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:23.170795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:24.171028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:24.817828 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:25.171103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:26.171448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:26.824787 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:27.172261      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:28.172348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:28.831454 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:29.172894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:30.173241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:30.837285 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:31.173687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:32.174634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:32.842338 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:33.174766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:34.175007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:34.848241 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:35.175691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:36.175906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:36.853899 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:37.176161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:38.176895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:38.859673 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:39.177026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:40.177215      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:40.865131 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:41.177322      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:42.177555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:42.870307 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:43.177704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:44.177885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:44.876516 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:45.178948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:46.179095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:46.881799 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:47.179167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:48.179351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:48.888383 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:49.179767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:50.179993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:50.894012 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:51.180050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:52.180168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:52.899882 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:53.181148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:54.181425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:54.906468 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:55.181817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:56.181925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:56.911460 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:57.182752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:32:58.182984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:32:58.917003 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:32:59.183120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:00.183250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:00.922305 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:01.183649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:02.184643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:02.927495 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:03.185099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:04.185289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:04.934609 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:05.185906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:06.186050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:06.940590 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:07.186989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:08.187255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:08.946386 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:09.187696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:10.187872      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:10.951689 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:11.188010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:12.188154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:12.961135 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:13.188352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:14.189078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:14.966661 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:15.189979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:16.190147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:16.972274 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:17.190583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:18.190767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:18.977817 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:19.190902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:20.191091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:20.983277 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:21.191526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:22.191574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:22.990074 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:23.192120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:24.192214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:24.996786 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:25.193077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:26.194167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:27.002626 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:27.194941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:28.195095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:29.008006 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:29.195170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:30.195356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:31.015435 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:31.195675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:32.196660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:33.020493 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:33.196766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:34.196952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:35.026005 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:35.197086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:36.197274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:37.032410 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:37.197639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:38.197859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:39.038394 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:39.198603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:40.198741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:41.043453 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:41.199664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:42.200673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:43.049676 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:43.200857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:44.200981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:45.055141 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:45.201348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:46.202155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:47.062462 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:47.202625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:48.202747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:49.068750 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:49.202778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:50.203174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:51.073026 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:51.204124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:52.204267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:53.080453 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:53.204664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:54.204875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:55.086706 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:55.204933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:56.205139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:57.091977 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:57.206113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:33:58.206285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:33:59.099382 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:33:59.206544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:00.206675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:01.105044 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:01.207191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:02.207255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:03.111993 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:03.208219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:04.208385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:05.118489 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:05.208708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:06.208891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:07.124066 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:07.209229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:08.209355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:09.130541 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:09.209718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:10.209904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:11.136518 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:11.210621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:12.211671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:13.141686 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:13.211805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:14.211931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:15.149129 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:15.212272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:16.212403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:17.154330 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:17.212440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:18.213235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:19.160482 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:19.213594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:20.213722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:21.166383 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:21.214494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:22.215528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:23.171792 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:23.216019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:24.216105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:25.177696 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:25.216816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:26.217050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:27.183075 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:27.217104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:28.217306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:29.190387 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:29.217432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:30.217615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:31.197119 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:31.218303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:32.219249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:33.202339 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:33.219487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:34.219669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:35.209151 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:35.220300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:36.220404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:37.216948 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:37.221667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:38.221823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:39.222451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:39.222631 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:40.222559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:41.223151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:41.228898 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:42.223273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:43.224155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:43.234683 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:44.224299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:45.224426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:45.239779 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:46.224816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:47.225160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:47.246786 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:48.225833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:49.226086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:49.251691 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:50.226718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:51.226825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:51.256695 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:52.227800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:53.228024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:53.263337 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:54.228128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:55.228348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:55.268232 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:56.228464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:57.228659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:57.274055 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:34:58.229128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:34:59.229229      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:34:59.280688 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:00.229665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:01.229878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:01.286759 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:02.230747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:03.230954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:03.292878 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:04.231121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:05.231213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:05.299832 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:06.231771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:07.232696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:07.306603 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:08.233106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:09.233211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:09.312147 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:10.234127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:11.234233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:11.318060 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:12.234977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:13.235175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:13.324709 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:14.235310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:15.235446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:15.330867 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:16.235584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:17.235691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:17.336785 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:18.236183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:19.236306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:19.343699 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:20.237121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:21.237210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:21.350699 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:22.237653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:23.237786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:23.358558 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:24.237915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:25.238053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:25.365746 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:26.238674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:27.239724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:27.371051 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:28.239848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:29.239941      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:29.376060 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:30.240010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:31.240110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:31.381542 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:32.240771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:33.240891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:33.388793 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:34.241682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:35.242183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:35.394727 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:36.243175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:37.243263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:37.400934 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:38.244184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:39.244280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:39.407378 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:40.245190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:41.245318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:41.412552 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:42.246185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:43.246293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:43.419427 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:44.246342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:45.246652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:45.425547 20 container_probe.go:1759] Get pod liveness-4d0d9f3e-0002-4529-b591-f08c8645507a in namespace container-probe-3546
  E1123 13:35:46.246784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:47.246828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/23/24 13:35:47.426
  I1123 13:35:47.447760 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3546" for this suite. @ 11/23/24 13:35:47.451
• [242.817 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 11/23/24 13:35:47.459
  I1123 13:35:47.459775 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:35:47.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:35:47.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:35:47.486
  STEP: Creating resourceQuota "e2e-rq-status-lwtzz" @ 11/23/24 13:35:47.492
  I1123 13:35:47.503129 20 resource_quota.go:1102] Resource quota "e2e-rq-status-lwtzz" reports spec: hard cpu limit of 500m
  I1123 13:35:47.503151 20 resource_quota.go:1104] Resource quota "e2e-rq-status-lwtzz" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-lwtzz" /status @ 11/23/24 13:35:47.503
  STEP: Confirm /status for "e2e-rq-status-lwtzz" resourceQuota via watch @ 11/23/24 13:35:47.512
  I1123 13:35:47.513707 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-lwtzz" in namespace "resourcequota-8677" with hard status: v1.ResourceList(nil)
  I1123 13:35:47.513747 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-lwtzz" in namespace "resourcequota-8677" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1123 13:35:47.513761 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-lwtzz" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/23/24 13:35:47.518
  I1123 13:35:47.523020 20 resource_quota.go:1152] Resource quota "e2e-rq-status-lwtzz" reports spec: hard cpu limit of 1
  I1123 13:35:47.523040 20 resource_quota.go:1153] Resource quota "e2e-rq-status-lwtzz" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-lwtzz" /status @ 11/23/24 13:35:47.523
  STEP: Confirm /status for "e2e-rq-status-lwtzz" resourceQuota via watch @ 11/23/24 13:35:47.529
  I1123 13:35:47.530997 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-lwtzz" in namespace "resourcequota-8677" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1123 13:35:47.531032 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-lwtzz" in namespace "resourcequota-8677" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1123 13:35:47.531043 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-lwtzz" /status was patched
  STEP: Get "e2e-rq-status-lwtzz" /status @ 11/23/24 13:35:47.531
  I1123 13:35:47.535185 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-lwtzz" reports status: hard cpu of 1
  I1123 13:35:47.535207 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-lwtzz" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-lwtzz" /status before checking Spec is unchanged @ 11/23/24 13:35:47.538
  I1123 13:35:47.549565 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-lwtzz" reports status: hard cpu of 2
  I1123 13:35:47.549588 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-lwtzz" reports status: hard memory of 2Gi
  I1123 13:35:47.550810 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-lwtzz" in namespace "resourcequota-8677" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1123 13:35:47.555347 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65278), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:35:48.246943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:49.247150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:50.247358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:51.247551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:52.247680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:52.555221 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d654b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:35:53.248000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:54.248163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:55.248280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:56.248377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:57.248493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:35:57.556832 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc1b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:35:58.248555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:35:59.248773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:00.249003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:01.249122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:02.249470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:02.555764 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc4e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:03.250186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:04.251168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:05.251260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:06.251380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:07.252155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:07.556780 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65758), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d657a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d657e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:08.252282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:09.252366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:10.252441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:11.252532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:12.252723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:12.556112 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d659c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65a10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65a58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:13.252813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:14.253354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:15.253420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:16.253619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:17.253660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:17.556836 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:18.254199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:19.254311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:20.254390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:21.254502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:22.254660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:22.556384 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dca20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dca68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dca98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:23.254758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:24.254878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:25.255112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:26.255327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:27.256157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:27.556700 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65cf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d65d88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:28.256392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:29.256631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:30.256860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:31.256998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:32.257329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:32.557841 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcc78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dccc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dccf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:33.257453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:34.257696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:35.257876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:36.258113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:37.258442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:37.556413 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:38.259217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:39.259295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:40.259408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:41.259521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:42.259642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:42.556288 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046760d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:43.259752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:44.260020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:45.260244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:46.260412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:47.260642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:47.556619 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:48.261081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:49.262159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:50.262255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:51.263158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:52.263465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:52.557409 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:53.264125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:54.264251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:55.265161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:56.265348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:57.265478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:36:57.555772 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:36:58.266553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:36:59.266745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:00.266931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:01.267129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:02.267353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:02.557920 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc6a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:03.267448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:04.267636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:05.267830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:06.267983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:07.268329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:07.556844 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc8d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:08.268446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:09.268626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:10.268814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:11.269036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:12.269351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:12.557543 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046767b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046767e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:13.270334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:14.270523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:15.270713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:16.270806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:17.271778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:17.556291 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcaf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcb28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcb58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:18.272002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:19.272091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:20.273167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:21.274153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:22.274273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:22.557003 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676ab0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:23.274415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:24.274478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:25.275183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:26.275365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:27.275624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:27.557146 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcd50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcd80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcdc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:28.275740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:29.275924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:30.276148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:31.276346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:32.276444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:32.557340 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676ca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:33.276541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:34.276723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:35.276981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:36.277095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:37.277397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:37.556839 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcfa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dcfd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:38.277560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:39.277747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:40.277933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:41.278141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:42.279150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:42.557772 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676f60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:43.279233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:44.279427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:45.279612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:46.279796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:47.280550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:47.555945 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd200), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd278), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:48.281042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:49.281103      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:50.282153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:51.283149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:52.284161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:52.556300 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677188), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:53.285150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:54.285283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:55.286158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:56.286356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:57.286481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:37:57.557377 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd4a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd4d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:37:58.286600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:37:59.286812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:00.287032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:01.287234      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:02.287355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:02.557224 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677368), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677398), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046773c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:03.287508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:04.287623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:05.287812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:06.288088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:07.288189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:07.556690 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd6c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd6f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd728), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:08.288353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:09.289179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:10.289676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:11.289743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:12.289837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:12.557314 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046775d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677650), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:13.289983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:14.290172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:15.290273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:16.290462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:17.290664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:17.557055 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dd998), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:18.291151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:19.291248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:20.292167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:21.293150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:22.293259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:22.556296 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677800), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677830), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677860), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:23.293343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:24.294148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:25.294396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:26.294610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:27.294699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:27.557249 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ddb78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ddba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044ddbf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:28.294805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:29.295054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:30.295250      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:31.295438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:32.295553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:32.556050 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677a28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677a70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004677aa0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:33.295681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:34.295923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:35.296140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:36.296393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:37.296700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:37.555932 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046760a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:38.297317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:39.297508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:40.297602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:41.297846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:42.297987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:42.556729 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc0f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:43.298092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:44.298282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:45.299214      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:46.299293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:47.299406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:47.556523 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046762a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046762e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:48.300181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:49.300269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:50.301157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:51.302151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:52.303161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:52.557510 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc3f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044dc468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:53.304233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:54.304337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:55.304532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:56.304728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:57.305004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:38:57.557536 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046764c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:38:58.305101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:38:59.305321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:00.305445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:01.306157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:02.306463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:02.555874 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-lwtzz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-lwtzz", GenerateName:"", Namespace:"resourcequota-8677", SelfLink:"", UID:"a7917848-ce24-42a1-b590-9d046cd0d8fd", ResourceVersion:"38795", Generation:0, CreationTimestamp:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-lwtzz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004676678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046766a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 23, 13, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046766f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1123 13:39:03.306594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:04.306780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:05.307062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:06.307159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:07.307468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:07.557114 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-lwtzz" Spec was unchanged and /status reset
  I1123 13:39:07.557245 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8677" for this suite. @ 11/23/24 13:39:07.562
• [200.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 11/23/24 13:39:07.57
  I1123 13:39:07.570977 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:39:07.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:07.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:07.588
  STEP: Discovering how many secrets are in namespace by default @ 11/23/24 13:39:07.59
  E1123 13:39:08.308125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:09.308344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:10.309062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:11.309166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:12.309284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 11/23/24 13:39:12.595
  E1123 13:39:13.309399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:14.309490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:15.309609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:16.310587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:17.311504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/23/24 13:39:17.6
  STEP: Ensuring resource quota status is calculated @ 11/23/24 13:39:17.607
  E1123 13:39:18.312119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:19.313184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 11/23/24 13:39:19.612
  STEP: Ensuring resource quota status captures secret creation @ 11/23/24 13:39:19.625
  E1123 13:39:20.313280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:21.313384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 11/23/24 13:39:21.631
  STEP: Ensuring resource quota status released usage @ 11/23/24 13:39:21.639
  E1123 13:39:22.313482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:23.313547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:23.647046 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9670" for this suite. @ 11/23/24 13:39:23.652
• [16.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/23/24 13:39:23.661
  I1123 13:39:23.661657 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename subjectreview @ 11/23/24 13:39:23.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:23.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:23.679
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3288" @ 11/23/24 13:39:23.681
  I1123 13:39:23.686461 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3288:e2e"
  I1123 13:39:23.686489 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3288"}
  I1123 13:39:23.686497 20 subjectreviews.go:71] saUID: "82916377-eed1-42b9-ba9a-1ab19df3dfc1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3288:e2e" @ 11/23/24 13:39:23.686
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3288:e2e" @ 11/23/24 13:39:23.686
  I1123 13:39:23.690305 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3288:e2e" api 'list' configmaps in "subjectreview-3288" namespace @ 11/23/24 13:39:23.69
  I1123 13:39:23.691717 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3288:e2e" @ 11/23/24 13:39:23.691
  I1123 13:39:23.693718 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1123 13:39:23.693735 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1123 13:39:23.693834 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3288" for this suite. @ 11/23/24 13:39:23.698
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 11/23/24 13:39:23.706
  I1123 13:39:23.706659 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pod-network-test @ 11/23/24 13:39:23.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:23.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:23.726
  STEP: Performing setup for networking test in namespace pod-network-test-153 @ 11/23/24 13:39:23.728
  STEP: creating a selector @ 11/23/24 13:39:23.728
  STEP: Creating the service pods in kubernetes @ 11/23/24 13:39:23.728
  I1123 13:39:23.728599 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1123 13:39:24.313708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:25.313932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:26.314879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:27.315831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:28.315880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:29.316121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:30.316270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:31.316387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:32.316469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:33.316592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:34.317449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:35.317651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/23/24 13:39:35.828
  E1123 13:39:36.318480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:37.319377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:37.869613 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1123 13:39:37.869646 20 utils.go:496] Going to poll 192.168.120.112 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1123 13:39:37.873169 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.120.112 8081 | grep -v '^\s*$'] Namespace:pod-network-test-153 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:39:37.873190 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:39:37.873621 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:39:37.873663 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-153/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.120.112+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1123 13:39:38.319455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:38.918791 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1123 13:39:38.918827 20 utils.go:496] Going to poll 192.168.125.34 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1123 13:39:38.923118 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.125.34 8081 | grep -v '^\s*$'] Namespace:pod-network-test-153 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:39:38.923136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:39:38.923546 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:39:38.923588 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-153/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.125.34+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1123 13:39:39.320107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:39.962534 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1123 13:39:39.962571 20 utils.go:496] Going to poll 192.168.21.180 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1123 13:39:39.967976 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.21.180 8081 | grep -v '^\s*$'] Namespace:pod-network-test-153 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:39:39.967995 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:39:39.968400 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:39:39.968440 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-153/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.21.180+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1123 13:39:40.320302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:41.005304 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1123 13:39:41.005469 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-153" for this suite. @ 11/23/24 13:39:41.011
• [17.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 11/23/24 13:39:41.021
  I1123 13:39:41.021214 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/23/24 13:39:41.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:41.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:41.043
  STEP: getting /apis @ 11/23/24 13:39:41.051
  STEP: getting /apis/admissionregistration.k8s.io @ 11/23/24 13:39:41.054
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/23/24 13:39:41.055
  STEP: creating @ 11/23/24 13:39:41.056
  STEP: getting @ 11/23/24 13:39:41.078
  STEP: listing @ 11/23/24 13:39:41.082
  STEP: watching @ 11/23/24 13:39:41.087
  I1123 13:39:41.087375 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 11/23/24 13:39:41.092
  STEP: updating @ 11/23/24 13:39:41.102
  I1123 13:39:41.138411 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 11/23/24 13:39:41.138
  STEP: patching /status @ 11/23/24 13:39:41.142
  STEP: updating /status @ 11/23/24 13:39:41.156
  STEP: deleting @ 11/23/24 13:39:41.167
  STEP: deleting a collection @ 11/23/24 13:39:41.183
  I1123 13:39:41.206740 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7023" for this suite. @ 11/23/24 13:39:41.211
• [0.198 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 11/23/24 13:39:41.218
  I1123 13:39:41.218865 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:39:41.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:41.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:41.237
  STEP: Creating configMap with name configmap-test-volume-fbdd7d67-280b-469e-9cba-e1a88805b5b6 @ 11/23/24 13:39:41.239
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:39:41.246
  E1123 13:39:41.321030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:42.321440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:43.321836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:44.321992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:39:45.273
  I1123 13:39:45.277114 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-configmaps-e90bf63d-1c8c-4a7b-8d86-089e5111024e container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:39:45.301
  E1123 13:39:45.322712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:39:45.323548 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7950" for this suite. @ 11/23/24 13:39:45.329
• [4.118 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 11/23/24 13:39:45.336
  I1123 13:39:45.336803 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename discovery @ 11/23/24 13:39:45.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:45.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:45.354
  STEP: Setting up server cert @ 11/23/24 13:39:45.358
  STEP: Requesting APIResourceList from "/api/v1" @ 11/23/24 13:39:45.62
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/23/24 13:39:45.622
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/23/24 13:39:45.623
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/23/24 13:39:45.624
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/23/24 13:39:45.625
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/23/24 13:39:45.626
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/23/24 13:39:45.627
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/23/24 13:39:45.629
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/23/24 13:39:45.63
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/23/24 13:39:45.631
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/23/24 13:39:45.632
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/23/24 13:39:45.633
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/23/24 13:39:45.634
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/23/24 13:39:45.635
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/23/24 13:39:45.636
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/23/24 13:39:45.637
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/23/24 13:39:45.638
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/23/24 13:39:45.639
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/23/24 13:39:45.64
  I1123 13:39:45.641516 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8807" for this suite. @ 11/23/24 13:39:45.645
• [0.319 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 11/23/24 13:39:45.655
  I1123 13:39:45.655409 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename namespaces @ 11/23/24 13:39:45.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:45.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:45.674
  STEP: Creating a test namespace @ 11/23/24 13:39:45.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:45.691
  STEP: Creating a service in the namespace @ 11/23/24 13:39:45.693
  STEP: Deleting the namespace @ 11/23/24 13:39:45.706
  STEP: Waiting for the namespace to be removed. @ 11/23/24 13:39:45.715
  E1123 13:39:46.323036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:47.323132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:48.323925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:49.324025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:50.324122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:51.324979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/23/24 13:39:51.72
  STEP: Verifying there is no service in the namespace @ 11/23/24 13:39:51.733
  I1123 13:39:51.737201 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2435" for this suite. @ 11/23/24 13:39:51.742
  STEP: Destroying namespace "nsdeletetest-188" for this suite. @ 11/23/24 13:39:51.748
  I1123 13:39:51.752657 20 framework.go:370] Namespace nsdeletetest-188 was already deleted
  STEP: Destroying namespace "nsdeletetest-6681" for this suite. @ 11/23/24 13:39:51.752
• [6.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 11/23/24 13:39:51.761
  I1123 13:39:51.761338 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 13:39:51.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:51.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:51.78
  STEP: Creating a pod to test substitution in container's command @ 11/23/24 13:39:51.782
  E1123 13:39:52.325730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:53.325896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:54.326097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:55.326298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:39:55.808
  I1123 13:39:55.812776 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod var-expansion-5195ceb3-92cf-4391-81e4-c2cfbd591a8d container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 13:39:55.822
  I1123 13:39:55.842254 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6717" for this suite. @ 11/23/24 13:39:55.846
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/23/24 13:39:55.855
  I1123 13:39:55.855897 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/23/24 13:39:55.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:55.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:55.874
  STEP: Creating two CSIDrivers @ 11/23/24 13:39:55.877
  STEP: Getting "inline-driver-4c5542ad-59f1-4536-b6ad-6d6231ffc773" & "inline-driver-2323fa70-4dce-443c-a6b7-9517b97f705c" @ 11/23/24 13:39:55.896
  STEP: Patching the CSIDriver "inline-driver-2323fa70-4dce-443c-a6b7-9517b97f705c" @ 11/23/24 13:39:55.903
  STEP: Updating the CSIDriver "inline-driver-2323fa70-4dce-443c-a6b7-9517b97f705c" @ 11/23/24 13:39:55.911
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4309" @ 11/23/24 13:39:55.92
  STEP: Deleting CSIDriver "inline-driver-4c5542ad-59f1-4536-b6ad-6d6231ffc773" @ 11/23/24 13:39:55.925
  STEP: Confirm deletion of CSIDriver "inline-driver-4c5542ad-59f1-4536-b6ad-6d6231ffc773" @ 11/23/24 13:39:55.932
  STEP: Deleting CSIDriver "inline-driver-2323fa70-4dce-443c-a6b7-9517b97f705c" via DeleteCollection @ 11/23/24 13:39:55.937
  STEP: Confirm deletion of CSIDriver "inline-driver-2323fa70-4dce-443c-a6b7-9517b97f705c" @ 11/23/24 13:39:55.948
  I1123 13:39:55.952365 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4309" for this suite. @ 11/23/24 13:39:55.956
• [0.110 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 11/23/24 13:39:55.965
  I1123 13:39:55.965639 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename replicaset @ 11/23/24 13:39:55.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:39:55.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:39:55.983
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/23/24 13:39:55.986
  E1123 13:39:56.327029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:39:57.327175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 11/23/24 13:39:58.01
  STEP: Then the orphan pod is adopted @ 11/23/24 13:39:58.017
  E1123 13:39:58.327599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 11/23/24 13:39:59.028
  I1123 13:39:59.033459 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/23/24 13:39:59.044
  E1123 13:39:59.328121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:40:00.059491 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-585" for this suite. @ 11/23/24 13:40:00.064
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 11/23/24 13:40:00.074
  I1123 13:40:00.074325 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 13:40:00.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:40:00.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:40:00.095
  STEP: Creating service test in namespace statefulset-8928 @ 11/23/24 13:40:00.097
  I1123 13:40:00.118304 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1123 13:40:00.328752      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:01.328910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:02.329070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:03.329128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:04.329275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:05.329423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:06.329492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:07.329794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:08.329845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:09.331047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:40:10.118899 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/23/24 13:40:10.128
  I1123 13:40:10.149077 20 wait.go:40] Found 1 stateful pods, waiting for 2
  E1123 13:40:10.331410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:11.332489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:12.332741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:13.333171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:14.333270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:15.333379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:16.334193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:17.334300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:18.334379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:19.334567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:40:20.151438 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1123 13:40:20.151464 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/23/24 13:40:20.16
  STEP: Delete all of the StatefulSets @ 11/23/24 13:40:20.164
  STEP: Verify that StatefulSets have been deleted @ 11/23/24 13:40:20.175
  I1123 13:40:20.180130 20 statefulset.go:138] Deleting all statefulset in ns statefulset-8928
  I1123 13:40:20.197472 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8928" for this suite. @ 11/23/24 13:40:20.202
• [20.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/23/24 13:40:20.212
  I1123 13:40:20.212508 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:40:20.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:40:20.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:40:20.234
  STEP: Creating secret with name secret-test-d5a35c95-3fbb-4156-ad4b-575c8c558543 @ 11/23/24 13:40:20.262
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:40:20.269
  E1123 13:40:20.335581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:21.335758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:40:22.296
  I1123 13:40:22.301790 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-2d3b6d30-cf50-4d46-bcbc-5e6f5aee56a7 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:40:22.31
  I1123 13:40:22.327639 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9928" for this suite. @ 11/23/24 13:40:22.332
  E1123 13:40:22.336655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secret-namespace-9489" for this suite. @ 11/23/24 13:40:22.342
• [2.139 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 11/23/24 13:40:22.351
  I1123 13:40:22.351350 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 13:40:22.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:40:22.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:40:22.369
  STEP: Creating service test in namespace statefulset-2066 @ 11/23/24 13:40:22.371
  STEP: Creating statefulset ss in namespace statefulset-2066 @ 11/23/24 13:40:22.384
  I1123 13:40:22.394161 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1123 13:40:23.336864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:24.336947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:25.337196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:26.337294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:27.337657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:28.337751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:29.337889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:30.338116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:31.338233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:32.338277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:40:32.394769 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/23/24 13:40:32.405
  STEP: Getting /status @ 11/23/24 13:40:32.414
  I1123 13:40:32.418662 20 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/23/24 13:40:32.418
  I1123 13:40:32.431611 20 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/23/24 13:40:32.431
  I1123 13:40:32.433287 20 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1123 13:40:32.433314 20 statefulset.go:1111] Found Statefulset ss in namespace statefulset-2066 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1123 13:40:32.433328 20 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/23/24 13:40:32.433
  I1123 13:40:32.433354 20 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1123 13:40:32.440580 20 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/23/24 13:40:32.44
  I1123 13:40:32.442073 20 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1123 13:40:32.442132 20 statefulset.go:138] Deleting all statefulset in ns statefulset-2066
  I1123 13:40:32.447533 20 rest.go:150] Scaling statefulset ss to 0
  E1123 13:40:33.338423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:34.338535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:35.338704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:36.338797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:37.339078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:38.339175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:39.339380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:40.339577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:41.340405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:42.340701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:40:42.463665 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 13:40:42.468313 20 rest.go:88] Deleting statefulset ss
  I1123 13:40:42.486604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2066" for this suite. @ 11/23/24 13:40:42.49
• [20.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/23/24 13:40:42.502
  I1123 13:40:42.502307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:40:42.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:40:42.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:40:42.519
  STEP: Creating projection with secret that has name projected-secret-test-map-bb73a080-9982-4b5a-a303-0b059d03cd12 @ 11/23/24 13:40:42.522
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:40:42.527
  E1123 13:40:43.341595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:44.342179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:45.342269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:46.342352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:40:46.556
  I1123 13:40:46.560764 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-secrets-d6df06b5-13c2-4060-866d-89b3964078b0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:40:46.569
  I1123 13:40:46.590733 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9994" for this suite. @ 11/23/24 13:40:46.596
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/23/24 13:40:46.605
  I1123 13:40:46.605513 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:40:46.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:40:46.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:40:46.626
  STEP: Creating projection with secret that has name projected-secret-test-aa7f9b0b-c00b-443e-ac5b-8dd61feb51ba @ 11/23/24 13:40:46.628
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:40:46.634
  E1123 13:40:47.342451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:48.342527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:49.342643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:50.342739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:40:50.664
  I1123 13:40:50.668231 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-secrets-67a509c6-ec91-4413-a2e8-c181437eb1d3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:40:50.68
  I1123 13:40:50.703115 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7406" for this suite. @ 11/23/24 13:40:50.706
• [4.109 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 11/23/24 13:40:50.714
  I1123 13:40:50.714863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:40:50.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:40:50.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:40:50.735
  STEP: Setting up server cert @ 11/23/24 13:40:50.757
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:40:51.037
  STEP: Deploying the webhook pod @ 11/23/24 13:40:51.048
  STEP: Wait for the deployment to be ready @ 11/23/24 13:40:51.063
  I1123 13:40:51.071680 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1123 13:40:51.343047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:52.343128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:40:53.087
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:40:53.099
  E1123 13:40:53.343935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:40:54.099624 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/23/24 13:40:54.11
  STEP: create a pod that should be denied by the webhook @ 11/23/24 13:40:54.125
  STEP: create a pod that causes the webhook to hang @ 11/23/24 13:40:54.133
  E1123 13:40:54.344909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:55.345161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:56.345386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:57.345538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:58.345680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:40:59.345772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:00.345887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:01.346081      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:02.346184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:03.346375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 11/23/24 13:41:04.142
  STEP: create a configmap that should be admitted by the webhook @ 11/23/24 13:41:04.151
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/23/24 13:41:04.162
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/23/24 13:41:04.173
  STEP: create a namespace that bypass the webhook @ 11/23/24 13:41:04.18
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/23/24 13:41:04.194
  I1123 13:41:04.260572 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6779" for this suite. @ 11/23/24 13:41:04.266
  STEP: Destroying namespace "webhook-markers-5886" for this suite. @ 11/23/24 13:41:04.274
  STEP: Destroying namespace "exempted-namespace-7039" for this suite. @ 11/23/24 13:41:04.284
• [13.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 11/23/24 13:41:04.292
  I1123 13:41:04.292606 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:41:04.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:41:04.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:41:04.312
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/23/24 13:41:04.315
  E1123 13:41:04.346533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:05.346714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:41:06.334
  I1123 13:41:06.339978 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-e7476dbf-3c8a-471b-8804-20ad397afc11 container test-container: <nil>
  E1123 13:41:06.347069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 11/23/24 13:41:06.348
  I1123 13:41:06.365492 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7024" for this suite. @ 11/23/24 13:41:06.368
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 11/23/24 13:41:06.379
  I1123 13:41:06.379170 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:41:06.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:41:06.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:41:06.398
  STEP: Creating configMap with name configmap-test-upd-ef0b7023-2e0e-4882-98d1-bc7a59329813 @ 11/23/24 13:41:06.407
  STEP: Creating the pod @ 11/23/24 13:41:06.413
  E1123 13:41:07.347222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:08.347522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-ef0b7023-2e0e-4882-98d1-bc7a59329813 @ 11/23/24 13:41:08.45
  STEP: waiting to observe update in volume @ 11/23/24 13:41:08.458
  E1123 13:41:09.347877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:10.348114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:11.349181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:12.350167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:13.350265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:14.350361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:15.351166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:16.351294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:17.352185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:18.352276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:19.353191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:20.354180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:21.354291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:22.354615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:23.355263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:24.355404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:25.355539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:26.355760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:27.356104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:28.356240      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:29.356354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:30.356464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:31.356587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:32.356697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:33.357700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:34.357822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:35.358806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:36.358943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:37.359089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:38.359333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:39.359408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:40.359616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:41.359746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:42.359762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:43.359913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:44.360140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:45.361155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:46.361272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:47.362177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:48.362318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:49.363034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:50.363118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:51.363217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:52.363309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:53.363505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:54.363632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:55.363762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:56.363863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:57.364099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:58.364201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:41:59.364320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:00.364442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:01.364553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:02.364766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:03.364916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:04.365068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:05.365150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:06.365290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:07.366190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:08.366299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:09.367104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:10.367323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:11.367430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:12.368173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:13.368263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:14.368391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:14.811253 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3498" for this suite. @ 11/23/24 13:42:14.815
• [68.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 11/23/24 13:42:14.825
  I1123 13:42:14.825158 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 13:42:14.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:42:14.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:42:14.844
  STEP: Creating a pod to test env composition @ 11/23/24 13:42:14.846
  E1123 13:42:15.368477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:16.368761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:17.368876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:18.369020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:42:18.873
  I1123 13:42:18.878130 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod var-expansion-6475759a-e356-4960-bd51-35231eea36a8 container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 13:42:18.886
  I1123 13:42:18.905945 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1212" for this suite. @ 11/23/24 13:42:18.91
• [4.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/23/24 13:42:18.92
  I1123 13:42:18.920041 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename daemonsets @ 11/23/24 13:42:18.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:42:18.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:42:18.937
  I1123 13:42:18.963236 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/23/24 13:42:18.968
  I1123 13:42:18.975318 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:18.975348 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:18.979009 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:42:18.979028 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:42:19.369614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:19.975517 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:19.975558 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:19.979759 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1123 13:42:19.979778 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:42:20.370355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:20.973895 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:20.973940 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:20.980332 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 13:42:20.980353 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/23/24 13:42:20.997
  STEP: Check that daemon pods images are updated. @ 11/23/24 13:42:21.014
  I1123 13:42:21.019863 20 daemon_set.go:1193] Wrong image for pod: daemon-set-7j7t5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1123 13:42:21.019883 20 daemon_set.go:1193] Wrong image for pod: daemon-set-xq264. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1123 13:42:21.029808 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:21.029839 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1123 13:42:21.371189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:22.019785 20 daemon_set.go:1198] Pod daemon-set-2qrq5 is not available
  I1123 13:42:22.019818 20 daemon_set.go:1193] Wrong image for pod: daemon-set-7j7t5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1123 13:42:22.019826 20 daemon_set.go:1193] Wrong image for pod: daemon-set-xq264. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1123 13:42:22.023777 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:22.023809 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1123 13:42:22.372089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:23.018874 20 daemon_set.go:1198] Pod daemon-set-8zt8v is not available
  I1123 13:42:23.018905 20 daemon_set.go:1193] Wrong image for pod: daemon-set-xq264. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1123 13:42:23.023943 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:23.024004 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1123 13:42:23.372181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:24.018993 20 daemon_set.go:1198] Pod daemon-set-8zt8v is not available
  I1123 13:42:24.019028 20 daemon_set.go:1193] Wrong image for pod: daemon-set-xq264. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1123 13:42:24.023449 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:24.023481 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1123 13:42:24.372734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:25.018995 20 daemon_set.go:1198] Pod daemon-set-fb4gw is not available
  I1123 13:42:25.023412 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:25.023447 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/23/24 13:42:25.023
  I1123 13:42:25.027807 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:25.027841 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:25.034868 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1123 13:42:25.034889 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:42:25.373144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:26.029748 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:26.029792 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:42:26.034376 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1123 13:42:26.034398 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/23/24 13:42:26.055
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8558, will wait for the garbage collector to delete the pods @ 11/23/24 13:42:26.055
  I1123 13:42:26.119279 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.49258ms
  I1123 13:42:26.219835 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.54784ms
  E1123 13:42:26.373576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:27.326166 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1123 13:42:27.326200 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1123 13:42:27.329776 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40627"},"items":null}

  I1123 13:42:27.333774 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40627"},"items":null}

  I1123 13:42:27.348896 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8558" for this suite. @ 11/23/24 13:42:27.354
• [8.443 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/23/24 13:42:27.363
  I1123 13:42:27.363397 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:42:27.363
  E1123 13:42:27.374188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:42:27.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:42:27.382
  STEP: Creating secret with name secret-test-f7dc3bbf-ff38-49f2-ad3d-10be7bce4b2c @ 11/23/24 13:42:27.387
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:42:27.392
  E1123 13:42:28.374379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:29.374504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:42:29.411
  I1123 13:42:29.415228 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-secrets-ed797892-a245-4369-8f42-6163e6cfa0c7 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:42:29.425
  I1123 13:42:29.446255 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6518" for this suite. @ 11/23/24 13:42:29.45
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/23/24 13:42:29.46
  I1123 13:42:29.460134 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename containers @ 11/23/24 13:42:29.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:42:29.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:42:29.479
  E1123 13:42:30.374629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:31.374827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:42:31.513062 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2935" for this suite. @ 11/23/24 13:42:31.517
• [2.065 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 11/23/24 13:42:31.525
  I1123 13:42:31.525251 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename svcaccounts @ 11/23/24 13:42:31.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:42:31.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:42:31.545
  I1123 13:42:31.564262 20 service_accounts.go:618] created pod
  E1123 13:42:32.375863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:33.375992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:42:33.578
  E1123 13:42:34.376099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:35.376401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:36.376514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:37.376983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:38.376893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:39.377104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:40.377291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:41.377506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:42.377764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:43.377944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:44.378148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:45.378614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:46.378857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:47.379182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:48.379300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:49.380150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:50.380869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:51.380986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:52.381079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:53.381330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:54.381978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:55.382099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:56.383148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:57.384145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:58.384334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:42:59.384515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:00.384757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:01.384878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:02.385951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:03.386169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:43:03.579432 20 service_accounts.go:624] polling logs
  I1123 13:43:03.589550 20 service_accounts.go:634] Pod logs: 
  I1123 13:42:32.109712       1 log.go:245] OK: Got token
  I1123 13:42:32.109839       1 log.go:245] validating with in-cluster discovery
  I1123 13:42:32.110051       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1123 13:42:32.110248       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3259:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013710), NotBefore:(*jwt.NumericDate)(0xc000013800), IssuedAt:(*jwt.NumericDate)(0xc000013720), ID:"c38f12a1-20d4-4528-9a0c-c20733b43541"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3259", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"91d55852-1bf1-404f-b508-3294db687107"}}}
  I1123 13:42:32.117876       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1123 13:42:32.121156       1 log.go:245] OK: Validated signature on JWT
  I1123 13:42:32.121233       1 log.go:245] OK: Got valid claims from token!
  I1123 13:42:32.121251       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3259:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000127300), NotBefore:(*jwt.NumericDate)(0xc000127338), IssuedAt:(*jwt.NumericDate)(0xc000127308), ID:"c38f12a1-20d4-4528-9a0c-c20733b43541"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3259", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"91d55852-1bf1-404f-b508-3294db687107"}}}

  I1123 13:43:03.589588 20 service_accounts.go:638] completed pod
  I1123 13:43:03.597298 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3259" for this suite. @ 11/23/24 13:43:03.602
• [32.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 11/23/24 13:43:03.611
  I1123 13:43:03.611130 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:43:03.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:43:03.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:43:03.629
  STEP: creating a collection of services @ 11/23/24 13:43:03.632
  I1123 13:43:03.632144 20 service.go:3655] Creating e2e-svc-a-h49w8
  I1123 13:43:03.642227 20 service.go:3655] Creating e2e-svc-b-pt27q
  I1123 13:43:03.655306 20 service.go:3655] Creating e2e-svc-c-llpv8
  STEP: deleting service collection @ 11/23/24 13:43:03.672
  I1123 13:43:03.710891 20 service.go:3690] Collection of services has been deleted
  I1123 13:43:03.711054 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2970" for this suite. @ 11/23/24 13:43:03.714
• [0.113 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/23/24 13:43:03.728
  I1123 13:43:03.728224 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 13:43:03.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:43:03.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:43:03.746
  STEP: creating the pod @ 11/23/24 13:43:03.748
  STEP: submitting the pod to kubernetes @ 11/23/24 13:43:03.748
  E1123 13:43:04.387196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:05.387588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/23/24 13:43:05.775
  STEP: updating the pod @ 11/23/24 13:43:05.78
  I1123 13:43:06.294729 20 pod_client.go:173] Successfully updated pod "pod-update-c01aeac7-d2f2-465e-83fa-b176b628ed82"
  STEP: verifying the updated pod is in kubernetes @ 11/23/24 13:43:06.299
  I1123 13:43:06.302559 20 pods.go:391] Pod update OK
  I1123 13:43:06.302734 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8753" for this suite. @ 11/23/24 13:43:06.306
• [2.587 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 11/23/24 13:43:06.315
  I1123 13:43:06.315868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:43:06.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:43:06.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:43:06.338
  STEP: Setting up server cert @ 11/23/24 13:43:06.361
  E1123 13:43:06.387672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:43:06.625
  STEP: Deploying the webhook pod @ 11/23/24 13:43:06.638
  STEP: Wait for the deployment to be ready @ 11/23/24 13:43:06.651
  I1123 13:43:06.663189 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 13:43:07.388068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:08.388449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:43:08.676
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:43:08.686
  E1123 13:43:09.388565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:43:09.687004 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/23/24 13:43:09.697
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/23/24 13:43:09.712
  I1123 13:43:09.712135 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:43:09.772271 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2015" for this suite. @ 11/23/24 13:43:09.776
  STEP: Destroying namespace "webhook-markers-3348" for this suite. @ 11/23/24 13:43:09.785
• [3.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 11/23/24 13:43:09.794
  I1123 13:43:09.794061 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 13:43:09.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:43:09.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:43:09.811
  I1123 13:43:09.814472 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:43:10.389536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:11.389790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1123 13:43:12.348294      20 warnings.go:70] unknown field "alpha"
  W1123 13:43:12.348312      20 warnings.go:70] unknown field "beta"
  W1123 13:43:12.348318      20 warnings.go:70] unknown field "delta"
  W1123 13:43:12.348320      20 warnings.go:70] unknown field "epsilon"
  W1123 13:43:12.348323      20 warnings.go:70] unknown field "gamma"
  E1123 13:43:12.390589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:43:12.903524 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3990" for this suite. @ 11/23/24 13:43:12.907
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 11/23/24 13:43:12.916
  I1123 13:43:12.916253 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/23/24 13:43:12.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:43:12.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:43:12.939
  I1123 13:43:12.942982 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1123 13:43:13.390742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:14.390854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:15.390905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:16.391427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:17.392181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:18.392265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:19.392365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:20.393185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:21.394020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:22.394392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:23.394503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:24.394715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:25.394805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:26.395181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:27.395931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:28.396047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:29.396154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:30.396236      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:31.396343      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:32.396461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:33.397295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:34.397602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:35.397782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:36.397898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:37.398990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:38.399095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:39.399207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:40.400174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:41.401143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:42.401408      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:43.402150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:44.403163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:45.403251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:46.404186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:47.404902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:48.405045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:49.405082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:50.405257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:51.405903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:52.406089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:53.406181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:54.406424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:55.406521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:56.406769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:57.406984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:58.407093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:43:59.407204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:00.407383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:01.407516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:02.407691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:03.408530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:04.408678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:05.408738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:06.409313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:07.409425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:08.409640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:09.409738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:10.409920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:11.410089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:12.410191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:12.944035 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1123 13:44:12.950387 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 11/23/24 13:44:12.95
  I1123 13:44:13.174895 20 taints.go:463] Pod1 is running on ip-172-31-20-25. Tainting Node
  E1123 13:44:13.411154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:14.411979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:15.400262 20 taints.go:471] Pod2 is running on ip-172-31-20-25. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/23/24 13:44:15.4
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/23/24 13:44:15.41
  E1123 13:44:15.412659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/23/24 13:44:15.414
  E1123 13:44:16.413184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:17.414152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:18.414405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:19.414409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:20.415156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:21.415267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:21.452557 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1123 13:44:22.415415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:23.415534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:24.415811      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:25.415920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:26.416026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:27.416109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:28.416352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:29.416518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:30.416613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:31.416732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:32.416874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:33.417087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:34.418174      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:35.418274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:36.418837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:37.418931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:38.419182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:39.419424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:40.419674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:41.420459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:41.482230 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/23/24 13:44:41.493
  I1123 13:44:41.497598 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7168" for this suite. @ 11/23/24 13:44:41.502
• [88.595 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 11/23/24 13:44:41.511
  I1123 13:44:41.511114 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename kubectl-logs @ 11/23/24 13:44:41.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:44:41.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:44:41.539
  STEP: creating a pod @ 11/23/24 13:44:41.544
  I1123 13:44:41.544222 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1123 13:44:41.601570 20 builder.go:146] stderr: ""
  I1123 13:44:41.601596 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/23/24 13:44:41.601
  I1123 13:44:41.601715 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1123 13:44:42.421051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:43.421128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:43.612483 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/23/24 13:44:43.612
  I1123 13:44:43.612576 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 logs logs-generator logs-generator'
  I1123 13:44:43.670882 20 builder.go:146] stderr: ""
  I1123 13:44:43.670924 20 builder.go:147] stdout: "I1123 13:44:42.157945       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/67t 541\nI1123 13:44:42.358040       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/fht 223\nI1123 13:44:42.558405       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/mpjp 349\nI1123 13:44:42.758696       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/s9t 434\nI1123 13:44:42.959000       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/vkn 563\nI1123 13:44:43.158313       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/mcz 262\nI1123 13:44:43.358618       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/znp 448\nI1123 13:44:43.558918       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/lbn 520\n"
  STEP: limiting log lines @ 11/23/24 13:44:43.67
  I1123 13:44:43.671038 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 logs logs-generator logs-generator --tail=1'
  I1123 13:44:43.724075 20 builder.go:146] stderr: ""
  I1123 13:44:43.724102 20 builder.go:147] stdout: "I1123 13:44:43.558918       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/lbn 520\n"
  I1123 13:44:43.724112 20 logs.go:180] got output "I1123 13:44:43.558918       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/lbn 520\n"
  STEP: limiting log bytes @ 11/23/24 13:44:43.724
  I1123 13:44:43.724207 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 logs logs-generator logs-generator --limit-bytes=1'
  I1123 13:44:43.786760 20 builder.go:146] stderr: ""
  I1123 13:44:43.786786 20 builder.go:147] stdout: "I"
  I1123 13:44:43.786793 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 11/23/24 13:44:43.786
  I1123 13:44:43.786873 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 logs logs-generator logs-generator --tail=1 --timestamps'
  I1123 13:44:43.838769 20 builder.go:146] stderr: ""
  I1123 13:44:43.838795 20 builder.go:147] stdout: "2024-11-23T13:44:43.758141433Z I1123 13:44:43.758041       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/mxf 539\n"
  I1123 13:44:43.838808 20 logs.go:192] got output "2024-11-23T13:44:43.758141433Z I1123 13:44:43.758041       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/mxf 539\n"
  STEP: restricting to a time range @ 11/23/24 13:44:43.838
  E1123 13:44:44.422176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:45.422289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:46.339342 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 logs logs-generator logs-generator --since=1s'
  I1123 13:44:46.397218 20 builder.go:146] stderr: ""
  I1123 13:44:46.397251 20 builder.go:147] stdout: "I1123 13:44:45.558482       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/fcv 316\nI1123 13:44:45.758776       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/gsn 456\nI1123 13:44:45.958014       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/z9wm 262\nI1123 13:44:46.158327       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/r2f 385\nI1123 13:44:46.358609       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/8qp 568\n"
  I1123 13:44:46.397291 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 logs logs-generator logs-generator --since=24h'
  E1123 13:44:46.422578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:46.449048 20 builder.go:146] stderr: ""
  I1123 13:44:46.449107 20 builder.go:147] stdout: "I1123 13:44:42.157945       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/67t 541\nI1123 13:44:42.358040       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/fht 223\nI1123 13:44:42.558405       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/mpjp 349\nI1123 13:44:42.758696       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/s9t 434\nI1123 13:44:42.959000       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/vkn 563\nI1123 13:44:43.158313       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/mcz 262\nI1123 13:44:43.358618       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/znp 448\nI1123 13:44:43.558918       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/lbn 520\nI1123 13:44:43.758041       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/mxf 539\nI1123 13:44:43.958330       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/xp7s 452\nI1123 13:44:44.158635       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/n75t 349\nI1123 13:44:44.358942       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/dt2 299\nI1123 13:44:44.558237       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/4gw 508\nI1123 13:44:44.758408       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/wmbh 204\nI1123 13:44:44.958713       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/p8hq 229\nI1123 13:44:45.158998       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/w59s 228\nI1123 13:44:45.358311       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/qpc 521\nI1123 13:44:45.558482       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/fcv 316\nI1123 13:44:45.758776       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/gsn 456\nI1123 13:44:45.958014       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/z9wm 262\nI1123 13:44:46.158327       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/r2f 385\nI1123 13:44:46.358609       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/8qp 568\n"
  I1123 13:44:46.449189 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=kubectl-logs-6052 delete pod logs-generator'
  E1123 13:44:47.423155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:44:47.498914 20 builder.go:146] stderr: ""
  I1123 13:44:47.498946 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1123 13:44:47.499132 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6052" for this suite. @ 11/23/24 13:44:47.503
• [6.000 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/23/24 13:44:47.51
  I1123 13:44:47.511008 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/23/24 13:44:47.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:44:47.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:44:47.531
  STEP: creating @ 11/23/24 13:44:47.533
  STEP: getting @ 11/23/24 13:44:47.554
  STEP: listing in namespace @ 11/23/24 13:44:47.56
  STEP: patching @ 11/23/24 13:44:47.565
  STEP: deleting @ 11/23/24 13:44:47.575
  I1123 13:44:47.600492 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3344" for this suite. @ 11/23/24 13:44:47.605
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 11/23/24 13:44:47.614
  I1123 13:44:47.614105 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 13:44:47.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:44:47.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:44:47.633
  E1123 13:44:48.424164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:49.424279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:50.425171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:51.425394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:52.427120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:53.427317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:54.427429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:55.427575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:56.428223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:57.428336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:58.428459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:44:59.428576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:00.429574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:01.429698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:02.429880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:03.430084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:04.430139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:05.430283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:06.430598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:07.430854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:08.430943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:09.431120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:45:09.723882 20 container_probe.go:92] Container started at 2024-11-23 13:44:48 +0000 UTC, pod became ready at 2024-11-23 13:45:07 +0000 UTC
  I1123 13:45:09.724017 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7178" for this suite. @ 11/23/24 13:45:09.728
• [22.122 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 11/23/24 13:45:09.736
  I1123 13:45:09.736602 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 13:45:09.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:09.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:09.757
  I1123 13:45:09.759752 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:45:10.431739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:11.431836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:12.431894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:45:12.851754 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9580" for this suite. @ 11/23/24 13:45:12.856
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 11/23/24 13:45:12.865
  I1123 13:45:12.865261 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:45:12.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:12.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:12.885
  STEP: Creating configMap with name projected-configmap-test-volume-map-7e060783-6fe6-41a8-820b-ce8cbdbc9253 @ 11/23/24 13:45:12.888
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:45:12.893
  E1123 13:45:13.432188      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:14.433155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:45:14.915
  I1123 13:45:14.920065 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-projected-configmaps-f200560d-2d48-4609-bb02-e730b1bda2ee container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:45:14.942
  I1123 13:45:14.962029 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1949" for this suite. @ 11/23/24 13:45:14.966
• [2.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/23/24 13:45:14.973
  I1123 13:45:14.973825 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 13:45:14.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:14.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:14.992
  I1123 13:45:14.995244 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I1123 13:45:15.001403 20 deployment.go:1200] Waiting for observed generation 1
  E1123 13:45:15.433866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:16.434023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:45:17.015292 20 deployment.go:1205] Waiting for all required pods to come up
  I1123 13:45:17.021343 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/23/24 13:45:17.021
  I1123 13:45:17.021417 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1123 13:45:17.030733 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1123 13:45:17.043318 20 deployment.go:313] Updating deployment webserver-deployment
  I1123 13:45:17.043342 20 deployment.go:1224] Waiting for observed generation 2
  E1123 13:45:17.434441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:18.434565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:45:19.054873 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1123 13:45:19.059368 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1123 13:45:19.062794 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1123 13:45:19.075782 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1123 13:45:19.075809 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1123 13:45:19.080364 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1123 13:45:19.087624 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1123 13:45:19.087643 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1123 13:45:19.099228 20 deployment.go:313] Updating deployment webserver-deployment
  I1123 13:45:19.099253 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1123 13:45:19.117304 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1123 13:45:19.132984 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  E1123 13:45:19.434936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:20.435688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:45:21.142869 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81005b9f-4a8a-4213-9c39-6e53391aa625",
      ResourceVersion: (string) (len=5) "42067",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966314,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 13:45:21.147531 20 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
      ResourceVersion: (string) (len=5) "41850",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "81005b9f-4a8a-4213-9c39-6e53391aa625",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 31 30 30 35 62  39 66 2d 34 61 38 61 2d  |\"81005b9f-4a8a-|
              00000120  34 32 31 33 2d 39 63 33  39 2d 36 65 35 33 33 39  |4213-9c39-6e5339|
              00000130  31 61 61 36 32 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1aa625\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 13:45:21.148172 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1123 13:45:21.148378 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
      ResourceVersion: (string) (len=5) "42066",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "81005b9f-4a8a-4213-9c39-6e53391aa625",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 31 30 30 35 62  39 66 2d 34 61 38 61 2d  |\"81005b9f-4a8a-|
              00000120  34 32 31 33 2d 39 63 33  39 2d 36 65 35 33 33 39  |4213-9c39-6e5339|
              00000130  31 61 61 36 32 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1aa625\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 13:45:21.156800 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-57csx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-57csx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6652375-d64d-40ec-922f-eca9981b216e",
      ResourceVersion: (string) (len=5) "41639",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 38 38 5c 22 7d 22  |2.168.21.188\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5r648",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5r648",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b059f576a42c8abd028dff1c7cc599454827f4eda70959ffca02e24106a11e50",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5r648",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.163192 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6mdxd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6mdxd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47133e3a-63c4-44bf-896e-1782407d4741",
      ResourceVersion: (string) (len=5) "42012",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 33 30 5c 22 7d 22  |2.168.21.130\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bwmt6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bwmt6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fcd305d2f9f013188aece582f1d304ea11e1da514b8c17347eb8903489dfa0da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bwmt6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.166461 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6w9kr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6w9kr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6cc2141-4c5d-403a-9427-e8f5f5400fd9",
      ResourceVersion: (string) (len=5) "42037",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 38 32 5c 22 7d 22  |2.168.120.82\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nmtk7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nmtk7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8c19683f8621e821c6529ea49a37ed1fc99bc384c80136ef907d3f19194bc8db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nmtk7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.177304 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-78xc9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-78xc9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1f3f687-a90e-4d89-b0f2-64a6f14e4ccd",
      ResourceVersion: (string) (len=5) "42043",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 38 34 5c 22 7d 22  |2.168.120.84\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vfwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vfwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://451cf987c11272d33faf57d2ef88ba2318748f186b5817d8d3de19b720450909",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7vfwh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.179324 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-b8fkm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-b8fkm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a42a840-7011-4b9a-8390-c84c3396ecd1",
      ResourceVersion: (string) (len=5) "42033",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 38 33 5c 22 7d 22  |2.168.120.83\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6s4qz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6s4qz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b5c38a984ae390163ee577e4fd66b40dbb12969a11c790e14edcc29a2b5de15f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6s4qz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.182689 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bdbp4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bdbp4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f790b7ca-a4e9-4383-9630-7c21e9bd804a",
      ResourceVersion: (string) (len=5) "42065",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 36 5c 22 7d 22 3a  |2.168.125.6\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cfcmv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cfcmv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=13) "192.168.125.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.125.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9abc90dcf81913155a08a8add555becc80cab1046009c334fe1f567442b94084",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cfcmv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.184880 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-csljq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-csljq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ed66743-7aff-4fc0-90d8-9bbde7a9108a",
      ResourceVersion: (string) (len=5) "41630",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 37 38 5c 22 7d 22  |2.168.120.78\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6b7tm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6b7tm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0c237b2bb035f59471138532c2177e75db985213fd2887d3be7491583d58448f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6b7tm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.187688 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fxgxm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fxgxm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f83e732a-4ad8-4ac0-a8a9-83cbda61c8e4",
      ResourceVersion: (string) (len=5) "42048",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 37 36 5c 22 7d 22  |2.168.120.76\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d68v6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d68v6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://883ead3f636ea552e9bc9475c8148c06891a264584ff4293ce3ab0b1eb1514e0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d68v6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.191524 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fzt4n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fzt4n",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37839de1-5cbd-4d6d-a5a5-1cc9959eb01c",
      ResourceVersion: (string) (len=5) "42026",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 33 34 5c 22 7d 22  |2.168.21.134\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwzx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwzx4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://803b788a52e0392e8f37714e985d8bf94da1d79e8be9f7326f3bee7d33a6cfb6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zwzx4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.193443 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hf2sd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hf2sd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d30c7795-4b13-4e56-a6d3-6be2ed7d8ecb",
      ResourceVersion: (string) (len=5) "41610",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 35 32 5c 22 7d 22  |2.168.125.52\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tk6tf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tk6tf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2839dcb9f1d20310b3166b44b38ccab3dc02f4862ff5a0303edab04dbda7f1a1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tk6tf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.195026 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jzk8b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jzk8b",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc7a0e8d-132c-48a6-89a1-a3322d5099e0",
      ResourceVersion: (string) (len=5) "41646",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 38 5c 22 7d 22 3a  |2.168.125.8\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sm9xm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sm9xm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=13) "192.168.125.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.125.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966316,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2a7e2d16cbef35d7b92d52759623d6ef2daba70f806bede870b4e107817e9610",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sm9xm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.198171 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-k5hc5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-k5hc5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc089769-d321-4319-b2f3-1e7db0ce2fab",
      ResourceVersion: (string) (len=5) "41624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 38 39 5c 22 7d 22  |2.168.21.189\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6rz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6rz5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6c8ac4acf529e0779fa35883cd7272b696f9144f2dee790ca5c562aa81a43b94",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b6rz5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.199759 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mwtjr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mwtjr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12c1de75-0f31-471f-847a-5b0133efe496",
      ResourceVersion: (string) (len=5) "42051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 38 35 5c 22 7d 22  |2.168.120.85\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nkk2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nkk2g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://54063417a32dadcf3adc91b6efb2a87dd31cdaeaebccb26c1e65959c3b3f86d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nkk2g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.201391 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-p9np4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-p9np4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab5a2b92-bc44-424c-8d2d-63e7f1afddc1",
      ResourceVersion: (string) (len=5) "42035",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 33 31 5c 22 7d 22  |2.168.21.131\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fclnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fclnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4a8c49a4843a55231996f2dcfc09dbc970268f2f7bc403ef1679c1d0eea9709d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fclnd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.203068 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-pmbcn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-pmbcn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cb0dcc5-c7ea-4540-ad1b-f105588d7cbe",
      ResourceVersion: (string) (len=5) "41641",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  30 2e 37 35 5c 22 7d 22  |2.168.120.75\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88sg8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88sg8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://efb969af4a22a59dc6ae236473ca846eed7576522605c8ae66cb58b684628eb6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-88sg8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.204793 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qz2t4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qz2t4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c17ad84c-b492-4e15-9abf-42c74514f2e9",
      ResourceVersion: (string) (len=5) "42018",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 36 32 5c 22 7d 22  |2.168.21.162\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9fmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9fmc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://52ab3b61676ec4a3277cec0e734376dd32c3f3515106dbf1daf679d5e4dd60f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r9fmc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.206513 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-s8tx5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-s8tx5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "830dddab-00aa-468e-91bc-c6649457c307",
      ResourceVersion: (string) (len=5) "42056",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 35 38 5c 22 7d 22  |2.168.125.58\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkz25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkz25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://527e219a006be80af68902e467c9c5b5d7138bd8d90603046493a9000a8ddb1f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wkz25",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.207924 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-txkgb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-txkgb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f9f9d7b-6741-493c-b5a9-c495084652b9",
      ResourceVersion: (string) (len=5) "41649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 35 36 5c 22 7d 22  |2.168.125.56\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qlrg2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qlrg2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7c537303411e22d7d16a6b436df607ba5ec5da5fcb3fb25c4448fd0c0fd8102a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qlrg2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.209518 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wrzt2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wrzt2",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad2d89ee-dac0-4dbb-8dd4-b9cad4c0cdb4",
      ResourceVersion: (string) (len=5) "41633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  2e 31 38 37 5c 22 7d 22  |2.168.21.187\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nw9fk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nw9fk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966315,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0e7045ac89e5c21181f8976c6ad1dc1c7531c6aaa8adf970c1fc668f70d225bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nw9fk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.210910 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zh4mr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zh4mr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21bd4e2f-f076-49d5-90de-590fa9ab0af6",
      ResourceVersion: (string) (len=5) "42062",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "dea04b15-03bf-469f-8414-302b24bb4876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 34 62 31 35 2d 30  |d\":\"dea04b15-0|
              00000090  33 62 66 2d 34 36 39 66  2d 38 34 31 34 2d 33 30  |3bf-469f-8414-30|
              000000a0  32 62 32 34 62 62 34 38  37 36 5c 22 7d 22 3a 7b  |2b24bb4876\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  35 2e 36 31 5c 22 7d 22  |2.168.125.61\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7plrj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7plrj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63867966320,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b7113d172ca39a4431f744c1a37e2b3b74edc209ba53d8a7435a9957e11fead",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7plrj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.212266 20 deployment.go:67] Pod "webserver-deployment-786f49d774-254bz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-254bz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0949f9b-5d50-4f06-ae44-fe3e738df669",
      ResourceVersion: (string) (len=5) "41764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 30 2e 38  31 5c 22 7d 22 3a 7b 22  |68.120.81\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kzs6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kzs6d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kzs6d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.213623 20 deployment.go:67] Pod "webserver-deployment-786f49d774-2bgdk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2bgdk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "039eba05-42a7-4e9c-a751-5345f1f1c9c7",
      ResourceVersion: (string) (len=5) "41752",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 2e 31 37  35 5c 22 7d 22 3a 7b 22  |68.21.175\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zckz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zckz2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zckz2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.214985 20 deployment.go:67] Pod "webserver-deployment-786f49d774-c2hjj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-c2hjj",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0a098e4-632b-4d17-96c9-b5bb61a4bc93",
      ResourceVersion: (string) (len=5) "42060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 35 2e 35  30 5c 22 7d 22 3a 7b 22  |68.125.50\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tvb47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tvb47",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tvb47",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.216291 20 deployment.go:67] Pod "webserver-deployment-786f49d774-d8rrn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-d8rrn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46ef907a-08c4-44f6-a47e-eb0a820ba094",
      ResourceVersion: (string) (len=5) "42031",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 2e 31 34  34 5c 22 7d 22 3a 7b 22  |68.21.144\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xg4mh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xg4mh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xg4mh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.218107 20 deployment.go:67] Pod "webserver-deployment-786f49d774-ddnqg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ddnqg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ef3f862-8724-416f-9529-2ce978c26aec",
      ResourceVersion: (string) (len=5) "41916",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 35 2e 35  33 5c 22 7d 22 3a 7b 22  |68.125.53\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxgzq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxgzq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cxgzq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.220093 20 deployment.go:67] Pod "webserver-deployment-786f49d774-hjzc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hjzc9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36d9998b-e53a-4a17-b021-022910acf22d",
      ResourceVersion: (string) (len=5) "41756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 2e 31 39  30 5c 22 7d 22 3a 7b 22  |68.21.190\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dlnbb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dlnbb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dlnbb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.222933 20 deployment.go:67] Pod "webserver-deployment-786f49d774-lb26b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lb26b",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d5cbc67-151c-4aad-a427-855c6eca37d7",
      ResourceVersion: (string) (len=5) "42068",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 35 2e 36  30 5c 22 7d 22 3a 7b 22  |68.125.60\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4t56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4t56",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k4t56",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.224367 20 deployment.go:67] Pod "webserver-deployment-786f49d774-nx45j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nx45j",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1e29392-4468-4f35-b79f-b3412995c655",
      ResourceVersion: (string) (len=5) "41740",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 35 2e 32  38 5c 22 7d 22 3a 7b 22  |68.125.28\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2s6qd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2s6qd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-41-64",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.41.64",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.41.64"
        }
      },
      PodIP: (string) (len=14) "192.168.125.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.125.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2s6qd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.225887 20 deployment.go:67] Pod "webserver-deployment-786f49d774-qjtjx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-qjtjx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50f5785a-74b9-4b85-8032-1ed2f0f5b1cc",
      ResourceVersion: (string) (len=5) "42024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 30 2e 38  36 5c 22 7d 22 3a 7b 22  |68.120.86\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7nh5l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7nh5l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7nh5l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.227781 20 deployment.go:67] Pod "webserver-deployment-786f49d774-w47lx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-w47lx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4aa87eb1-68cd-4150-8a1d-37f906517523",
      ResourceVersion: (string) (len=5) "41864",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sx5nx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sx5nx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sx5nx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.229774 20 deployment.go:67] Pod "webserver-deployment-786f49d774-w82cr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-w82cr",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bd44091-8625-4136-8b2a-29818e759491",
      ResourceVersion: (string) (len=5) "41849",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxcqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxcqm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nxcqm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.231199 20 deployment.go:67] Pod "webserver-deployment-786f49d774-w8nbp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-w8nbp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3891749-750c-4d80-98bc-4ed4438307f9",
      ResourceVersion: (string) (len=5) "42041",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 2e 31 36  39 5c 22 7d 22 3a 7b 22  |68.21.169\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rzkqg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rzkqg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-83-143",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.83.143",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.83.143"
        }
      },
      PodIP: (string) (len=14) "192.168.21.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.21.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rzkqg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.233630 20 deployment.go:67] Pod "webserver-deployment-786f49d774-zvqtx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zvqtx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58874176-346a-416a-bd60-cdd775921cab",
      ResourceVersion: (string) (len=5) "41759",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "b0589250-cb23-41e4-9471-b8b3ebc326bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  35 38 39 32 35 30 2d 63  |d\":\"b0589250-c|
              00000090  62 32 33 2d 34 31 65 34  2d 39 34 37 31 2d 62 38  |b23-41e4-9471-b8|
              000000a0  62 33 65 62 63 33 32 36  62 62 5c 22 7d 22 3a 7b  |b3ebc326bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 30 2e 37  39 5c 22 7d 22 3a 7b 22  |68.120.79\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xjdn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xjdn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966317,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) (len=14) "192.168.120.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.120.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966317,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xjdn2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:45:21.235405 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6436" for this suite. @ 11/23/24 13:45:21.24
• [6.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 11/23/24 13:45:21.248
  I1123 13:45:21.248435 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename field-validation @ 11/23/24 13:45:21.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:21.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:21.267
  I1123 13:45:21.269611 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:45:21.436150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:22.436285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:23.436503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1123 13:45:23.878866      20 warnings.go:70] unknown field "alpha"
  W1123 13:45:23.878884      20 warnings.go:70] unknown field "beta"
  W1123 13:45:23.878888      20 warnings.go:70] unknown field "delta"
  W1123 13:45:23.878891      20 warnings.go:70] unknown field "epsilon"
  W1123 13:45:23.878894      20 warnings.go:70] unknown field "gamma"
  I1123 13:45:24.432763 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1123 13:45:24.436854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-8331" for this suite. @ 11/23/24 13:45:24.438
• [3.198 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 11/23/24 13:45:24.446
  I1123 13:45:24.446741 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 13:45:24.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:24.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:24.466
  STEP: Creating a job @ 11/23/24 13:45:24.468
  STEP: Ensuring active pods == parallelism @ 11/23/24 13:45:24.473
  E1123 13:45:25.437792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:26.437868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 11/23/24 13:45:26.482
  STEP: deleting Job.batch foo in namespace job-9373, will wait for the garbage collector to delete the pods @ 11/23/24 13:45:26.482
  I1123 13:45:26.550122 20 resources.go:139] Deleting Job.batch foo took: 11.825846ms
  I1123 13:45:27.153898 20 resources.go:163] Terminating Job.batch foo pods took: 603.767614ms
  E1123 13:45:27.438852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:28.439171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 11/23/24 13:45:28.854
  I1123 13:45:28.860044 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9373" for this suite. @ 11/23/24 13:45:28.864
• [4.427 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/23/24 13:45:28.873
  I1123 13:45:28.873763 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 13:45:28.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:28.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:28.896
  STEP: creating pod @ 11/23/24 13:45:28.898
  E1123 13:45:29.439306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:30.439671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:45:30.930132 20 pods.go:83] Pod pod-hostip-b1c1c271-7511-4e35-8234-c90d72832270 has hostIP: 172.31.20.25
  I1123 13:45:30.930243 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7738" for this suite. @ 11/23/24 13:45:30.934
• [2.068 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 11/23/24 13:45:30.941
  I1123 13:45:30.941561 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename taint-single-pod @ 11/23/24 13:45:30.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:45:30.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:45:30.962
  I1123 13:45:30.964784 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1123 13:45:31.439722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:32.439834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:33.440721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:34.440868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:35.441614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:36.442181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:37.442840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:38.442923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:39.443108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:40.443308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:41.443429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:42.443551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:43.443783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:44.444012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:45.444696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:46.444796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:47.445769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:48.445889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:49.446085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:50.446300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:51.446399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:52.447242      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:53.448179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:54.448245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:55.448365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:56.448455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:57.448625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:58.448698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:45:59.448838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:00.449062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:01.449086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:02.449211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:03.449359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:04.450422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:05.450844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:06.451498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:07.452025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:08.452118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:09.452218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:10.453291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:11.453369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:12.453482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:13.453636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:14.453713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:15.454204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:16.454332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:17.455181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:18.455356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:19.455509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:20.455637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:21.456162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:22.457167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:23.457614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:24.457711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:25.457861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:26.458011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:27.458952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:28.459162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:29.459853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:30.459991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:46:30.965769 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1123 13:46:30.970664 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 11/23/24 13:46:30.97
  I1123 13:46:31.188873 20 taints.go:294] Pod is running on ip-172-31-20-25. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/23/24 13:46:31.188
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/23/24 13:46:31.2
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/23/24 13:46:31.204
  I1123 13:46:31.204445 20 taints.go:313] Pod wasn't evicted. Proceeding
  I1123 13:46:31.204457 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/23/24 13:46:31.216
  STEP: Waiting some time to make sure that toleration time passed. @ 11/23/24 13:46:31.233
  E1123 13:46:31.460791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:32.461522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:33.462026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:34.462120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:35.462222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:36.462286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:37.463162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:38.464177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:39.465156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:40.465434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:41.465639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:42.465762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:43.466007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:44.466221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:45.466324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:46.466511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:47.466793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:48.466937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:49.467154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:50.467339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:51.468145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:52.468450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:53.468558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:54.468816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:55.469025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:56.469210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:57.469505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:58.469644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:46:59.469755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:00.469982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:01.470082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:02.471147      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:03.471693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:04.471787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:05.472162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:06.473155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:07.474149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:08.474245      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:09.475201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:10.475479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:11.475558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:12.475743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:13.475856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:14.476071      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:15.476379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:16.476571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:17.476682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:18.476809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:19.477044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:20.477232      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:21.478149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:22.478265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:23.479182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:24.479379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:25.480175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:26.480275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:27.481258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:28.482176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:29.482260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:30.483167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:31.484099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:32.484464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:33.485203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:34.485296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:35.485488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:36.485680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:37.485885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:38.486084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:39.486285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:40.486402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:41.486516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:42.486636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:43.486874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:44.487157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:45.487331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:47:46.233995 20 taints.go:329] Pod wasn't evicted. Test successful
  I1123 13:47:46.234162 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1793" for this suite. @ 11/23/24 13:47:46.239
• [135.307 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 11/23/24 13:47:46.248
  I1123 13:47:46.248467 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename webhook @ 11/23/24 13:47:46.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:47:46.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:47:46.268
  STEP: Setting up server cert @ 11/23/24 13:47:46.293
  E1123 13:47:46.487826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/23/24 13:47:46.509
  STEP: Deploying the webhook pod @ 11/23/24 13:47:46.52
  STEP: Wait for the deployment to be ready @ 11/23/24 13:47:46.533
  I1123 13:47:46.544900 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1123 13:47:47.487909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:48.488127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/23/24 13:47:48.56
  STEP: Verifying the service has paired with the endpoint @ 11/23/24 13:47:48.571
  E1123 13:47:49.488249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:47:49.572484 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1123 13:47:49.583592 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/23/24 13:47:50.094
  STEP: Creating a custom resource that should be denied by the webhook @ 11/23/24 13:47:50.108
  E1123 13:47:50.488331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:51.488442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/23/24 13:47:52.125
  STEP: Updating the custom resource with disallowed data should be denied @ 11/23/24 13:47:52.135
  STEP: Deleting the custom resource should be denied @ 11/23/24 13:47:52.149
  STEP: Remove the offending key and value from the custom resource data @ 11/23/24 13:47:52.159
  STEP: Deleting the updated custom resource should be successful @ 11/23/24 13:47:52.171
  E1123 13:47:52.488954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:47:52.759388 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8814" for this suite. @ 11/23/24 13:47:52.765
  STEP: Destroying namespace "webhook-markers-6194" for this suite. @ 11/23/24 13:47:52.775
• [6.536 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 11/23/24 13:47:52.784
  I1123 13:47:52.784859 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:47:52.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:47:52.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:47:52.803
  I1123 13:47:52.805978 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:47:53.489079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/23/24 13:47:54.009
  I1123 13:47:54.009063 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-3865 --namespace=crd-publish-openapi-3865 create -f -'
  I1123 13:47:54.076627 20 builder.go:146] stderr: ""
  I1123 13:47:54.076654 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9792-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1123 13:47:54.076691 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-3865 --namespace=crd-publish-openapi-3865 delete e2e-test-crd-publish-openapi-9792-crds test-cr'
  I1123 13:47:54.136523 20 builder.go:146] stderr: ""
  I1123 13:47:54.136548 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9792-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1123 13:47:54.136578 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-3865 --namespace=crd-publish-openapi-3865 apply -f -'
  I1123 13:47:54.196310 20 builder.go:146] stderr: ""
  I1123 13:47:54.196334 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9792-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1123 13:47:54.196377 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-3865 --namespace=crd-publish-openapi-3865 delete e2e-test-crd-publish-openapi-9792-crds test-cr'
  I1123 13:47:54.248517 20 builder.go:146] stderr: ""
  I1123 13:47:54.248543 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9792-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/23/24 13:47:54.248
  I1123 13:47:54.248621 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-3865 explain e2e-test-crd-publish-openapi-9792-crds'
  I1123 13:47:54.293491 20 builder.go:146] stderr: ""
  I1123 13:47:54.293525 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9792-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1123 13:47:54.489817      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:55.490337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:47:55.567253 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3865" for this suite. @ 11/23/24 13:47:55.574
• [2.799 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 11/23/24 13:47:55.584
  I1123 13:47:55.584160 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename gc @ 11/23/24 13:47:55.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:47:55.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:47:55.603
  STEP: create the rc1 @ 11/23/24 13:47:55.61
  STEP: create the rc2 @ 11/23/24 13:47:55.617
  E1123 13:47:56.492289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:57.493144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:58.493405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:47:59.493573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:00.504108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:01.503180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/23/24 13:48:01.627
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/23/24 13:48:02.048
  STEP: wait for the rc to be deleted @ 11/23/24 13:48:02.056
  E1123 13:48:02.504038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:03.504152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:04.504474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:05.505210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:06.505416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:07.067704 20 garbage_collector.go:762] 71 pods remaining
  I1123 13:48:07.067733 20 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I1123 13:48:07.067739 20 garbage_collector.go:770] 
  E1123 13:48:07.505521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:08.506190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:09.506339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:10.506431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:11.506553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/23/24 13:48:12.07
  W1123 13:48:12.077651      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1123 13:48:12.077763 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1123 13:48:12.078556 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27mqm" in namespace "gc-7715"
  I1123 13:48:12.092225 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28jr5" in namespace "gc-7715"
  I1123 13:48:12.105344 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2cm2j" in namespace "gc-7715"
  I1123 13:48:12.130948 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2n9hv" in namespace "gc-7715"
  I1123 13:48:12.145019 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48dkp" in namespace "gc-7715"
  I1123 13:48:12.161907 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gjzm" in namespace "gc-7715"
  I1123 13:48:12.182373 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4l7tc" in namespace "gc-7715"
  I1123 13:48:12.197204 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4z2dp" in namespace "gc-7715"
  I1123 13:48:12.214593 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56w88" in namespace "gc-7715"
  I1123 13:48:12.229173 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58sf2" in namespace "gc-7715"
  I1123 13:48:12.242530 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5dsp8" in namespace "gc-7715"
  I1123 13:48:12.255278 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fplm" in namespace "gc-7715"
  I1123 13:48:12.274720 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5n4lf" in namespace "gc-7715"
  I1123 13:48:12.291046 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nxzv" in namespace "gc-7715"
  I1123 13:48:12.304317 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qrxs" in namespace "gc-7715"
  I1123 13:48:12.330132 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zw27" in namespace "gc-7715"
  I1123 13:48:12.343942 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64gpq" in namespace "gc-7715"
  I1123 13:48:12.365241 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-65lcp" in namespace "gc-7715"
  I1123 13:48:12.383913 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dh9n" in namespace "gc-7715"
  I1123 13:48:12.400763 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vxvl" in namespace "gc-7715"
  I1123 13:48:12.417364 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7799j" in namespace "gc-7715"
  I1123 13:48:12.431203 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jlcj" in namespace "gc-7715"
  I1123 13:48:12.448571 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qlzk" in namespace "gc-7715"
  I1123 13:48:12.462251 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7rgvl" in namespace "gc-7715"
  I1123 13:48:12.473497 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7tdgg" in namespace "gc-7715"
  I1123 13:48:12.488754 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84xvj" in namespace "gc-7715"
  I1123 13:48:12.505576 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-895gz" in namespace "gc-7715"
  E1123 13:48:12.506914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:12.520575 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8p89j" in namespace "gc-7715"
  I1123 13:48:12.534581 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rsxr" in namespace "gc-7715"
  I1123 13:48:12.548187 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vxng" in namespace "gc-7715"
  I1123 13:48:12.562890 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8zlv9" in namespace "gc-7715"
  I1123 13:48:12.575436 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9jqz6" in namespace "gc-7715"
  I1123 13:48:12.594181 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bm87m" in namespace "gc-7715"
  I1123 13:48:12.606739 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bx8m2" in namespace "gc-7715"
  I1123 13:48:12.621637 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crjtn" in namespace "gc-7715"
  I1123 13:48:12.635414 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cxnnj" in namespace "gc-7715"
  I1123 13:48:12.647349 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4gz2" in namespace "gc-7715"
  I1123 13:48:12.660290 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d964s" in namespace "gc-7715"
  I1123 13:48:12.673387 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddbjk" in namespace "gc-7715"
  I1123 13:48:12.692114 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddhtj" in namespace "gc-7715"
  I1123 13:48:12.704753 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgbm6" in namespace "gc-7715"
  I1123 13:48:12.719022 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhwrz" in namespace "gc-7715"
  I1123 13:48:12.732116 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djnkr" in namespace "gc-7715"
  I1123 13:48:12.747192 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgdhj" in namespace "gc-7715"
  I1123 13:48:12.760570 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgdwl" in namespace "gc-7715"
  I1123 13:48:12.775189 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fsp2s" in namespace "gc-7715"
  I1123 13:48:12.788711 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9j89" in namespace "gc-7715"
  I1123 13:48:12.804062 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gq4rs" in namespace "gc-7715"
  I1123 13:48:12.816579 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gz8f5" in namespace "gc-7715"
  I1123 13:48:12.832877 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h8lqr" in namespace "gc-7715"
  I1123 13:48:12.847894 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7715" for this suite. @ 11/23/24 13:48:12.854
• [17.277 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 11/23/24 13:48:12.861
  I1123 13:48:12.861830 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 13:48:12.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:48:12.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:48:12.894
  STEP: Creating pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923 @ 11/23/24 13:48:12.897
  E1123 13:48:13.509536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:14.510121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:15.510875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:16.510938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/23/24 13:48:16.926
  I1123 13:48:16.932371 20 container_probe.go:1749] Initial restart count of pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc is 0
  I1123 13:48:16.936098 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:17.511855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:18.511993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:18.940280 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:19.512913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:20.513123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:20.944793 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:21.513406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:22.514173      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:22.951559 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:23.515153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:24.516040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:24.958621 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:25.516347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:26.517101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:26.963575 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:27.517152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:28.518160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:28.968137 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:29.518780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:30.518992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:30.973933 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:31.519094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:32.519454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:32.981156 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:33.519855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:34.520203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:34.987464 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:35.520919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:36.521095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:36.992505 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:37.522154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:38.523175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:38.997434 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:39.523291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:40.524162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:41.003231 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:41.524848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:42.524998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:43.009240 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:43.525848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:44.526047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:45.014768 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:45.526125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:46.526341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:47.019775 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:47.526381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:48.526574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:49.026529 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:49.526664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:50.527179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:51.032144 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:51.527732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:52.528097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:53.037319 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:53.528919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:54.529158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:55.044059 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:55.529278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:56.529458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:57.049069 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:57.529558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:48:58.529753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:48:59.055626 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:48:59.530186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:00.531149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:01.061261 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:01.531823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:02.531921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:03.066142 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:03.532445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:04.532547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:05.073444 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:05.533036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:06.533090      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:07.078876 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:07.534141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:08.534318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:09.084050 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:09.534439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:10.535254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:11.091060 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:11.535359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:12.535542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:13.097913 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:13.536418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:14.536547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:15.102854 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:15.537490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:16.538203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:17.108657 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:17.538368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:18.538615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:19.114660 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:19.539284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:20.539396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:21.120496 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:21.540076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:22.540198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:23.126091 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:23.540543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:24.540751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:25.131341 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:25.540796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:26.540899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:27.136608 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  E1123 13:49:27.541019      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:28.541117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:29.143101 20 container_probe.go:1759] Get pod test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc in namespace container-probe-7923
  I1123 13:49:29.143136 20 container_probe.go:1763] Restart count of pod container-probe-7923/test-grpc-15fa0f7e-0199-4dc8-93c9-f826daaa9bcc is now 1 (1m12.210744357s elapsed)
  STEP: deleting the pod @ 11/23/24 13:49:29.143
  I1123 13:49:29.161196 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7923" for this suite. @ 11/23/24 13:49:29.165
• [76.312 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 11/23/24 13:49:29.174
  I1123 13:49:29.174138 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/23/24 13:49:29.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:49:29.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:49:29.196
  STEP: fetching the /apis discovery document @ 11/23/24 13:49:29.198
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/23/24 13:49:29.199
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/23/24 13:49:29.199
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/23/24 13:49:29.199
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/23/24 13:49:29.2
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/23/24 13:49:29.2
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/23/24 13:49:29.202
  I1123 13:49:29.202157 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8980" for this suite. @ 11/23/24 13:49:29.206
• [0.040 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/23/24 13:49:29.214
  I1123 13:49:29.214319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-runtime @ 11/23/24 13:49:29.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:49:29.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:49:29.233
  STEP: create the container @ 11/23/24 13:49:29.236
  W1123 13:49:29.245304      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/23/24 13:49:29.245
  E1123 13:49:29.541884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:30.542484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:31.543181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/23/24 13:49:32.27
  STEP: the container should be terminated @ 11/23/24 13:49:32.274
  STEP: the termination message should be set @ 11/23/24 13:49:32.274
  I1123 13:49:32.274833 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/23/24 13:49:32.274
  I1123 13:49:32.291596 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8626" for this suite. @ 11/23/24 13:49:32.297
• [3.092 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 11/23/24 13:49:32.306
  I1123 13:49:32.306245 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:49:32.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:49:32.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:49:32.325
  STEP: Creating configMap with name projected-configmap-test-volume-map-4f7a8fcf-1a16-43e3-a67c-6653e4fde909 @ 11/23/24 13:49:32.327
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:49:32.333
  E1123 13:49:32.543888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:33.544140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:34.544711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:35.544814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:49:36.362
  I1123 13:49:36.366568 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-configmaps-b0b9b6d7-dc1e-4e4e-a9f2-83fef9c5980a container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:49:36.379
  I1123 13:49:36.410470 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9493" for this suite. @ 11/23/24 13:49:36.414
• [4.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 11/23/24 13:49:36.423
  I1123 13:49:36.423146 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:49:36.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:49:36.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:49:36.44
  STEP: creating service in namespace services-1026 @ 11/23/24 13:49:36.443
  STEP: creating service affinity-clusterip-transition in namespace services-1026 @ 11/23/24 13:49:36.443
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1026 @ 11/23/24 13:49:36.455
  I1123 13:49:36.465341      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-1026, replica count: 3
  E1123 13:49:36.545127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:37.546094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:38.546200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:39.516024      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 13:49:39.525539 20 resource.go:361] Creating new exec pod
  E1123 13:49:39.547047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:40.547401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:41.548094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:42.542093 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1026 exec execpod-affinityqvl4l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E1123 13:49:42.548729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:42.635069 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1123 13:49:42.635105 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:49:42.635178 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1026 exec execpod-affinityqvl4l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 80'
  I1123 13:49:42.717467 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.142 80\nConnection to 10.152.183.142 80 port [tcp/http] succeeded!\n"
  I1123 13:49:42.717503 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1123 13:49:42.727476 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1026 exec execpod-affinityqvl4l -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.142:80/ ; done'
  I1123 13:49:42.866160 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n"
  I1123 13:49:42.866194 20 builder.go:147] stdout: "\naffinity-clusterip-transition-l4dfb\naffinity-clusterip-transition-bjn52\naffinity-clusterip-transition-bjn52\naffinity-clusterip-transition-l4dfb\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-l4dfb\naffinity-clusterip-transition-l4dfb\naffinity-clusterip-transition-l4dfb\naffinity-clusterip-transition-bjn52\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-bjn52\naffinity-clusterip-transition-bjn52\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-bjn52\naffinity-clusterip-transition-l4dfb\naffinity-clusterip-transition-bjn52"
  I1123 13:49:42.866206 20 service.go:242] Received response from host: affinity-clusterip-transition-l4dfb
  I1123 13:49:42.866215 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.866222 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.866229 20 service.go:242] Received response from host: affinity-clusterip-transition-l4dfb
  I1123 13:49:42.866236 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:42.866241 20 service.go:242] Received response from host: affinity-clusterip-transition-l4dfb
  I1123 13:49:42.866248 20 service.go:242] Received response from host: affinity-clusterip-transition-l4dfb
  I1123 13:49:42.866258 20 service.go:242] Received response from host: affinity-clusterip-transition-l4dfb
  I1123 13:49:42.866264 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.866271 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:42.866276 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.866282 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.866361 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:42.866372 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.866379 20 service.go:242] Received response from host: affinity-clusterip-transition-l4dfb
  I1123 13:49:42.866386 20 service.go:242] Received response from host: affinity-clusterip-transition-bjn52
  I1123 13:49:42.878044 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-1026 exec execpod-affinityqvl4l -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.142:80/ ; done'
  I1123 13:49:43.021633 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.142:80/\n"
  I1123 13:49:43.021672 20 builder.go:147] stdout: "\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4\naffinity-clusterip-transition-s6vk4"
  I1123 13:49:43.021685 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021694 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021701 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021708 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021716 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021722 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021728 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021734 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021745 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021751 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021773 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021779 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021786 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021795 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021802 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021808 20 service.go:242] Received response from host: affinity-clusterip-transition-s6vk4
  I1123 13:49:43.021909 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1026, will wait for the garbage collector to delete the pods @ 11/23/24 13:49:43.036
  I1123 13:49:43.100010 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.218938ms
  I1123 13:49:43.200152 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.139567ms
  E1123 13:49:43.549059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:44.549326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:45.549977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:46.224520 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1026" for this suite. @ 11/23/24 13:49:46.229
• [9.813 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/23/24 13:49:46.236
  I1123 13:49:46.236611 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 13:49:46.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:49:46.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:49:46.256
  I1123 13:49:46.262738 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: creating the pod @ 11/23/24 13:49:46.263
  STEP: submitting the pod to kubernetes @ 11/23/24 13:49:46.263
  E1123 13:49:46.550788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:47.550947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:48.308821 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3119" for this suite. @ 11/23/24 13:49:48.313
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 11/23/24 13:49:48.321
  I1123 13:49:48.321421 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename statefulset @ 11/23/24 13:49:48.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:49:48.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:49:48.34
  STEP: Creating service test in namespace statefulset-6938 @ 11/23/24 13:49:48.342
  STEP: Looking for a node to schedule stateful set and pod @ 11/23/24 13:49:48.348
  STEP: Creating pod with conflicting port in namespace statefulset-6938 @ 11/23/24 13:49:48.352
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6938 @ 11/23/24 13:49:48.361
  E1123 13:49:48.551243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:49.551357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-6938 @ 11/23/24 13:49:50.369
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6938 @ 11/23/24 13:49:50.375
  I1123 13:49:50.387456 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-6938, name: ss-0, uid: 13e233ec-de7a-41b2-9823-3df81b8eeb3a, status phase: Pending. Waiting for statefulset controller to delete.
  I1123 13:49:50.406478 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-6938, name: ss-0, uid: 13e233ec-de7a-41b2-9823-3df81b8eeb3a, status phase: Failed. Waiting for statefulset controller to delete.
  I1123 13:49:50.415303 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-6938, name: ss-0, uid: 13e233ec-de7a-41b2-9823-3df81b8eeb3a, status phase: Failed. Waiting for statefulset controller to delete.
  I1123 13:49:50.421507 20 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-6938
  STEP: Removing pod with conflicting port in namespace statefulset-6938 @ 11/23/24 13:49:50.421
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6938 and will be in running state @ 11/23/24 13:49:50.443
  E1123 13:49:50.551412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:51.551510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:49:52.457297 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6938
  I1123 13:49:52.460757 20 rest.go:150] Scaling statefulset ss to 0
  E1123 13:49:52.552093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:53.552142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:54.552254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:55.552574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:56.552537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:57.553072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:58.553117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:49:59.553302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:00.554180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:01.555184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:50:02.476852 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1123 13:50:02.481731 20 rest.go:88] Deleting statefulset ss
  I1123 13:50:02.498549 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6938" for this suite. @ 11/23/24 13:50:02.503
• [14.191 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 11/23/24 13:50:02.512
  I1123 13:50:02.512391 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename chunking @ 11/23/24 13:50:02.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:50:02.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:50:02.531
  STEP: creating a large number of resources @ 11/23/24 13:50:02.533
  E1123 13:50:02.555728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:03.556623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:04.556937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:05.557207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:06.557828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:07.557867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:08.558577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:09.559535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:10.560051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:11.560433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:12.561130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:13.561532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:14.562364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:15.562745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:16.563733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:17.564417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:18.565213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:19.566269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 11/23/24 13:50:20.22
  I1123 13:50:20.269255 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1123 13:50:20.317888 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1123 13:50:20.369150 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1123 13:50:20.418249 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1123 13:50:20.468141 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1123 13:50:20.518593 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E1123 13:50:20.567036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:50:20.568566 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1123 13:50:20.618090 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1123 13:50:20.669427 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1123 13:50:20.718490 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1123 13:50:20.768539 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1123 13:50:20.819717 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1123 13:50:20.869295 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1123 13:50:20.917496 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1123 13:50:20.969651 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1123 13:50:21.018611 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1123 13:50:21.069080 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1123 13:50:21.118947 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1123 13:50:21.168287 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1123 13:50:21.218451 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1123 13:50:21.269130 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1123 13:50:21.318264 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1123 13:50:21.369013 20 chunking.go:98] Retrieved 17/17 results with rv 46581 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1123 13:50:21.418418 20 chunking.go:98] Retrieved 9/17 results with rv 46581 and continue 
  I1123 13:50:21.468516 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1123 13:50:21.518240 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E1123 13:50:21.567676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:50:21.568977 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1123 13:50:21.617922 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1123 13:50:21.668018 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1123 13:50:21.718845 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1123 13:50:21.769298 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1123 13:50:21.817675 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1123 13:50:21.870096 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1123 13:50:21.918306 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1123 13:50:21.968417 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1123 13:50:22.019439 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1123 13:50:22.068670 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1123 13:50:22.121053 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1123 13:50:22.169097 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1123 13:50:22.218580 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1123 13:50:22.268433 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1123 13:50:22.319095 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1123 13:50:22.368534 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1123 13:50:22.417867 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1123 13:50:22.469895 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1123 13:50:22.517344 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E1123 13:50:22.567763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:50:22.568069 20 chunking.go:98] Retrieved 17/17 results with rv 46585 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1123 13:50:22.618548 20 chunking.go:98] Retrieved 9/17 results with rv 46585 and continue 
  I1123 13:50:22.668547 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1123 13:50:22.718063 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1123 13:50:22.769366 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1123 13:50:22.817911 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1123 13:50:22.867638 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1123 13:50:22.919681 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1123 13:50:22.971167 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1123 13:50:23.017694 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1123 13:50:23.069774 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1123 13:50:23.118394 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1123 13:50:23.168735 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1123 13:50:23.219711 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1123 13:50:23.269203 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1123 13:50:23.317168 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1123 13:50:23.369005 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1123 13:50:23.418152 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1123 13:50:23.469933 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1123 13:50:23.517512 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1123 13:50:23.567701 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E1123 13:50:23.567838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:50:23.618084 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1123 13:50:23.669621 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1123 13:50:23.718441 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1123 13:50:23.768593 20 chunking.go:98] Retrieved 17/17 results with rv 46586 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY1ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1123 13:50:23.819196 20 chunking.go:98] Retrieved 9/17 results with rv 46586 and continue 
  STEP: retrieving those results all at once @ 11/23/24 13:50:23.819
  I1123 13:50:23.873153 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1697" for this suite. @ 11/23/24 13:50:23.917
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/23/24 13:50:23.972
  I1123 13:50:23.972662 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:50:23.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:50:23.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:50:23.992
  STEP: Creating secret with name projected-secret-test-64861063-c6e6-4a61-8a95-8f01a894893a @ 11/23/24 13:50:23.994
  STEP: Creating a pod to test consume secrets @ 11/23/24 13:50:24
  E1123 13:50:24.568048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:25.568129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:50:26.021
  I1123 13:50:26.026166 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-secrets-e0260e7e-bc24-412b-bc70-ddc4760de5f4 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/23/24 13:50:26.035
  I1123 13:50:26.054368 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8436" for this suite. @ 11/23/24 13:50:26.058
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 11/23/24 13:50:26.067
  I1123 13:50:26.067135 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 13:50:26.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:50:26.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:50:26.087
  STEP: Creating a job @ 11/23/24 13:50:26.089
  STEP: Ensuring job reaches completions @ 11/23/24 13:50:26.095
  E1123 13:50:26.568272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:27.568622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:28.568732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:29.568879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:30.569813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:31.570047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:32.570078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:33.571176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:34.571512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:35.571616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:50:36.106303 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8565" for this suite. @ 11/23/24 13:50:36.11
• [10.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 11/23/24 13:50:36.118
  I1123 13:50:36.118741 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-probe @ 11/23/24 13:50:36.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:50:36.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:50:36.137
  E1123 13:50:36.572184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:37.572997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:38.573883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:39.574871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:40.575723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:41.575767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:42.576679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:43.577676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:44.578737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:45.579166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:46.579279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:47.579806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:48.580558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:49.581560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:50.581837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:51.582385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:52.582614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:53.582586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:54.583148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:55.584154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:56.585072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:57.586053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:58.587088      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:50:59.587547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:00.587673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:01.588540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:02.589599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:03.590129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:04.590834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:05.591565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:06.592171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:07.593162      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:08.593946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:09.594154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:10.594783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:11.595641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:12.596080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:13.596759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:14.597386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:15.597869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:16.598602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:17.598939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:18.599892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:19.600887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:20.601594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:21.601917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:22.602098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:23.602668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:24.603435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:25.603737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:26.604614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:27.604713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:28.605450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:29.606354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:30.606851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:31.606881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:32.607906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:33.608422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:34.608852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:35.609649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:51:36.154428 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7372" for this suite. @ 11/23/24 13:51:36.159
• [60.051 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/23/24 13:51:36.169
  I1123 13:51:36.169341 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename deployment @ 11/23/24 13:51:36.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:51:36.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:51:36.191
  I1123 13:51:36.194316 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1123 13:51:36.200657 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1123 13:51:36.212177 20 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1123 13:51:36.610695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:37.610987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:51:38.222588 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1123 13:51:38.226441 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1123 13:51:38.239853 20 deployment.go:313] Updating deployment test-recreate-deployment
  I1123 13:51:38.239876 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1123 13:51:38.336141 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5336a615-5d09-4156-a5b4-18bd69db0db7",
      ResourceVersion: (string) (len=5) "47390",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966696,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966696,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1123 13:51:38.341572 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bd0afae-0fd9-4d67-bfa0-fedef5bf8cb2",
      ResourceVersion: (string) (len=5) "47388",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5336a615-5d09-4156-a5b4-18bd69db0db7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 33 36 61 36  31 35 2d 35 64 30 39 2d  |\"5336a615-5d09-|
              00000120  34 31 35 36 2d 61 35 62  34 2d 31 38 62 64 36 39  |4156-a5b4-18bd69|
              00000130  64 62 30 64 62 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |db0db7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 13:51:38.342091 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1123 13:51:38.342287 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eecd019c-0eb1-4418-9486-40f02ceea0c4",
      ResourceVersion: (string) (len=5) "47378",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966696,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5336a615-5d09-4156-a5b4-18bd69db0db7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 33 36 61 36  31 35 2d 35 64 30 39 2d  |\"5336a615-5d09-|
              00000120  34 31 35 36 2d 61 35 62  34 2d 31 38 62 64 36 39  |4156-a5b4-18bd69|
              00000130  64 62 30 64 62 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |db0db7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1123 13:51:38.347033 20 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-d8m62" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-d8m62",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-7887",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49a58b33-0d97-4e08-ba0e-2ff338b91a8e",
      ResourceVersion: (string) (len=5) "47389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "5bd0afae-0fd9-4d67-bfa0-fedef5bf8cb2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  64 30 61 66 61 65 2d 30  |d\":\"5bd0afae-0|
              00000090  66 64 39 2d 34 64 36 37  2d 62 66 61 30 2d 66 65  |fd9-4d67-bfa0-fe|
              000000a0  64 65 66 35 62 66 38 63  62 32 5c 22 7d 22 3a 7b  |def5bf8cb2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxwvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxwvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-25",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63867966698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.25",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.20.25"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63867966698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bxwvf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1123 13:51:38.348137 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7887" for this suite. @ 11/23/24 13:51:38.352
• [2.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 11/23/24 13:51:38.361
  I1123 13:51:38.361256 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:51:38.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:51:38.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:51:38.38
  STEP: Creating a ResourceQuota with terminating scope @ 11/23/24 13:51:38.383
  STEP: Ensuring ResourceQuota status is calculated @ 11/23/24 13:51:38.389
  E1123 13:51:38.611449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:39.612182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 11/23/24 13:51:40.394
  STEP: Ensuring ResourceQuota status is calculated @ 11/23/24 13:51:40.403
  E1123 13:51:40.612544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:41.613196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 11/23/24 13:51:42.409
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/23/24 13:51:42.426
  E1123 13:51:42.613277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:43.613394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/23/24 13:51:44.43
  E1123 13:51:44.613906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:45.614113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/23/24 13:51:46.438
  STEP: Ensuring resource quota status released the pod usage @ 11/23/24 13:51:46.457
  E1123 13:51:46.614426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:47.614594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 11/23/24 13:51:48.462
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/23/24 13:51:48.475
  E1123 13:51:48.615412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:49.615650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/23/24 13:51:50.481
  E1123 13:51:50.615656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:51.615781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/23/24 13:51:52.487
  STEP: Ensuring resource quota status released the pod usage @ 11/23/24 13:51:52.5
  E1123 13:51:52.616361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:53.616535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:51:54.507221 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2269" for this suite. @ 11/23/24 13:51:54.512
• [16.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 11/23/24 13:51:54.521
  I1123 13:51:54.521939 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:51:54.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:51:54.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:51:54.541
  STEP: Creating configMap with name projected-configmap-test-volume-600088b1-2c7a-473c-b123-8efdc9561070 @ 11/23/24 13:51:54.543
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:51:54.549
  E1123 13:51:54.616779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:55.617233      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:56.617731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:51:57.618040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:51:58.581
  I1123 13:51:58.586374 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-projected-configmaps-bae6566e-2748-4a23-82ae-dde894e71231 container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:51:58.599
  I1123 13:51:58.617242 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1123 13:51:58.618263      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-6363" for this suite. @ 11/23/24 13:51:58.621
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 11/23/24 13:51:58.63
  I1123 13:51:58.630843 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:51:58.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:51:58.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:51:58.648
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/23/24 13:51:58.651
  E1123 13:51:59.618444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:00.618559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:01.618684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:02.618786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:52:02.68
  I1123 13:52:02.684942 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-2c695963-dae4-494f-9856-075779467891 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:52:02.693
  I1123 13:52:02.713165 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4533" for this suite. @ 11/23/24 13:52:02.717
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 11/23/24 13:52:02.726
  I1123 13:52:02.726520 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:52:02.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:02.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:02.747
  I1123 13:52:02.750289 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:52:03.619284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/23/24 13:52:04.073
  I1123 13:52:04.073901 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-9093 --namespace=crd-publish-openapi-9093 create -f -'
  I1123 13:52:04.143224 20 builder.go:146] stderr: ""
  I1123 13:52:04.143257 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9410-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1123 13:52:04.143294 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-9093 --namespace=crd-publish-openapi-9093 delete e2e-test-crd-publish-openapi-9410-crds test-cr'
  I1123 13:52:04.198066 20 builder.go:146] stderr: ""
  I1123 13:52:04.198098 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9410-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1123 13:52:04.198134 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-9093 --namespace=crd-publish-openapi-9093 apply -f -'
  I1123 13:52:04.257382 20 builder.go:146] stderr: ""
  I1123 13:52:04.257413 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9410-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1123 13:52:04.257451 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-9093 --namespace=crd-publish-openapi-9093 delete e2e-test-crd-publish-openapi-9410-crds test-cr'
  I1123 13:52:04.310367 20 builder.go:146] stderr: ""
  I1123 13:52:04.310399 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9410-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/23/24 13:52:04.31
  I1123 13:52:04.310465 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=crd-publish-openapi-9093 explain e2e-test-crd-publish-openapi-9410-crds'
  I1123 13:52:04.353599 20 builder.go:146] stderr: ""
  I1123 13:52:04.353648 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9410-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1123 13:52:04.620181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:05.596149 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9093" for this suite. @ 11/23/24 13:52:05.603
• [2.887 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 11/23/24 13:52:05.613
  I1123 13:52:05.613863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename job @ 11/23/24 13:52:05.614
  E1123 13:52:05.620792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:05.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:05.64
  STEP: Creating a job @ 11/23/24 13:52:05.642
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/23/24 13:52:05.648
  E1123 13:52:06.620936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:07.621118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/23/24 13:52:07.653
  STEP: updating /status @ 11/23/24 13:52:07.661
  STEP: get /status @ 11/23/24 13:52:07.671
  I1123 13:52:07.675290 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3957" for this suite. @ 11/23/24 13:52:07.679
• [2.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 11/23/24 13:52:07.688
  I1123 13:52:07.688407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:52:07.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:07.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:07.709
  I1123 13:52:07.714878 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2525" for this suite. @ 11/23/24 13:52:07.719
• [0.039 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 11/23/24 13:52:07.727
  I1123 13:52:07.727688 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:52:07.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:07.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:07.752
  STEP: Creating configMap with name configmap-test-volume-5b0932e1-a6d7-4107-98b5-b25c42b27c54 @ 11/23/24 13:52:07.754
  STEP: Creating a pod to test consume configMaps @ 11/23/24 13:52:07.761
  E1123 13:52:08.622049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:09.622120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:10.622426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:11.622562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:52:11.788
  I1123 13:52:11.791429 20 output.go:196] Trying to get logs from node ip-172-31-83-143 pod pod-configmaps-fb548a5f-bd99-4da6-8782-b834bd26274e container agnhost-container: <nil>
  STEP: delete the pod @ 11/23/24 13:52:11.81
  I1123 13:52:11.831794 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8247" for this suite. @ 11/23/24 13:52:11.835
• [4.115 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 11/23/24 13:52:11.842
  I1123 13:52:11.842870 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename namespaces @ 11/23/24 13:52:11.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:11.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:11.867
  STEP: creating a Namespace @ 11/23/24 13:52:11.869
  STEP: patching the Namespace @ 11/23/24 13:52:11.885
  STEP: get the Namespace and ensuring it has the label @ 11/23/24 13:52:11.891
  I1123 13:52:11.896693 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1034" for this suite. @ 11/23/24 13:52:11.901
  STEP: Destroying namespace "nspatchtest-7b5dcaa3-9606-4ff1-b12c-3243eadc81cd-9404" for this suite. @ 11/23/24 13:52:11.907
• [0.074 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 11/23/24 13:52:11.917
  I1123 13:52:11.917023 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename resourcequota @ 11/23/24 13:52:11.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:11.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:11.94
  STEP: Creating a ResourceQuota with best effort scope @ 11/23/24 13:52:11.942
  STEP: Ensuring ResourceQuota status is calculated @ 11/23/24 13:52:11.948
  E1123 13:52:12.623164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:13.624189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 11/23/24 13:52:13.953
  STEP: Ensuring ResourceQuota status is calculated @ 11/23/24 13:52:13.959
  E1123 13:52:14.624290      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:15.624456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 11/23/24 13:52:15.965
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/23/24 13:52:15.98
  E1123 13:52:16.624573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:17.624906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/23/24 13:52:17.985
  E1123 13:52:18.625130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:19.626179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/23/24 13:52:19.99
  STEP: Ensuring resource quota status released the pod usage @ 11/23/24 13:52:20.007
  E1123 13:52:20.626286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:21.626423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 11/23/24 13:52:22.012
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/23/24 13:52:22.027
  E1123 13:52:22.627385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:23.627600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/23/24 13:52:24.032
  E1123 13:52:24.628558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:25.628647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/23/24 13:52:26.037
  STEP: Ensuring resource quota status released the pod usage @ 11/23/24 13:52:26.057
  E1123 13:52:26.628798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:27.628976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:28.062834 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6729" for this suite. @ 11/23/24 13:52:28.067
• [16.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/23/24 13:52:28.075
  I1123 13:52:28.075615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename pods @ 11/23/24 13:52:28.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:28.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:28.099
  STEP: creating the pod @ 11/23/24 13:52:28.102
  STEP: submitting the pod to kubernetes @ 11/23/24 13:52:28.102
  W1123 13:52:28.110270      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1123 13:52:28.629076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:29.629333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 11/23/24 13:52:30.123
  STEP: updating the pod @ 11/23/24 13:52:30.128
  E1123 13:52:30.629496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:30.641540 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-8c95a3da-dc9b-4cf7-8f42-1071ea6224fe"
  E1123 13:52:31.630424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:32.630686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:33.631121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:34.631705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:34.657331 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6212" for this suite. @ 11/23/24 13:52:34.662
• [6.595 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 11/23/24 13:52:34.67
  I1123 13:52:34.670626 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename downward-api @ 11/23/24 13:52:34.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:34.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:34.693
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 13:52:34.695
  E1123 13:52:35.632326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:36.633150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:37.634150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:38.634329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:52:38.721
  I1123 13:52:38.725181 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-d7ef6fd3-02fb-4c53-b72f-65c0a3db0ed2 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 13:52:38.738
  I1123 13:52:38.758365 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2660" for this suite. @ 11/23/24 13:52:38.762
• [4.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 11/23/24 13:52:38.77
  I1123 13:52:38.770840 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/23/24 13:52:38.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:38.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:38.792
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/23/24 13:52:38.794
  I1123 13:52:38.795262 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:52:39.635080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:40.635381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:41.636114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:42.636216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:43.637200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/23/24 13:52:43.731
  I1123 13:52:43.731515 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:52:44.637323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:44.933908 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  E1123 13:52:45.637506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:46.638049      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:47.638782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:48.638881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:49.639468      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:49.903792 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3193" for this suite. @ 11/23/24 13:52:49.911
• [11.150 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 11/23/24 13:52:49.92
  I1123 13:52:49.920530 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename dns @ 11/23/24 13:52:49.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:49.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:49.943
  STEP: Creating a test headless service @ 11/23/24 13:52:49.946
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3480.svc.cluster.local;sleep 1; done
   @ 11/23/24 13:52:49.952
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3480.svc.cluster.local;sleep 1; done
   @ 11/23/24 13:52:49.952
  STEP: creating a pod to probe DNS @ 11/23/24 13:52:49.952
  STEP: submitting the pod to kubernetes @ 11/23/24 13:52:49.952
  E1123 13:52:50.640293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:51.640395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/23/24 13:52:51.978
  STEP: looking for the results for each expected name from probers @ 11/23/24 13:52:51.983
  I1123 13:52:51.989455 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:51.993494 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:51.999260 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:52.004039 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:52.008111 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:52.013674 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:52.018197 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:52.022581 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3480.svc.cluster.local from pod dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd: the server could not find the requested resource (get pods dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd)
  I1123 13:52:52.022605 20 dns_common.go:489] Lookups using dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3480.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3480.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3480.svc.cluster.local jessie_udp@dns-test-service-2.dns-3480.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3480.svc.cluster.local]

  I1123 13:52:52.031863 20 dns_common.go:495] Pod client logs for webserver: 
  I1123 13:52:52.040047 20 dns_common.go:495] Pod client logs for querier: 
  I1123 13:52:52.048537 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1123 13:52:52.640858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:53.641442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:54.642184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:55.643190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:56.643272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:52:57.023918 20 dns_common.go:527] DNS probes using dns-3480/dns-test-8de225eb-7b66-4c2f-8c39-e6048a1806dd succeeded

  STEP: deleting the pod @ 11/23/24 13:52:57.024
  STEP: deleting the test headless service @ 11/23/24 13:52:57.038
  I1123 13:52:57.053079 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3480" for this suite. @ 11/23/24 13:52:57.058
• [7.149 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/23/24 13:52:57.069
  I1123 13:52:57.069928 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename subpath @ 11/23/24 13:52:57.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:52:57.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:52:57.092
  STEP: Setting up data @ 11/23/24 13:52:57.095
  STEP: Creating pod pod-subpath-test-projected-jsd8 @ 11/23/24 13:52:57.104
  STEP: Creating a pod to test atomic-volume-subpath @ 11/23/24 13:52:57.104
  E1123 13:52:57.643391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:58.643518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:52:59.644288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:00.644505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:01.644632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:02.644740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:03.645207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:04.646179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:05.646297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:06.646416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:07.646564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:08.646700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:09.647470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:10.648478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:11.649308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:12.649349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:13.649821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:14.650783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:15.651621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:16.652434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:17.652519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:18.653328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:19.653896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:20.654876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:53:21.191
  I1123 13:53:21.195873 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-subpath-test-projected-jsd8 container test-container-subpath-projected-jsd8: <nil>
  STEP: delete the pod @ 11/23/24 13:53:21.204
  STEP: Deleting pod pod-subpath-test-projected-jsd8 @ 11/23/24 13:53:21.23
  I1123 13:53:21.230520 20 delete.go:62] Deleting pod "pod-subpath-test-projected-jsd8" in namespace "subpath-5236"
  I1123 13:53:21.234771 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5236" for this suite. @ 11/23/24 13:53:21.239
• [24.181 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/23/24 13:53:21.251
  I1123 13:53:21.251833 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename secrets @ 11/23/24 13:53:21.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:21.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:21.276
  I1123 13:53:21.324248 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5199" for this suite. @ 11/23/24 13:53:21.328
• [0.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 11/23/24 13:53:21.336
  I1123 13:53:21.336393 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename namespaces @ 11/23/24 13:53:21.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:21.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:21.411
  STEP: Updating Namespace "namespaces-6449" @ 11/23/24 13:53:21.413
  I1123 13:53:21.422464 20 namespace.go:389] Namespace "namespaces-6449" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"03961b8f-91a3-4687-919f-37fd21897d4a", "kubernetes.io/metadata.name":"namespaces-6449", "namespaces-6449":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1123 13:53:21.422541 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6449" for this suite. @ 11/23/24 13:53:21.427
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 11/23/24 13:53:21.434
  I1123 13:53:21.434615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename disruption @ 11/23/24 13:53:21.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:21.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:21.454
  STEP: Creating a kubernetes client @ 11/23/24 13:53:21.457
  I1123 13:53:21.457064 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename disruption-2 @ 11/23/24 13:53:21.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:21.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:21.482
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:53:21.489
  E1123 13:53:21.655321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:22.655637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:53:23.499
  E1123 13:53:23.656299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:24.656569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/23/24 13:53:25.508
  E1123 13:53:25.657554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:26.657815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 11/23/24 13:53:27.513
  STEP: listing a collection of PDBs in namespace disruption-7975 @ 11/23/24 13:53:27.516
  STEP: deleting a collection of PDBs @ 11/23/24 13:53:27.52
  STEP: Waiting for the PDB collection to be deleted @ 11/23/24 13:53:27.535
  I1123 13:53:27.539604 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2472" for this suite. @ 11/23/24 13:53:27.543
  I1123 13:53:27.551251 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7975" for this suite. @ 11/23/24 13:53:27.555
• [6.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/23/24 13:53:27.563
  I1123 13:53:27.563317 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename container-runtime @ 11/23/24 13:53:27.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:27.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:27.583
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/23/24 13:53:27.603
  E1123 13:53:27.658474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:28.658931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:29.659671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:30.660091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:31.660450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:32.660521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:33.661106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:34.661415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:35.662434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:36.662971      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:37.663473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:38.663562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:39.663737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:40.663861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:41.664054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:42.664202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:43.664355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/23/24 13:53:43.692
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/23/24 13:53:43.695
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/23/24 13:53:43.704
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 11/23/24 13:53:43.704
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/23/24 13:53:43.727
  E1123 13:53:44.664476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:45.664598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:46.664709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/23/24 13:53:46.753
  E1123 13:53:47.665118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/23/24 13:53:47.763
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/23/24 13:53:47.772
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 11/23/24 13:53:47.772
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/23/24 13:53:47.799
  E1123 13:53:48.665231      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/23/24 13:53:48.812
  E1123 13:53:49.665348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:50.665467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/23/24 13:53:50.824
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/23/24 13:53:50.834
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 11/23/24 13:53:50.834
  I1123 13:53:50.864480 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-227" for this suite. @ 11/23/24 13:53:50.869
• [23.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 11/23/24 13:53:50.88
  I1123 13:53:50.880382 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename apf @ 11/23/24 13:53:50.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:50.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:50.901
  STEP: getting /apis @ 11/23/24 13:53:50.903
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/23/24 13:53:50.906
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/23/24 13:53:50.907
  STEP: creating @ 11/23/24 13:53:50.908
  STEP: getting @ 11/23/24 13:53:50.927
  STEP: listing @ 11/23/24 13:53:50.93
  STEP: watching @ 11/23/24 13:53:50.936
  I1123 13:53:50.936178 20 flowcontrol.go:394] starting watch
  STEP: patching @ 11/23/24 13:53:50.937
  STEP: updating @ 11/23/24 13:53:50.949
  I1123 13:53:50.959811 20 flowcontrol.go:422] waiting for watch events with expected annotations
  I1123 13:53:50.959849 20 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 11/23/24 13:53:50.959
  STEP: patching /status @ 11/23/24 13:53:50.964
  STEP: updating /status @ 11/23/24 13:53:50.969
  STEP: deleting @ 11/23/24 13:53:51.001
  STEP: deleting a collection @ 11/23/24 13:53:51.016
  I1123 13:53:51.041018 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-549" for this suite. @ 11/23/24 13:53:51.044
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 11/23/24 13:53:51.053
  I1123 13:53:51.053893 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename sched-preemption @ 11/23/24 13:53:51.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:53:51.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:53:51.075
  I1123 13:53:51.093778 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1123 13:53:51.666316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:52.666405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:53.666539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:54.666640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:55.667276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:56.667377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:57.667510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:58.667604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:53:59.667750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:00.667836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:01.667917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:02.668014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:03.668142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:04.668244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:05.668464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:06.668563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:07.668681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:08.668868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:09.669061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:10.669251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:11.669357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:12.669460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:13.669594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:14.669689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:15.669823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:16.669931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:17.670091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:18.670169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:19.670340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:20.670465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:21.670586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:22.670660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:23.670885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:24.671089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:25.671943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:26.672085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:27.673164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:28.674165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:29.674825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:30.675037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:31.675235      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:32.675341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:33.675462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:34.675570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:35.675741      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:36.675829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:37.676303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:38.676500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:39.677008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:40.677192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:41.677989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:42.678287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:43.678681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:44.678866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:45.679186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:46.679531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:47.679658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:48.680616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:49.680707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:50.681747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:54:51.098900 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/23/24 13:54:51.104
  I1123 13:54:51.129596 20 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1123 13:54:51.136784 20 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1123 13:54:51.158487 20 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1123 13:54:51.166044 20 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1123 13:54:51.182166 20 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1123 13:54:51.190871 20 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/23/24 13:54:51.19
  E1123 13:54:51.682153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:52.682256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/23/24 13:54:53.221
  E1123 13:54:53.682923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:54.683126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:55.683218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:56.683426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:54:57.314337 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2013" for this suite. @ 11/23/24 13:54:57.319
• [66.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 11/23/24 13:54:57.327
  I1123 13:54:57.327326 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename var-expansion @ 11/23/24 13:54:57.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:54:57.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:54:57.349
  STEP: Creating a pod to test substitution in volume subpath @ 11/23/24 13:54:57.351
  E1123 13:54:57.684176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:58.684302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:54:59.684441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:00.684512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:55:01.374
  I1123 13:55:01.378530 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod var-expansion-a72a912c-766d-4741-9a6f-d3f5ce455841 container dapi-container: <nil>
  STEP: delete the pod @ 11/23/24 13:55:01.396
  I1123 13:55:01.417174 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4801" for this suite. @ 11/23/24 13:55:01.421
• [4.102 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 11/23/24 13:55:01.429
  I1123 13:55:01.429349 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename configmap @ 11/23/24 13:55:01.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:01.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:01.452
  STEP: Creating configMap with name configmap-test-upd-d1664f17-23bf-409c-98de-562ed624d3e1 @ 11/23/24 13:55:01.458
  STEP: Creating the pod @ 11/23/24 13:55:01.463
  E1123 13:55:01.684645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:02.684797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 11/23/24 13:55:03.486
  STEP: Waiting for pod with binary data @ 11/23/24 13:55:03.495
  I1123 13:55:03.501378 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2563" for this suite. @ 11/23/24 13:55:03.507
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 11/23/24 13:55:03.516
  I1123 13:55:03.516429 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename services @ 11/23/24 13:55:03.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:03.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:03.537
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8665 @ 11/23/24 13:55:03.539
  STEP: changing the ExternalName service to type=ClusterIP @ 11/23/24 13:55:03.544
  STEP: creating replication controller externalname-service in namespace services-8665 @ 11/23/24 13:55:03.559
  I1123 13:55:03.567178      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8665, replica count: 2
  E1123 13:55:03.685453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:04.686078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:05.686373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:06.618207      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1123 13:55:06.618256 20 resource.go:361] Creating new exec pod
  E1123 13:55:06.686440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:07.686659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:08.687258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:09.635942 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8665 exec execpodtqbnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1123 13:55:09.687539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:09.729952 20 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1123 13:55:09.730024 20 builder.go:147] stdout: ""
  I1123 13:55:10.636989 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8665 exec execpodtqbnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1123 13:55:10.688395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:10.720620 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1123 13:55:10.720655 20 builder.go:147] stdout: ""
  I1123 13:55:11.636057 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8665 exec execpodtqbnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1123 13:55:11.688439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:11.720102 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1123 13:55:11.720137 20 builder.go:147] stdout: ""
  I1123 13:55:12.636409 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8665 exec execpodtqbnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1123 13:55:12.688826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:12.722722 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1123 13:55:12.722775 20 builder.go:147] stdout: "externalname-service-nnm4h"
  I1123 13:55:12.722868 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8665 exec execpodtqbnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.24 80'
  I1123 13:55:12.807222 20 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.24 80\nConnection to 10.152.183.24 80 port [tcp/http] succeeded!\n"
  I1123 13:55:12.807265 20 builder.go:147] stdout: ""
  E1123 13:55:13.689107      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:13.723339 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1925390454 --namespace=services-8665 exec execpodtqbnm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.24 80'
  I1123 13:55:13.806823 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.24 80\nConnection to 10.152.183.24 80 port [tcp/http] succeeded!\n"
  I1123 13:55:13.806857 20 builder.go:147] stdout: "externalname-service-ftbwl"
  I1123 13:55:13.806944 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1123 13:55:13.826786 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8665" for this suite. @ 11/23/24 13:55:13.83
• [10.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 11/23/24 13:55:13.84
  I1123 13:55:13.840210 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename controllerrevisions @ 11/23/24 13:55:13.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:13.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:13.863
  STEP: Creating DaemonSet "e2e-zc96x-daemon-set" @ 11/23/24 13:55:13.886
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/23/24 13:55:13.893
  I1123 13:55:13.899219 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:55:13.899253 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:55:13.905650 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zc96x-daemon-set: 0
  I1123 13:55:13.905672 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:55:14.689224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:14.897640 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:55:14.897687 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:55:14.900847 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zc96x-daemon-set: 1
  I1123 13:55:14.900866 20 fixtures.go:130] Node ip-172-31-20-25 is running 0 daemon pod, expected 1
  E1123 13:55:15.689339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:15.899107 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-0-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:55:15.899153 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-69-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1123 13:55:15.902614 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zc96x-daemon-set: 3
  I1123 13:55:15.902631 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-zc96x-daemon-set
  STEP: Confirm DaemonSet "e2e-zc96x-daemon-set" successfully created with "daemonset-name=e2e-zc96x-daemon-set" label @ 11/23/24 13:55:15.906
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zc96x-daemon-set" @ 11/23/24 13:55:15.917
  I1123 13:55:15.922723 20 controller_revision.go:162] Located ControllerRevision: "e2e-zc96x-daemon-set-8f8d99568"
  STEP: Patching ControllerRevision "e2e-zc96x-daemon-set-8f8d99568" @ 11/23/24 13:55:15.927
  I1123 13:55:15.932137 20 controller_revision.go:173] e2e-zc96x-daemon-set-8f8d99568 has been patched
  STEP: Create a new ControllerRevision @ 11/23/24 13:55:15.932
  I1123 13:55:15.938917 20 controller_revision.go:191] Created ControllerRevision: e2e-zc96x-daemon-set-595d8c4d46
  STEP: Confirm that there are two ControllerRevisions @ 11/23/24 13:55:15.938
  I1123 13:55:15.938983 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1123 13:55:15.943060 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zc96x-daemon-set-8f8d99568" @ 11/23/24 13:55:15.943
  STEP: Confirm that there is only one ControllerRevision @ 11/23/24 13:55:15.95
  I1123 13:55:15.950372 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1123 13:55:15.953760 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zc96x-daemon-set-595d8c4d46" @ 11/23/24 13:55:15.957
  I1123 13:55:15.968388 20 controller_revision.go:220] e2e-zc96x-daemon-set-595d8c4d46 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/23/24 13:55:15.968
  W1123 13:55:15.975619      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/23/24 13:55:15.975
  I1123 13:55:15.975702 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E1123 13:55:16.690168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:16.976662 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1123 13:55:16.985792 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zc96x-daemon-set-595d8c4d46=updated" @ 11/23/24 13:55:16.985
  STEP: Confirm that there is only one ControllerRevision @ 11/23/24 13:55:17.003
  I1123 13:55:17.003133 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1123 13:55:17.006693 20 controller_revision.go:265] Found 1 ControllerRevisions
  I1123 13:55:17.010160 20 controller_revision.go:246] ControllerRevision "e2e-zc96x-daemon-set-78dcfd74f5" has revision 3
  STEP: Deleting DaemonSet "e2e-zc96x-daemon-set" @ 11/23/24 13:55:17.013
  STEP: deleting DaemonSet.extensions e2e-zc96x-daemon-set in namespace controllerrevisions-7081, will wait for the garbage collector to delete the pods @ 11/23/24 13:55:17.013
  I1123 13:55:17.076540 20 resources.go:139] Deleting DaemonSet.extensions e2e-zc96x-daemon-set took: 7.968502ms
  I1123 13:55:17.177091 20 resources.go:163] Terminating DaemonSet.extensions e2e-zc96x-daemon-set pods took: 100.547116ms
  E1123 13:55:17.691068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:18.691695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1123 13:55:19.080439 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zc96x-daemon-set: 0
  I1123 13:55:19.080482 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zc96x-daemon-set
  I1123 13:55:19.084239 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"49020"},"items":null}

  I1123 13:55:19.088172 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"49020"},"items":null}

  I1123 13:55:19.103992 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-7081" for this suite. @ 11/23/24 13:55:19.107
• [5.275 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 11/23/24 13:55:19.115
  I1123 13:55:19.115547 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename emptydir @ 11/23/24 13:55:19.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:19.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:19.14
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/23/24 13:55:19.143
  E1123 13:55:19.692096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:20.692186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:21.692993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:22.693121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:55:23.169
  I1123 13:55:23.173638 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod pod-da92284d-0cb2-4b12-b5d3-605529f3bf03 container test-container: <nil>
  STEP: delete the pod @ 11/23/24 13:55:23.183
  I1123 13:55:23.203826 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2469" for this suite. @ 11/23/24 13:55:23.208
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/23/24 13:55:23.223
  I1123 13:55:23.223132 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/23/24 13:55:23.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:23.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:23.248
  STEP: creating a target pod @ 11/23/24 13:55:23.251
  E1123 13:55:23.693248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:24.693396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/23/24 13:55:25.275
  E1123 13:55:25.694195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:26.694314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/23/24 13:55:27.295
  I1123 13:55:27.295292 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4597 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:55:27.295310 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:55:27.295745 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:55:27.295784 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4597/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1123 13:55:27.330526 20 exec_util.go:111] Exec stderr: ""
  I1123 13:55:27.339798 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4597" for this suite. @ 11/23/24 13:55:27.344
• [4.129 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 11/23/24 13:55:27.352
  I1123 13:55:27.352301 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename projected @ 11/23/24 13:55:27.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:27.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:27.376
  STEP: Creating a pod to test downward API volume plugin @ 11/23/24 13:55:27.378
  E1123 13:55:27.694813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:28.695032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:29.695579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:30.695708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/23/24 13:55:31.407
  I1123 13:55:31.412824 20 output.go:196] Trying to get logs from node ip-172-31-20-25 pod downwardapi-volume-3d1569c8-f75d-4782-88ed-b0a86a62d489 container client-container: <nil>
  STEP: delete the pod @ 11/23/24 13:55:31.42
  I1123 13:55:31.437759 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3145" for this suite. @ 11/23/24 13:55:31.442
• [4.098 seconds]
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 11/23/24 13:55:31.45
  I1123 13:55:31.450660 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename podtemplate @ 11/23/24 13:55:31.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:31.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:31.476
  STEP: Create a pod template @ 11/23/24 13:55:31.479
  STEP: Replace a pod template @ 11/23/24 13:55:31.485
  I1123 13:55:31.495796 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1123 13:55:31.495872 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7354" for this suite. @ 11/23/24 13:55:31.5
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/23/24 13:55:31.508
  I1123 13:55:31.508568 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/23/24 13:55:31.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/23/24 13:55:31.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/23/24 13:55:31.534
  STEP: creating a target pod @ 11/23/24 13:55:31.537
  E1123 13:55:31.696205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:32.696495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/23/24 13:55:33.561
  E1123 13:55:33.697145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1123 13:55:34.698178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/23/24 13:55:35.578
  I1123 13:55:35.578557 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1568 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1123 13:55:35.578575 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-1925390454
  I1123 13:55:35.579023 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1123 13:55:35.579065 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1568/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1123 13:55:35.618789 20 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/23/24 13:55:35.629
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/23/24 13:55:35.634
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/23/24 13:55:35.647
  I1123 13:55:35.653023 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1568" for this suite. @ 11/23/24 13:55:35.658
• [4.158 seconds]
------------------------------
SSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1123 13:55:35.666697 20 suites.go:34] Running AfterSuite actions on node 1
  I1123 13:55:35.666721 20 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.030 seconds]
------------------------------

  E1123 13:55:35.698681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
Ran 404 of 6605 Specs in 6263.762 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h44m24.498864943s
Test Suite Passed
