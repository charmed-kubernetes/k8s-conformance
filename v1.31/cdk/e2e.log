  I1228 12:12:39.234279      19 e2e.go:109] Starting e2e run "4e2befbe-a7a7-4839-8b3e-f434f95850f4" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1735387958 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1228 12:12:39.425177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:12:39.426138 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1228 12:12:39.457512 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1228 12:12:39.463276 19 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1228 12:12:39.463417 19 e2e.go:245] e2e test version: v1.31.4
  I1228 12:12:39.464706 19 e2e.go:254] kube-apiserver version: v1.31.4
  I1228 12:12:39.464771 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:12:39.469851 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 12/28/24 12:12:39.64
  I1228 12:12:39.640131 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:12:39.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:12:39.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:12:39.665
  STEP: validating cluster-info @ 12/28/24 12:12:39.669
  I1228 12:12:39.669219 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2126 cluster-info'
  I1228 12:12:39.743464 19 builder.go:146] stderr: ""
  I1228 12:12:39.743498 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1228 12:12:39.743829 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2126" for this suite. @ 12/28/24 12:12:39.747
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/28/24 12:12:39.756
  I1228 12:12:39.756977 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename events @ 12/28/24 12:12:39.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:12:39.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:12:39.775
  STEP: creating a test event @ 12/28/24 12:12:39.779
  STEP: listing events in all namespaces @ 12/28/24 12:12:39.791
  STEP: listing events in test namespace @ 12/28/24 12:12:39.803
  STEP: listing events with field selection filtering on source @ 12/28/24 12:12:39.806
  STEP: listing events with field selection filtering on reportingController @ 12/28/24 12:12:39.809
  STEP: getting the test event @ 12/28/24 12:12:39.812
  STEP: patching the test event @ 12/28/24 12:12:39.816
  STEP: getting the test event @ 12/28/24 12:12:39.824
  STEP: updating the test event @ 12/28/24 12:12:39.829
  STEP: getting the test event @ 12/28/24 12:12:39.841
  STEP: deleting the test event @ 12/28/24 12:12:39.845
  STEP: listing events in all namespaces @ 12/28/24 12:12:39.855
  STEP: listing events in test namespace @ 12/28/24 12:12:39.864
  I1228 12:12:39.871637 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4528" for this suite. @ 12/28/24 12:12:39.881
• [0.135 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/28/24 12:12:39.891
  I1228 12:12:39.891579 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:12:39.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:12:39.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:12:39.915
  STEP: Creating pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288 @ 12/28/24 12:12:39.918
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 12:12:43.946
  I1228 12:12:43.950248 19 container_probe.go:1749] Initial restart count of pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 is 0
  I1228 12:12:43.953288 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:45.959277 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:47.963830 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:49.969822 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:51.975687 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:53.981389 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:55.987567 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:57.992461 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:12:59.997305 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:02.003989 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:04.009581 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:06.014693 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:08.020291 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:10.025070 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:12.031549 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:14.036411 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:16.041372 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:18.048296 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:20.052954 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:22.057577 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:24.062052 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:26.066575 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:28.071267 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:30.077623 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:32.083551 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:34.087862 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:36.093638 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:38.099589 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:40.105032 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:42.112035 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:44.117195 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:46.121424 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:48.126168 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:50.131356 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:52.137316 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:54.142365 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:56.149663 19 container_probe.go:1759] Get pod test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 in namespace container-probe-7288
  I1228 12:13:56.149694 19 container_probe.go:1763] Restart count of pod container-probe-7288/test-grpc-7c96e875-f6f1-4d88-a9d1-2bc07115df90 is now 1 (1m12.199420344s elapsed)
  STEP: deleting the pod @ 12/28/24 12:13:56.149
  I1228 12:13:56.166054 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7288" for this suite. @ 12/28/24 12:13:56.169
• [76.285 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/28/24 12:13:56.176
  I1228 12:13:56.176990 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/28/24 12:13:56.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:13:56.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:13:56.201
  STEP: Setting up the test @ 12/28/24 12:13:56.204
  STEP: Creating hostNetwork=false pod @ 12/28/24 12:13:56.204
  STEP: Creating hostNetwork=true pod @ 12/28/24 12:13:58.234
  STEP: Running the test @ 12/28/24 12:14:02.26
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/28/24 12:14:02.26
  I1228 12:14:02.260160 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.260178 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.260617 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.260672 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1228 12:14:02.314334 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.314367 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.314375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.314781 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.314852 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1228 12:14:02.355831 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.355885 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.355893 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.356219 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.356254 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1228 12:14:02.396154 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.396204 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.396213 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.396536 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.396568 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1228 12:14:02.432605 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/28/24 12:14:02.432
  I1228 12:14:02.432675 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.432682 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.432965 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.432998 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1228 12:14:02.466813 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.466853 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.466861 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.467238 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.467275 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1228 12:14:02.501575 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/28/24 12:14:02.501
  I1228 12:14:02.501642 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.501665 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.501959 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.501989 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1228 12:14:02.550347 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.550378 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.550387 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.550779 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.550818 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1228 12:14:02.584340 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.584372 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.584381 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.584771 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.584812 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1228 12:14:02.617491 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.617517 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4587 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:02.617559 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:02.617942 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:02.617976 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4587/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1228 12:14:02.653586 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:02.653710 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4587" for this suite. @ 12/28/24 12:14:02.658
• [6.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/28/24 12:14:02.665
  I1228 12:14:02.665336 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename tables @ 12/28/24 12:14:02.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:02.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:02.688
  I1228 12:14:02.694255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6664" for this suite. @ 12/28/24 12:14:02.698
• [0.039 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/28/24 12:14:02.704
  I1228 12:14:02.704540 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:14:02.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:02.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:02.726
  STEP: Creating configMap configmap-7197/configmap-test-a97d0056-339e-46ec-935e-24925388fc91 @ 12/28/24 12:14:02.729
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:14:02.735
  STEP: Saw pod success @ 12/28/24 12:14:06.757
  I1228 12:14:06.761762 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-b621ec83-8203-4add-b882-4ff3c01cf729 container env-test: <nil>
  STEP: delete the pod @ 12/28/24 12:14:06.777
  I1228 12:14:06.798103 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7197" for this suite. @ 12/28/24 12:14:06.803
• [4.106 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 12/28/24 12:14:06.81
  I1228 12:14:06.810976 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:14:06.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:06.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:06.84
  STEP: Setting up server cert @ 12/28/24 12:14:06.877
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:14:07.129
  STEP: Deploying the webhook pod @ 12/28/24 12:14:07.139
  STEP: Wait for the deployment to be ready @ 12/28/24 12:14:07.152
  I1228 12:14:07.160076 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/28/24 12:14:09.172
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:14:09.183
  I1228 12:14:10.184762 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/28/24 12:14:10.194
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/28/24 12:14:10.195
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/28/24 12:14:10.195
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/28/24 12:14:10.195
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/28/24 12:14:10.197
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/28/24 12:14:10.197
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/28/24 12:14:10.198
  I1228 12:14:10.238511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3388" for this suite. @ 12/28/24 12:14:10.241
  STEP: Destroying namespace "webhook-markers-4321" for this suite. @ 12/28/24 12:14:10.251
• [3.448 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/28/24 12:14:10.259
  I1228 12:14:10.259177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename discovery @ 12/28/24 12:14:10.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:10.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:10.278
  STEP: Setting up server cert @ 12/28/24 12:14:10.283
  STEP: Requesting APIResourceList from "/api/v1" @ 12/28/24 12:14:10.459
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/28/24 12:14:10.461
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/28/24 12:14:10.463
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/28/24 12:14:10.464
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/28/24 12:14:10.466
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/28/24 12:14:10.467
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/28/24 12:14:10.468
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/28/24 12:14:10.469
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/28/24 12:14:10.471
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/28/24 12:14:10.472
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/28/24 12:14:10.473
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/28/24 12:14:10.474
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/28/24 12:14:10.475
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/28/24 12:14:10.477
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/28/24 12:14:10.478
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/28/24 12:14:10.479
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/28/24 12:14:10.48
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/28/24 12:14:10.481
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/28/24 12:14:10.483
  I1228 12:14:10.484494 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7125" for this suite. @ 12/28/24 12:14:10.488
• [0.237 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/28/24 12:14:10.496
  I1228 12:14:10.496081 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 12:14:10.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:10.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:10.517
  STEP: Creating service test in namespace statefulset-2014 @ 12/28/24 12:14:10.52
  STEP: Looking for a node to schedule stateful set and pod @ 12/28/24 12:14:10.526
  STEP: Creating pod with conflicting port in namespace statefulset-2014 @ 12/28/24 12:14:10.531
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2014 @ 12/28/24 12:14:10.538
  STEP: Creating statefulset with conflicting port in namespace statefulset-2014 @ 12/28/24 12:14:14.551
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2014 @ 12/28/24 12:14:14.558
  I1228 12:14:14.584797 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-2014, name: ss-0, uid: aaac5dcd-afdc-4db4-b561-f3d9c5e87911, status phase: Pending. Waiting for statefulset controller to delete.
  I1228 12:14:14.600249 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-2014, name: ss-0, uid: aaac5dcd-afdc-4db4-b561-f3d9c5e87911, status phase: Failed. Waiting for statefulset controller to delete.
  I1228 12:14:14.623456 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-2014, name: ss-0, uid: aaac5dcd-afdc-4db4-b561-f3d9c5e87911, status phase: Failed. Waiting for statefulset controller to delete.
  I1228 12:14:14.626745 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-2014
  STEP: Removing pod with conflicting port in namespace statefulset-2014 @ 12/28/24 12:14:14.626
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2014 and will be in running state @ 12/28/24 12:14:14.648
  I1228 12:14:16.655776 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2014
  I1228 12:14:16.659434 19 rest.go:150] Scaling statefulset ss to 0
  I1228 12:14:26.674874 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 12:14:26.678900 19 rest.go:88] Deleting statefulset ss
  I1228 12:14:26.693223 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2014" for this suite. @ 12/28/24 12:14:26.696
• [16.207 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/28/24 12:14:26.703
  I1228 12:14:26.703443 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replication-controller @ 12/28/24 12:14:26.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:26.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:26.724
  STEP: Creating ReplicationController "e2e-rc-rsv64" @ 12/28/24 12:14:26.727
  I1228 12:14:26.733510 19 rc.go:792] Get Replication Controller "e2e-rc-rsv64" to confirm replicas
  I1228 12:14:27.733691 19 rc.go:792] Get Replication Controller "e2e-rc-rsv64" to confirm replicas
  I1228 12:14:27.739618 19 rc.go:801] Found 1 replicas for "e2e-rc-rsv64" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-rsv64" @ 12/28/24 12:14:27.739
  STEP: Updating a scale subresource @ 12/28/24 12:14:27.743
  STEP: Verifying replicas where modified for replication controller "e2e-rc-rsv64" @ 12/28/24 12:14:27.749
  I1228 12:14:27.749765 19 rc.go:792] Get Replication Controller "e2e-rc-rsv64" to confirm replicas
  I1228 12:14:28.749869 19 rc.go:792] Get Replication Controller "e2e-rc-rsv64" to confirm replicas
  I1228 12:14:28.753890 19 rc.go:801] Found 2 replicas for "e2e-rc-rsv64" replication controller
  I1228 12:14:28.754020 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1835" for this suite. @ 12/28/24 12:14:28.757
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/28/24 12:14:28.765
  I1228 12:14:28.765752 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:14:28.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:28.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:28.788
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:14:28.791
  STEP: Saw pod success @ 12/28/24 12:14:32.818
  I1228 12:14:32.821538 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-1878cc43-06af-46ba-becf-bae7f485ef0c container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:14:32.828
  I1228 12:14:32.847284 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-786" for this suite. @ 12/28/24 12:14:32.85
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 12/28/24 12:14:32.86
  I1228 12:14:32.860062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:14:32.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:32.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:32.885
  STEP: creating all guestbook components @ 12/28/24 12:14:32.887
  I1228 12:14:32.887818 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1228 12:14:32.887876 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 create -f -'
  I1228 12:14:32.975698 19 builder.go:146] stderr: ""
  I1228 12:14:32.975745 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1228 12:14:32.975794 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1228 12:14:32.975850 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 create -f -'
  I1228 12:14:33.065550 19 builder.go:146] stderr: ""
  I1228 12:14:33.065587 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1228 12:14:33.065634 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1228 12:14:33.065700 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 create -f -'
  I1228 12:14:33.149074 19 builder.go:146] stderr: ""
  I1228 12:14:33.149106 19 builder.go:147] stdout: "service/frontend created\n"
  I1228 12:14:33.149160 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1228 12:14:33.149219 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 create -f -'
  I1228 12:14:33.212722 19 builder.go:146] stderr: ""
  I1228 12:14:33.212750 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1228 12:14:33.212798 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1228 12:14:33.212868 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 create -f -'
  I1228 12:14:33.285796 19 builder.go:146] stderr: ""
  I1228 12:14:33.285831 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1228 12:14:33.285961 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1228 12:14:33.286024 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 create -f -'
  I1228 12:14:33.347399 19 builder.go:146] stderr: ""
  I1228 12:14:33.347431 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/28/24 12:14:33.347
  I1228 12:14:33.347468 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I1228 12:14:38.397975 19 kubectl.go:2276] Waiting for frontend to serve content.
  I1228 12:14:38.412365 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1228 12:14:38.426239 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/28/24 12:14:38.438
  I1228 12:14:38.438263 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 delete --grace-period=0 --force -f -'
  I1228 12:14:38.495878 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:14:38.495909 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/28/24 12:14:38.496
  I1228 12:14:38.496151 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 delete --grace-period=0 --force -f -'
  I1228 12:14:38.559414 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:14:38.559434 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/28/24 12:14:38.559
  I1228 12:14:38.559590 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 delete --grace-period=0 --force -f -'
  I1228 12:14:38.617302 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:14:38.617323 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/28/24 12:14:38.617
  I1228 12:14:38.617441 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 delete --grace-period=0 --force -f -'
  I1228 12:14:38.663253 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:14:38.663338 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/28/24 12:14:38.663
  I1228 12:14:38.663450 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 delete --grace-period=0 --force -f -'
  I1228 12:14:38.717748 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:14:38.717776 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/28/24 12:14:38.717
  I1228 12:14:38.717875 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5625 delete --grace-period=0 --force -f -'
  I1228 12:14:38.781844 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:14:38.781943 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1228 12:14:38.782063 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5625" for this suite. @ 12/28/24 12:14:38.787
• [5.935 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/28/24 12:14:38.795
  I1228 12:14:38.795633 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:14:38.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:38.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:38.839
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:14:38.843
  STEP: Saw pod success @ 12/28/24 12:14:40.859
  I1228 12:14:40.863400 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod downwardapi-volume-0919fa66-af0e-445d-b7f2-bd4420db15fc container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:14:40.882
  I1228 12:14:40.903776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4991" for this suite. @ 12/28/24 12:14:40.907
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/28/24 12:14:40.915
  I1228 12:14:40.915874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 12:14:40.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:40.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:40.939
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/28/24 12:14:40.962
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/28/24 12:14:40.97
  I1228 12:14:40.975733 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:40.975776 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:40.978277 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 12:14:40.978293 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  I1228 12:14:41.975471 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:41.975540 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:41.978770 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1228 12:14:41.978789 19 fixtures.go:130] Node ip-172-31-65-66 is running 0 daemon pod, expected 1
  I1228 12:14:42.975466 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:42.975514 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:42.980443 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1228 12:14:42.980464 19 fixtures.go:130] Node ip-172-31-87-122 is running 0 daemon pod, expected 1
  I1228 12:14:43.975782 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:43.975828 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:43.978822 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1228 12:14:43.978842 19 fixtures.go:130] Node ip-172-31-87-122 is running 0 daemon pod, expected 1
  I1228 12:14:44.976351 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:44.976399 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:44.984232 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 12:14:44.984254 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/28/24 12:14:44.987
  I1228 12:14:45.002032 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:45.002063 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:45.006336 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 12:14:45.006351 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/28/24 12:14:45.006
  STEP: Deleting DaemonSet "daemon-set" @ 12/28/24 12:14:46.013
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2018, will wait for the garbage collector to delete the pods @ 12/28/24 12:14:46.013
  I1228 12:14:46.074900 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.872497ms
  I1228 12:14:46.175064 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.160133ms
  I1228 12:14:48.080130 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 12:14:48.080164 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1228 12:14:48.086247 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5300"},"items":null}

  I1228 12:14:48.089605 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5300"},"items":null}

  I1228 12:14:48.105222 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2018" for this suite. @ 12/28/24 12:14:48.108
• [7.200 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/28/24 12:14:48.115
  I1228 12:14:48.115769 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/28/24 12:14:48.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:48.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:48.139
  STEP: creating a target pod @ 12/28/24 12:14:48.142
  STEP: adding an ephemeral container @ 12/28/24 12:14:50.164
  STEP: checking pod container endpoints @ 12/28/24 12:14:52.184
  I1228 12:14:52.184412 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8938 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:14:52.184431 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:14:52.184864 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:14:52.184897 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8938/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1228 12:14:52.230188 19 exec_util.go:111] Exec stderr: ""
  I1228 12:14:52.238374 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8938" for this suite. @ 12/28/24 12:14:52.241
• [4.135 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 12/28/24 12:14:52.25
  I1228 12:14:52.250850 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 12:14:52.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:52.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:52.272
  STEP: Creating simple DaemonSet "daemon-set" @ 12/28/24 12:14:52.296
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/28/24 12:14:52.302
  I1228 12:14:52.307997 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:52.308029 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:52.310777 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 12:14:52.310795 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  I1228 12:14:53.305869 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:53.305910 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:53.310668 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1228 12:14:53.310684 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  I1228 12:14:54.308490 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:54.308534 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:14:54.312188 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 12:14:54.312205 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/28/24 12:14:54.316
  STEP: DeleteCollection of the DaemonSets @ 12/28/24 12:14:54.32
  STEP: Verify that ReplicaSets have been deleted @ 12/28/24 12:14:54.329
  I1228 12:14:54.339963 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5421"},"items":null}

  I1228 12:14:54.345576 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5421"},"items":[{"metadata":{"name":"daemon-set-fcc6l","generateName":"daemon-set-","namespace":"daemonsets-5574","uid":"a87367e7-9184-4cc2-a694-d2ed6532db44","resourceVersion":"5378","creationTimestamp":"2024-12-28T12:14:52Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0a70b91c-7504-4c73-aeac-aa5a358e0dd9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-28T12:14:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0a70b91c-7504-4c73-aeac-aa5a358e0dd9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-28T12:14:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.178.8\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-75rhp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-75rhp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-87-122","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-87-122"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"}],"hostIP":"172.31.87.122","hostIPs":[{"ip":"172.31.87.122"}],"podIP":"192.168.178.8","podIPs":[{"ip":"192.168.178.8"}],"startTime":"2024-12-28T12:14:52Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-28T12:14:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://50fa1fd5f9918f4c2a3331c06825fff0bdb4a1e17d77ad53db61a2dbdb8b6ae0","started":true,"volumeMounts":[{"name":"kube-api-access-75rhp","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-lcz8d","generateName":"daemon-set-","namespace":"daemonsets-5574","uid":"94fc780b-9af1-47ff-9776-5824ee9015e6","resourceVersion":"5416","creationTimestamp":"2024-12-28T12:14:52Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0a70b91c-7504-4c73-aeac-aa5a358e0dd9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-28T12:14:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0a70b91c-7504-4c73-aeac-aa5a358e0dd9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-28T12:14:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.189.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rvvzf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rvvzf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-45-142","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-45-142"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:53Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:53Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"}],"hostIP":"172.31.45.142","hostIPs":[{"ip":"172.31.45.142"}],"podIP":"192.168.189.9","podIPs":[{"ip":"192.168.189.9"}],"startTime":"2024-12-28T12:14:52Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-28T12:14:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://57d02ff97f76af74e21026db2ffbe28a6f53053e1d837eed774b90ac6f846c67","started":true,"volumeMounts":[{"name":"kube-api-access-rvvzf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wct7h","generateName":"daemon-set-","namespace":"daemonsets-5574","uid":"a917ef61-4a5b-4b93-b90a-28958571f120","resourceVersion":"5380","creationTimestamp":"2024-12-28T12:14:52Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0a70b91c-7504-4c73-aeac-aa5a358e0dd9","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-28T12:14:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0a70b91c-7504-4c73-aeac-aa5a358e0dd9\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-28T12:14:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.206.78\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hj9n7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hj9n7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-65-66","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-65-66"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-28T12:14:52Z"}],"hostIP":"172.31.65.66","hostIPs":[{"ip":"172.31.65.66"}],"podIP":"192.168.206.78","podIPs":[{"ip":"192.168.206.78"}],"startTime":"2024-12-28T12:14:52Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-28T12:14:52Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0640d98dc2bdc3269b0b5d8b390155a46fd79d7287df0a2250d0be50a6c6ffa6","started":true,"volumeMounts":[{"name":"kube-api-access-hj9n7","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1228 12:14:54.364028 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5574" for this suite. @ 12/28/24 12:14:54.367
• [2.124 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 12/28/24 12:14:54.375
  I1228 12:14:54.375079 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 12:14:54.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:54.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:54.397
  STEP: Creating a ResourceQuota @ 12/28/24 12:14:54.4
  STEP: Getting a ResourceQuota @ 12/28/24 12:14:54.404
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/28/24 12:14:54.409
  STEP: Patching the ResourceQuota @ 12/28/24 12:14:54.412
  STEP: Deleting a Collection of ResourceQuotas @ 12/28/24 12:14:54.417
  STEP: Verifying the deleted ResourceQuota @ 12/28/24 12:14:54.431
  I1228 12:14:54.435477 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2051" for this suite. @ 12/28/24 12:14:54.44
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/28/24 12:14:54.447
  I1228 12:14:54.447326 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:14:54.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:54.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:54.471
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/28/24 12:14:54.473
  STEP: Saw pod success @ 12/28/24 12:14:58.501
  I1228 12:14:58.506135 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-b240ba34-0d25-48b7-a840-bdb0081f150e container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:14:58.512
  I1228 12:14:58.531744 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3674" for this suite. @ 12/28/24 12:14:58.536
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/28/24 12:14:58.543
  I1228 12:14:58.543870 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replicaset @ 12/28/24 12:14:58.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:14:58.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:14:58.566
  I1228 12:14:58.568762 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-0b7a2548-a09e-482b-a983-c73c42f1369c
  I1228 12:14:58.578744 19 resource.go:87] Pod name my-hostname-basic-0b7a2548-a09e-482b-a983-c73c42f1369c: Found 0 pods out of 1
  I1228 12:15:03.588375 19 resource.go:87] Pod name my-hostname-basic-0b7a2548-a09e-482b-a983-c73c42f1369c: Found 1 pods out of 1
  I1228 12:15:03.588416 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-0b7a2548-a09e-482b-a983-c73c42f1369c" is running
  I1228 12:15:03.591667 19 replica_set.go:220] Pod "my-hostname-basic-0b7a2548-a09e-482b-a983-c73c42f1369c-l6kmn" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:15:00 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:14:58 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:15:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:15:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:14:58 +0000 UTC Reason: Message:}])
  I1228 12:15:03.591688 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/28/24 12:15:03.591
  I1228 12:15:03.602804 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6522" for this suite. @ 12/28/24 12:15:03.607
• [5.071 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 12/28/24 12:15:03.614
  I1228 12:15:03.614790 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 12:15:03.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:15:03.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:15:03.637
  I1228 12:15:03.640090 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  W1228 12:15:03.640717      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000e01590 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1228 12:15:06.179726      19 warnings.go:70] unknown field "alpha"
  W1228 12:15:06.179750      19 warnings.go:70] unknown field "beta"
  W1228 12:15:06.179753      19 warnings.go:70] unknown field "delta"
  W1228 12:15:06.179756      19 warnings.go:70] unknown field "epsilon"
  W1228 12:15:06.179759      19 warnings.go:70] unknown field "gamma"
  I1228 12:15:06.728019 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2778" for this suite. @ 12/28/24 12:15:06.731
• [3.125 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/28/24 12:15:06.739
  I1228 12:15:06.739517 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:15:06.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:15:06.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:15:06.759
  I1228 12:15:06.763549 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/28/24 12:15:08.131
  I1228 12:15:08.131516 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 create -f -'
  I1228 12:15:08.198282 19 builder.go:146] stderr: ""
  I1228 12:15:08.198327 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9582-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1228 12:15:08.198420 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 delete e2e-test-crd-publish-openapi-9582-crds test-foo'
  I1228 12:15:08.249264 19 builder.go:146] stderr: ""
  I1228 12:15:08.249297 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9582-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1228 12:15:08.249337 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 apply -f -'
  I1228 12:15:08.310476 19 builder.go:146] stderr: ""
  I1228 12:15:08.310507 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9582-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1228 12:15:08.310538 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 delete e2e-test-crd-publish-openapi-9582-crds test-foo'
  I1228 12:15:08.358674 19 builder.go:146] stderr: ""
  I1228 12:15:08.358706 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9582-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/28/24 12:15:08.358
  I1228 12:15:08.358821 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 create -f -'
  I1228 12:15:08.398966 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/28/24 12:15:08.399
  I1228 12:15:08.399057 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 create -f -'
  I1228 12:15:08.438870 19 builder.go:135] rc: 1
  I1228 12:15:08.438949 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 apply -f -'
  I1228 12:15:08.487641 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/28/24 12:15:08.487
  I1228 12:15:08.487791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 create -f -'
  I1228 12:15:08.526689 19 builder.go:135] rc: 1
  I1228 12:15:08.526749 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 --namespace=crd-publish-openapi-7902 apply -f -'
  I1228 12:15:08.575839 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/28/24 12:15:08.575
  I1228 12:15:08.575927 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 explain e2e-test-crd-publish-openapi-9582-crds'
  I1228 12:15:08.618275 19 builder.go:146] stderr: ""
  I1228 12:15:08.618315 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9582-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/28/24 12:15:08.618
  I1228 12:15:08.618526 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 explain e2e-test-crd-publish-openapi-9582-crds.metadata'
  I1228 12:15:08.656365 19 builder.go:146] stderr: ""
  I1228 12:15:08.656547 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9582-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1228 12:15:08.656717 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 explain e2e-test-crd-publish-openapi-9582-crds.spec'
  I1228 12:15:08.694413 19 builder.go:146] stderr: ""
  I1228 12:15:08.694436 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9582-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1228 12:15:08.694541 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 explain e2e-test-crd-publish-openapi-9582-crds.spec.bars'
  I1228 12:15:08.733862 19 builder.go:146] stderr: ""
  I1228 12:15:08.733893 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9582-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/28/24 12:15:08.734
  I1228 12:15:08.734131 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7902 explain e2e-test-crd-publish-openapi-9582-crds.spec.bars2'
  I1228 12:15:08.771475 19 builder.go:135] rc: 1
  I1228 12:15:09.996732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7902" for this suite. @ 12/28/24 12:15:10.004
• [3.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/28/24 12:15:10.012
  I1228 12:15:10.012967 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 12:15:10.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:15:10.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:15:10.033
  STEP: create the rc @ 12/28/24 12:15:10.036
  W1228 12:15:10.042240      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/28/24 12:15:15.047
  STEP: wait for all pods to be garbage collected @ 12/28/24 12:15:15.053
  STEP: Gathering metrics @ 12/28/24 12:15:20.063
  W1228 12:15:20.070193      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1228 12:15:20.070222 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1228 12:15:20.070431 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8017" for this suite. @ 12/28/24 12:15:20.075
• [10.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/28/24 12:15:20.083
  I1228 12:15:20.083431 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:15:20.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:15:20.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:15:20.108
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:15:20.112
  STEP: Saw pod success @ 12/28/24 12:15:24.137
  I1228 12:15:24.142845 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod downwardapi-volume-4580e34a-3cf5-49b5-962f-eff907915db5 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:15:24.149
  I1228 12:15:24.169391 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8542" for this suite. @ 12/28/24 12:15:24.173
• [4.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 12/28/24 12:15:24.179
  I1228 12:15:24.179497 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename disruption @ 12/28/24 12:15:24.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:15:24.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:15:24.2
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/28/24 12:15:24.203
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:15:24.209
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/28/24 12:15:26.221
  STEP: Waiting for all pods to be running @ 12/28/24 12:15:26.221
  I1228 12:15:26.225122 19 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 12/28/24 12:15:28.228
  STEP: Updating the pdb to allow a pod to be evicted @ 12/28/24 12:15:28.239
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:15:28.247
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/28/24 12:15:30.252
  STEP: Waiting for all pods to be running @ 12/28/24 12:15:30.252
  STEP: Waiting for the pdb to observed all healthy pods @ 12/28/24 12:15:30.257
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/28/24 12:15:30.285
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:15:30.309
  STEP: Waiting for all pods to be running @ 12/28/24 12:15:32.314
  STEP: locating a running pod @ 12/28/24 12:15:32.318
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/28/24 12:15:32.329
  STEP: Waiting for the pdb to be deleted @ 12/28/24 12:15:32.337
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/28/24 12:15:32.34
  STEP: Waiting for all pods to be running @ 12/28/24 12:15:32.34
  I1228 12:15:32.362917 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-686" for this suite. @ 12/28/24 12:15:32.367
• [8.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/28/24 12:15:32.375
  I1228 12:15:32.375408 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:15:32.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:15:32.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:15:32.424
  STEP: Creating pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771 @ 12/28/24 12:15:32.427
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 12:15:34.448
  I1228 12:15:34.451677 19 container_probe.go:1749] Initial restart count of pod liveness-84199596-c230-4a41-920c-02bd43c40b01 is 0
  I1228 12:15:34.456538 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:36.462063 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:38.467021 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:40.473129 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:42.478418 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:44.483438 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:46.488052 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:48.494300 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:50.499854 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:52.505460 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:54.511143 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:54.511176 19 container_probe.go:1763] Restart count of pod container-probe-771/liveness-84199596-c230-4a41-920c-02bd43c40b01 is now 1 (20.059476301s elapsed)
  I1228 12:15:56.516708 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:15:58.523117 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:00.528911 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:02.534119 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:04.541053 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:06.546086 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:08.552948 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:10.558398 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:12.563926 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:14.569013 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:14.569048 19 container_probe.go:1763] Restart count of pod container-probe-771/liveness-84199596-c230-4a41-920c-02bd43c40b01 is now 2 (40.11734806s elapsed)
  I1228 12:16:16.573959 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:18.580491 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:20.585201 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:22.590378 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:24.596916 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:26.602634 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:28.609343 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:30.615080 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:32.619971 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:34.624045 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:34.624082 19 container_probe.go:1763] Restart count of pod container-probe-771/liveness-84199596-c230-4a41-920c-02bd43c40b01 is now 3 (1m0.17238229s elapsed)
  I1228 12:16:36.628877 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:38.635372 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:40.640490 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:42.646018 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:44.651709 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:46.656804 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:48.663836 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:50.669550 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:52.674181 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:54.679805 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:54.679843 19 container_probe.go:1763] Restart count of pod container-probe-771/liveness-84199596-c230-4a41-920c-02bd43c40b01 is now 4 (1m20.228142057s elapsed)
  I1228 12:16:56.685440 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:16:58.692095 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:00.697363 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:02.702529 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:04.709296 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:06.715205 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:08.721701 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:10.728511 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:12.733706 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:14.738552 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:16.743956 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:18.749189 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:20.754135 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:22.760153 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:24.764975 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:26.769886 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:28.774947 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:30.779884 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:32.785425 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:34.790639 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:36.795382 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:38.801150 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:40.805823 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:42.813525 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:44.820891 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:46.826749 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:48.835424 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:50.843344 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:52.848154 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:54.852633 19 container_probe.go:1759] Get pod liveness-84199596-c230-4a41-920c-02bd43c40b01 in namespace container-probe-771
  I1228 12:17:54.852687 19 container_probe.go:1763] Restart count of pod container-probe-771/liveness-84199596-c230-4a41-920c-02bd43c40b01 is now 5 (2m20.400987167s elapsed)
  STEP: deleting the pod @ 12/28/24 12:17:54.852
  I1228 12:17:54.867270 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-771" for this suite. @ 12/28/24 12:17:54.871
• [142.505 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 12/28/24 12:17:54.881
  I1228 12:17:54.881057 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 12:17:54.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:17:54.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:17:54.903
  STEP: Creating a test headless service @ 12/28/24 12:17:54.906
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9786.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9786.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/28/24 12:17:54.911
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9786.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9786.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/28/24 12:17:54.911
  STEP: creating a pod to probe DNS @ 12/28/24 12:17:54.911
  STEP: submitting the pod to kubernetes @ 12/28/24 12:17:54.911
  STEP: retrieving the pod @ 12/28/24 12:18:00.944
  STEP: looking for the results for each expected name from probers @ 12/28/24 12:18:00.947
  I1228 12:18:00.965178 19 dns_common.go:527] DNS probes using dns-9786/dns-test-39b0ded5-96fd-4b2b-ba19-a44abd944259 succeeded

  STEP: deleting the pod @ 12/28/24 12:18:00.965
  STEP: deleting the test headless service @ 12/28/24 12:18:00.982
  I1228 12:18:00.993740 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9786" for this suite. @ 12/28/24 12:18:00.996
• [6.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/28/24 12:18:01.005
  I1228 12:18:01.005726 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:18:01.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:01.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:01.025
  STEP: Creating configMap with name configmap-test-volume-4fec84eb-4e96-4e97-b3fe-6df985c78202 @ 12/28/24 12:18:01.028
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:18:01.034
  STEP: Saw pod success @ 12/28/24 12:18:05.06
  I1228 12:18:05.065712 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-f497e8c7-f61f-4cb7-b9a8-ed46abf7cd4d container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:18:05.077
  I1228 12:18:05.095274 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6594" for this suite. @ 12/28/24 12:18:05.099
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/28/24 12:18:05.107
  I1228 12:18:05.107124 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:18:05.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:05.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:05.128
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/28/24 12:18:05.131
  STEP: Saw pod success @ 12/28/24 12:18:09.155
  I1228 12:18:09.159499 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-3d9109e6-7472-4b10-8653-7cea9599f09d container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:18:09.167
  I1228 12:18:09.185640 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1718" for this suite. @ 12/28/24 12:18:09.19
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/28/24 12:18:09.198
  I1228 12:18:09.198492 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:18:09.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:09.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:09.221
  STEP: Creating secret with name projected-secret-test-4b23d0bf-689d-4870-8d64-d126f05eed80 @ 12/28/24 12:18:09.224
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:18:09.229
  STEP: Saw pod success @ 12/28/24 12:18:13.258
  I1228 12:18:13.261036 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-secrets-c2aafa95-eebd-4b25-a55e-8625de627e02 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:18:13.268
  I1228 12:18:13.288272 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6779" for this suite. @ 12/28/24 12:18:13.291
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/28/24 12:18:13.299
  I1228 12:18:13.299797 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:18:13.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:13.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:13.324
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:18:13.327
  STEP: Saw pod success @ 12/28/24 12:18:17.348
  I1228 12:18:17.351756 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-e72275c3-5b8d-47fa-96d0-6a83bf4a2eca container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:18:17.36
  I1228 12:18:17.379793 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7610" for this suite. @ 12/28/24 12:18:17.383
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/28/24 12:18:17.391
  I1228 12:18:17.391513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:18:17.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:17.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:17.415
  STEP: Creating secret with name secret-test-9f080370-7b27-4e00-acbf-79e1f7cfd36c @ 12/28/24 12:18:17.42
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:18:17.426
  STEP: Saw pod success @ 12/28/24 12:18:21.45
  I1228 12:18:21.453986 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-secrets-bac96291-04ad-46cd-af1b-396a0694488e container secret-env-test: <nil>
  STEP: delete the pod @ 12/28/24 12:18:21.463
  I1228 12:18:21.480332 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8234" for this suite. @ 12/28/24 12:18:21.484
• [4.098 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 12/28/24 12:18:21.489
  I1228 12:18:21.489809 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:18:21.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:21.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:21.512
  STEP: Setting up server cert @ 12/28/24 12:18:21.538
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:18:21.659
  STEP: Deploying the webhook pod @ 12/28/24 12:18:21.667
  STEP: Wait for the deployment to be ready @ 12/28/24 12:18:21.68
  I1228 12:18:21.690628 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/28/24 12:18:23.703
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:18:23.712
  I1228 12:18:24.713211 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/28/24 12:18:24.722
  STEP: create the configmap with a random name @ 12/28/24 12:18:24.746
  STEP: verify the configmap is mutated @ 12/28/24 12:18:24.756
  STEP: create the configmap with 'skip-me' name @ 12/28/24 12:18:24.756
  I1228 12:18:24.816060 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4080" for this suite. @ 12/28/24 12:18:24.819
  STEP: Destroying namespace "webhook-markers-709" for this suite. @ 12/28/24 12:18:24.825
• [3.343 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/28/24 12:18:24.833
  I1228 12:18:24.833222 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sysctl @ 12/28/24 12:18:24.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:24.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:24.851
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/28/24 12:18:24.854
  I1228 12:18:24.860257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1716" for this suite. @ 12/28/24 12:18:24.864
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/28/24 12:18:24.873
  I1228 12:18:24.873701 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:18:24.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:24.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:24.892
  I1228 12:18:24.896043 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1228 12:18:24.907183 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1228 12:18:29.910760 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/28/24 12:18:29.91
  I1228 12:18:29.910832 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1228 12:18:29.915789 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1228 12:18:29.922762 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1228 12:18:31.932595 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1228 12:18:31.935907 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1228 12:18:31.948273 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6029255f-274f-41b8-82b2-a11539f73b2b",
      ResourceVersion: (string) (len=4) "6751",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 12:18:31.951992 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0faf2d82-9d35-4f15-81af-5491f67f5aff",
      ResourceVersion: (string) (len=4) "6741",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6029255f-274f-41b8-82b2-a11539f73b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 30 32 39 32 35  35 66 2d 32 37 34 66 2d  |\"6029255f-274f-|
              00000120  34 31 62 38 2d 38 32 62  32 2d 61 31 31 35 33 39  |41b8-82b2-a11539|
              00000130  66 37 33 62 32 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f73b2b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:18:31.952477 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1228 12:18:31.952732 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b197f9f-eadd-4fb4-b01b-54fbe306fa46",
      ResourceVersion: (string) (len=4) "6750",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6029255f-274f-41b8-82b2-a11539f73b2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 30 32 39 32 35 35  |"uid\":\"6029255|
              000000b0  66 2d 32 37 34 66 2d 34  31 62 38 2d 38 32 62 32  |f-274f-41b8-82b2|
              000000c0  2d 61 31 31 35 33 39 66  37 33 62 32 62 5c 22 7d  |-a11539f73b2b\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:18:31.958437 19 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-v5zfr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-v5zfr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-9851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7df0001e-002d-4090-9ce1-3eff56e01ca5",
      ResourceVersion: (string) (len=4) "6740",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "0faf2d82-9d35-4f15-81af-5491f67f5aff",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 66  61 66 32 64 38 32 2d 39  |d\":\"0faf2d82-9|
              00000090  64 33 35 2d 34 66 31 35  2d 38 31 61 66 2d 35 34  |d35-4f15-81af-54|
              000000a0  39 31 66 36 37 66 35 61  66 66 5c 22 7d 22 3a 7b  |91f67f5aff\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 39 31 5c 22 7d 22  |2.168.206.91\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfck6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfck6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=14) "192.168.206.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.206.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870985110,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://c9fb350abc178cd87f7a8ca37bde2690af27f81146b0c35dfb0da35321ed846b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jfck6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:18:31.959665 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9851" for this suite. @ 12/28/24 12:18:31.963
• [7.097 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 12/28/24 12:18:31.97
  I1228 12:18:31.970748 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:18:31.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:31.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:31.991
  STEP: Setting up server cert @ 12/28/24 12:18:32.017
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:18:32.218
  STEP: Deploying the webhook pod @ 12/28/24 12:18:32.224
  STEP: Wait for the deployment to be ready @ 12/28/24 12:18:32.237
  I1228 12:18:32.249839 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/28/24 12:18:34.262
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:18:34.272
  I1228 12:18:35.272362 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/28/24 12:18:35.281
  STEP: create a pod that should be denied by the webhook @ 12/28/24 12:18:35.295
  STEP: create a pod that causes the webhook to hang @ 12/28/24 12:18:35.307
  STEP: create a configmap that should be denied by the webhook @ 12/28/24 12:18:45.315
  STEP: create a configmap that should be admitted by the webhook @ 12/28/24 12:18:45.346
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/28/24 12:18:45.355
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/28/24 12:18:45.364
  STEP: create a namespace that bypass the webhook @ 12/28/24 12:18:45.369
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/28/24 12:18:45.389
  I1228 12:18:45.442679 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4471" for this suite. @ 12/28/24 12:18:45.445
  STEP: Destroying namespace "webhook-markers-3543" for this suite. @ 12/28/24 12:18:45.455
  STEP: Destroying namespace "exempted-namespace-7053" for this suite. @ 12/28/24 12:18:45.461
• [13.498 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/28/24 12:18:45.468
  I1228 12:18:45.468454 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pod-network-test @ 12/28/24 12:18:45.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:18:45.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:18:45.499
  STEP: Performing setup for networking test in namespace pod-network-test-5949 @ 12/28/24 12:18:45.502
  STEP: creating a selector @ 12/28/24 12:18:45.502
  STEP: Creating the service pods in kubernetes @ 12/28/24 12:18:45.502
  I1228 12:18:45.502625 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/28/24 12:19:07.619
  I1228 12:19:09.661417 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1228 12:19:09.661450 19 utils.go:496] Going to poll 192.168.189.14 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1228 12:19:09.665040 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.189.14:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5949 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:19:09.665065 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:19:09.665470 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:19:09.665510 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5949/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.189.14%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1228 12:19:09.708411 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1228 12:19:09.708439 19 utils.go:496] Going to poll 192.168.206.93 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1228 12:19:09.713076 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.206.93:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5949 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:19:09.713094 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:19:09.713466 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:19:09.713503 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5949/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.206.93%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1228 12:19:09.758960 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1228 12:19:09.758997 19 utils.go:496] Going to poll 192.168.178.11 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1228 12:19:09.761989 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.178.11:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5949 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:19:09.762003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:19:09.762355 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:19:09.762391 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5949/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.178.11%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1228 12:19:09.809996 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1228 12:19:09.810112 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5949" for this suite. @ 12/28/24 12:19:09.821
• [24.363 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/28/24 12:19:09.831
  I1228 12:19:09.831111 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:19:09.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:19:09.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:19:09.86
  STEP: Creating projection with secret that has name secret-emptykey-test-e2b76cbd-05bc-4ea2-98ef-7294b571a59b @ 12/28/24 12:19:09.864
  I1228 12:19:09.867196 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4676" for this suite. @ 12/28/24 12:19:09.87
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 12/28/24 12:19:09.879
  I1228 12:19:09.879118 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:19:09.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:19:09.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:19:09.9
  STEP: creating Agnhost RC @ 12/28/24 12:19:09.903
  I1228 12:19:09.903334 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4827 create -f -'
  I1228 12:19:09.981173 19 builder.go:146] stderr: ""
  I1228 12:19:09.981198 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/28/24 12:19:09.981
  I1228 12:19:10.987748 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 12:19:10.987777 19 framework.go:733] Found 0 / 1
  I1228 12:19:11.986038 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 12:19:11.986072 19 framework.go:733] Found 1 / 1
  I1228 12:19:11.986087 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/28/24 12:19:11.986
  I1228 12:19:11.990695 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 12:19:11.990714 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1228 12:19:11.990757 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4827 patch pod agnhost-primary-t9pm5 -p {"metadata":{"annotations":{"x":"y"}}}'
  I1228 12:19:12.037740 19 builder.go:146] stderr: ""
  I1228 12:19:12.037771 19 builder.go:147] stdout: "pod/agnhost-primary-t9pm5 patched\n"
  STEP: checking annotations @ 12/28/24 12:19:12.037
  I1228 12:19:12.042678 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 12:19:12.042699 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1228 12:19:12.042836 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4827" for this suite. @ 12/28/24 12:19:12.046
• [2.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/28/24 12:19:12.053
  I1228 12:19:12.053820 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replication-controller @ 12/28/24 12:19:12.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:19:12.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:19:12.071
  STEP: creating a ReplicationController @ 12/28/24 12:19:12.078
  STEP: waiting for RC to be added @ 12/28/24 12:19:12.084
  STEP: waiting for available Replicas @ 12/28/24 12:19:12.085
  STEP: patching ReplicationController @ 12/28/24 12:19:13.156
  STEP: waiting for RC to be modified @ 12/28/24 12:19:13.165
  STEP: patching ReplicationController status @ 12/28/24 12:19:13.165
  STEP: waiting for RC to be modified @ 12/28/24 12:19:13.171
  STEP: waiting for available Replicas @ 12/28/24 12:19:13.172
  STEP: fetching ReplicationController status @ 12/28/24 12:19:13.178
  STEP: patching ReplicationController scale @ 12/28/24 12:19:13.183
  STEP: waiting for RC to be modified @ 12/28/24 12:19:13.19
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/28/24 12:19:13.191
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/28/24 12:19:14.52
  STEP: updating ReplicationController status @ 12/28/24 12:19:14.524
  STEP: waiting for RC to be modified @ 12/28/24 12:19:14.531
  STEP: listing all ReplicationControllers @ 12/28/24 12:19:14.531
  STEP: checking that ReplicationController has expected values @ 12/28/24 12:19:14.538
  STEP: deleting ReplicationControllers by collection @ 12/28/24 12:19:14.538
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/28/24 12:19:14.548
  I1228 12:19:14.596263 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1228 12:19:14.596377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-751" for this suite. @ 12/28/24 12:19:14.601
• [2.555 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/28/24 12:19:14.609
  I1228 12:19:14.609411 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pod-network-test @ 12/28/24 12:19:14.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:19:14.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:19:14.632
  STEP: Performing setup for networking test in namespace pod-network-test-7536 @ 12/28/24 12:19:14.635
  STEP: creating a selector @ 12/28/24 12:19:14.635
  STEP: Creating the service pods in kubernetes @ 12/28/24 12:19:14.635
  I1228 12:19:14.635473 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1228 12:19:15.596549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:16.596683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:17.596854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:18.597869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:19.598416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:20.598527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:21.598671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:22.598878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:23.599009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:24.599110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:25.599279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:26.599487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:27.599683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:28.599888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:29.600884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:30.601105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:31.601272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:32.601393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:33.601489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:34.601606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:35.601776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:36.601852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/28/24 12:19:36.752
  E1228 12:19:37.601937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:38.602024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:19:38.787004 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1228 12:19:38.787034 19 utils.go:496] Going to poll 192.168.189.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1228 12:19:38.790066 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.189.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7536 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:19:38.790089 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:19:38.790481 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:19:38.790515 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7536/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.189.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1228 12:19:39.602674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:19:39.840994 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1228 12:19:39.841038 19 utils.go:496] Going to poll 192.168.206.97 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1228 12:19:39.845069 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.206.97 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7536 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:19:39.845100 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:19:39.845532 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:19:39.845575 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7536/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.206.97+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1228 12:19:40.602917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:19:40.891312 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1228 12:19:40.891367 19 utils.go:496] Going to poll 192.168.178.12 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1228 12:19:40.895576 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.178.12 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7536 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:19:40.895595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:19:40.896027 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:19:40.896065 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7536/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.178.12+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1228 12:19:41.603009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:19:41.936842 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1228 12:19:41.936975 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7536" for this suite. @ 12/28/24 12:19:41.941
• [27.339 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/28/24 12:19:41.947
  I1228 12:19:41.948011 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename cronjob @ 12/28/24 12:19:41.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:19:41.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:19:41.969
  STEP: Creating a ForbidConcurrent cronjob @ 12/28/24 12:19:41.972
  STEP: Ensuring a job is scheduled @ 12/28/24 12:19:41.981
  E1228 12:19:42.603513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:43.603820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:44.604864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:45.604966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:46.605879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:47.606857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:48.607778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:49.607856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:50.608966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:51.609079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:52.609222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:53.609395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:54.609802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:55.610017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:56.610736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:57.610955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:58.611066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:19:59.611301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:00.611810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:01.611930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/28/24 12:20:01.986
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/28/24 12:20:01.991
  STEP: Ensuring no more jobs are scheduled @ 12/28/24 12:20:01.996
  STEP: Removing cronjob @ 12/28/24 12:20:02
  I1228 12:20:02.007675 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5098" for this suite. @ 12/28/24 12:20:02.012
• [20.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 12/28/24 12:20:02.019
  I1228 12:20:02.019460 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:20:02.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:02.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:02.047
  STEP: Setting up server cert @ 12/28/24 12:20:02.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:20:02.36
  STEP: Deploying the webhook pod @ 12/28/24 12:20:02.371
  STEP: Wait for the deployment to be ready @ 12/28/24 12:20:02.385
  I1228 12:20:02.396322 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 12:20:02.612711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:03.613000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:20:04.41
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:20:04.422
  E1228 12:20:04.613027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:20:05.422913 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/28/24 12:20:05.432
  STEP: create a pod @ 12/28/24 12:20:05.445
  E1228 12:20:05.613405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:06.613529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/28/24 12:20:07.464
  I1228 12:20:07.464068 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=webhook-3643 attach --namespace=webhook-3643 to-be-attached-pod -i -c=container1'
  I1228 12:20:07.525462 19 builder.go:135] rc: 1
  I1228 12:20:07.569277 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3643" for this suite. @ 12/28/24 12:20:07.575
  STEP: Destroying namespace "webhook-markers-9764" for this suite. @ 12/28/24 12:20:07.581
• [5.571 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/28/24 12:20:07.59
  I1228 12:20:07.590350 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:20:07.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:07.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:07.612
  E1228 12:20:07.613703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating pod @ 12/28/24 12:20:07.616
  E1228 12:20:08.613910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:09.613966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:20:09.643623 19 pods.go:83] Pod pod-hostip-0b5788b2-94b6-43fd-b819-a7be88131229 has hostIP: 172.31.65.66
  I1228 12:20:09.643762 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8943" for this suite. @ 12/28/24 12:20:09.647
• [2.063 seconds]
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/28/24 12:20:09.653
  I1228 12:20:09.653708 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:20:09.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:09.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:09.677
  E1228 12:20:10.614611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:11.614771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:12.614897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:13.615003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:14.615099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:15.615170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:16.615287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:17.615374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:18.615857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:19.616859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:20.617867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:21.618090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:22.618197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:23.618338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:24.618957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:25.619055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:26.619248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:27.619364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:28.619497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:29.619629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:30.619810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:31.620030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:20:31.757367 19 container_probe.go:92] Container started at 2024-12-28 12:20:10 +0000 UTC, pod became ready at 2024-12-28 12:20:30 +0000 UTC
  I1228 12:20:31.757479 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1142" for this suite. @ 12/28/24 12:20:31.762
• [22.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/28/24 12:20:31.77
  I1228 12:20:31.770343 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 12:20:31.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:31.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:31.79
  STEP: create the rc1 @ 12/28/24 12:20:31.797
  STEP: create the rc2 @ 12/28/24 12:20:31.802
  E1228 12:20:32.620955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:33.622009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:34.622299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:35.622841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:36.622973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:37.623017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/28/24 12:20:37.814
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/28/24 12:20:38.273
  STEP: wait for the rc to be deleted @ 12/28/24 12:20:38.283
  E1228 12:20:38.623905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:39.623982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:40.624068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:41.624141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:42.624381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:20:43.295548 19 garbage_collector.go:762] 71 pods remaining
  I1228 12:20:43.295579 19 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I1228 12:20:43.295584 19 garbage_collector.go:770] 
  E1228 12:20:43.625249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:44.625332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:45.625427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:46.625839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:47.625948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/28/24 12:20:48.295
  W1228 12:20:48.300472      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1228 12:20:48.300502 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1228 12:20:48.300551 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-269rv" in namespace "gc-4272"
  I1228 12:20:48.312133 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2gz49" in namespace "gc-4272"
  I1228 12:20:48.328527 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2k4sz" in namespace "gc-4272"
  I1228 12:20:48.344503 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2z7bl" in namespace "gc-4272"
  I1228 12:20:48.360230 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4hmns" in namespace "gc-4272"
  I1228 12:20:48.374013 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4whrn" in namespace "gc-4272"
  I1228 12:20:48.388921 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xhch" in namespace "gc-4272"
  I1228 12:20:48.404362 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59qqc" in namespace "gc-4272"
  I1228 12:20:48.418240 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pqxb" in namespace "gc-4272"
  I1228 12:20:48.438343 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rww9" in namespace "gc-4272"
  I1228 12:20:48.453432 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5v6w9" in namespace "gc-4272"
  I1228 12:20:48.470550 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6nmwh" in namespace "gc-4272"
  I1228 12:20:48.481836 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pnff" in namespace "gc-4272"
  I1228 12:20:48.503708 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qfjw" in namespace "gc-4272"
  I1228 12:20:48.516096 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vmds" in namespace "gc-4272"
  I1228 12:20:48.532450 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6x7wg" in namespace "gc-4272"
  I1228 12:20:48.547167 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-727ng" in namespace "gc-4272"
  I1228 12:20:48.558023 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7b277" in namespace "gc-4272"
  I1228 12:20:48.580530 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7f6x9" in namespace "gc-4272"
  I1228 12:20:48.593754 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jncs" in namespace "gc-4272"
  I1228 12:20:48.611698 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nq6x" in namespace "gc-4272"
  E1228 12:20:48.627435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:20:48.637799 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7srgx" in namespace "gc-4272"
  I1228 12:20:48.664483 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7tm9s" in namespace "gc-4272"
  I1228 12:20:48.680797 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87bmv" in namespace "gc-4272"
  I1228 12:20:48.694887 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89tr9" in namespace "gc-4272"
  I1228 12:20:48.713699 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bg6q" in namespace "gc-4272"
  I1228 12:20:48.730523 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gh2p" in namespace "gc-4272"
  I1228 12:20:48.746590 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lcgp" in namespace "gc-4272"
  I1228 12:20:48.761249 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95z9t" in namespace "gc-4272"
  I1228 12:20:48.773544 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zw4x" in namespace "gc-4272"
  I1228 12:20:48.786105 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgs7k" in namespace "gc-4272"
  I1228 12:20:48.800488 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bxqqq" in namespace "gc-4272"
  I1228 12:20:48.821014 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9256" in namespace "gc-4272"
  I1228 12:20:48.838266 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdsbc" in namespace "gc-4272"
  I1228 12:20:48.852860 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgccz" in namespace "gc-4272"
  I1228 12:20:48.870851 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwh6k" in namespace "gc-4272"
  I1228 12:20:48.885475 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddb6h" in namespace "gc-4272"
  I1228 12:20:48.902983 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddw2j" in namespace "gc-4272"
  I1228 12:20:48.916085 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgbfn" in namespace "gc-4272"
  I1228 12:20:48.930808 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtbjp" in namespace "gc-4272"
  I1228 12:20:48.942775 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f5m8n" in namespace "gc-4272"
  I1228 12:20:48.955554 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ftxvh" in namespace "gc-4272"
  I1228 12:20:48.974304 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gj9r7" in namespace "gc-4272"
  I1228 12:20:49.000028 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gmtgb" in namespace "gc-4272"
  I1228 12:20:49.040215 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gw7mw" in namespace "gc-4272"
  I1228 12:20:49.058929 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hcppj" in namespace "gc-4272"
  I1228 12:20:49.076349 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j4pvf" in namespace "gc-4272"
  I1228 12:20:49.094864 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jfvbv" in namespace "gc-4272"
  I1228 12:20:49.107965 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k6z7m" in namespace "gc-4272"
  I1228 12:20:49.123689 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k7txg" in namespace "gc-4272"
  I1228 12:20:49.139785 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4272" for this suite. @ 12/28/24 12:20:49.151
• [17.394 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/28/24 12:20:49.165
  I1228 12:20:49.165900 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:20:49.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:49.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:49.205
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:20:49.209
  E1228 12:20:49.628534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:50.628627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:51.628717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:52.628848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:20:53.238
  I1228 12:20:53.241932 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-5197a6af-7fd6-4c1b-8849-b5fa3067ad57 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:20:53.256
  I1228 12:20:53.275900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8408" for this suite. @ 12/28/24 12:20:53.279
• [4.122 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 12/28/24 12:20:53.288
  I1228 12:20:53.288371 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubelet-test @ 12/28/24 12:20:53.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:53.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:53.308
  E1228 12:20:53.629287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:54.630346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:20:55.338224 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9272" for this suite. @ 12/28/24 12:20:55.347
• [2.065 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/28/24 12:20:55.353
  I1228 12:20:55.353690 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/28/24 12:20:55.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:55.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:55.374
  I1228 12:20:55.381459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7823" for this suite. @ 12/28/24 12:20:55.384
• [0.038 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 12/28/24 12:20:55.391
  I1228 12:20:55.391601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubelet-test @ 12/28/24 12:20:55.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:55.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:55.412
  I1228 12:20:55.444140 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4392" for this suite. @ 12/28/24 12:20:55.447
• [0.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 12/28/24 12:20:55.454
  I1228 12:20:55.454861 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 12:20:55.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:20:55.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:20:55.475
  STEP: Creating a test headless service @ 12/28/24 12:20:55.478
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3192.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3192.svc.cluster.local;sleep 1; done
   @ 12/28/24 12:20:55.487
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3192.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3192.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3192.svc.cluster.local;sleep 1; done
   @ 12/28/24 12:20:55.487
  STEP: creating a pod to probe DNS @ 12/28/24 12:20:55.487
  STEP: submitting the pod to kubernetes @ 12/28/24 12:20:55.487
  E1228 12:20:55.630929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:56.631154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 12:20:57.504
  STEP: looking for the results for each expected name from probers @ 12/28/24 12:20:57.508
  I1228 12:20:57.512863 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.516452 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.523734 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.527361 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.531074 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.535950 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.539392 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.542863 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3192.svc.cluster.local from pod dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b: the server could not find the requested resource (get pods dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b)
  I1228 12:20:57.542891 19 dns_common.go:489] Lookups using dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3192.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3192.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3192.svc.cluster.local jessie_udp@dns-test-service-2.dns-3192.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3192.svc.cluster.local]

  I1228 12:20:57.550725 19 dns_common.go:495] Pod client logs for webserver: 
  I1228 12:20:57.556753 19 dns_common.go:495] Pod client logs for querier: 
  I1228 12:20:57.563183 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1228 12:20:57.631450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:58.631684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:20:59.631819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:00.632006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:01.632200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:21:02.545831 19 dns_common.go:527] DNS probes using dns-3192/dns-test-42cd7859-1f24-4412-b9e5-a46d7ba3766b succeeded

  STEP: deleting the pod @ 12/28/24 12:21:02.545
  STEP: deleting the test headless service @ 12/28/24 12:21:02.561
  I1228 12:21:02.574387 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3192" for this suite. @ 12/28/24 12:21:02.577
• [7.135 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/28/24 12:21:02.589
  I1228 12:21:02.589874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 12:21:02.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:21:02.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:21:02.611
  E1228 12:21:02.632622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:03.632809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:04.632993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:21:04.634642 19 delete.go:62] Deleting pod "var-expansion-92112626-17d9-4bb5-b180-33f55cc86197" in namespace "var-expansion-4865"
  I1228 12:21:04.643459 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-92112626-17d9-4bb5-b180-33f55cc86197" to be fully deleted
  E1228 12:21:05.633787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:06.633988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:21:06.652727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4865" for this suite. @ 12/28/24 12:21:06.657
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/28/24 12:21:06.665
  I1228 12:21:06.665525 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename podtemplate @ 12/28/24 12:21:06.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:21:06.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:21:06.692
  STEP: Create set of pod templates @ 12/28/24 12:21:06.695
  I1228 12:21:06.700856 19 podtemplates.go:143] created test-podtemplate-1
  I1228 12:21:06.705044 19 podtemplates.go:143] created test-podtemplate-2
  I1228 12:21:06.710751 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/28/24 12:21:06.71
  STEP: delete collection of pod templates @ 12/28/24 12:21:06.713
  I1228 12:21:06.713512 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/28/24 12:21:06.73
  I1228 12:21:06.730968 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1228 12:21:06.734668 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3582" for this suite. @ 12/28/24 12:21:06.738
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/28/24 12:21:06.745
  I1228 12:21:06.745520 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/28/24 12:21:06.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:21:06.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:21:06.767
  I1228 12:21:06.769939 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:21:07.634938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:21:07.794255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-767" for this suite. @ 12/28/24 12:21:07.797
• [1.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/28/24 12:21:07.804
  I1228 12:21:07.804666 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:21:07.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:21:07.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:21:07.824
  STEP: Creating configMap with name cm-test-opt-del-871f598e-5b1c-4f75-81ad-1464358249c0 @ 12/28/24 12:21:07.831
  STEP: Creating configMap with name cm-test-opt-upd-2e040f53-e4cd-4637-9f43-bd55b5347a6d @ 12/28/24 12:21:07.837
  STEP: Creating the pod @ 12/28/24 12:21:07.842
  E1228 12:21:08.635030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:09.635466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-871f598e-5b1c-4f75-81ad-1464358249c0 @ 12/28/24 12:21:09.896
  STEP: Updating configmap cm-test-opt-upd-2e040f53-e4cd-4637-9f43-bd55b5347a6d @ 12/28/24 12:21:09.903
  STEP: Creating configMap with name cm-test-opt-create-af176647-aeab-4202-881d-e67641e4137d @ 12/28/24 12:21:09.909
  STEP: waiting to observe update in volume @ 12/28/24 12:21:09.914
  E1228 12:21:10.635877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:11.635986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:12.636067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:13.636174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:14.636207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:15.636332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:16.636452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:17.636712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:18.636741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:19.636819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:20.637844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:21.637992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:22.638162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:23.639998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:24.640991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:25.641161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:26.641204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:27.641352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:28.642265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:29.642382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:30.642940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:31.643751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:32.643835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:33.644038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:34.644864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:35.644970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:36.645781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:37.645854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:38.646869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:39.647844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:40.648431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:41.648666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:42.649159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:43.649388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:44.649867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:45.649947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:46.650010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:47.650231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:48.651105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:49.651227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:50.651328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:51.651541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:52.652139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:53.652368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:54.653391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:55.654368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:56.654458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:57.654557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:58.654842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:21:59.655852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:00.656337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:01.656442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:02.656559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:03.656782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:04.657566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:05.657866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:06.658837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:07.659065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:08.659784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:09.659920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:10.660323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:11.660513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:12.660587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:13.660786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:14.661508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:15.661735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:16.662635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:17.662872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:18.663758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:19.663819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:20.664553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:21.664695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:22.665739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:23.665816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:24.666839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:25.667875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:26.668862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:27.669089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:28.669216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:29.669415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:30.670177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:31.670510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:32.671546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:33.671797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:34.672740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:35.672844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:36.672972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:37.673034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:22:38.350729 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1006" for this suite. @ 12/28/24 12:22:38.354
• [90.557 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 12/28/24 12:22:38.362
  I1228 12:22:38.362053 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:22:38.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:22:38.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:22:38.387
  STEP: Setting up server cert @ 12/28/24 12:22:38.415
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:22:38.618
  STEP: Deploying the webhook pod @ 12/28/24 12:22:38.629
  STEP: Wait for the deployment to be ready @ 12/28/24 12:22:38.647
  I1228 12:22:38.656848 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 12:22:38.673969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:39.674877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:22:40.674
  E1228 12:22:40.675515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:22:40.689
  E1228 12:22:41.676103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:22:41.690442 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/28/24 12:22:41.699
  STEP: verifying the mutating webhook match conditions @ 12/28/24 12:22:41.708
  STEP: updating the mutating webhook match conditions @ 12/28/24 12:22:41.712
  STEP: verifying the mutating webhook match conditions @ 12/28/24 12:22:41.72
  I1228 12:22:41.768701 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3099" for this suite. @ 12/28/24 12:22:41.772
  STEP: Destroying namespace "webhook-markers-3038" for this suite. @ 12/28/24 12:22:41.783
• [3.432 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/28/24 12:22:41.793
  I1228 12:22:41.793891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:22:41.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:22:41.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:22:41.819
  STEP: Creating a pod to test downward api env vars @ 12/28/24 12:22:41.822
  E1228 12:22:42.676310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:43.676862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:44.677872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:45.677999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:22:45.848
  I1228 12:22:45.851674 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downward-api-13eac2d0-7b53-4c11-9d00-830bd1db9f36 container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 12:22:45.864
  I1228 12:22:45.882301 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1895" for this suite. @ 12/28/24 12:22:45.886
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 12/28/24 12:22:45.893
  I1228 12:22:45.893155 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename disruption @ 12/28/24 12:22:45.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:22:45.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:22:45.915
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:22:45.924
  E1228 12:22:46.678906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:47.679116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/28/24 12:22:47.953
  I1228 12:22:47.959570 19 disruption.go:691] running pods: 0 < 3
  E1228 12:22:48.679148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:49.679266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:22:49.962555 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9865" for this suite. @ 12/28/24 12:22:49.966
• [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/28/24 12:22:49.975
  I1228 12:22:49.975431 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 12:22:49.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:22:49.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:22:49.997
  STEP: create the rc @ 12/28/24 12:22:50.005
  W1228 12:22:50.011824      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1228 12:22:50.679777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:51.679814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:52.680236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:53.680221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:54.682937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:55.684134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/28/24 12:22:56.017
  STEP: wait for the rc to be deleted @ 12/28/24 12:22:56.026
  E1228 12:22:56.684079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:57.684987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:58.685105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:22:59.685844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:00.685974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/28/24 12:23:01.033
  E1228 12:23:01.686306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:02.686576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:03.686884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:04.687118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:05.687434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:06.687881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:07.687974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:08.688159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:09.688434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:10.688632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:11.688879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:12.689924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:13.690113      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:14.690314      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:15.690569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:16.690871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:17.691003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:18.691237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:19.691357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:20.691572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:21.691786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:22.691991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:23.692103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:24.692298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:25.692549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:26.692856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:27.693061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:28.693869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:29.694841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:30.694939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/28/24 12:23:31.042
  W1228 12:23:31.048789      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1228 12:23:31.048818 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1228 12:23:31.048986 19 delete.go:95] Deleting pod "simpletest.rc-22fql" in namespace "gc-9327"
  I1228 12:23:31.062846 19 delete.go:95] Deleting pod "simpletest.rc-275r5" in namespace "gc-9327"
  I1228 12:23:31.080754 19 delete.go:95] Deleting pod "simpletest.rc-2g7vj" in namespace "gc-9327"
  I1228 12:23:31.096335 19 delete.go:95] Deleting pod "simpletest.rc-2hc9p" in namespace "gc-9327"
  I1228 12:23:31.109243 19 delete.go:95] Deleting pod "simpletest.rc-2hfkv" in namespace "gc-9327"
  I1228 12:23:31.121385 19 delete.go:95] Deleting pod "simpletest.rc-2ndt7" in namespace "gc-9327"
  I1228 12:23:31.134975 19 delete.go:95] Deleting pod "simpletest.rc-4d7dh" in namespace "gc-9327"
  I1228 12:23:31.148321 19 delete.go:95] Deleting pod "simpletest.rc-4rrv2" in namespace "gc-9327"
  I1228 12:23:31.164182 19 delete.go:95] Deleting pod "simpletest.rc-4slch" in namespace "gc-9327"
  I1228 12:23:31.176940 19 delete.go:95] Deleting pod "simpletest.rc-5wb7n" in namespace "gc-9327"
  I1228 12:23:31.196107 19 delete.go:95] Deleting pod "simpletest.rc-69jv7" in namespace "gc-9327"
  I1228 12:23:31.211286 19 delete.go:95] Deleting pod "simpletest.rc-6b7sw" in namespace "gc-9327"
  I1228 12:23:31.223910 19 delete.go:95] Deleting pod "simpletest.rc-6cw5l" in namespace "gc-9327"
  I1228 12:23:31.240022 19 delete.go:95] Deleting pod "simpletest.rc-6j56f" in namespace "gc-9327"
  I1228 12:23:31.254450 19 delete.go:95] Deleting pod "simpletest.rc-6lltf" in namespace "gc-9327"
  I1228 12:23:31.270010 19 delete.go:95] Deleting pod "simpletest.rc-6m62j" in namespace "gc-9327"
  I1228 12:23:31.290676 19 delete.go:95] Deleting pod "simpletest.rc-7p9kg" in namespace "gc-9327"
  I1228 12:23:31.309785 19 delete.go:95] Deleting pod "simpletest.rc-7xs5x" in namespace "gc-9327"
  I1228 12:23:31.325867 19 delete.go:95] Deleting pod "simpletest.rc-864lk" in namespace "gc-9327"
  I1228 12:23:31.347470 19 delete.go:95] Deleting pod "simpletest.rc-8ktqp" in namespace "gc-9327"
  I1228 12:23:31.358899 19 delete.go:95] Deleting pod "simpletest.rc-8vtnp" in namespace "gc-9327"
  I1228 12:23:31.375100 19 delete.go:95] Deleting pod "simpletest.rc-9kthr" in namespace "gc-9327"
  I1228 12:23:31.390025 19 delete.go:95] Deleting pod "simpletest.rc-9zrgf" in namespace "gc-9327"
  I1228 12:23:31.410309 19 delete.go:95] Deleting pod "simpletest.rc-b524d" in namespace "gc-9327"
  I1228 12:23:31.424072 19 delete.go:95] Deleting pod "simpletest.rc-bfc8h" in namespace "gc-9327"
  I1228 12:23:31.447862 19 delete.go:95] Deleting pod "simpletest.rc-bkhjb" in namespace "gc-9327"
  I1228 12:23:31.466733 19 delete.go:95] Deleting pod "simpletest.rc-bwlb8" in namespace "gc-9327"
  I1228 12:23:31.483099 19 delete.go:95] Deleting pod "simpletest.rc-c4k55" in namespace "gc-9327"
  I1228 12:23:31.501418 19 delete.go:95] Deleting pod "simpletest.rc-cbmj4" in namespace "gc-9327"
  I1228 12:23:31.516939 19 delete.go:95] Deleting pod "simpletest.rc-chqfb" in namespace "gc-9327"
  I1228 12:23:31.539208 19 delete.go:95] Deleting pod "simpletest.rc-cjjkv" in namespace "gc-9327"
  I1228 12:23:31.562792 19 delete.go:95] Deleting pod "simpletest.rc-clrh9" in namespace "gc-9327"
  I1228 12:23:31.577785 19 delete.go:95] Deleting pod "simpletest.rc-cndxs" in namespace "gc-9327"
  I1228 12:23:31.591008 19 delete.go:95] Deleting pod "simpletest.rc-cxcsl" in namespace "gc-9327"
  I1228 12:23:31.603322 19 delete.go:95] Deleting pod "simpletest.rc-d4gs4" in namespace "gc-9327"
  I1228 12:23:31.616111 19 delete.go:95] Deleting pod "simpletest.rc-d9zt7" in namespace "gc-9327"
  I1228 12:23:31.632508 19 delete.go:95] Deleting pod "simpletest.rc-dgtfz" in namespace "gc-9327"
  I1228 12:23:31.651733 19 delete.go:95] Deleting pod "simpletest.rc-dx82b" in namespace "gc-9327"
  I1228 12:23:31.665607 19 delete.go:95] Deleting pod "simpletest.rc-fbz92" in namespace "gc-9327"
  I1228 12:23:31.683940 19 delete.go:95] Deleting pod "simpletest.rc-fdg4k" in namespace "gc-9327"
  E1228 12:23:31.695753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:23:31.701108 19 delete.go:95] Deleting pod "simpletest.rc-fx4ck" in namespace "gc-9327"
  I1228 12:23:31.720121 19 delete.go:95] Deleting pod "simpletest.rc-fzvk7" in namespace "gc-9327"
  I1228 12:23:31.736105 19 delete.go:95] Deleting pod "simpletest.rc-g94b9" in namespace "gc-9327"
  I1228 12:23:31.751902 19 delete.go:95] Deleting pod "simpletest.rc-gcf2g" in namespace "gc-9327"
  I1228 12:23:31.769949 19 delete.go:95] Deleting pod "simpletest.rc-gjstb" in namespace "gc-9327"
  I1228 12:23:31.788224 19 delete.go:95] Deleting pod "simpletest.rc-gx2nk" in namespace "gc-9327"
  I1228 12:23:31.840562 19 delete.go:95] Deleting pod "simpletest.rc-h777c" in namespace "gc-9327"
  I1228 12:23:31.854757 19 delete.go:95] Deleting pod "simpletest.rc-h7xrk" in namespace "gc-9327"
  I1228 12:23:31.871368 19 delete.go:95] Deleting pod "simpletest.rc-hhxlh" in namespace "gc-9327"
  I1228 12:23:31.894295 19 delete.go:95] Deleting pod "simpletest.rc-hjgt2" in namespace "gc-9327"
  I1228 12:23:31.909193 19 delete.go:95] Deleting pod "simpletest.rc-hkwc6" in namespace "gc-9327"
  I1228 12:23:31.923864 19 delete.go:95] Deleting pod "simpletest.rc-hzdfv" in namespace "gc-9327"
  I1228 12:23:31.943959 19 delete.go:95] Deleting pod "simpletest.rc-j6swp" in namespace "gc-9327"
  I1228 12:23:31.961870 19 delete.go:95] Deleting pod "simpletest.rc-jdhgb" in namespace "gc-9327"
  I1228 12:23:31.978345 19 delete.go:95] Deleting pod "simpletest.rc-jllvm" in namespace "gc-9327"
  I1228 12:23:31.995534 19 delete.go:95] Deleting pod "simpletest.rc-jrk7d" in namespace "gc-9327"
  I1228 12:23:32.010891 19 delete.go:95] Deleting pod "simpletest.rc-js52k" in namespace "gc-9327"
  I1228 12:23:32.023829 19 delete.go:95] Deleting pod "simpletest.rc-k56g6" in namespace "gc-9327"
  I1228 12:23:32.038431 19 delete.go:95] Deleting pod "simpletest.rc-k5vll" in namespace "gc-9327"
  I1228 12:23:32.051979 19 delete.go:95] Deleting pod "simpletest.rc-kdn6j" in namespace "gc-9327"
  I1228 12:23:32.068336 19 delete.go:95] Deleting pod "simpletest.rc-kdxkv" in namespace "gc-9327"
  I1228 12:23:32.087137 19 delete.go:95] Deleting pod "simpletest.rc-khp6q" in namespace "gc-9327"
  I1228 12:23:32.107045 19 delete.go:95] Deleting pod "simpletest.rc-kk94p" in namespace "gc-9327"
  I1228 12:23:32.128541 19 delete.go:95] Deleting pod "simpletest.rc-l67zn" in namespace "gc-9327"
  I1228 12:23:32.153427 19 delete.go:95] Deleting pod "simpletest.rc-mlhqk" in namespace "gc-9327"
  I1228 12:23:32.164493 19 delete.go:95] Deleting pod "simpletest.rc-mz7vj" in namespace "gc-9327"
  I1228 12:23:32.189442 19 delete.go:95] Deleting pod "simpletest.rc-nhr9d" in namespace "gc-9327"
  I1228 12:23:32.209865 19 delete.go:95] Deleting pod "simpletest.rc-nx694" in namespace "gc-9327"
  I1228 12:23:32.230417 19 delete.go:95] Deleting pod "simpletest.rc-p5cm4" in namespace "gc-9327"
  I1228 12:23:32.247910 19 delete.go:95] Deleting pod "simpletest.rc-pwb7h" in namespace "gc-9327"
  I1228 12:23:32.259424 19 delete.go:95] Deleting pod "simpletest.rc-q6snk" in namespace "gc-9327"
  I1228 12:23:32.270454 19 delete.go:95] Deleting pod "simpletest.rc-qhvvl" in namespace "gc-9327"
  I1228 12:23:32.283839 19 delete.go:95] Deleting pod "simpletest.rc-qmn8b" in namespace "gc-9327"
  I1228 12:23:32.296911 19 delete.go:95] Deleting pod "simpletest.rc-r6tbx" in namespace "gc-9327"
  I1228 12:23:32.348477 19 delete.go:95] Deleting pod "simpletest.rc-rlg2v" in namespace "gc-9327"
  I1228 12:23:32.397593 19 delete.go:95] Deleting pod "simpletest.rc-s2tt5" in namespace "gc-9327"
  I1228 12:23:32.448484 19 delete.go:95] Deleting pod "simpletest.rc-sfrfd" in namespace "gc-9327"
  I1228 12:23:32.497966 19 delete.go:95] Deleting pod "simpletest.rc-snxn7" in namespace "gc-9327"
  I1228 12:23:32.552208 19 delete.go:95] Deleting pod "simpletest.rc-sswtj" in namespace "gc-9327"
  I1228 12:23:32.602737 19 delete.go:95] Deleting pod "simpletest.rc-tgp5h" in namespace "gc-9327"
  I1228 12:23:32.647465 19 delete.go:95] Deleting pod "simpletest.rc-tkgz6" in namespace "gc-9327"
  E1228 12:23:32.696245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:23:32.704948 19 delete.go:95] Deleting pod "simpletest.rc-v8scs" in namespace "gc-9327"
  I1228 12:23:32.751831 19 delete.go:95] Deleting pod "simpletest.rc-vpwfp" in namespace "gc-9327"
  I1228 12:23:32.801028 19 delete.go:95] Deleting pod "simpletest.rc-wlqpq" in namespace "gc-9327"
  I1228 12:23:32.850692 19 delete.go:95] Deleting pod "simpletest.rc-wpvmb" in namespace "gc-9327"
  I1228 12:23:32.897281 19 delete.go:95] Deleting pod "simpletest.rc-wrqxg" in namespace "gc-9327"
  I1228 12:23:32.949202 19 delete.go:95] Deleting pod "simpletest.rc-x6pdm" in namespace "gc-9327"
  I1228 12:23:33.003519 19 delete.go:95] Deleting pod "simpletest.rc-x6qz8" in namespace "gc-9327"
  I1228 12:23:33.049861 19 delete.go:95] Deleting pod "simpletest.rc-xbfdw" in namespace "gc-9327"
  I1228 12:23:33.100541 19 delete.go:95] Deleting pod "simpletest.rc-xhf76" in namespace "gc-9327"
  I1228 12:23:33.149948 19 delete.go:95] Deleting pod "simpletest.rc-xnfrl" in namespace "gc-9327"
  I1228 12:23:33.197059 19 delete.go:95] Deleting pod "simpletest.rc-xz2gl" in namespace "gc-9327"
  I1228 12:23:33.245944 19 delete.go:95] Deleting pod "simpletest.rc-z279v" in namespace "gc-9327"
  I1228 12:23:33.302377 19 delete.go:95] Deleting pod "simpletest.rc-z6wpg" in namespace "gc-9327"
  I1228 12:23:33.345542 19 delete.go:95] Deleting pod "simpletest.rc-zjlzd" in namespace "gc-9327"
  I1228 12:23:33.399668 19 delete.go:95] Deleting pod "simpletest.rc-zmk2v" in namespace "gc-9327"
  I1228 12:23:33.448248 19 delete.go:95] Deleting pod "simpletest.rc-zn6w5" in namespace "gc-9327"
  I1228 12:23:33.503385 19 delete.go:95] Deleting pod "simpletest.rc-zqb8k" in namespace "gc-9327"
  I1228 12:23:33.547823 19 delete.go:95] Deleting pod "simpletest.rc-zs8sz" in namespace "gc-9327"
  I1228 12:23:33.597547 19 delete.go:95] Deleting pod "simpletest.rc-zzprk" in namespace "gc-9327"
  I1228 12:23:33.649228 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9327" for this suite. @ 12/28/24 12:23:33.689
  E1228 12:23:33.696454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [43.767 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/28/24 12:23:33.742
  I1228 12:23:33.742283 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:23:33.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:33.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:33.773
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/28/24 12:23:33.777
  I1228 12:23:33.778719 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:23:34.700618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:35.699503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:36.700297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:37.700467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:38.701083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/28/24 12:23:39.309
  I1228 12:23:39.309548 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:23:39.701820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:23:40.532603 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:23:40.702712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:41.717921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:42.718938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:43.719451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:44.719592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:23:45.560816 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3263" for this suite. @ 12/28/24 12:23:45.568
• [11.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/28/24 12:23:45.578
  I1228 12:23:45.578466 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:23:45.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:45.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:45.596
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:23:45.599
  E1228 12:23:45.720637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:46.720879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:47.721431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:48.721683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:23:49.627
  I1228 12:23:49.631742 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-84639581-ea06-463d-b8a0-639be683fcfc container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:23:49.646
  I1228 12:23:49.665760 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9830" for this suite. @ 12/28/24 12:23:49.67
• [4.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/28/24 12:23:49.68
  I1228 12:23:49.680715 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:23:49.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:49.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:49.701
  STEP: creating the pod @ 12/28/24 12:23:49.705
  STEP: submitting the pod to kubernetes @ 12/28/24 12:23:49.705
  E1228 12:23:49.721634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:50.722685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:51.722929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/28/24 12:23:51.732
  STEP: updating the pod @ 12/28/24 12:23:51.738
  I1228 12:23:52.252588 19 pod_client.go:173] Successfully updated pod "pod-update-55ff3040-055f-4e9a-ace5-09890b82b4da"
  STEP: verifying the updated pod is in kubernetes @ 12/28/24 12:23:52.261
  I1228 12:23:52.265166 19 pods.go:391] Pod update OK
  I1228 12:23:52.265359 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9031" for this suite. @ 12/28/24 12:23:52.269
• [2.596 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/28/24 12:23:52.277
  I1228 12:23:52.277188 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename lease-test @ 12/28/24 12:23:52.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:52.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:52.294
  I1228 12:23:52.367159 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2998" for this suite. @ 12/28/24 12:23:52.372
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/28/24 12:23:52.38
  I1228 12:23:52.380617 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename security-context-test @ 12/28/24 12:23:52.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:52.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:52.4
  E1228 12:23:52.723037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:53.724080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:23:54.424839 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6513" for this suite. @ 12/28/24 12:23:54.429
• [2.057 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/28/24 12:23:54.437
  I1228 12:23:54.437555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename certificates @ 12/28/24 12:23:54.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:54.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:54.456
  STEP: getting /apis @ 12/28/24 12:23:54.702
  STEP: getting /apis/certificates.k8s.io @ 12/28/24 12:23:54.706
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/28/24 12:23:54.708
  STEP: creating @ 12/28/24 12:23:54.71
  E1228 12:23:54.724399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting @ 12/28/24 12:23:54.73
  STEP: listing @ 12/28/24 12:23:54.735
  STEP: watching @ 12/28/24 12:23:54.738
  I1228 12:23:54.738617 19 certificates.go:316] starting watch
  STEP: patching @ 12/28/24 12:23:54.74
  STEP: updating @ 12/28/24 12:23:54.748
  I1228 12:23:54.754761 19 certificates.go:332] waiting for watch events with expected annotations
  I1228 12:23:54.754797 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/28/24 12:23:54.754
  STEP: patching /approval @ 12/28/24 12:23:54.758
  STEP: updating /approval @ 12/28/24 12:23:54.766
  STEP: getting /status @ 12/28/24 12:23:54.772
  STEP: patching /status @ 12/28/24 12:23:54.775
  STEP: updating /status @ 12/28/24 12:23:54.783
  STEP: deleting @ 12/28/24 12:23:54.793
  STEP: deleting a collection @ 12/28/24 12:23:54.81
  I1228 12:23:54.828233 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3076" for this suite. @ 12/28/24 12:23:54.831
• [0.401 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 12/28/24 12:23:54.838
  I1228 12:23:54.838935 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:23:54.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:54.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:54.859
  STEP: creating the pod @ 12/28/24 12:23:54.862
  I1228 12:23:54.862513 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 create -f -'
  I1228 12:23:54.951457 19 builder.go:146] stderr: ""
  I1228 12:23:54.951494 19 builder.go:147] stdout: "pod/pause created\n"
  E1228 12:23:55.724549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:56.725076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/28/24 12:23:56.963
  I1228 12:23:56.963430 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 label pods pause testing-label=testing-label-value'
  I1228 12:23:57.021521 19 builder.go:146] stderr: ""
  I1228 12:23:57.021577 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/28/24 12:23:57.021
  I1228 12:23:57.021672 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 get pod pause -L testing-label'
  I1228 12:23:57.072880 19 builder.go:146] stderr: ""
  I1228 12:23:57.072920 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/28/24 12:23:57.072
  I1228 12:23:57.073013 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 label pods pause testing-label-'
  I1228 12:23:57.130251 19 builder.go:146] stderr: ""
  I1228 12:23:57.130290 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/28/24 12:23:57.13
  I1228 12:23:57.130374 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 get pod pause -L testing-label'
  I1228 12:23:57.179219 19 builder.go:146] stderr: ""
  I1228 12:23:57.179262 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 12/28/24 12:23:57.179
  I1228 12:23:57.179401 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 delete --grace-period=0 --force -f -'
  I1228 12:23:57.236408 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 12:23:57.236455 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1228 12:23:57.236504 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 get rc,svc -l name=pause --no-headers'
  I1228 12:23:57.291173 19 builder.go:146] stderr: "No resources found in kubectl-2607 namespace.\n"
  I1228 12:23:57.291217 19 builder.go:147] stdout: ""
  I1228 12:23:57.291336 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-2607 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1228 12:23:57.335941 19 builder.go:146] stderr: ""
  I1228 12:23:57.335992 19 builder.go:147] stdout: ""
  I1228 12:23:57.336150 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2607" for this suite. @ 12/28/24 12:23:57.341
• [2.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/28/24 12:23:57.348
  I1228 12:23:57.348942 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:23:57.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:57.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:57.373
  I1228 12:23:57.377018 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I1228 12:23:57.398803 19 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1228 12:23:57.725890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:23:58.726877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 12/28/24 12:23:59.419
  STEP: updating a scale subresource @ 12/28/24 12:23:59.422
  STEP: verifying the deployment Spec.Replicas was modified @ 12/28/24 12:23:59.431
  STEP: Patch a scale subresource @ 12/28/24 12:23:59.438
  I1228 12:23:59.474526 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3431",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5907978f-50ea-4c23-9837-74b17b0f0ad3",
      ResourceVersion: (string) (len=5) "13763",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 12:23:59.486350 19 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3431",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bde0d381-e104-49dd-bad6-47983aea7a97",
      ResourceVersion: (string) (len=5) "13769",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "5907978f-50ea-4c23-9837-74b17b0f0ad3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 39 30 37 39 37  38 66 2d 35 30 65 61 2d  |\"5907978f-50ea-|
              00000120  34 63 32 33 2d 39 38 33  37 2d 37 34 62 31 37 62  |4c23-9837-74b17b|
              00000130  30 66 30 61 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0f0ad3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:23:59.493621 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-dzcrk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-dzcrk",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3431",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8da8f53-7094-4f6a-90ce-d65a8a0167b3",
      ResourceVersion: (string) (len=5) "13752",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "bde0d381-e104-49dd-bad6-47983aea7a97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 64  65 30 64 33 38 31 2d 65  |d\":\"bde0d381-e|
              00000090  31 30 34 2d 34 39 64 64  2d 62 61 64 36 2d 34 37  |104-49dd-bad6-47|
              000000a0  39 38 33 61 65 61 37 61  39 37 5c 22 7d 22 3a 7b  |983aea7a97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  39 2e 32 37 5c 22 7d 22  |2.168.189.27\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w9bbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w9bbf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.142",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.142"
        }
      },
      PodIP: (string) (len=14) "192.168.189.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.189.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870985437,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://89ff0f4ae8430990af06bcab553a6660b03106a7324fea32a15697558f50976a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w9bbf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:23:59.494811 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-qngk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-qngk9",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3431",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2df3a24f-58f1-48cb-a67e-45bba849102f",
      ResourceVersion: (string) (len=5) "13773",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985439,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "bde0d381-e104-49dd-bad6-47983aea7a97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 64  65 30 64 33 38 31 2d 65  |d\":\"bde0d381-e|
              00000090  31 30 34 2d 34 39 64 64  2d 62 61 64 36 2d 34 37  |104-49dd-bad6-47|
              000000a0  39 38 33 61 65 61 37 61  39 37 5c 22 7d 22 3a 7b  |983aea7a97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjxqp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjxqp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:23:59.495640 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-ttzqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-ttzqc",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-3431",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2463a066-cbc8-42da-baa7-07449d4d170d",
      ResourceVersion: (string) (len=5) "13770",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985439,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "bde0d381-e104-49dd-bad6-47983aea7a97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 64  65 30 64 33 38 31 2d 65  |d\":\"bde0d381-e|
              00000090  31 30 34 2d 34 39 64 64  2d 62 61 64 36 2d 34 37  |104-49dd-bad6-47|
              000000a0  39 38 33 61 65 61 37 61  39 37 5c 22 7d 22 3a 7b  |983aea7a97\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pqsmb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pqsmb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985439,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pqsmb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:23:59.496817 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3431" for this suite. @ 12/28/24 12:23:59.503
• [2.167 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/28/24 12:23:59.516
  I1228 12:23:59.516118 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:23:59.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:23:59.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:23:59.549
  I1228 12:23:59.561542 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1228 12:23:59.727338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:00.727470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:01.727578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:02.727802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:03.727903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:04.567370 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/28/24 12:24:04.567
  I1228 12:24:04.567442 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1228 12:24:04.728778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:05.728744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:06.572760 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1228 12:24:06.584887 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1228 12:24:06.729474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:07.729959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:08.594396 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1228 12:24:08.603262 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1228 12:24:08.610545 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1228 12:24:08.623697 19 deployment.go:313] Updating deployment test-rollover-deployment
  I1228 12:24:08.623733 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1228 12:24:08.730592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:09.731537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:10.632611 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1228 12:24:10.642004 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1228 12:24:10.650894 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1228 12:24:10.650960 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 12:24:10.731941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:11.732372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:12.662254 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1228 12:24:12.662324 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 12:24:12.733479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:13.734129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:14.659897 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1228 12:24:14.659959 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 12:24:14.734180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:15.735153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:16.660079 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1228 12:24:16.660131 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 12:24:16.736147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:17.736857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:18.660850 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1228 12:24:18.660912 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 12, 24, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 12, 24, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 12:24:18.737840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:19.738075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:24:20.658745 19 deployment.go:94] 
  I1228 12:24:20.658782 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I1228 12:24:20.672707 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "649d214e-477d-49c3-9154-07c1ca92e2aa",
      ResourceVersion: (string) (len=5) "13982",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985460,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985460,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 12:24:20.677305 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98dcfef5-62ca-4bb1-8395-634c2193c25b",
      ResourceVersion: (string) (len=5) "13972",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985448,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "649d214e-477d-49c3-9154-07c1ca92e2aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 39 64 32 31  34 65 2d 34 37 37 64 2d  |\"649d214e-477d-|
              00000120  34 39 63 33 2d 39 31 35  34 2d 30 37 63 31 63 61  |49c3-9154-07c1ca|
              00000130  39 32 65 32 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |92e2aa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985460,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:24:20.677813 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1228 12:24:20.678164 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4eee4806-ef87-4948-a1e9-8fc26e20fb3a",
      ResourceVersion: (string) (len=5) "13981",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985439,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "649d214e-477d-49c3-9154-07c1ca92e2aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985439,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985460,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 34 39 64 32 31 34 65  2d 34 37 37 64 2d 34 39  |649d214e-477d-49|
              000000c0  63 33 2d 39 31 35 34 2d  30 37 63 31 63 61 39 32  |c3-9154-07c1ca92|
              000000d0  65 32 61 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |e2aa\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985460,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:24:20.679173 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cad20aa4-3d8d-486b-b3dd-06635321ba2c",
      ResourceVersion: (string) (len=5) "13934",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "649d214e-477d-49c3-9154-07c1ca92e2aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 39 64 32 31  34 65 2d 34 37 37 64 2d  |\"649d214e-477d-|
              00000120  34 39 63 33 2d 39 31 35  34 2d 30 37 63 31 63 61  |49c3-9154-07c1ca|
              00000130  39 32 65 32 61 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |92e2aa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:24:20.683518 19 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-sbtsq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-sbtsq",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-8113",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f16e64d4-977d-4860-ad2a-bdfc90f1c8f4",
      ResourceVersion: (string) (len=5) "13950",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985448,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "98dcfef5-62ca-4bb1-8395-634c2193c25b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 38  64 63 66 65 66 35 2d 36  |d\":\"98dcfef5-6|
              00000090  32 63 61 2d 34 62 62 31  2d 38 33 39 35 2d 36 33  |2ca-4bb1-8395-63|
              000000a0  34 63 32 31 39 33 63 32  35 62 5c 22 7d 22 3a 7b  |4c2193c25b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 31 32 36 5c 22 7d  |2.168.206.126\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v4c8b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v4c8b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870985448,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=15) "192.168.206.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870985448,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870985449,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://d366a9e69e180960fcba877b6e887558f2ddb4ba360f340c27bdddb100a8ac34",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v4c8b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:24:20.684864 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8113" for this suite. @ 12/28/24 12:24:20.688
• [21.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/28/24 12:24:20.696
  I1228 12:24:20.696179 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename cronjob @ 12/28/24 12:24:20.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:24:20.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:24:20.715
  STEP: Creating a ReplaceConcurrent cronjob @ 12/28/24 12:24:20.719
  STEP: Ensuring a job is scheduled @ 12/28/24 12:24:20.724
  E1228 12:24:20.738700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:21.738886      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:22.739363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:23.739470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:24.740493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:25.740967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:26.741440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:27.741632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:28.741782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:29.741900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:30.742092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:31.742234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:32.743110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:33.743242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:34.744166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:35.744885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:36.745677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:37.745824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:38.745995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:39.746102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:40.746456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:41.746569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:42.746738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:43.746955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:44.747210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:45.747877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:46.748274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:47.748887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:48.749552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:49.749781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:50.750753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:51.750889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:52.750935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:53.751174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:54.751933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:55.752174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:56.753242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:57.753372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:58.754026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:24:59.754896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/28/24 12:25:00.729
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/28/24 12:25:00.733
  STEP: Ensuring the job is replaced with a new one @ 12/28/24 12:25:00.736
  E1228 12:25:00.755464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:01.755881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:02.756508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:03.756677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:04.757491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:05.757797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:06.758101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:07.759108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:08.759418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:09.759497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:10.759816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:11.760042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:12.760350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:13.760598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:14.760722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:15.760828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:16.761621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:17.761868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:18.762552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:19.762674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:20.763425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:21.763539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:22.764374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:23.764516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:24.765559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:25.765885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:26.765969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:27.766074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:28.766807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:29.767020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:30.768045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:31.768264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:32.768889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:33.769114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:34.769504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:35.769881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:36.770642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:37.770869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:38.771757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:39.771881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:40.772623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:41.772814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:42.773444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:43.773638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:44.774202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:45.774467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:46.775581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:47.775780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:48.776466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:49.776786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:50.777325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:51.777434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:52.778014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:53.778397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:54.778938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:55.779141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:56.779380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:57.779499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:58.780249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:25:59.780470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 12/28/24 12:26:00.741
  I1228 12:26:00.750084 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1506" for this suite. @ 12/28/24 12:26:00.753
• [100.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/28/24 12:26:00.763
  I1228 12:26:00.763874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:26:00.764
  E1228 12:26:00.781307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:26:00.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:26:00.786
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/28/24 12:26:00.789
  E1228 12:26:01.781537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:02.781794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:26:02.808
  I1228 12:26:02.813671 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-5b638c5d-0166-4000-b725-90d1f1457c8a container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:26:02.825
  I1228 12:26:02.842181 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6127" for this suite. @ 12/28/24 12:26:02.847
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/28/24 12:26:02.857
  I1228 12:26:02.857382 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename runtimeclass @ 12/28/24 12:26:02.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:26:02.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:26:02.877
  E1228 12:26:03.781940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:04.782077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:04.917285 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2946" for this suite. @ 12/28/24 12:26:04.921
• [2.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/28/24 12:26:04.93
  I1228 12:26:04.931013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:26:04.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:26:04.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:26:04.95
  STEP: Creating pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415 @ 12/28/24 12:26:04.953
  E1228 12:26:05.782157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:06.782277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 12:26:06.978
  I1228 12:26:06.981201 19 container_probe.go:1749] Initial restart count of pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb is 0
  I1228 12:26:06.986038 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:07.782821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:08.783175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:08.991290 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:09.783986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:10.784192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:10.996373 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:11.784803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:12.784878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:13.003474 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:13.785012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:14.785869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:15.008789 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:15.786012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:16.786864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:17.015911 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:17.787804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:18.787827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:19.022555 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:19.788553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:20.788894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:21.029776 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:21.789595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:22.789696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:23.035058 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:23.789850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:24.790075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:25.041698 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:25.790518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:26.790765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:27.047615 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:27.790879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:28.791100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:29.052922 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:29.791248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:30.791423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:31.059131 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:31.791923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:32.792059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:33.064021 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:33.792193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:34.792306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:35.069548 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:35.793338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:36.794429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:37.074510 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:37.795017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:38.795885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:39.080377 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:39.796022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:40.796146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:41.085493 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:41.796867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:42.796997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:43.092542 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:43.797871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:44.798171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:45.098470 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:45.798224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:46.798388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:47.105042 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:47.798534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:48.798697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:49.110713 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:49.799527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:50.799665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:51.115782 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:51.800571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:52.800694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:53.120748 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:53.801525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:54.801595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:55.126183 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:55.801741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:56.801920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:57.131220 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:57.802105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:26:58.802212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:26:59.137873 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:26:59.802373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:00.802631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:01.143069 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:01.802853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:02.803871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:03.149271 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:03.804875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:04.804985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:05.154138 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:05.805890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:06.805981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:07.160544 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:07.806281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:08.806974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:09.166735 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:09.807079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:10.807183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:11.173547 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:11.807874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:12.807980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:13.181115 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:13.808885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:14.809090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:15.186136 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:15.809877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:16.810020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:17.190830 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:17.810548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:18.810762      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:19.197437 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:19.810837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:20.811077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:21.204047 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:21.811219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:22.811951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:23.210174 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:23.812895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:24.812986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:25.215350 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:25.813891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:26.813984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:27.221912 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:27.814120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:28.814881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:29.227380 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:29.814962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:30.815070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:31.233372 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:31.815892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:32.816869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:33.238822 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:33.816960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:34.817875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:35.246307 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:35.818088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:36.818273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:37.251827 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:37.818426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:38.818535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:39.257929 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:39.819603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:40.819722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:41.263791 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:41.820510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:42.820909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:43.271153 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:43.821801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:44.821875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:45.275872 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:45.822139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:46.822378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:47.283037 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:47.822627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:48.822812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:49.288370 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:49.824563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:50.823976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:51.293627 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:51.824090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:52.825119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:53.299262 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:53.825838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:54.826836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:55.304402 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:55.827848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:56.828099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:57.309451 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:57.829103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:27:58.829241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:27:59.314547 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:27:59.830547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:00.830689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:01.319463 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:01.830789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:02.831012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:03.326082 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:03.831700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:04.831843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:05.331232 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:05.832935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:06.833067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:07.336236 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:07.833840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:08.833948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:09.343039 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:09.834243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:10.834326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:11.350677 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:11.834845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:12.835842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:13.355920 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:13.836489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:14.837388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:15.361904 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:15.837448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:16.837670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:17.366819 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:17.838349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:18.838481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:19.373698 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:19.839171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:20.839853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:21.381030 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:21.840680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:22.840820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:23.386571 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:23.840953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:24.841102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:25.393125 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:25.841683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:26.841873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:27.399775 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:27.842253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:28.842460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:29.404628 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:29.842938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:30.843853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:31.410750 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:31.843951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:32.844039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:33.418174 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:33.844704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:34.844865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:35.423552 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:35.845865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:36.846868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:37.429450 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:37.847885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:38.847987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:39.436602 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:39.850691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:40.849839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:41.441910 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:41.850479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:42.850588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:43.448219 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:43.850728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:44.850836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:45.454778 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:45.851469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:46.851920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:47.461123 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:47.852626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:48.852867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:49.466405 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:49.853119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:50.853338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:51.471851 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:51.854311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:52.854604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:53.478639 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:53.854879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:54.854969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:55.483525 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:55.855899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:56.856841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:57.491014 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:57.857493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:28:58.858266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:28:59.497900 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:28:59.858966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:00.858874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:01.504679 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:01.858975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:02.859046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:03.511329 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:03.859887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:04.860168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:05.516779 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:05.861188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:06.861307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:07.523519 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:07.861958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:08.862049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:09.528338 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:09.862804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:10.862965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:11.535689 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:11.863970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:12.864944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:13.541821 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:13.865038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:14.865137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:15.546801 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:15.865947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:16.866020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:17.553511 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:17.866885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:18.867009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:19.558562 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:19.867897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:20.868159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:21.565243 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:21.868776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:22.868929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:23.570617 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:23.868955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:24.869978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:25.577094 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:25.870447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:26.870696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:27.582021 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:27.871427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:28.871633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:29.589418 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:29.871739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:30.871852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:31.596346 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:31.872797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:32.873872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:33.601941 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:33.874339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:34.874414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:35.608741 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:35.874899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:36.874973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:37.614162 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:37.875608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:38.875776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:39.619503 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:39.876862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:40.877013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:41.626009 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:41.877279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:42.877948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:43.631330 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:43.878712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:44.878839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:45.636009 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:45.879134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:46.879347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:47.642094 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:47.879342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:48.879552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:49.647367 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:49.879641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:50.879838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:51.652297 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:51.880679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:52.880794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:53.658605 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:53.880879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:54.881133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:55.664317 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:55.881674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:56.881788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:57.669256 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:57.882622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:29:58.882776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:29:59.674265 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:29:59.883621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:00.883798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:01.679313 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:30:01.884622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:02.884783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:03.685923 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:30:03.885179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:04.885584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:05.691776 19 container_probe.go:1759] Get pod busybox-ab8bfe6b-31b2-4b0d-bfcb-22d06d845bbb in namespace container-probe-4415
  E1228 12:30:05.885858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:06.885958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/28/24 12:30:07.692
  I1228 12:30:07.717925 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4415" for this suite. @ 12/28/24 12:30:07.724
• [242.802 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/28/24 12:30:07.733
  I1228 12:30:07.733586 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename runtimeclass @ 12/28/24 12:30:07.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:07.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:07.756
  I1228 12:30:07.789886 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1399" for this suite. @ 12/28/24 12:30:07.795
• [0.070 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/28/24 12:30:07.803
  I1228 12:30:07.803473 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:30:07.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:07.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:07.821
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/28/24 12:30:07.825
  E1228 12:30:07.886450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:08.886534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:09.887831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:10.888843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:30:11.861
  I1228 12:30:11.865548 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-6626d467-e791-40c2-9d9a-a25eb46af605 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:30:11.883
  E1228 12:30:11.888980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:11.905615 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4106" for this suite. @ 12/28/24 12:30:11.911
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 12/28/24 12:30:11.92
  I1228 12:30:11.920024 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:30:11.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:11.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:11.938
  STEP: Setting up server cert @ 12/28/24 12:30:11.963
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:30:12.287
  STEP: Deploying the webhook pod @ 12/28/24 12:30:12.297
  STEP: Wait for the deployment to be ready @ 12/28/24 12:30:12.31
  I1228 12:30:12.326033 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 12:30:12.889117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:13.889304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:30:14.341
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:30:14.355
  E1228 12:30:14.890269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:15.355759 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/28/24 12:30:15.367
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/28/24 12:30:15.386
  STEP: Creating a configMap that should not be mutated @ 12/28/24 12:30:15.394
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/28/24 12:30:15.407
  STEP: Creating a configMap that should be mutated @ 12/28/24 12:30:15.416
  I1228 12:30:15.480282 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6846" for this suite. @ 12/28/24 12:30:15.483
  STEP: Destroying namespace "webhook-markers-1563" for this suite. @ 12/28/24 12:30:15.492
• [3.579 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/28/24 12:30:15.499
  I1228 12:30:15.499674 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:30:15.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:15.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:15.52
  STEP: Creating configMap with name configmap-test-upd-7da70ab5-eec8-49db-900a-3205413c4ec8 @ 12/28/24 12:30:15.529
  STEP: Creating the pod @ 12/28/24 12:30:15.533
  E1228 12:30:15.890825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:16.890882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 12/28/24 12:30:17.555
  STEP: Waiting for pod with binary data @ 12/28/24 12:30:17.574
  I1228 12:30:17.583485 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9390" for this suite. @ 12/28/24 12:30:17.589
• [2.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/28/24 12:30:17.598
  I1228 12:30:17.598014 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:30:17.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:17.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:17.619
  STEP: Creating secret with name secret-test-map-c5ecfd0b-7c25-41b5-b3e9-3c3468ea9f96 @ 12/28/24 12:30:17.623
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:30:17.628
  E1228 12:30:17.891302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:18.891892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:19.892434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:20.892542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:30:21.657
  I1228 12:30:21.660640 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-secrets-f6df1315-2b91-49bc-80dd-67e0b035f247 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:30:21.667
  I1228 12:30:21.689507 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-358" for this suite. @ 12/28/24 12:30:21.693
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/28/24 12:30:21.7
  I1228 12:30:21.700914 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:30:21.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:21.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:21.717
  STEP: Creating configMap with name configmap-test-volume-a53eb367-0f2c-456d-a514-6579560a8bf7 @ 12/28/24 12:30:21.72
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:30:21.725
  E1228 12:30:21.892684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:22.892884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:23.893796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:24.893866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:30:25.751
  I1228 12:30:25.755287 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-configmaps-d47315d1-7f97-4597-b067-20b6e6d87fbf container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:30:25.764
  I1228 12:30:25.786671 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4408" for this suite. @ 12/28/24 12:30:25.791
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/28/24 12:30:25.8
  I1228 12:30:25.800339 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-runtime @ 12/28/24 12:30:25.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:25.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:25.822
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/28/24 12:30:25.838
  E1228 12:30:25.893906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:26.894199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:27.894343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:28.894672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:29.894788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:30.894891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:31.895555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:32.895965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:33.896407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:34.896664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:35.896885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:36.896975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:37.897358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:38.897497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:39.897800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:40.898030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:41.898117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:42.898366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/28/24 12:30:42.943
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/28/24 12:30:42.946
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/28/24 12:30:42.957
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/28/24 12:30:42.957
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/28/24 12:30:42.982
  E1228 12:30:43.898501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:44.898744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/28/24 12:30:44.999
  E1228 12:30:45.898856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:46.899001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/28/24 12:30:47.013
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/28/24 12:30:47.022
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/28/24 12:30:47.022
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/28/24 12:30:47.049
  E1228 12:30:47.899069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/28/24 12:30:48.061
  E1228 12:30:48.899319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/28/24 12:30:49.071
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/28/24 12:30:49.079
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/28/24 12:30:49.079
  I1228 12:30:49.111706 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3387" for this suite. @ 12/28/24 12:30:49.115
• [23.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/28/24 12:30:49.126
  I1228 12:30:49.126310 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:30:49.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:49.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:49.143
  STEP: Creating the pod @ 12/28/24 12:30:49.146
  E1228 12:30:49.899445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:50.899637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:51.696718 19 pod_client.go:173] Successfully updated pod "annotationupdate70d8cb25-43aa-405f-bb21-f7969d732d63"
  E1228 12:30:51.900123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:52.900889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:53.712438 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5893" for this suite. @ 12/28/24 12:30:53.717
• [4.600 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/28/24 12:30:53.726
  I1228 12:30:53.726273 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:30:53.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:53.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:53.744
  STEP: Creating the pod @ 12/28/24 12:30:53.747
  E1228 12:30:53.901579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:54.902079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:55.903133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:56.297197 19 pod_client.go:173] Successfully updated pod "annotationupdate6b793c9f-0a66-4a87-8d9c-80851809dd44"
  E1228 12:30:56.903947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:57.904888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:30:58.317689 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4485" for this suite. @ 12/28/24 12:30:58.322
• [4.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/28/24 12:30:58.333
  I1228 12:30:58.333042 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename endpointslice @ 12/28/24 12:30:58.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:58.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:58.349
  I1228 12:30:58.363145 19 endpointslice.go:1045] Endpoints addresses: [172.31.19.50 172.31.86.197] , ports: [6443]
  I1228 12:30:58.363173 19 endpointslice.go:1075] EndpointSlices addresses: [172.31.19.50 172.31.86.197] , ports: [6443]
  I1228 12:30:58.363303 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1367" for this suite. @ 12/28/24 12:30:58.366
• [0.042 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 12/28/24 12:30:58.375
  I1228 12:30:58.375582 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 12:30:58.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:30:58.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:30:58.394
  I1228 12:30:58.398015 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:30:58.904954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:30:59.905728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:00.906020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:31:01.491772 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6560" for this suite. @ 12/28/24 12:31:01.497
• [3.130 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/28/24 12:31:01.506
  I1228 12:31:01.506233 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replication-controller @ 12/28/24 12:31:01.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:31:01.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:31:01.525
  I1228 12:31:01.529752 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/28/24 12:31:01.539
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/28/24 12:31:01.546
  E1228 12:31:01.906114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/28/24 12:31:02.556
  I1228 12:31:02.568729 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/28/24 12:31:02.568
  E1228 12:31:02.906207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:31:03.580525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5463" for this suite. @ 12/28/24 12:31:03.585
• [2.087 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 12/28/24 12:31:03.592
  I1228 12:31:03.592855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 12:31:03.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:31:03.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:31:03.61
  STEP: apply creating a deployment @ 12/28/24 12:31:03.613
  I1228 12:31:03.634021 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6630" for this suite. @ 12/28/24 12:31:03.637
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/28/24 12:31:03.644
  I1228 12:31:03.644547 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:31:03.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:31:03.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:31:03.665
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f9346a3e-b506-4c12-9f3a-c8bc85806cbc @ 12/28/24 12:31:03.673
  STEP: Creating the pod @ 12/28/24 12:31:03.679
  E1228 12:31:03.907179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:04.907854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-f9346a3e-b506-4c12-9f3a-c8bc85806cbc @ 12/28/24 12:31:05.71
  STEP: waiting to observe update in volume @ 12/28/24 12:31:05.717
  E1228 12:31:05.908525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:06.908969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:07.908999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:08.909155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:09.910180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:10.910392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:11.911024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:12.911291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:13.911868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:14.912366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:15.912507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:16.912598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:17.912604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:18.912847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:19.913361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:20.913566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:21.914468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:22.914577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:23.915272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:24.915396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:25.916039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:26.916860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:27.916906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:28.917872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:29.918159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:30.918284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:31.918588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:32.919304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:33.919935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:34.920059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:35.920198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:36.920398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:37.920399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:38.920522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:39.921232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:40.921401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:41.922345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:42.922566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:43.922833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:44.923709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:45.924577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:46.924723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:47.925172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:48.925872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:49.926724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:50.926868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:51.926951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:52.927068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:53.927179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:54.927295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:55.927384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:56.927422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:57.927542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:58.927683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:31:59.927785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:00.927893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:01.927973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:02.928079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:03.928210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:04.928324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:05.928434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:06.928548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:07.928638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:08.928772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:09.928861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:10.929002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:11.929119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:12.929292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:13.929436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:14.929740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:15.929884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:16.930910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:17.931152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:18.931279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:19.931427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:20.931687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:21.931807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:22.931918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:23.932109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:24.932133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:25.932341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:32:26.113364 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7868" for this suite. @ 12/28/24 12:32:26.118
• [82.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/28/24 12:32:26.126
  I1228 12:32:26.126234 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename namespaces @ 12/28/24 12:32:26.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:32:26.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:32:26.146
  STEP: Read namespace status @ 12/28/24 12:32:26.149
  I1228 12:32:26.152998 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/28/24 12:32:26.153
  I1228 12:32:26.159331 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/28/24 12:32:26.159
  I1228 12:32:26.169875 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1228 12:32:26.169951 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6661" for this suite. @ 12/28/24 12:32:26.173
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/28/24 12:32:26.182
  I1228 12:32:26.182996 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:32:26.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:32:26.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:32:26.199
  STEP: Creating configMap with name projected-configmap-test-volume-aa6d1055-7cb7-41d5-92ce-448db776f816 @ 12/28/24 12:32:26.202
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:32:26.207
  E1228 12:32:26.932484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:27.932612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:28.932806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:29.932880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:32:30.234
  I1228 12:32:30.239540 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-projected-configmaps-5f310b60-6f61-4983-99ab-8fa708fb1178 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:32:30.253
  I1228 12:32:30.269005 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9456" for this suite. @ 12/28/24 12:32:30.273
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 12/28/24 12:32:30.281
  I1228 12:32:30.281375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename taint-single-pod @ 12/28/24 12:32:30.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:32:30.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:32:30.302
  I1228 12:32:30.306120 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 12:32:30.933843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:31.934026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:32.934117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:33.934216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:34.934783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:35.934859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:36.935862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:37.935942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:38.936070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:39.936151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:40.936287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:41.936356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:42.936867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:43.936964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:44.937955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:45.938065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:46.939000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:47.939204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:48.939390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:49.939468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:50.939703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:51.939801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:52.940296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:53.940467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:54.940781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:55.941014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:56.941195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:57.941307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:58.941595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:32:59.941805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:00.941940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:01.942101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:02.942907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:03.943003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:04.943126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:05.943251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:06.943382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:07.943446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:08.944068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:09.944164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:10.944275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:11.945082      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:12.945860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:13.945931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:14.946050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:15.946142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:16.946887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:17.946985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:18.947117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:19.947217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:20.947268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:21.948145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:22.948360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:23.948589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:24.948798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:25.948983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:26.949179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:27.949331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:28.949501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:29.949686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:33:30.306345 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1228 12:33:30.311603 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 12/28/24 12:33:30.311
  I1228 12:33:30.528245 19 taints.go:294] Pod is running on ip-172-31-65-66. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/28/24 12:33:30.528
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/28/24 12:33:30.54
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/28/24 12:33:30.546
  I1228 12:33:30.546578 19 taints.go:313] Pod wasn't evicted. Proceeding
  I1228 12:33:30.546594 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/28/24 12:33:30.575
  STEP: Waiting some time to make sure that toleration time passed. @ 12/28/24 12:33:30.586
  E1228 12:33:30.950633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:31.950841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:32.951070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:33.951334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:34.951496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:35.951671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:36.951878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:37.952191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:38.952342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:39.952501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:40.952575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:41.952809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:42.953047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:43.953113      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:44.953391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:45.953877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:46.954864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:47.955844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:48.956853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:49.957096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:50.957227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:51.957785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:52.958850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:53.959840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:54.960885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:55.960998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:56.961203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:57.961409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:58.961709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:33:59.961903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:00.962132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:01.962262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:02.962493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:03.962612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:04.962819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:05.962998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:06.963156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:07.963359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:08.963637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:09.963971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:10.963957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:11.964112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:12.964220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:13.964610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:14.964775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:15.964845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:16.965844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:17.966225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:18.966409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:19.966637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:20.966868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:21.967064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:22.967884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:23.968833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:24.968945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:25.969132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:26.969320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:27.969532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:28.969758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:29.970001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:30.970216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:31.970394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:32.970501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:33.970664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:34.970856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:35.971089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:36.971184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:37.971427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:38.971490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:39.971610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:40.971822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:41.972039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:42.972151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:43.972295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:44.972416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:34:45.587055 19 taints.go:329] Pod wasn't evicted. Test successful
  I1228 12:34:45.587475 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1011" for this suite. @ 12/28/24 12:34:45.592
• [135.320 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 12/28/24 12:34:45.601
  I1228 12:34:45.601411 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 12:34:45.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:34:45.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:34:45.622
  STEP: apply creating a deployment @ 12/28/24 12:34:45.625
  I1228 12:34:45.643578 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2850" for this suite. @ 12/28/24 12:34:45.648
• [0.055 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 12/28/24 12:34:45.656
  I1228 12:34:45.656552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:34:45.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:34:45.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:34:45.674
  STEP: creating service in namespace services-8018 @ 12/28/24 12:34:45.677
  STEP: creating service affinity-nodeport in namespace services-8018 @ 12/28/24 12:34:45.677
  STEP: creating replication controller affinity-nodeport in namespace services-8018 @ 12/28/24 12:34:45.696
  I1228 12:34:45.708018      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8018, replica count: 3
  E1228 12:34:45.973088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:46.974022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:47.974868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:34:48.758582      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 12:34:48.771940 19 resource.go:361] Creating new exec pod
  E1228 12:34:48.975768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:49.975950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:50.976727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:34:51.791780 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-8018 exec execpod-affinitypv57r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1228 12:34:51.878221 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1228 12:34:51.878255 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:34:51.878338 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-8018 exec execpod-affinitypv57r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.71 80'
  I1228 12:34:51.954176 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.71 80\nConnection to 10.152.183.71 80 port [tcp/http] succeeded!\n"
  I1228 12:34:51.954209 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:34:51.954276 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-8018 exec execpod-affinitypv57r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.122 32356'
  E1228 12:34:51.977589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:34:52.029608 19 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.87.122 32356\necho hostName\nConnection to 172.31.87.122 32356 port [tcp/*] succeeded!\n"
  I1228 12:34:52.029640 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:34:52.029717 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-8018 exec execpod-affinitypv57r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.142 32356'
  I1228 12:34:52.107440 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.142 32356\nConnection to 172.31.45.142 32356 port [tcp/*] succeeded!\n"
  I1228 12:34:52.107484 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:34:52.107536 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-8018 exec execpod-affinitypv57r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.45.142:32356/ ; done'
  I1228 12:34:52.246956 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:32356/\n"
  I1228 12:34:52.247016 19 builder.go:147] stdout: "\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g\naffinity-nodeport-cxk2g"
  I1228 12:34:52.247028 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247035 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247043 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247047 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247053 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247058 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247064 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247069 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247075 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247081 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247086 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247091 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247097 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247106 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247111 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247116 19 service.go:242] Received response from host: affinity-nodeport-cxk2g
  I1228 12:34:52.247240 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8018, will wait for the garbage collector to delete the pods @ 12/28/24 12:34:52.263
  I1228 12:34:52.328340 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 7.970913ms
  I1228 12:34:52.429167 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.823487ms
  E1228 12:34:52.978608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:53.979365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:54.979738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:34:55.456749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8018" for this suite. @ 12/28/24 12:34:55.462
• [9.814 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/28/24 12:34:55.47
  I1228 12:34:55.470910 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:34:55.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:34:55.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:34:55.49
  STEP: creating a secret @ 12/28/24 12:34:55.493
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/28/24 12:34:55.498
  STEP: patching the secret @ 12/28/24 12:34:55.502
  STEP: deleting the secret using a LabelSelector @ 12/28/24 12:34:55.511
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/28/24 12:34:55.52
  I1228 12:34:55.525551 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6172" for this suite. @ 12/28/24 12:34:55.529
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/28/24 12:34:55.537
  I1228 12:34:55.537787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:34:55.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:34:55.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:34:55.555
  STEP: Create a pod @ 12/28/24 12:34:55.559
  E1228 12:34:55.980774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:56.980986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/28/24 12:34:57.582
  I1228 12:34:57.591280 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1228 12:34:57.591390 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9752" for this suite. @ 12/28/24 12:34:57.595
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/28/24 12:34:57.605
  I1228 12:34:57.605990 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:34:57.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:34:57.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:34:57.623
  I1228 12:34:57.626473 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1228 12:34:57.631218 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1228 12:34:57.646627 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1228 12:34:57.981894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:34:58.982044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:34:59.655831 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1228 12:34:59.661032 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1228 12:34:59.671441 19 deployment.go:313] Updating deployment test-recreate-deployment
  I1228 12:34:59.671463 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1228 12:34:59.777578 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3737317-95a6-4145-9743-59f0b794d517",
      ResourceVersion: (string) (len=5) "16320",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 12:34:59.781721 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ee88791-d476-4905-a7ea-d3175595ecfb",
      ResourceVersion: (string) (len=5) "16318",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d3737317-95a6-4145-9743-59f0b794d517",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 33 37 33 37 33  31 37 2d 39 35 61 36 2d  |\"d3737317-95a6-|
              00000120  34 31 34 35 2d 39 37 34  33 2d 35 39 66 30 62 37  |4145-9743-59f0b7|
              00000130  39 34 64 35 31 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |94d517\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:34:59.782157 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1228 12:34:59.782324 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6c45bdf-cdac-4fe1-87a7-1ebb6abcb560",
      ResourceVersion: (string) (len=5) "16308",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d3737317-95a6-4145-9743-59f0b794d517",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 33 37 33 37 33  31 37 2d 39 35 61 36 2d  |\"d3737317-95a6-|
              00000120  34 31 34 35 2d 39 37 34  33 2d 35 39 66 30 62 37  |4145-9743-59f0b7|
              00000130  39 34 64 35 31 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |94d517\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:34:59.789771 19 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-dz6wk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-dz6wk",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-3795",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4566c73e-d87b-466b-8cc7-eece08ba2661",
      ResourceVersion: (string) (len=5) "16319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "8ee88791-d476-4905-a7ea-d3175595ecfb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  65 38 38 37 39 31 2d 64  |d\":\"8ee88791-d|
              00000090  34 37 36 2d 34 39 30 35  2d 61 37 65 61 2d 64 33  |476-4905-a7ea-d3|
              000000a0  31 37 35 35 39 35 65 63  66 62 5c 22 7d 22 3a 7b  |175595ecfb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t8dhj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t8dhj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t8dhj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:34:59.791796 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3795" for this suite. @ 12/28/24 12:34:59.798
• [2.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/28/24 12:34:59.806
  I1228 12:34:59.806621 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/28/24 12:34:59.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:34:59.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:34:59.834
  STEP: create the container to handle the HTTPGet hook request. @ 12/28/24 12:34:59.85
  E1228 12:34:59.982114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:00.982333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/28/24 12:35:01.88
  E1228 12:35:01.983130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:02.983267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/28/24 12:35:03.902
  E1228 12:35:03.983240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:04.983362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/28/24 12:35:05.922
  I1228 12:35:05.934059 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6010" for this suite. @ 12/28/24 12:35:05.939
• [6.142 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/28/24 12:35:05.948
  I1228 12:35:05.948310 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:35:05.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:35:05.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:35:05.969
  STEP: Creating secret with name secret-test-map-9f7b4b5e-b825-4547-8545-51794cc42a1c @ 12/28/24 12:35:05.972
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:35:05.977
  E1228 12:35:05.983611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:06.984035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:07.985016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:08.985114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:09.985197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:35:10.004
  I1228 12:35:10.008152 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-secrets-95423be8-0b38-425c-8ebf-c1e22602a465 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:35:10.023
  I1228 12:35:10.042864 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5214" for this suite. @ 12/28/24 12:35:10.046
• [4.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/28/24 12:35:10.054
  I1228 12:35:10.054803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename subpath @ 12/28/24 12:35:10.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:35:10.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:35:10.073
  STEP: Setting up data @ 12/28/24 12:35:10.078
  STEP: Creating pod pod-subpath-test-projected-kxx2 @ 12/28/24 12:35:10.091
  STEP: Creating a pod to test atomic-volume-subpath @ 12/28/24 12:35:10.091
  E1228 12:35:10.985292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:11.985380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:12.985469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:13.985570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:14.985801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:15.986084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:16.986199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:17.986859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:18.987170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:19.988185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:20.988246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:21.989210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:22.989324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:23.989515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:24.989776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:25.990524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:26.990766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:27.990902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:28.991169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:29.991418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:30.991522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:31.991693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:32.992724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:33.992780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:35:34.18
  I1228 12:35:34.183898 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-subpath-test-projected-kxx2 container test-container-subpath-projected-kxx2: <nil>
  STEP: delete the pod @ 12/28/24 12:35:34.198
  STEP: Deleting pod pod-subpath-test-projected-kxx2 @ 12/28/24 12:35:34.218
  I1228 12:35:34.218618 19 delete.go:62] Deleting pod "pod-subpath-test-projected-kxx2" in namespace "subpath-2781"
  I1228 12:35:34.223431 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2781" for this suite. @ 12/28/24 12:35:34.227
• [24.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/28/24 12:35:34.236
  I1228 12:35:34.236578 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:35:34.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:35:34.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:35:34.257
  STEP: Creating a pod to test downward api env vars @ 12/28/24 12:35:34.26
  E1228 12:35:34.993892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:35.994245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:36.994350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:37.994480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:35:38.291
  I1228 12:35:38.295735 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downward-api-6325203e-4d9b-4898-b4ff-3b9b7850a2ca container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 12:35:38.306
  I1228 12:35:38.326587 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5187" for this suite. @ 12/28/24 12:35:38.331
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/28/24 12:35:38.339
  I1228 12:35:38.339401 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename init-container @ 12/28/24 12:35:38.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:35:38.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:35:38.359
  STEP: creating the pod @ 12/28/24 12:35:38.363
  I1228 12:35:38.363829 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1228 12:35:38.994543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:39.994780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:40.994891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:41.994976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:42.995343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:43.995440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:44.995558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:45.995890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:46.995985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:47.996897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:48.997114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:49.997526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:50.997724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:51.997791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:52.997972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:53.998261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:54.999249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:55.999344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:56.999529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:57.999673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:58.999793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:35:59.999906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:00.999998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:02.000117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:03.000245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:04.000467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:05.000689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:06.000871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:07.001083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:08.001216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:09.001346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:10.002361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:11.002533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:12.002726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:13.002806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:14.002906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:15.002994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:16.003181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:17.003367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:18.003516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:19.003623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:20.003764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:36:20.456282 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1cfac282-7a02-4f1a-8e1e-dbb45ad23107", GenerateName:"", Namespace:"init-container-8491", SelfLink:"", UID:"5b60e730-3531-464e-97cc-d91336c0a0ec", ResourceVersion:"16757", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"363819575"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005210030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 12, 36, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005210060), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hwsrs", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0045a3e20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hwsrs", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hwsrs", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hwsrs", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001aa1208), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-65-66", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0037d0880), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001aa1290)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001aa12b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001aa12b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001aa12bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003ad6050), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 28, 12, 35, 39, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.65.66", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.65.66"}}, PodIP:"192.168.206.74", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.206.74"}}, StartTime:time.Date(2024, time.December, 28, 12, 35, 38, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00024dd50)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00024ddc0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://4d5c2de78b9dc9e5d2edcb3bc28b8783db5a5868cb0b7a83305fa8c10681415f", Started:(*bool)(0xc001aa136a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hwsrs", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003ad6070)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0045a3e80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc001aa137d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hwsrs", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003ad60a0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0045a3e60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc001aa133f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hwsrs", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003ad6060)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1228 12:36:20.456417 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8491" for this suite. @ 12/28/24 12:36:20.462
• [42.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 12/28/24 12:36:20.47
  I1228 12:36:20.470976 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 12:36:20.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:20.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:20.49
  STEP: Creating a ResourceQuota with best effort scope @ 12/28/24 12:36:20.493
  STEP: Ensuring ResourceQuota status is calculated @ 12/28/24 12:36:20.498
  E1228 12:36:21.004791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:22.004890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 12/28/24 12:36:22.503
  STEP: Ensuring ResourceQuota status is calculated @ 12/28/24 12:36:22.508
  E1228 12:36:23.004978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:24.005074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 12/28/24 12:36:24.514
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/28/24 12:36:24.53
  E1228 12:36:25.005525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:26.005628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/28/24 12:36:26.535
  E1228 12:36:27.005809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:28.005913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/28/24 12:36:28.541
  STEP: Ensuring resource quota status released the pod usage @ 12/28/24 12:36:28.554
  E1228 12:36:29.006470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:30.006577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 12/28/24 12:36:30.559
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/28/24 12:36:30.572
  E1228 12:36:31.007393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:32.007501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/28/24 12:36:32.579
  E1228 12:36:33.007609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:34.007756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/28/24 12:36:34.585
  STEP: Ensuring resource quota status released the pod usage @ 12/28/24 12:36:34.605
  E1228 12:36:35.008756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:36.008945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:36:36.611602 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3724" for this suite. @ 12/28/24 12:36:36.616
• [16.154 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 12/28/24 12:36:36.624
  I1228 12:36:36.624978 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 12:36:36.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:36.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:36.642
  I1228 12:36:36.646464 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:36:37.009081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:38.009251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:39.009384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1228 12:36:39.181663      19 warnings.go:70] unknown field "alpha"
  W1228 12:36:39.181683      19 warnings.go:70] unknown field "beta"
  W1228 12:36:39.181686      19 warnings.go:70] unknown field "delta"
  W1228 12:36:39.181689      19 warnings.go:70] unknown field "epsilon"
  W1228 12:36:39.181692      19 warnings.go:70] unknown field "gamma"
  I1228 12:36:39.736061 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-527" for this suite. @ 12/28/24 12:36:39.74
• [3.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/28/24 12:36:39.749
  I1228 12:36:39.749808 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/28/24 12:36:39.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:39.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:39.764
  E1228 12:36:40.009468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:41.009684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 12/28/24 12:36:41.797
  STEP: Cleaning up the configmap @ 12/28/24 12:36:41.807
  STEP: Cleaning up the pod @ 12/28/24 12:36:41.814
  I1228 12:36:41.830604 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4337" for this suite. @ 12/28/24 12:36:41.835
• [2.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 12/28/24 12:36:41.842
  I1228 12:36:41.842925 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename disruption @ 12/28/24 12:36:41.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:41.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:41.862
  STEP: creating the pdb @ 12/28/24 12:36:41.866
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:36:41.872
  E1228 12:36:42.009730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:43.009965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 12/28/24 12:36:43.877
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:36:43.889
  STEP: patching the pdb @ 12/28/24 12:36:43.893
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:36:43.902
  STEP: Waiting for the pdb to be deleted @ 12/28/24 12:36:43.915
  I1228 12:36:43.919373 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4246" for this suite. @ 12/28/24 12:36:43.924
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/28/24 12:36:43.934
  I1228 12:36:43.934105 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:36:43.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:43.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:43.95
  STEP: Creating secret with name s-test-opt-del-4391d822-29f1-4a88-9a50-ae8e8d7d6564 @ 12/28/24 12:36:43.956
  STEP: Creating secret with name s-test-opt-upd-4b053fe1-0a45-43d4-b219-56cb04be9e02 @ 12/28/24 12:36:43.96
  STEP: Creating the pod @ 12/28/24 12:36:43.967
  E1228 12:36:44.010231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:45.010730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:46.011553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-4391d822-29f1-4a88-9a50-ae8e8d7d6564 @ 12/28/24 12:36:46.016
  STEP: Updating secret s-test-opt-upd-4b053fe1-0a45-43d4-b219-56cb04be9e02 @ 12/28/24 12:36:46.025
  STEP: Creating secret with name s-test-opt-create-b76ed995-7241-44fb-817e-4a4a20196296 @ 12/28/24 12:36:46.03
  STEP: waiting to observe update in volume @ 12/28/24 12:36:46.036
  E1228 12:36:47.011724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:48.011940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:49.012063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:50.012141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:36:50.078106 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4036" for this suite. @ 12/28/24 12:36:50.081
• [6.155 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/28/24 12:36:50.089
  I1228 12:36:50.089527 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:36:50.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:50.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:50.111
  STEP: Creating the pod @ 12/28/24 12:36:50.114
  E1228 12:36:51.012161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:52.012245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:36:52.664467 19 pod_client.go:173] Successfully updated pod "labelsupdate5801c1c5-fe83-4f16-ba2c-44f29fd23c3c"
  E1228 12:36:53.012273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:54.012364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:36:54.682986 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6487" for this suite. @ 12/28/24 12:36:54.688
• [4.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 12/28/24 12:36:54.697
  I1228 12:36:54.697812 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:36:54.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:54.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:54.714
  STEP: creating a collection of services @ 12/28/24 12:36:54.718
  I1228 12:36:54.718290 19 service.go:3655] Creating e2e-svc-a-k82bq
  I1228 12:36:54.730516 19 service.go:3655] Creating e2e-svc-b-874xj
  I1228 12:36:54.741705 19 service.go:3655] Creating e2e-svc-c-9bfcf
  STEP: deleting service collection @ 12/28/24 12:36:54.756
  I1228 12:36:54.788734 19 service.go:3690] Collection of services has been deleted
  I1228 12:36:54.788892 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6340" for this suite. @ 12/28/24 12:36:54.793
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/28/24 12:36:54.801
  I1228 12:36:54.801683 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename namespaces @ 12/28/24 12:36:54.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:54.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:54.82
  STEP: Creating namespace "e2e-ns-w6h7m" @ 12/28/24 12:36:54.823
  I1228 12:36:54.837894 19 namespace.go:411] Namespace "e2e-ns-w6h7m-4545" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-w6h7m-4545" @ 12/28/24 12:36:54.837
  I1228 12:36:54.850186 19 namespace.go:434] Namespace "e2e-ns-w6h7m-4545" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-w6h7m-4545" @ 12/28/24 12:36:54.85
  I1228 12:36:54.858767 19 namespace.go:463] Namespace "e2e-ns-w6h7m-4545" has []v1.FinalizerName{"kubernetes"}
  I1228 12:36:54.858884 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6898" for this suite. @ 12/28/24 12:36:54.862
  STEP: Destroying namespace "e2e-ns-w6h7m-4545" for this suite. @ 12/28/24 12:36:54.869
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/28/24 12:36:54.878
  I1228 12:36:54.878163 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:36:54.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:54.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:54.895
  I1228 12:36:54.899075 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:36:55.013046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:56.025284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/28/24 12:36:56.178
  I1228 12:36:56.178719 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-8923 --namespace=crd-publish-openapi-8923 create -f -'
  I1228 12:36:56.243285 19 builder.go:146] stderr: ""
  I1228 12:36:56.243316 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5611-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1228 12:36:56.243347 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-8923 --namespace=crd-publish-openapi-8923 delete e2e-test-crd-publish-openapi-5611-crds test-cr'
  I1228 12:36:56.291590 19 builder.go:146] stderr: ""
  I1228 12:36:56.291619 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5611-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1228 12:36:56.291675 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-8923 --namespace=crd-publish-openapi-8923 apply -f -'
  I1228 12:36:56.347312 19 builder.go:146] stderr: ""
  I1228 12:36:56.347341 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5611-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1228 12:36:56.347409 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-8923 --namespace=crd-publish-openapi-8923 delete e2e-test-crd-publish-openapi-5611-crds test-cr'
  I1228 12:36:56.395268 19 builder.go:146] stderr: ""
  I1228 12:36:56.395298 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5611-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/28/24 12:36:56.395
  I1228 12:36:56.395391 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-8923 explain e2e-test-crd-publish-openapi-5611-crds'
  I1228 12:36:56.437105 19 builder.go:146] stderr: ""
  I1228 12:36:56.437146 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5611-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1228 12:36:57.025573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:36:57.727235 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8923" for this suite. @ 12/28/24 12:36:57.736
• [2.867 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 12/28/24 12:36:57.745
  I1228 12:36:57.745498 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 12:36:57.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:36:57.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:36:57.765
  E1228 12:36:58.026567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:36:59.027172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:00.027864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:01.028490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:02.029193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:03.030023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:04.030728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:05.031331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:06.031573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:07.032639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:08.033147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:09.033776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:10.033982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:11.034073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:12.034789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:13.034880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:14.035834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/28/24 12:37:14.774
  E1228 12:37:15.036245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:16.036327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:17.036445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:18.036870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:19.037095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 12:37:19.779
  STEP: Ensuring resource quota status is calculated @ 12/28/24 12:37:19.787
  E1228 12:37:20.037842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:21.038104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/28/24 12:37:21.792
  STEP: Ensuring resource quota status captures configMap creation @ 12/28/24 12:37:21.804
  E1228 12:37:22.039130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:23.039398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/28/24 12:37:23.809
  STEP: Ensuring resource quota status released usage @ 12/28/24 12:37:23.817
  E1228 12:37:24.039591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:25.039774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:37:25.824040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6596" for this suite. @ 12/28/24 12:37:25.827
• [28.093 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/28/24 12:37:25.838
  I1228 12:37:25.838863 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename subpath @ 12/28/24 12:37:25.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:37:25.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:37:25.863
  STEP: Setting up data @ 12/28/24 12:37:25.871
  STEP: Creating pod pod-subpath-test-configmap-hxwn @ 12/28/24 12:37:25.884
  STEP: Creating a pod to test atomic-volume-subpath @ 12/28/24 12:37:25.884
  E1228 12:37:26.040798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:27.041281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:28.041369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:29.041565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:30.042145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:31.042319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:32.042438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:33.042607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:34.043134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:35.043240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:36.043770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:37.043861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:38.044363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:39.044470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:40.044498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:41.044865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:42.045750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:43.045791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:44.046485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:45.046770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:46.047355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:47.047611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:37:47.963
  I1228 12:37:47.966879 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-subpath-test-configmap-hxwn container test-container-subpath-configmap-hxwn: <nil>
  STEP: delete the pod @ 12/28/24 12:37:47.977
  STEP: Deleting pod pod-subpath-test-configmap-hxwn @ 12/28/24 12:37:47.996
  I1228 12:37:47.996881 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-hxwn" in namespace "subpath-5361"
  I1228 12:37:48.001872 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5361" for this suite. @ 12/28/24 12:37:48.005
• [22.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 12/28/24 12:37:48.016
  I1228 12:37:48.016251 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:37:48.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:37:48.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:37:48.033
  E1228 12:37:48.048167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 12/28/24 12:37:48.058
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:37:48.163
  STEP: Deploying the webhook pod @ 12/28/24 12:37:48.172
  STEP: Wait for the deployment to be ready @ 12/28/24 12:37:48.188
  I1228 12:37:48.200693 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 12:37:49.048854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:50.048894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:37:50.214
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:37:50.228
  E1228 12:37:51.049402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:37:51.228767 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1228 12:37:51.240346 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2191-crds.webhook.example.com via the AdmissionRegistration API @ 12/28/24 12:37:51.751
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/28/24 12:37:51.765
  E1228 12:37:52.050266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:53.050446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:54.050552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:37:54.356485 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7875" for this suite. @ 12/28/24 12:37:54.36
  STEP: Destroying namespace "webhook-markers-7078" for this suite. @ 12/28/24 12:37:54.37
• [6.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/28/24 12:37:54.379
  I1228 12:37:54.379416 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:37:54.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:37:54.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:37:54.394
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/28/24 12:37:54.397
  E1228 12:37:55.051486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:56.051714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:57.052626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:37:58.052809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:37:58.42
  I1228 12:37:58.426125 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-0509227e-a7d2-46c0-b302-769c4a0c67d2 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:37:58.435
  I1228 12:37:58.453477 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4773" for this suite. @ 12/28/24 12:37:58.458
• [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/28/24 12:37:58.466
  I1228 12:37:58.466874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename limitrange @ 12/28/24 12:37:58.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:37:58.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:37:58.484
  STEP: Creating LimitRange "e2e-limitrange-lxwsc" in namespace "limitrange-2572" @ 12/28/24 12:37:58.488
  STEP: Creating another limitRange in another namespace @ 12/28/24 12:37:58.492
  I1228 12:37:58.509579 19 limit_range.go:299] Namespace "e2e-limitrange-lxwsc-3317" created
  I1228 12:37:58.509596 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-lxwsc" in namespace "e2e-limitrange-lxwsc-3317"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-lxwsc" @ 12/28/24 12:37:58.513
  I1228 12:37:58.518309 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-lxwsc" in "limitrange-2572" namespace @ 12/28/24 12:37:58.518
  I1228 12:37:58.526115 19 limit_range.go:335] LimitRange "e2e-limitrange-lxwsc" has been patched
  STEP: Delete LimitRange "e2e-limitrange-lxwsc" by Collection with labelSelector: "e2e-limitrange-lxwsc=patched" @ 12/28/24 12:37:58.526
  STEP: Confirm that the limitRange "e2e-limitrange-lxwsc" has been deleted @ 12/28/24 12:37:58.536
  I1228 12:37:58.536271 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1228 12:37:58.539473 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-lxwsc=patched"
  I1228 12:37:58.539495 19 limit_range.go:344] LimitRange "e2e-limitrange-lxwsc" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-lxwsc" @ 12/28/24 12:37:58.539
  I1228 12:37:58.544177 19 limit_range.go:350] Found 1 limitRange
  I1228 12:37:58.544277 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2572" for this suite. @ 12/28/24 12:37:58.547
  STEP: Destroying namespace "e2e-limitrange-lxwsc-3317" for this suite. @ 12/28/24 12:37:58.557
• [0.097 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/28/24 12:37:58.564
  I1228 12:37:58.564247 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:37:58.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:37:58.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:37:58.578
  I1228 12:37:58.584350 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I1228 12:37:58.592126 19 deployment.go:1200] Waiting for observed generation 1
  E1228 12:37:59.053850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:00.054086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:00.601451 19 deployment.go:1205] Waiting for all required pods to come up
  I1228 12:38:00.605914 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/28/24 12:38:00.605
  I1228 12:38:00.606020 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1228 12:38:00.613397 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1228 12:38:00.625254 19 deployment.go:313] Updating deployment webserver-deployment
  I1228 12:38:00.625277 19 deployment.go:1224] Waiting for observed generation 2
  E1228 12:38:01.054902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:02.055008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:02.637499 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1228 12:38:02.641190 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1228 12:38:02.646021 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1228 12:38:02.658313 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1228 12:38:02.658337 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1228 12:38:02.662104 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1228 12:38:02.670215 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1228 12:38:02.670233 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1228 12:38:02.682150 19 deployment.go:313] Updating deployment webserver-deployment
  I1228 12:38:02.682174 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1228 12:38:02.694832 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1228 12:38:02.699042 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1228 12:38:02.719942 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "210bc8f5-5b0e-435d-8739-65916cbf6033",
      ResourceVersion: (string) (len=5) "17713",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 12:38:02.744340 19 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
      ResourceVersion: (string) (len=5) "17706",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "210bc8f5-5b0e-435d-8739-65916cbf6033",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 30 62 63 38  66 35 2d 35 62 30 65 2d  |\"210bc8f5-5b0e-|
              00000120  34 33 35 64 2d 38 37 33  39 2d 36 35 39 31 36 63  |435d-8739-65916c|
              00000130  62 66 36 30 33 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bf6033\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:38:02.744812 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1228 12:38:02.744979 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
      ResourceVersion: (string) (len=5) "17705",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "210bc8f5-5b0e-435d-8739-65916cbf6033",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 30 62 63 38  66 35 2d 35 62 30 65 2d  |\"210bc8f5-5b0e-|
              00000120  34 33 35 64 2d 38 37 33  39 2d 36 35 39 31 36 63  |435d-8739-65916c|
              00000130  62 66 36 30 33 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bf6033\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:38:02.764666 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-495cd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-495cd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b1b8e79-1dbc-49c4-b415-9d882d2d68ac",
      ResourceVersion: (string) (len=5) "17587",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  38 2e 34 31 5c 22 7d 22  |2.168.178.41\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wffj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wffj2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.122"
        }
      },
      PodIP: (string) (len=14) "192.168.178.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.178.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://984e918bfdd6eee6e064abd883079562ac25ec7b9e8e8f711bbf882ad8606528",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wffj2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.766571 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-585lh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-585lh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49f10fae-ae0b-4f46-9414-2225bfeb9d96",
      ResourceVersion: (string) (len=5) "17723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8zn6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8zn6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.767839 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5p2pp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5p2pp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5215421d-31a2-4386-b106-03347f5ec2e6",
      ResourceVersion: (string) (len=5) "17738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kckkq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kckkq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.769120 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5szlx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5szlx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81102346-6755-4295-b33e-91c17e304b2c",
      ResourceVersion: (string) (len=5) "17564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 37 31 5c 22 7d 22  |2.168.206.71\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfx9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfx9b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=14) "192.168.206.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.206.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://26e44e516753a8be6e086b5733c29bce26055a96f63e25024c8dcd6a32541ae5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hfx9b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.770287 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-69z7x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-69z7x",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "224bd03b-346f-4c55-845a-6ebb52646545",
      ResourceVersion: (string) (len=5) "17567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  39 2e 33 34 5c 22 7d 22  |2.168.189.34\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4k4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4k4m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.142",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.142"
        }
      },
      PodIP: (string) (len=14) "192.168.189.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.189.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://390380800446279b8b1b1c6a70a7183fb9ef90fca9b061d423655915dfe8b982",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k4k4m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.771414 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-6b8wc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6b8wc",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67b4cfa6-cb56-4a34-bbf4-f62227125926",
      ResourceVersion: (string) (len=5) "17730",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dk6wl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dk6wl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.772199 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7hqfx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7hqfx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdcafee3-67c4-4c65-b055-f1eb063ee486",
      ResourceVersion: (string) (len=5) "17590",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  38 2e 31 37 5c 22 7d 22  |2.168.178.17\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-chg8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-chg8k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.122"
        }
      },
      PodIP: (string) (len=14) "192.168.178.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.178.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0756ffdf3195fed8c8efe8a60958a32b7941410b3ea236de2736124f72ca1c96",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-chg8k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.773430 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-blcwr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-blcwr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f685b73-5ee1-44e8-8dbb-09c6c28abdf5",
      ResourceVersion: (string) (len=5) "17568",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  39 2e 34 36 5c 22 7d 22  |2.168.189.46\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbf82",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbf82",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.142",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.142"
        }
      },
      PodIP: (string) (len=14) "192.168.189.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.189.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://095e8dcaef6eeedaa9c079f51f3f436f2da54fab4dfafc8560efaab88ec4ea06",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rbf82",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.774606 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cbgz6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cbgz6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3ba66cf-dc9d-4e94-9f93-c99b4d3d1c1f",
      ResourceVersion: (string) (len=5) "17741",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cnmt5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cnmt5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.776890 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-gx7dq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-gx7dq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f8398a93-ec28-4b1d-abec-83ef9514d624",
      ResourceVersion: (string) (len=5) "17742",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8b9v8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8b9v8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.778628 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j4l8s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j4l8s",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2587cd6f-a0ed-491d-999a-5fca4f9a70f0",
      ResourceVersion: (string) (len=5) "17747",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vtg5x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vtg5x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.779645 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kp67j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kp67j",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b40f537-173b-4db6-a6b5-0bc2036fe859",
      ResourceVersion: (string) (len=5) "17563",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  39 2e 32 36 5c 22 7d 22  |2.168.189.26\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sr8gh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sr8gh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.142",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.142"
        }
      },
      PodIP: (string) (len=14) "192.168.189.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.189.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://22594da0821e0eb1fa51ecdc70aba8ea15f7cd9c81dfc6092df4209ab512d888",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sr8gh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.781125 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kr9l7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kr9l7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a08c274-4dd9-462c-9346-7b6a2fd7cf8b",
      ResourceVersion: (string) (len=5) "17731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pscvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pscvq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pscvq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.782365 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kwxrd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kwxrd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a528d90-0034-4fd7-8f6f-1f49b72dbc5d",
      ResourceVersion: (string) (len=5) "17593",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  38 2e 32 34 5c 22 7d 22  |2.168.178.24\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdpmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdpmk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.122"
        }
      },
      PodIP: (string) (len=14) "192.168.178.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.178.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://52fdf07561df1310df49a275ce82a1c845cfc0ed422aefac77fa32054b0700e6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pdpmk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.783393 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qh49p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qh49p",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f45a50fd-5142-446a-80bc-d1291c0adf62",
      ResourceVersion: (string) (len=5) "17744",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2knbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2knbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.784038 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rbjc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rbjc6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c689e570-9d5e-4646-ba77-2bd8b0ccc6c2",
      ResourceVersion: (string) (len=5) "17743",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2fzrr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2fzrr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.784798 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rgj5p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rgj5p",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e96626f2-ff08-4223-ab67-2b5b101d87c4",
      ResourceVersion: (string) (len=5) "17740",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wvpzp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wvpzp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.788359 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-vsgqm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-vsgqm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07e5244e-51ca-4dc4-9c4b-294d15e4f311",
      ResourceVersion: (string) (len=5) "17733",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c48c8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c48c8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.789167 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-wbjwb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-wbjwb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf5afef0-cd98-4d4b-aedc-60ed654b24ad",
      ResourceVersion: (string) (len=5) "17746",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2p5g8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2p5g8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.789987 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-whccx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-whccx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d650572-8120-4a32-ae08-e26f8b5f8942",
      ResourceVersion: (string) (len=5) "17577",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "3ba66478-45c1-45a1-87cb-ebeaed5732bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  61 36 36 34 37 38 2d 34  |d\":\"3ba66478-4|
              00000090  35 63 31 2d 34 35 61 31  2d 38 37 63 62 2d 65 62  |5c1-45a1-87cb-eb|
              000000a0  65 61 65 64 35 37 33 32  62 62 5c 22 7d 22 3a 7b  |eaed5732bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 37 37 5c 22 7d 22  |2.168.206.77\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7np6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7np6p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=14) "192.168.206.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.206.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986278,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986279,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://883d1ff0e7fcb526013a05e12eb6a0359c9ebd55adc35c0239188c921909eb88",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7np6p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.791013 19 deployment.go:67] Pod "webserver-deployment-786f49d774-6wdc5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6wdc5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c13d6ce6-1a85-45a2-8661-373ef56d52ae",
      ResourceVersion: (string) (len=5) "17736",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rx9wb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rx9wb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.791781 19 deployment.go:67] Pod "webserver-deployment-786f49d774-74d84" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-74d84",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cecf5019-6bdc-4343-99f9-156f81a59734",
      ResourceVersion: (string) (len=5) "17734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dj2b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dj2b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.793599 19 deployment.go:67] Pod "webserver-deployment-786f49d774-9b4xg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9b4xg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "533043bb-9b20-4b96-a5b6-c2cf17bb1ed7",
      ResourceVersion: (string) (len=5) "17696",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 39 2e 33  30 5c 22 7d 22 3a 7b 22  |68.189.30\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q9btw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q9btw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.142",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.142"
        }
      },
      PodIP: (string) (len=14) "192.168.189.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.189.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q9btw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.795138 19 deployment.go:67] Pod "webserver-deployment-786f49d774-9b8fq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9b8fq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0557fa25-4c6d-4e92-a3c1-a367802e90b1",
      ResourceVersion: (string) (len=5) "17749",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fljl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fljl5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.798474 19 deployment.go:67] Pod "webserver-deployment-786f49d774-brx67" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-brx67",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b82d7242-0f94-42b6-8658-bd15053aa147",
      ResourceVersion: (string) (len=5) "17681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 37 38 2e 33  33 5c 22 7d 22 3a 7b 22  |68.178.33\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjw4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjw4g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.122"
        }
      },
      PodIP: (string) (len=14) "192.168.178.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.178.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jjw4g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.799540 19 deployment.go:67] Pod "webserver-deployment-786f49d774-fg4z2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-fg4z2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c4af744-8695-4bab-8a93-92b0647a1e98",
      ResourceVersion: (string) (len=5) "17698",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 36 2e 31  30 31 5c 22 7d 22 3a 7b  |68.206.101\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c9bqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c9bqr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=15) "192.168.206.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c9bqr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.801276 19 deployment.go:67] Pod "webserver-deployment-786f49d774-gfr7t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-gfr7t",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ca6f7e2-7600-44d7-a83b-febb8c37e9b2",
      ResourceVersion: (string) (len=5) "17737",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mdr24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mdr24",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.803359 19 deployment.go:67] Pod "webserver-deployment-786f49d774-j2v54" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-j2v54",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d85b23f9-b432-43a8-9d9c-836252b7a2a0",
      ResourceVersion: (string) (len=5) "17729",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpvsz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpvsz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.804273 19 deployment.go:67] Pod "webserver-deployment-786f49d774-lvvj9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lvvj9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "944535b4-e143-4e96-b4c5-1b8d7ac3d745",
      ResourceVersion: (string) (len=5) "17690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 39 2e 34  37 5c 22 7d 22 3a 7b 22  |68.189.47\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54ltc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54ltc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-45-142",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.45.142",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.45.142"
        }
      },
      PodIP: (string) (len=14) "192.168.189.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.189.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-54ltc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.805711 19 deployment.go:67] Pod "webserver-deployment-786f49d774-tvwg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-tvwg5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fd11227-0c96-447a-a624-5e39fa90f7a9",
      ResourceVersion: (string) (len=5) "17732",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kwlt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kwlt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.806378 19 deployment.go:67] Pod "webserver-deployment-786f49d774-x286x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-x286x",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3ec4967-b85f-49b2-8e83-283b84468ce7",
      ResourceVersion: (string) (len=5) "17735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxv8m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxv8m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.807375 19 deployment.go:67] Pod "webserver-deployment-786f49d774-z4f2n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-z4f2n",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a76970ee-4639-4def-98b6-f9e2b26deac1",
      ResourceVersion: (string) (len=5) "17726",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bkdfv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bkdfv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986282,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.122"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986282,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bkdfv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.809215 19 deployment.go:67] Pod "webserver-deployment-786f49d774-z8fzv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-z8fzv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-4238",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c07faa84-b3be-4422-bf44-7f9bc567154f",
      ResourceVersion: (string) (len=5) "17700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "2fabcb64-1913-4076-8625-2f2b7514619a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 62 63 62 36 34 2d 31  |d\":\"2fabcb64-1|
              00000090  39 31 33 2d 34 30 37 36  2d 38 36 32 35 2d 32 66  |913-4076-8625-2f|
              000000a0  32 62 37 35 31 34 36 31  39 61 5c 22 7d 22 3a 7b  |2b7514619a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 36 2e 39  31 5c 22 7d 22 3a 7b 22  |68.206.91\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jqb7c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jqb7c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986280,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=14) "192.168.206.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.206.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986280,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jqb7c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:38:02.810591 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4238" for this suite. @ 12/28/24 12:38:02.818
• [4.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 12/28/24 12:38:02.836
  I1228 12:38:02.836198 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:38:02.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:02.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:02.907
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/28/24 12:38:02.91
  I1228 12:38:02.910819 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4290 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1228 12:38:02.961160 19 builder.go:146] stderr: ""
  I1228 12:38:02.961182 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/28/24 12:38:02.961
  E1228 12:38:03.055590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:04.056078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:05.056184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:06.056900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:07.057840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/28/24 12:38:08.011
  I1228 12:38:08.012000 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4290 get pod e2e-test-httpd-pod -o json'
  I1228 12:38:08.052507 19 builder.go:146] stderr: ""
  I1228 12:38:08.052609 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-28T12:38:02Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4290\",\n        \"resourceVersion\": \"17831\",\n        \"uid\": \"82e5b0d6-6edc-4be6-85e2-d6dfc1962680\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k4tcb\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-65-66\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-k4tcb\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-28T12:38:03Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-28T12:38:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-28T12:38:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-28T12:38:03Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-28T12:38:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://5721ce32b70ab97a4e411802e62dc0ff84968f22499f46869f4a02e1bf9168e3\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-28T12:38:03Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k4tcb\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.65.66\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.65.66\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.206.90\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.206.90\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-28T12:38:02Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/28/24 12:38:08.052
  I1228 12:38:08.052710 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4290 replace -f -'
  E1228 12:38:08.058179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:08.130782 19 builder.go:146] stderr: ""
  I1228 12:38:08.130811 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/28/24 12:38:08.13
  I1228 12:38:08.135023 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4290 delete pods e2e-test-httpd-pod'
  E1228 12:38:09.058296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:09.713586 19 builder.go:146] stderr: ""
  I1228 12:38:09.713638 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1228 12:38:09.713766 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4290" for this suite. @ 12/28/24 12:38:09.717
• [6.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/28/24 12:38:09.723
  I1228 12:38:09.723999 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:38:09.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:09.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:09.743
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:38:09.746
  E1228 12:38:10.058507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:11.058732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:12.059711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:13.059913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:38:13.777
  I1228 12:38:13.781431 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-2280e302-9ae4-4515-9452-fed5050721bb container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:38:13.789
  I1228 12:38:13.813684 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9926" for this suite. @ 12/28/24 12:38:13.817
• [4.103 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/28/24 12:38:13.826
  I1228 12:38:13.826635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:38:13.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:13.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:13.844
  STEP: Creating the pod @ 12/28/24 12:38:13.847
  E1228 12:38:14.060407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:15.060627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:16.060732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:16.399213 19 pod_client.go:173] Successfully updated pod "labelsupdate1745a5bd-0895-4a7f-8499-b339a0a5e990"
  E1228 12:38:17.060765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:18.061028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:18.416094 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3552" for this suite. @ 12/28/24 12:38:18.419
• [4.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/28/24 12:38:18.426
  I1228 12:38:18.426675 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:38:18.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:18.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:18.444
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/28/24 12:38:18.447
  I1228 12:38:18.448253 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:38:19.061869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:19.767561 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:38:20.062030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:21.062953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:22.063279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:23.064197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:24.065086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:24.690671 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4670" for this suite. @ 12/28/24 12:38:24.699
• [6.282 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/28/24 12:38:24.708
  I1228 12:38:24.708278 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:38:24.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:24.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:24.749
  STEP: Creating configMap with name configmap-test-volume-map-ca50b5c4-9571-40dd-8353-0640e8f4af54 @ 12/28/24 12:38:24.752
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:38:24.765
  E1228 12:38:25.065193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:26.065266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:27.065849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:28.066868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:38:28.786
  I1228 12:38:28.790639 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-9a444b75-55cf-4ee2-9ed2-001123f1e028 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:38:28.798
  I1228 12:38:28.812467 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2600" for this suite. @ 12/28/24 12:38:28.815
• [4.114 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 12/28/24 12:38:28.822
  I1228 12:38:28.822542 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:38:28.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:28.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:28.84
  I1228 12:38:28.847498 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8375" for this suite. @ 12/28/24 12:38:28.851
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/28/24 12:38:28.859
  I1228 12:38:28.859496 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename apf @ 12/28/24 12:38:28.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:28.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:28.877
  STEP: getting /apis @ 12/28/24 12:38:28.88
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/28/24 12:38:28.883
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/28/24 12:38:28.885
  STEP: creating @ 12/28/24 12:38:28.887
  STEP: getting @ 12/28/24 12:38:28.904
  STEP: listing @ 12/28/24 12:38:28.908
  STEP: watching @ 12/28/24 12:38:28.913
  I1228 12:38:28.913280 19 flowcontrol.go:620] starting watch
  STEP: patching @ 12/28/24 12:38:28.914
  STEP: updating @ 12/28/24 12:38:28.92
  I1228 12:38:28.930721 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/28/24 12:38:28.93
  STEP: patching /status @ 12/28/24 12:38:28.935
  STEP: updating /status @ 12/28/24 12:38:28.941
  STEP: deleting @ 12/28/24 12:38:28.954
  STEP: deleting a collection @ 12/28/24 12:38:28.969
  I1228 12:38:28.991209 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3358" for this suite. @ 12/28/24 12:38:28.996
• [0.143 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/28/24 12:38:29.002
  I1228 12:38:29.002675 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:38:29.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:38:29.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:38:29.021
  STEP: Creating pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714 @ 12/28/24 12:38:29.024
  E1228 12:38:29.067131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:30.068148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 12:38:31.045
  I1228 12:38:31.051066 19 container_probe.go:1749] Initial restart count of pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 is 0
  I1228 12:38:31.054852 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:31.069008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:32.069180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:33.059363 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:33.069756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:34.069885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:35.065118 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:35.070212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:36.070479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:37.070465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:37.070580 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:38.070618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:39.070857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:39.075034 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:40.071020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:41.071196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:41.079894 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:42.071951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:43.072159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:43.086681 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:44.072360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:45.072616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:45.091250 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:46.072784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:47.072993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:47.098900 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:48.073815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:49.073914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:49.103483 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:50.074405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:51.074761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:51.108697 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:52.075421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:53.075480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:53.114039 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:54.076368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:55.076749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:55.119602 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:56.077609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:57.077831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:57.124419 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:38:58.078429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:38:59.078778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:38:59.130624 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:00.079554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:01.079782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:01.135449 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:02.080519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:03.080753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:03.140474 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:04.080846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:05.081157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:05.146149 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:06.081296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:07.081508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:07.151187 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:08.081774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:09.081940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:09.158232 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:10.082018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:11.082236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:11.162819 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:12.082520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:13.082630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:13.168122 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:14.082861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:15.083909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:15.174162 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:16.083998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:17.084145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:17.178906 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:18.084779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:19.085850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:19.183931 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:20.086839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:21.087870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:21.188814 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:22.087989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:23.088181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:23.193769 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:24.088686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:25.088801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:25.200848 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:26.088956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:27.089901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:27.205075 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:28.089949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:29.090147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:29.210968 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:30.090281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:31.090478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:31.216787 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:32.091268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:33.091503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:33.222696 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:34.091572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:35.091790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:35.228544 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:36.091847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:37.092099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:37.233947 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:38.092806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:39.092939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:39.238917 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:40.093762      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:41.093807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:41.243838 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:42.093894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:43.094015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:43.249488 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:44.094104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:45.094738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:45.253683 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:46.094797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:47.095864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:47.259340 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:48.096856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:49.097907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:49.265745 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:50.098033      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:51.098258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:51.272450 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:52.098346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:53.098461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:53.277937 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:54.098834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:55.099136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:55.284498 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:56.099303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:57.099421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:57.289933 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:39:58.099582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:39:59.099745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:39:59.294234 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:00.100147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:01.100284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:01.299266 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:02.100876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:03.101871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:03.304401 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:04.102001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:05.102133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:05.310575 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:06.103144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:07.103345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:07.316041 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:08.103431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:09.103633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:09.323751 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:10.104050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:11.104138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:11.331320 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:12.104875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:13.104982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:13.336450 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:14.105076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:15.105145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:15.342955 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:16.105877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:17.106881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:17.348751 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:18.107454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:19.107590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:19.353338 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:20.108147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:21.108382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:21.358792 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:22.108499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:23.108600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:23.363667 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:24.109517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:25.109928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:25.369165 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:26.110076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:27.110278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:27.374891 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:28.110608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:29.110835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:29.380682 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:30.111408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:31.111617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:31.387062 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:32.111807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:33.111998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:33.392330 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:34.112144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:35.112265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:35.399153 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:36.112875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:37.113020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:37.405274 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:38.113130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:39.113348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:39.410958 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:40.113695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:41.113789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:41.416678 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:42.113883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:43.114854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:43.424010 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:44.115763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:45.115871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:45.429597 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:46.115966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:47.116840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:47.434854 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:48.117725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:49.117872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:49.440622 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:50.118118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:51.118312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:51.445538 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:52.118343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:53.118540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:53.453455 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:54.118966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:55.119309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:55.460270 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:56.119988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:57.120183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:57.466436 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:40:58.121178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:40:59.121397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:40:59.471750 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:00.121837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:01.121979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:01.477182 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:02.122956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:03.123970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:03.483670 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:04.124059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:05.124692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:05.489131 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:06.124784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:07.125844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:07.496365 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:08.125936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:09.126038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:09.501324 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:10.126856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:11.126977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:11.507007 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:12.127722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:13.127791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:13.513562 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:14.128388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:15.128514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:15.518754 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:16.129450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:17.129681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:17.525740 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:18.130410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:19.130541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:19.531304 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:20.130688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:21.130825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:21.536461 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:22.130918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:23.131128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:23.541530 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:24.131225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:25.131571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:25.547995 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:26.131693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:27.131892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:27.552507 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:28.132023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:29.132549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:29.557562 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:30.133138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:31.133336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:31.562135 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:32.133429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:33.134514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:33.569193 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:34.134769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:35.135843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:35.573675 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:36.136873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:37.137838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:37.579092 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:38.138786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:39.138959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:39.585609 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:40.139145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:41.139351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:41.591612 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:42.140245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:43.140371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:43.596541 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:44.141233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:45.141325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:45.603018 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:46.141618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:47.141760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:47.607619 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:48.142233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:49.142430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:49.613138 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:50.142958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:51.143171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:51.618680 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:52.143269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:53.143729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:53.625308 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:54.143845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:55.144877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:55.631714 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:56.144971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:57.145067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:57.638046 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:41:58.145179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:41:59.145875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:41:59.644191 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:00.146787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:01.146892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:01.649488 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:02.147040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:03.147893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:03.654506 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:04.148069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:05.148335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:05.660718 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:06.149263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:07.149485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:07.666172 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:08.149685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:09.149884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:09.672864 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:10.150426      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:11.150669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:11.678937 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:12.151556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:13.151707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:13.684579 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:14.152091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:15.152377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:15.691254 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:16.152787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:17.153022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:17.697123 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:18.153671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:19.153825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:19.702046 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:20.154381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:21.154461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:21.707242 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:22.154585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:23.154692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:23.712076 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:24.155613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:25.155907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:25.718192 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:26.156081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:27.156864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:27.724908 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:28.157396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:29.157824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:29.732341 19 container_probe.go:1759] Get pod liveness-8caae98e-72e5-4b4d-887b-3c810f76c318 in namespace container-probe-9714
  E1228 12:42:30.157924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:31.158852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/28/24 12:42:31.732
  I1228 12:42:31.750839 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9714" for this suite. @ 12/28/24 12:42:31.759
• [242.765 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/28/24 12:42:31.767
  I1228 12:42:31.767564 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-runtime @ 12/28/24 12:42:31.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:42:31.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:42:31.784
  STEP: create the container @ 12/28/24 12:42:31.787
  W1228 12:42:31.796196      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/28/24 12:42:31.796
  E1228 12:42:32.159897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:33.160498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:34.161091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/28/24 12:42:34.819
  STEP: the container should be terminated @ 12/28/24 12:42:34.823
  STEP: the termination message should be set @ 12/28/24 12:42:34.823
  I1228 12:42:34.823352 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/28/24 12:42:34.823
  I1228 12:42:34.845020 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6240" for this suite. @ 12/28/24 12:42:34.849
• [3.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/28/24 12:42:34.857
  I1228 12:42:34.857710 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replicaset @ 12/28/24 12:42:34.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:42:34.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:42:34.882
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/28/24 12:42:34.885
  E1228 12:42:35.161224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:36.161351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 12/28/24 12:42:36.91
  STEP: Then the orphan pod is adopted @ 12/28/24 12:42:36.914
  E1228 12:42:37.162274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 12/28/24 12:42:37.925
  I1228 12:42:37.930512 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/28/24 12:42:37.942
  E1228 12:42:38.163022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:38.952711 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5106" for this suite. @ 12/28/24 12:42:38.956
• [4.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/28/24 12:42:38.965
  I1228 12:42:38.965386 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename podtemplate @ 12/28/24 12:42:38.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:42:38.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:42:38.985
  STEP: Create a pod template @ 12/28/24 12:42:38.989
  STEP: Replace a pod template @ 12/28/24 12:42:38.997
  I1228 12:42:39.005887 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1228 12:42:39.005992 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4467" for this suite. @ 12/28/24 12:42:39.011
• [0.053 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 12/28/24 12:42:39.018
  I1228 12:42:39.018025 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pv @ 12/28/24 12:42:39.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:42:39.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:42:39.036
  STEP: Creating initial PV and PVC @ 12/28/24 12:42:39.04
  I1228 12:42:39.040024 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5279" @ 12/28/24 12:42:39.055
  STEP: Listing PVCs in namespace "pv-5279" @ 12/28/24 12:42:39.059
  STEP: Reading "pvc-6mgxx" Status @ 12/28/24 12:42:39.063
  STEP: Reading "pv-5279-4zclg" Status @ 12/28/24 12:42:39.067
  STEP: Patching "pvc-6mgxx" Status @ 12/28/24 12:42:39.072
  STEP: Patching "pv-5279-4zclg" Status @ 12/28/24 12:42:39.077
  STEP: Updating "pvc-6mgxx" Status @ 12/28/24 12:42:39.101
  STEP: Updating "pv-5279-4zclg" Status @ 12/28/24 12:42:39.138
  I1228 12:42:39.150455 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1228 12:42:39.150486 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-6mgxx"
  I1228 12:42:39.159869 19 pv.go:193] Deleting PersistentVolume "pv-5279-4zclg"
  E1228 12:42:39.163024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:42:39.166888 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5279" for this suite. @ 12/28/24 12:42:39.171
• [0.163 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/28/24 12:42:39.181
  I1228 12:42:39.181257 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:42:39.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:42:39.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:42:39.199
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:42:39.202
  E1228 12:42:40.163204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:41.163396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:42:41.224
  I1228 12:42:41.228235 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod downwardapi-volume-a87a513c-d3a5-409a-89ba-9466fe2f9499 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:42:41.245
  I1228 12:42:41.264301 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6498" for this suite. @ 12/28/24 12:42:41.269
• [2.098 seconds]
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/28/24 12:42:41.278
  I1228 12:42:41.278886 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:42:41.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:42:41.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:42:41.297
  STEP: Creating secret with name s-test-opt-del-a26fd538-fdc4-4128-ab3c-79c48b7102f3 @ 12/28/24 12:42:41.305
  STEP: Creating secret with name s-test-opt-upd-a672834a-c63a-4880-a7ff-52bbe9b92ff5 @ 12/28/24 12:42:41.31
  STEP: Creating the pod @ 12/28/24 12:42:41.315
  E1228 12:42:42.163526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:43.163631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a26fd538-fdc4-4128-ab3c-79c48b7102f3 @ 12/28/24 12:42:43.366
  STEP: Updating secret s-test-opt-upd-a672834a-c63a-4880-a7ff-52bbe9b92ff5 @ 12/28/24 12:42:43.374
  STEP: Creating secret with name s-test-opt-create-a6e83a78-c555-41c3-94f7-32dc8d232533 @ 12/28/24 12:42:43.382
  STEP: waiting to observe update in volume @ 12/28/24 12:42:43.387
  E1228 12:42:44.163846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:45.163968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:46.164039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:47.164167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:48.164268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:49.164381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:50.164701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:51.164821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:52.165872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:53.166038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:54.166849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:55.167315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:56.168317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:57.168548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:58.169073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:42:59.169241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:00.169946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:01.170174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:02.170202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:03.170858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:04.171056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:05.171225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:06.171821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:07.172874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:08.173030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:09.173129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:10.173804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:11.174020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:12.174120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:13.174208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:14.174890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:15.174980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:16.175887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:17.176874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:18.177733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:19.177958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:20.178809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:21.178929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:22.178991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:23.179108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:24.179248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:25.179277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:26.179884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:27.180028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:28.180797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:29.181111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:30.181832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:31.182056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:32.182111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:33.182203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:34.182392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:35.182583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:36.183469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:37.183598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:38.183744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:39.183964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:40.184664      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:41.184833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:42.185807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:43.185888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:44.186880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:45.186989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:46.187754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:47.188242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:48.188465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:49.188602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:43:49.756345 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-821" for this suite. @ 12/28/24 12:43:49.76
• [68.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/28/24 12:43:49.77
  I1228 12:43:49.770577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename controllerrevisions @ 12/28/24 12:43:49.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:43:49.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:43:49.789
  STEP: Creating DaemonSet "e2e-9th2q-daemon-set" @ 12/28/24 12:43:49.818
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/28/24 12:43:49.824
  I1228 12:43:49.831535 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:43:49.831800 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:43:49.837352 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-9th2q-daemon-set: 0
  I1228 12:43:49.837384 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 12:43:50.188791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:43:50.829004 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:43:50.829069 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:43:50.832366 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-9th2q-daemon-set: 1
  I1228 12:43:50.832399 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 12:43:51.189799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:43:51.830276 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:43:51.830329 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 12:43:51.834292 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-9th2q-daemon-set: 3
  I1228 12:43:51.834309 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-9th2q-daemon-set
  STEP: Confirm DaemonSet "e2e-9th2q-daemon-set" successfully created with "daemonset-name=e2e-9th2q-daemon-set" label @ 12/28/24 12:43:51.838
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-9th2q-daemon-set" @ 12/28/24 12:43:51.847
  I1228 12:43:51.851931 19 controller_revision.go:162] Located ControllerRevision: "e2e-9th2q-daemon-set-75f558596b"
  STEP: Patching ControllerRevision "e2e-9th2q-daemon-set-75f558596b" @ 12/28/24 12:43:51.855
  I1228 12:43:51.862795 19 controller_revision.go:173] e2e-9th2q-daemon-set-75f558596b has been patched
  STEP: Create a new ControllerRevision @ 12/28/24 12:43:51.862
  I1228 12:43:51.871069 19 controller_revision.go:191] Created ControllerRevision: e2e-9th2q-daemon-set-6697b45f68
  STEP: Confirm that there are two ControllerRevisions @ 12/28/24 12:43:51.871
  I1228 12:43:51.871130 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1228 12:43:51.874670 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-9th2q-daemon-set-75f558596b" @ 12/28/24 12:43:51.874
  STEP: Confirm that there is only one ControllerRevision @ 12/28/24 12:43:51.882
  I1228 12:43:51.882733 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1228 12:43:51.886427 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-9th2q-daemon-set-6697b45f68" @ 12/28/24 12:43:51.891
  I1228 12:43:51.901607 19 controller_revision.go:220] e2e-9th2q-daemon-set-6697b45f68 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/28/24 12:43:51.901
  W1228 12:43:51.909107      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/28/24 12:43:51.909
  I1228 12:43:51.909263 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E1228 12:43:52.190579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:43:52.909412 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1228 12:43:52.914146 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-9th2q-daemon-set-6697b45f68=updated" @ 12/28/24 12:43:52.914
  STEP: Confirm that there is only one ControllerRevision @ 12/28/24 12:43:52.926
  I1228 12:43:52.926731 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1228 12:43:52.931577 19 controller_revision.go:265] Found 1 ControllerRevisions
  I1228 12:43:52.935634 19 controller_revision.go:246] ControllerRevision "e2e-9th2q-daemon-set-5f7f598fd5" has revision 3
  STEP: Deleting DaemonSet "e2e-9th2q-daemon-set" @ 12/28/24 12:43:52.94
  STEP: deleting DaemonSet.extensions e2e-9th2q-daemon-set in namespace controllerrevisions-1868, will wait for the garbage collector to delete the pods @ 12/28/24 12:43:52.941
  I1228 12:43:53.003684 19 resources.go:139] Deleting DaemonSet.extensions e2e-9th2q-daemon-set took: 8.333684ms
  I1228 12:43:53.104734 19 resources.go:163] Terminating DaemonSet.extensions e2e-9th2q-daemon-set pods took: 101.045395ms
  E1228 12:43:53.190854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:54.191545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:43:54.311534 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-9th2q-daemon-set: 0
  I1228 12:43:54.311570 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-9th2q-daemon-set
  I1228 12:43:54.315977 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19344"},"items":null}

  I1228 12:43:54.321040 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19344"},"items":null}

  I1228 12:43:54.337931 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1868" for this suite. @ 12/28/24 12:43:54.341
• [4.580 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/28/24 12:43:54.35
  I1228 12:43:54.350535 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:43:54.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:43:54.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:43:54.374
  STEP: Creating configMap configmap-6263/configmap-test-de011826-7fc8-4e20-9c0e-2c555990346a @ 12/28/24 12:43:54.377
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:43:54.383
  E1228 12:43:55.191875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:56.192157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:43:56.4
  I1228 12:43:56.403850 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-8ad17757-e6d7-473d-b027-b54df0a76ca9 container env-test: <nil>
  STEP: delete the pod @ 12/28/24 12:43:56.423
  I1228 12:43:56.442035 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6263" for this suite. @ 12/28/24 12:43:56.446
• [2.104 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/28/24 12:43:56.454
  I1228 12:43:56.454507 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename proxy @ 12/28/24 12:43:56.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:43:56.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:43:56.474
  I1228 12:43:56.478590 19 proxy.go:293] Creating pod...
  E1228 12:43:57.192390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:43:58.192719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:43:58.500880 19 proxy.go:317] Creating service...
  I1228 12:43:58.512508 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/DELETE
  I1228 12:43:58.519048 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1228 12:43:58.519079 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/GET
  I1228 12:43:58.525628 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1228 12:43:58.525673 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/HEAD
  I1228 12:43:58.531443 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1228 12:43:58.531487 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/OPTIONS
  I1228 12:43:58.536087 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1228 12:43:58.536112 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/PATCH
  I1228 12:43:58.540010 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1228 12:43:58.540055 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/POST
  I1228 12:43:58.545281 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1228 12:43:58.545302 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/pods/agnhost/proxy/some/path/with/PUT
  I1228 12:43:58.549533 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1228 12:43:58.549547 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/DELETE
  I1228 12:43:58.556323 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1228 12:43:58.556348 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/GET
  I1228 12:43:58.563070 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1228 12:43:58.563101 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/HEAD
  I1228 12:43:58.569025 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1228 12:43:58.569050 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/OPTIONS
  I1228 12:43:58.576467 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1228 12:43:58.576501 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/PATCH
  I1228 12:43:58.584086 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1228 12:43:58.584124 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/POST
  I1228 12:43:58.589768 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1228 12:43:58.589791 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-805/services/test-service/proxy/some/path/with/PUT
  I1228 12:43:58.597750 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1228 12:43:58.597878 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-805" for this suite. @ 12/28/24 12:43:58.602
• [2.156 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/28/24 12:43:58.61
  I1228 12:43:58.610604 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename containers @ 12/28/24 12:43:58.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:43:58.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:43:58.63
  STEP: Creating a pod to test override command @ 12/28/24 12:43:58.634
  E1228 12:43:59.192945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:00.192906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:01.193593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:02.193841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:44:02.661
  I1228 12:44:02.666093 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod client-containers-fa00aba0-312d-4896-be13-a5e54e44bf73 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:44:02.674
  I1228 12:44:02.695303 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7175" for this suite. @ 12/28/24 12:44:02.699
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/28/24 12:44:02.709
  I1228 12:44:02.709575 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:44:02.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:02.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:02.726
  STEP: creating the pod @ 12/28/24 12:44:02.73
  STEP: submitting the pod to kubernetes @ 12/28/24 12:44:02.73
  STEP: verifying QOS class is set on the pod @ 12/28/24 12:44:02.738
  I1228 12:44:02.744014 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5634" for this suite. @ 12/28/24 12:44:02.747
• [0.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 12/28/24 12:44:02.756
  I1228 12:44:02.756096 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:44:02.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:02.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:02.774
  STEP: creating service multi-endpoint-test in namespace services-9356 @ 12/28/24 12:44:02.778
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9356 to expose endpoints map[] @ 12/28/24 12:44:02.791
  I1228 12:44:02.795316 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1228 12:44:03.194884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:44:03.806567 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9356 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9356 @ 12/28/24 12:44:03.806
  E1228 12:44:04.195452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:05.195806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9356 to expose endpoints map[pod1:[100]] @ 12/28/24 12:44:05.834
  I1228 12:44:05.847571 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9356 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9356 @ 12/28/24 12:44:05.847
  E1228 12:44:06.196005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:07.196271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9356 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/28/24 12:44:07.874
  I1228 12:44:07.895311 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9356 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/28/24 12:44:07.895
  I1228 12:44:07.895378 19 resource.go:361] Creating new exec pod
  E1228 12:44:08.196859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:09.197007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:10.197800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:44:10.915172 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-9356 exec execpodpgjgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1228 12:44:11.006409 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1228 12:44:11.006452 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:44:11.006536 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-9356 exec execpodpgjgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  I1228 12:44:11.092402 19 builder.go:146] stderr: "+ echo hostName+ nc -v -t -w 2 10.152.183.125 80\n\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  I1228 12:44:11.092449 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:44:11.092526 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-9356 exec execpodpgjgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1228 12:44:11.174846 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1228 12:44:11.174891 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:44:11.175000 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-9356 exec execpodpgjgt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 81'
  E1228 12:44:11.198157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:44:11.254021 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.125 81\nConnection to 10.152.183.125 81 port [tcp/*] succeeded!\n"
  I1228 12:44:11.254062 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9356 @ 12/28/24 12:44:11.254
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9356 to expose endpoints map[pod2:[101]] @ 12/28/24 12:44:11.276
  I1228 12:44:11.288089 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9356 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9356 @ 12/28/24 12:44:11.288
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9356 to expose endpoints map[] @ 12/28/24 12:44:11.304
  I1228 12:44:11.317852 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-9356 exposes endpoints map[]
  I1228 12:44:11.336344 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9356" for this suite. @ 12/28/24 12:44:11.339
• [8.591 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/28/24 12:44:11.347
  I1228 12:44:11.347096 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename limitrange @ 12/28/24 12:44:11.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:11.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:11.368
  STEP: Creating a LimitRange @ 12/28/24 12:44:11.372
  STEP: Setting up watch @ 12/28/24 12:44:11.372
  STEP: Submitting a LimitRange @ 12/28/24 12:44:11.476
  STEP: Verifying LimitRange creation was observed @ 12/28/24 12:44:11.485
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/28/24 12:44:11.485
  I1228 12:44:11.490208 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1228 12:44:11.490247 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/28/24 12:44:11.49
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/28/24 12:44:11.496
  I1228 12:44:11.503784 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1228 12:44:11.503834 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/28/24 12:44:11.503
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/28/24 12:44:11.512
  I1228 12:44:11.518499 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1228 12:44:11.518529 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/28/24 12:44:11.518
  STEP: Failing to create a Pod with more than max resources @ 12/28/24 12:44:11.52
  STEP: Updating a LimitRange @ 12/28/24 12:44:11.522
  STEP: Verifying LimitRange updating is effective @ 12/28/24 12:44:11.529
  E1228 12:44:12.198193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:13.198877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 12/28/24 12:44:13.537
  STEP: Failing to create a Pod with more than max resources @ 12/28/24 12:44:13.542
  STEP: Deleting a LimitRange @ 12/28/24 12:44:13.545
  STEP: Verifying the LimitRange was deleted @ 12/28/24 12:44:13.554
  E1228 12:44:14.198977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:15.199114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:16.199327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:17.199429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:18.199555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:44:18.559129 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/28/24 12:44:18.559
  I1228 12:44:18.569434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7694" for this suite. @ 12/28/24 12:44:18.579
• [7.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/28/24 12:44:18.586
  I1228 12:44:18.586990 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:44:18.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:18.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:18.606
  STEP: Creating a pod to test downward api env vars @ 12/28/24 12:44:18.609
  E1228 12:44:19.199762      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:20.200042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:44:20.627
  I1228 12:44:20.632357 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downward-api-194be446-53ce-4c1e-86a9-d46114e131d3 container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 12:44:20.64
  I1228 12:44:20.658381 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4005" for this suite. @ 12/28/24 12:44:20.662
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/28/24 12:44:20.675
  I1228 12:44:20.675380 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:44:20.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:20.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:20.694
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:44:20.698
  E1228 12:44:21.200810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:22.201063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:23.201157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:24.201256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:44:24.723
  I1228 12:44:24.729358 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-613a513a-7cec-460f-8426-3efbdd8de23c container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:44:24.739
  I1228 12:44:24.758351 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1363" for this suite. @ 12/28/24 12:44:24.762
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/28/24 12:44:24.77
  I1228 12:44:24.770394 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:44:24.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:24.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:24.791
  STEP: set up a multi version CRD @ 12/28/24 12:44:24.794
  I1228 12:44:24.795194 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:44:25.201512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:26.201920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:27.202372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 12/28/24 12:44:27.993
  STEP: check the unserved version gets removed @ 12/28/24 12:44:28.01
  E1228 12:44:28.202536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 12/28/24 12:44:28.835
  E1228 12:44:29.202676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:30.203595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:31.204258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:44:31.293661 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6944" for this suite. @ 12/28/24 12:44:31.302
• [6.542 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/28/24 12:44:31.312
  I1228 12:44:31.312508 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename watch @ 12/28/24 12:44:31.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:31.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:31.331
  STEP: creating a new configmap @ 12/28/24 12:44:31.334
  STEP: modifying the configmap once @ 12/28/24 12:44:31.338
  STEP: modifying the configmap a second time @ 12/28/24 12:44:31.348
  STEP: deleting the configmap @ 12/28/24 12:44:31.356
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/28/24 12:44:31.361
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/28/24 12:44:31.362
  I1228 12:44:31.363168 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3812  691087df-da65-4bb0-ab39-0cad25827cad 19838 0 2024-12-28 12:44:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-28 12:44:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 12:44:31.363290 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3812  691087df-da65-4bb0-ab39-0cad25827cad 19839 0 2024-12-28 12:44:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-28 12:44:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 12:44:31.363384 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3812" for this suite. @ 12/28/24 12:44:31.367
• [0.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/28/24 12:44:31.376
  I1228 12:44:31.376974 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-watch @ 12/28/24 12:44:31.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:44:31.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:44:31.403
  I1228 12:44:31.406896 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:44:32.205145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:33.205878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 12/28/24 12:44:33.946
  I1228 12:44:33.952300 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-28T12:44:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-28T12:44:33Z]] name:name1 resourceVersion:19859 uid:5f204e3d-345f-48e3-b4eb-d04b51be5945] num:map[num1:9223372036854775807 num2:1000000]]}
  E1228 12:44:34.206639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:35.207046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:36.207266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:37.207385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:38.207502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:39.208307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:40.208709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:41.208910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:42.209141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:43.209429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 12/28/24 12:44:43.953
  I1228 12:44:43.961943 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-28T12:44:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-28T12:44:43Z]] name:name2 resourceVersion:19891 uid:ca37854d-249c-46dc-b5c9-d7c26eb6ff1a] num:map[num1:9223372036854775807 num2:1000000]]}
  E1228 12:44:44.209524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:45.209795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:46.209921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:47.210135      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:48.210344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:49.210419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:50.210903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:51.211032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:52.211158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:53.211233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 12/28/24 12:44:53.963
  I1228 12:44:53.972285 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-28T12:44:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-28T12:44:53Z]] name:name1 resourceVersion:19910 uid:5f204e3d-345f-48e3-b4eb-d04b51be5945] num:map[num1:9223372036854775807 num2:1000000]]}
  E1228 12:44:54.211740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:55.211864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:56.212410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:57.213320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:58.214046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:44:59.214133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:00.214235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:01.215136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:02.215856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:03.216852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 12/28/24 12:45:03.972
  I1228 12:45:03.978960 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-28T12:44:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-28T12:45:03Z]] name:name2 resourceVersion:19930 uid:ca37854d-249c-46dc-b5c9-d7c26eb6ff1a] num:map[num1:9223372036854775807 num2:1000000]]}
  E1228 12:45:04.216922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:05.217244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:06.217859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:07.218116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:08.218312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:09.218574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:10.218790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:11.218991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:12.219186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:13.219857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 12/28/24 12:45:13.979
  I1228 12:45:13.990294 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-28T12:44:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-28T12:44:53Z]] name:name1 resourceVersion:19950 uid:5f204e3d-345f-48e3-b4eb-d04b51be5945] num:map[num1:9223372036854775807 num2:1000000]]}
  E1228 12:45:14.220623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:15.220739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:16.220913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:17.221030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:18.221123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:19.221238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:20.221352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:21.221599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:22.221775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:23.221810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 12/28/24 12:45:23.99
  I1228 12:45:23.999547 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-28T12:44:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-28T12:45:03Z]] name:name2 resourceVersion:19970 uid:ca37854d-249c-46dc-b5c9-d7c26eb6ff1a] num:map[num1:9223372036854775807 num2:1000000]]}
  E1228 12:45:24.221924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:25.222019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:26.222228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:27.222900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:28.223962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:29.224847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:30.224933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:31.225029      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:32.225856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:33.226842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:34.227725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:45:34.514537 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9325" for this suite. @ 12/28/24 12:45:34.52
• [63.153 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 12/28/24 12:45:34.53
  I1228 12:45:34.530409 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:45:34.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:45:34.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:45:34.553
  STEP: creating service nodeport-test with type=NodePort in namespace services-5525 @ 12/28/24 12:45:34.556
  STEP: creating replication controller nodeport-test in namespace services-5525 @ 12/28/24 12:45:34.572
  I1228 12:45:34.581361      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5525, replica count: 2
  E1228 12:45:35.227991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:36.228208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:37.228301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:45:37.632930      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 12:45:37.632968 19 resource.go:361] Creating new exec pod
  E1228 12:45:38.229201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:39.229415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:40.230395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:45:40.660909 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-5525 exec execpodf4x8m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1228 12:45:40.748934 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1228 12:45:40.748978 19 builder.go:147] stdout: "nodeport-test-v82wz"
  I1228 12:45:40.749090 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-5525 exec execpodf4x8m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1228 12:45:40.829024 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.200 80\nConnection to 10.152.183.200 80 port [tcp/http] succeeded!\n"
  I1228 12:45:40.829067 19 builder.go:147] stdout: ""
  E1228 12:45:41.230581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:45:41.749398 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-5525 exec execpodf4x8m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.200 80'
  I1228 12:45:41.838226 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.200 80\necho hostName\nConnection to 10.152.183.200 80 port [tcp/http] succeeded!\n"
  I1228 12:45:41.838273 19 builder.go:147] stdout: "nodeport-test-v82wz"
  I1228 12:45:41.838359 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-5525 exec execpodf4x8m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.66 30417'
  I1228 12:45:41.916511 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.66 30417\nConnection to 172.31.65.66 30417 port [tcp/*] succeeded!\n"
  I1228 12:45:41.916556 19 builder.go:147] stdout: "nodeport-test-q42w2"
  I1228 12:45:41.916749 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-5525 exec execpodf4x8m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.45.142 30417'
  I1228 12:45:41.998351 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.45.142 30417\nConnection to 172.31.45.142 30417 port [tcp/*] succeeded!\n"
  I1228 12:45:41.998395 19 builder.go:147] stdout: "nodeport-test-v82wz"
  I1228 12:45:41.998545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5525" for this suite. @ 12/28/24 12:45:42.004
• [7.480 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/28/24 12:45:42.01
  I1228 12:45:42.010639 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename containers @ 12/28/24 12:45:42.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:45:42.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:45:42.035
  STEP: Creating a pod to test override all @ 12/28/24 12:45:42.038
  E1228 12:45:42.231353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:43.231570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:44.232268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:45.232633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:45:46.065
  I1228 12:45:46.069219 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod client-containers-cb52e437-9c72-4c0d-9ab7-c71c7b17a552 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:45:46.078
  I1228 12:45:46.099755 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7035" for this suite. @ 12/28/24 12:45:46.104
• [4.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/28/24 12:45:46.111
  I1228 12:45:46.111792 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/28/24 12:45:46.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:45:46.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:45:46.134
  STEP: create the container to handle the HTTPGet hook request. @ 12/28/24 12:45:46.141
  E1228 12:45:46.232723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:47.232812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/28/24 12:45:48.163
  E1228 12:45:48.233522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:49.233891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/28/24 12:45:50.186
  E1228 12:45:50.233953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:51.234065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/28/24 12:45:52.203
  I1228 12:45:52.218109 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-535" for this suite. @ 12/28/24 12:45:52.223
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/28/24 12:45:52.229
  I1228 12:45:52.229315 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 12:45:52.229
  E1228 12:45:52.234193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:45:52.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:45:52.251
  STEP: creating the pod @ 12/28/24 12:45:52.254
  STEP: waiting for pod running @ 12/28/24 12:45:52.266
  E1228 12:45:53.234367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:54.234458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 12/28/24 12:45:54.277
  I1228 12:45:54.282863 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6235 PodName:var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:45:54.282887 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:45:54.283324 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:45:54.283373 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6235/pods/var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/28/24 12:45:54.324
  I1228 12:45:54.328928 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6235 PodName:var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:45:54.328955 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:45:54.329355 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:45:54.329401 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-6235/pods/var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/28/24 12:45:54.366
  I1228 12:45:54.880512 19 pod_client.go:173] Successfully updated pod "var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8"
  STEP: waiting for annotated pod running @ 12/28/24 12:45:54.88
  STEP: deleting the pod gracefully @ 12/28/24 12:45:54.886
  I1228 12:45:54.886582 19 delete.go:62] Deleting pod "var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8" in namespace "var-expansion-6235"
  I1228 12:45:54.896206 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-9d65a773-b322-4e2f-910b-adfc9c33e9b8" to be fully deleted
  E1228 12:45:55.235498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:56.235771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:57.236692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:58.236818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:45:59.237340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:00.237500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:01.238275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:02.238339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:03.238940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:04.239935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:05.240012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:06.240089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:07.240450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:08.240868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:09.241421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:10.241535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:11.241696      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:12.241789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:13.242007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:14.242976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:15.243161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:16.243848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:17.243974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:18.244887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:19.244946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:20.245045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:21.245215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:22.245967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:23.246577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:24.247601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:25.247805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:26.248026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:26.986882 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6235" for this suite. @ 12/28/24 12:46:26.992
• [34.776 seconds]
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/28/24 12:46:27.005
  I1228 12:46:27.005380 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename discovery @ 12/28/24 12:46:27.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:46:27.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:46:27.029
  STEP: Setting up server cert @ 12/28/24 12:46:27.034
  E1228 12:46:27.248888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:27.335253 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1228 12:46:27.336841 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1228 12:46:27.336862 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1228 12:46:27.336871 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1228 12:46:27.336878 19 discovery.go:139] Checking APIGroup: apps
  I1228 12:46:27.338285 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1228 12:46:27.338299 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I1228 12:46:27.338306 19 discovery.go:154] apps/v1 matches apps/v1
  I1228 12:46:27.338312 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I1228 12:46:27.339666 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1228 12:46:27.339678 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1228 12:46:27.339684 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1228 12:46:27.339691 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1228 12:46:27.341193 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1228 12:46:27.341226 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1228 12:46:27.341232 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1228 12:46:27.341238 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1228 12:46:27.342915 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1228 12:46:27.342928 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1228 12:46:27.342934 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1228 12:46:27.342940 19 discovery.go:139] Checking APIGroup: autoscaling
  I1228 12:46:27.344303 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1228 12:46:27.344316 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1228 12:46:27.344322 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1228 12:46:27.344336 19 discovery.go:139] Checking APIGroup: batch
  I1228 12:46:27.345699 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1228 12:46:27.345712 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I1228 12:46:27.345717 19 discovery.go:154] batch/v1 matches batch/v1
  I1228 12:46:27.345725 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1228 12:46:27.347056 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1228 12:46:27.347073 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1228 12:46:27.347081 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1228 12:46:27.347089 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1228 12:46:27.348594 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1228 12:46:27.348617 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1228 12:46:27.348623 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1228 12:46:27.348629 19 discovery.go:139] Checking APIGroup: policy
  I1228 12:46:27.350163 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1228 12:46:27.350175 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I1228 12:46:27.350181 19 discovery.go:154] policy/v1 matches policy/v1
  I1228 12:46:27.350186 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1228 12:46:27.351721 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1228 12:46:27.351741 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1228 12:46:27.351747 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1228 12:46:27.351753 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1228 12:46:27.353291 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1228 12:46:27.353305 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1228 12:46:27.353320 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1228 12:46:27.353328 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1228 12:46:27.355132 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1228 12:46:27.355151 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1228 12:46:27.355157 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1228 12:46:27.355163 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1228 12:46:27.356725 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1228 12:46:27.356749 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1228 12:46:27.356755 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1228 12:46:27.356762 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1228 12:46:27.358073 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1228 12:46:27.358092 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1228 12:46:27.358097 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1228 12:46:27.358103 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1228 12:46:27.359833 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1228 12:46:27.359843 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1228 12:46:27.359848 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1228 12:46:27.359854 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I1228 12:46:27.361155 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1228 12:46:27.361165 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1228 12:46:27.361170 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1228 12:46:27.361176 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1228 12:46:27.362675 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1228 12:46:27.362695 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1228 12:46:27.362701 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1228 12:46:27.362707 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1228 12:46:27.364315 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1228 12:46:27.364335 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1228 12:46:27.364343 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1228 12:46:27.364349 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1228 12:46:27.366064 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1228 12:46:27.366086 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1228 12:46:27.366092 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1228 12:46:27.366244 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3008" for this suite. @ 12/28/24 12:46:27.371
• [0.375 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/28/24 12:46:27.38
  I1228 12:46:27.380087 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 12:46:27.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:46:27.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:46:27.405
  STEP: Creating service test in namespace statefulset-5773 @ 12/28/24 12:46:27.408
  STEP: Creating statefulset ss in namespace statefulset-5773 @ 12/28/24 12:46:27.424
  I1228 12:46:27.434428 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1228 12:46:28.249127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:29.249997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:30.250217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:31.250317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:32.250443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:33.250532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:34.250748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:35.250803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:36.250835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:37.250956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:37.435618 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/28/24 12:46:37.444
  STEP: Getting /status @ 12/28/24 12:46:37.454
  I1228 12:46:37.458502 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/28/24 12:46:37.458
  I1228 12:46:37.468581 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/28/24 12:46:37.468
  I1228 12:46:37.470269 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1228 12:46:37.470293 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-5773 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 12:46:37.470334 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/28/24 12:46:37.47
  I1228 12:46:37.470357 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1228 12:46:37.477626 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/28/24 12:46:37.477
  I1228 12:46:37.479478 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1228 12:46:37.479506 19 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-5773 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 12:46:37.479575 19 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1228 12:46:37.479642 19 statefulset.go:138] Deleting all statefulset in ns statefulset-5773
  I1228 12:46:37.484272 19 rest.go:150] Scaling statefulset ss to 0
  E1228 12:46:38.251128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:39.251979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:40.252202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:41.252298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:42.252418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:43.252854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:44.253463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:45.253563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:46.253825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:47.253931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:47.498919 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 12:46:47.503561 19 rest.go:88] Deleting statefulset ss
  I1228 12:46:47.516866 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5773" for this suite. @ 12/28/24 12:46:47.52
• [20.149 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/28/24 12:46:47.529
  I1228 12:46:47.529106 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/28/24 12:46:47.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:46:47.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:46:47.55
  STEP: create the container to handle the HTTPGet hook request. @ 12/28/24 12:46:47.556
  E1228 12:46:48.254063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:49.254961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/28/24 12:46:49.581
  E1228 12:46:50.255083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:51.255181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/28/24 12:46:51.603
  STEP: delete the pod with lifecycle hook @ 12/28/24 12:46:51.617
  E1228 12:46:52.255276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:53.255379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:53.634109 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3191" for this suite. @ 12/28/24 12:46:53.638
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/28/24 12:46:53.645
  I1228 12:46:53.645908 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/28/24 12:46:53.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:46:53.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:46:53.665
  STEP: creating @ 12/28/24 12:46:53.668
  STEP: getting @ 12/28/24 12:46:53.689
  STEP: listing in namespace @ 12/28/24 12:46:53.693
  STEP: patching @ 12/28/24 12:46:53.696
  STEP: deleting @ 12/28/24 12:46:53.711
  I1228 12:46:53.724817 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6275" for this suite. @ 12/28/24 12:46:53.728
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/28/24 12:46:53.735
  I1228 12:46:53.735340 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:46:53.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:46:53.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:46:53.757
  STEP: creating a Deployment @ 12/28/24 12:46:53.763
  STEP: waiting for Deployment to be created @ 12/28/24 12:46:53.77
  STEP: waiting for all Replicas to be Ready @ 12/28/24 12:46:53.772
  I1228 12:46:53.773590 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.773607 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.784207 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.784240 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.798039 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.798068 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.824463 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1228 12:46:53.824500 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1228 12:46:54.255536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:54.518752 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1228 12:46:54.518789 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1228 12:46:54.585584 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/28/24 12:46:54.585
  I1228 12:46:54.596391 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/28/24 12:46:54.596
  I1228 12:46:54.597898 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.597918 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.597926 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.597931 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.597943 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.597949 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.598002 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.598011 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 0
  I1228 12:46:54.598019 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:54.598025 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:54.598031 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.598038 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.598050 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.598059 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.611475 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.611506 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.628742 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.628776 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:54.655085 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:54.655124 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:54.662949 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:54.662974 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  E1228 12:46:55.255741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:55.634262 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:55.634301 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:55.662732 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  STEP: listing Deployments @ 12/28/24 12:46:55.662
  I1228 12:46:55.666448 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/28/24 12:46:55.666
  I1228 12:46:55.677358 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/28/24 12:46:55.677
  I1228 12:46:55.685917 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:55.691329 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:55.714608 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:55.737220 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:55.753512 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1228 12:46:56.255924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:56.524346 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:56.616433 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:56.646590 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1228 12:46:56.667325 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1228 12:46:57.256882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:46:57.543489 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/28/24 12:46:57.572
  STEP: fetching the DeploymentStatus @ 12/28/24 12:46:57.582
  I1228 12:46:57.590277 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:57.590307 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:57.590319 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:57.590407 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:57.590419 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 1
  I1228 12:46:57.590427 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:57.590463 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 3
  I1228 12:46:57.590626 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:57.590644 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 2
  I1228 12:46:57.590677 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-4906 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/28/24 12:46:57.59
  I1228 12:46:57.603205 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603308 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603318 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603331 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603378 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603384 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603391 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603429 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603436 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603506 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603514 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603525 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.603557 19 deployment.go:475] observed event type MODIFIED
  I1228 12:46:57.608405 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1228 12:46:57.612972 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4906" for this suite. @ 12/28/24 12:46:57.62
• [3.896 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/28/24 12:46:57.63
  I1228 12:46:57.631016 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 12:46:57.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:46:57.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:46:57.654
  STEP: create the rc @ 12/28/24 12:46:57.661
  W1228 12:46:57.670935      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1228 12:46:58.257897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:46:59.258398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:00.258860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:01.259537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:02.259315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:03.259827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/28/24 12:47:03.685
  STEP: wait for the rc to be deleted @ 12/28/24 12:47:03.697
  E1228 12:47:04.260070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:04.714175 19 garbage_collector.go:670] 80 pods remaining
  I1228 12:47:04.714428 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1228 12:47:04.714437 19 garbage_collector.go:678] 
  E1228 12:47:05.268442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:05.709574 19 garbage_collector.go:670] 71 pods remaining
  I1228 12:47:05.709622 19 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I1228 12:47:05.709627 19 garbage_collector.go:678] 
  E1228 12:47:06.269510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:06.710350 19 garbage_collector.go:670] 60 pods remaining
  I1228 12:47:06.710384 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1228 12:47:06.710415 19 garbage_collector.go:678] 
  E1228 12:47:07.269562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:07.711985 19 garbage_collector.go:670] 40 pods remaining
  I1228 12:47:07.712381 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1228 12:47:07.712407 19 garbage_collector.go:678] 
  E1228 12:47:08.269864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:08.708126 19 garbage_collector.go:670] 31 pods remaining
  I1228 12:47:08.708161 19 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I1228 12:47:08.708167 19 garbage_collector.go:678] 
  E1228 12:47:09.270047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:09.707008 19 garbage_collector.go:670] 20 pods remaining
  I1228 12:47:09.707033 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1228 12:47:09.707040 19 garbage_collector.go:678] 
  E1228 12:47:10.270944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/28/24 12:47:10.704
  W1228 12:47:10.712589      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1228 12:47:10.712629 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1228 12:47:10.712795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6452" for this suite. @ 12/28/24 12:47:10.736
• [13.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/28/24 12:47:10.754
  I1228 12:47:10.754687 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 12:47:10.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:10.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:10.789
  I1228 12:47:10.819969 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E1228 12:47:11.271869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:12.272846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:13.272989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:14.273982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:15.274337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:15.832966 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/28/24 12:47:15.833
  I1228 12:47:15.833037 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/28/24 12:47:15.842
  I1228 12:47:15.856568 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d30b95f0-4cec-47cf-993a-4f9d4f467132",
      ResourceVersion: (string) (len=5) "22706",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 12:47:15.861769 19 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1228 12:47:15.861792 19 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1228 12:47:15.862019 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d148a42e-a056-4758-a83f-6cf1b45d7957",
      ResourceVersion: (string) (len=5) "22710",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d30b95f0-4cec-47cf-993a-4f9d4f467132",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 33 30 62 39 35 66  |"uid\":\"d30b95f|
              00000040  30 2d 34 63 65 63 2d 34  37 63 66 2d 39 39 33 61  |0-4cec-47cf-993a|
              00000050  2d 34 66 39 64 34 66 34  36 37 31 33 32 5c 22 7d  |-4f9d4f467132\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 12:47:15.866727 19 deployment.go:67] Pod "test-cleanup-controller-ggdlz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-ggdlz",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-789",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83300ed6-3b81-448b-8afb-643dd12f7879",
      ResourceVersion: (string) (len=5) "22691",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "d148a42e-a056-4758-a83f-6cf1b45d7957",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  64 31 34 38 61 34 32 65  |uid\":\"d148a42e|
              00000080  2d 61 30 35 36 2d 34 37  35 38 2d 61 38 33 66 2d  |-a056-4758-a83f-|
              00000090  36 63 66 31 62 34 35 64  37 39 35 37 5c 22 7d 22  |6cf1b45d7957\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 39 30 5c 22 7d 22  |2.168.206.90\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpn74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpn74",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870986830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=14) "192.168.206.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.206.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870986830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870986831,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0029d214d85f334616ee897e9a65f0b2705dc043c0007a1cca72e277ffb65732",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fpn74",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 12:47:15.867755 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-789" for this suite. @ 12/28/24 12:47:15.872
• [5.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 12/28/24 12:47:15.886
  I1228 12:47:15.886694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:47:15.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:15.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:15.921
  STEP: validating api versions @ 12/28/24 12:47:15.924
  I1228 12:47:15.924188 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-5789 api-versions'
  I1228 12:47:15.967616 19 builder.go:146] stderr: ""
  I1228 12:47:15.967690 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1228 12:47:15.967795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5789" for this suite. @ 12/28/24 12:47:15.971
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/28/24 12:47:15.983
  I1228 12:47:15.983195 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename runtimeclass @ 12/28/24 12:47:15.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:16.003
  STEP: getting /apis @ 12/28/24 12:47:16.006
  STEP: getting /apis/node.k8s.io @ 12/28/24 12:47:16.01
  STEP: getting /apis/node.k8s.io/v1 @ 12/28/24 12:47:16.011
  STEP: creating @ 12/28/24 12:47:16.012
  STEP: watching @ 12/28/24 12:47:16.03
  I1228 12:47:16.030999 19 runtimeclass.go:275] starting watch
  STEP: getting @ 12/28/24 12:47:16.036
  STEP: listing @ 12/28/24 12:47:16.039
  STEP: patching @ 12/28/24 12:47:16.042
  STEP: updating @ 12/28/24 12:47:16.047
  I1228 12:47:16.053686 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/28/24 12:47:16.053
  STEP: deleting a collection @ 12/28/24 12:47:16.068
  I1228 12:47:16.085177 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5091" for this suite. @ 12/28/24 12:47:16.089
• [0.113 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/28/24 12:47:16.096
  I1228 12:47:16.096230 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:47:16.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:16.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:16.122
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/28/24 12:47:16.125
  E1228 12:47:16.275230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:17.275326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:18.276176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:19.276952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:47:20.147
  I1228 12:47:20.152123 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-75f6d249-ba81-4c01-a6c2-1506d93d2c2c container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:47:20.16
  I1228 12:47:20.176774 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7687" for this suite. @ 12/28/24 12:47:20.181
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/28/24 12:47:20.19
  I1228 12:47:20.190430 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:47:20.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:20.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:20.21
  STEP: Creating a pod to test downward api env vars @ 12/28/24 12:47:20.213
  E1228 12:47:20.277669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:21.277868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:22.278203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:23.278981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:47:24.235
  I1228 12:47:24.240666 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod downward-api-a7d937cd-f391-46e5-9f8f-2da5c42437fd container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 12:47:24.248
  I1228 12:47:24.267898 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4055" for this suite. @ 12/28/24 12:47:24.274
  E1228 12:47:24.286034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [4.096 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/28/24 12:47:24.286
  I1228 12:47:24.286837 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replication-controller @ 12/28/24 12:47:24.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:24.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:24.31
  STEP: Creating replication controller my-hostname-basic-7de443ef-82e5-4333-a0ac-3c6a1e0b218b @ 12/28/24 12:47:24.313
  I1228 12:47:24.321142 19 resource.go:87] Pod name my-hostname-basic-7de443ef-82e5-4333-a0ac-3c6a1e0b218b: Found 0 pods out of 1
  E1228 12:47:25.286872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:26.286981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:27.287104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:28.287216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:29.287808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:29.326213 19 resource.go:87] Pod name my-hostname-basic-7de443ef-82e5-4333-a0ac-3c6a1e0b218b: Found 1 pods out of 1
  I1228 12:47:29.326248 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-7de443ef-82e5-4333-a0ac-3c6a1e0b218b" are running
  I1228 12:47:29.330184 19 rc.go:523] Pod "my-hostname-basic-7de443ef-82e5-4333-a0ac-3c6a1e0b218b-dlkld" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:47:26 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:47:24 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:47:26 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:47:26 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-28 12:47:24 +0000 UTC Reason: Message:}])
  I1228 12:47:29.330206 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/28/24 12:47:29.33
  I1228 12:47:29.342931 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6797" for this suite. @ 12/28/24 12:47:29.346
• [5.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/28/24 12:47:29.352
  I1228 12:47:29.353006 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename init-container @ 12/28/24 12:47:29.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:29.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:29.372
  STEP: creating the pod @ 12/28/24 12:47:29.376
  I1228 12:47:29.376555 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1228 12:47:30.288798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:31.288843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:32.289865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:33.290081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:33.448523 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3687" for this suite. @ 12/28/24 12:47:33.452
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/28/24 12:47:33.464
  I1228 12:47:33.464267 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replicaset @ 12/28/24 12:47:33.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:33.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:33.484
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/28/24 12:47:33.488
  I1228 12:47:33.496398 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1228 12:47:34.290587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:35.290687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:36.290800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:37.292050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:38.292898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:38.503949 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/28/24 12:47:38.503
  STEP: getting scale subresource @ 12/28/24 12:47:38.504
  STEP: updating a scale subresource @ 12/28/24 12:47:38.506
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/28/24 12:47:38.514
  STEP: Patch a scale subresource @ 12/28/24 12:47:38.519
  I1228 12:47:38.532047 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4260" for this suite. @ 12/28/24 12:47:38.538
• [5.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/28/24 12:47:38.547
  I1228 12:47:38.547704 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename security-context-test @ 12/28/24 12:47:38.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:38.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:38.576
  E1228 12:47:39.293520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:40.293704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:41.293878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:42.294070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:42.616520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5996" for this suite. @ 12/28/24 12:47:42.622
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/28/24 12:47:42.631
  I1228 12:47:42.631603 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename namespaces @ 12/28/24 12:47:42.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:42.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:42.652
  STEP: Creating a test namespace @ 12/28/24 12:47:42.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:42.67
  STEP: Creating a service in the namespace @ 12/28/24 12:47:42.673
  STEP: Deleting the namespace @ 12/28/24 12:47:42.683
  STEP: Waiting for the namespace to be removed. @ 12/28/24 12:47:42.695
  E1228 12:47:43.294085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:44.294721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:45.294822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:46.294883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:47.295836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:48.296841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/28/24 12:47:48.701
  STEP: Verifying there is no service in the namespace @ 12/28/24 12:47:48.72
  I1228 12:47:48.723500 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-781" for this suite. @ 12/28/24 12:47:48.727
  STEP: Destroying namespace "nsdeletetest-5283" for this suite. @ 12/28/24 12:47:48.737
  I1228 12:47:48.740037 19 framework.go:370] Namespace nsdeletetest-5283 was already deleted
  STEP: Destroying namespace "nsdeletetest-2536" for this suite. @ 12/28/24 12:47:48.74
• [6.116 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 12/28/24 12:47:48.747
  I1228 12:47:48.747971 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 12:47:48.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:48.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:48.766
  STEP: Creating a test headless service @ 12/28/24 12:47:48.775
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1620.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1620.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1620.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1620.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 159.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.159_udp@PTR;check="$$(dig +tcp +noall +answer +search 159.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.159_tcp@PTR;sleep 1; done
   @ 12/28/24 12:47:48.793
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1620.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1620.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1620.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1620.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1620.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 159.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.159_udp@PTR;check="$$(dig +tcp +noall +answer +search 159.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.159_tcp@PTR;sleep 1; done
   @ 12/28/24 12:47:48.793
  STEP: creating a pod to probe DNS @ 12/28/24 12:47:48.793
  STEP: submitting the pod to kubernetes @ 12/28/24 12:47:48.793
  E1228 12:47:49.297152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:50.297538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 12:47:50.818
  STEP: looking for the results for each expected name from probers @ 12/28/24 12:47:50.822
  I1228 12:47:50.827260 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.832732 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.837235 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.840942 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.861853 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.865626 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.873749 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.879482 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local from pod dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c: the server could not find the requested resource (get pods dns-test-42539eb8-7771-46d8-a518-0942d15ef63c)
  I1228 12:47:50.896560 19 dns_common.go:489] Lookups using dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c failed for: [wheezy_udp@dns-test-service.dns-1620.svc.cluster.local wheezy_tcp@dns-test-service.dns-1620.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local jessie_udp@dns-test-service.dns-1620.svc.cluster.local jessie_tcp@dns-test-service.dns-1620.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1620.svc.cluster.local]

  I1228 12:47:50.903850 19 dns_common.go:495] Pod client logs for webserver: 
  I1228 12:47:50.910439 19 dns_common.go:495] Pod client logs for querier: 
  I1228 12:47:50.917316 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1228 12:47:51.297793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:52.298016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:53.298133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:54.299010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:55.299143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:47:55.895006 19 dns_common.go:527] DNS probes using dns-1620/dns-test-42539eb8-7771-46d8-a518-0942d15ef63c succeeded

  STEP: deleting the pod @ 12/28/24 12:47:55.895
  STEP: deleting the test service @ 12/28/24 12:47:55.909
  STEP: deleting the test headless service @ 12/28/24 12:47:55.93
  I1228 12:47:55.942611 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1620" for this suite. @ 12/28/24 12:47:55.946
• [7.208 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 12/28/24 12:47:55.955
  I1228 12:47:55.955567 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pv @ 12/28/24 12:47:55.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:47:55.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:47:55.977
  STEP: Creating initial PV and PVC @ 12/28/24 12:47:55.98
  I1228 12:47:55.980490 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-746" @ 12/28/24 12:47:55.994
  STEP: Listing PVCs in namespace "pv-746" @ 12/28/24 12:47:55.998
  STEP: Patching the PV "pv-746-vdw57" @ 12/28/24 12:47:56.001
  STEP: Patching the PVC "pvc-mbqcw" @ 12/28/24 12:47:56.015
  STEP: Getting PV "pv-746-vdw57" @ 12/28/24 12:47:56.03
  STEP: Getting PVC "pvc-mbqcw" @ 12/28/24 12:47:56.032
  STEP: Deleting PVC "pvc-mbqcw" @ 12/28/24 12:47:56.035
  STEP: Confirm deletion of PVC "pvc-mbqcw" @ 12/28/24 12:47:56.043
  E1228 12:47:56.299295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:57.299404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-746-vdw57" @ 12/28/24 12:47:58.051
  STEP: Confirm deletion of PV "pv-746-vdw57" @ 12/28/24 12:47:58.06
  E1228 12:47:58.299644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:47:59.299989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 12/28/24 12:48:00.07
  I1228 12:48:00.070884 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-746-v596v" @ 12/28/24 12:48:00.085
  STEP: Updating the PVC "pvc-r6g5w" @ 12/28/24 12:48:00.119
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-r6g5w=updated" @ 12/28/24 12:48:00.13
  STEP: Deleting PVC "pvc-r6g5w" via DeleteCollection @ 12/28/24 12:48:00.133
  STEP: Confirm deletion of PVC "pvc-r6g5w" @ 12/28/24 12:48:00.143
  E1228 12:48:00.300795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:01.300944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-746-v596v" via DeleteCollection @ 12/28/24 12:48:02.152
  STEP: Confirm deletion of PV "pv-746-v596v" @ 12/28/24 12:48:02.161
  E1228 12:48:02.301052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:03.301254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:48:04.173568 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1228 12:48:04.173607 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-r6g5w"
  I1228 12:48:04.177477 19 pv.go:193] Deleting PersistentVolume "pv-746-v596v"
  I1228 12:48:04.181016 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-746" for this suite. @ 12/28/24 12:48:04.184
• [8.238 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/28/24 12:48:04.193
  I1228 12:48:04.193540 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename endpointslice @ 12/28/24 12:48:04.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:48:04.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:48:04.219
  I1228 12:48:04.281686 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7201" for this suite. @ 12/28/24 12:48:04.288
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/28/24 12:48:04.295
  I1228 12:48:04.295806 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:48:04.296
  E1228 12:48:04.301708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:48:04.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:48:04.318
  STEP: Creating configMap with name configmap-test-volume-8f4734df-8d7d-4932-b40c-6e4444fa4a79 @ 12/28/24 12:48:04.321
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:48:04.326
  E1228 12:48:05.301882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:06.302109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:48:06.348
  I1228 12:48:06.352053 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-22f53153-539d-4ad4-985f-efd90e07f772 container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:48:06.359
  I1228 12:48:06.377021 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1783" for this suite. @ 12/28/24 12:48:06.38
• [2.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/28/24 12:48:06.389
  I1228 12:48:06.389344 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:48:06.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:48:06.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:48:06.411
  STEP: Creating configMap with name projected-configmap-test-volume-fe2c0600-4b99-4500-a061-129b3a147aa3 @ 12/28/24 12:48:06.414
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:48:06.42
  E1228 12:48:07.302877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:08.303155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:09.303616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:10.303845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:48:10.449
  I1228 12:48:10.453495 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-configmaps-952e7a6c-1999-4935-8c67-3bd14bd8b326 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:48:10.46
  I1228 12:48:10.481285 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3864" for this suite. @ 12/28/24 12:48:10.484
• [4.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 12/28/24 12:48:10.492
  I1228 12:48:10.492240 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption @ 12/28/24 12:48:10.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:48:10.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:48:10.516
  I1228 12:48:10.538311 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 12:48:11.304873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:12.304976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:13.305066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:14.305967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:15.306970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:16.307073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:17.307192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:18.307273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:19.307774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:20.308870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:21.309780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:22.309844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:23.309987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:24.311042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:25.311166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:26.311534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:27.311685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:28.312558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:29.312839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:30.312995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:31.313815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:32.314481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:33.315415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:34.316071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:35.316185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:36.316856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:37.316981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:38.317967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:39.318992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:40.319121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:41.319691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:42.319899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:43.320028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:44.321058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:45.321617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:46.321861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:47.321901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:48.322052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:49.322350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:50.323120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:51.323775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:52.324851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:53.325686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:54.326686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:55.327747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:56.327849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:57.327967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:58.328167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:48:59.329074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:00.329273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:01.330083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:02.330193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:03.330324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:04.330564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:05.331159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:06.331380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:07.331889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:08.332850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:09.333693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:10.333912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:10.544363 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 12/28/24 12:49:10.548
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 12/28/24 12:49:10.557
  I1228 12:49:10.569893 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 12/28/24 12:49:10.569
  E1228 12:49:11.334874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:12.334966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 12/28/24 12:49:12.579
  I1228 12:49:12.586562 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 12/28/24 12:49:12.586
  E1228 12:49:13.335876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:14.335958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 12/28/24 12:49:14.596
  I1228 12:49:14.599494 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1228 12:49:15.114553 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I1228 12:49:15.155164 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9497" for this suite. @ 12/28/24 12:49:15.159
• [64.675 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/28/24 12:49:15.167
  I1228 12:49:15.167199 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:49:15.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:15.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:15.191
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/28/24 12:49:15.194
  E1228 12:49:15.336070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:16.336155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:17.337044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:18.337927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:49:19.218
  I1228 12:49:19.222458 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-e516f5e8-76fb-447c-a6c8-e248683ba8dd container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:49:19.232
  I1228 12:49:19.251944 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8631" for this suite. @ 12/28/24 12:49:19.255
• [4.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/28/24 12:49:19.263
  I1228 12:49:19.263483 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:49:19.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:19.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:19.283
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:49:19.286
  E1228 12:49:19.338063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:20.338810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:21.339264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:22.339362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:49:23.309
  I1228 12:49:23.314167 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-c4372695-3c85-406e-9f45-ebb2cfe68cf4 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:49:23.322
  E1228 12:49:23.340345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:23.340710 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9775" for this suite. @ 12/28/24 12:49:23.344
• [4.087 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/28/24 12:49:23.35
  I1228 12:49:23.350469 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename namespaces @ 12/28/24 12:49:23.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:23.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:23.372
  STEP: Updating Namespace "namespaces-8296" @ 12/28/24 12:49:23.375
  I1228 12:49:23.383178 19 namespace.go:389] Namespace "namespaces-8296" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4e2befbe-a7a7-4839-8b3e-f434f95850f4", "kubernetes.io/metadata.name":"namespaces-8296", "namespaces-8296":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1228 12:49:23.383274 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8296" for this suite. @ 12/28/24 12:49:23.386
• [0.043 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/28/24 12:49:23.394
  I1228 12:49:23.394117 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:49:23.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:23.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:23.415
  I1228 12:49:23.418305 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:49:24.340455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/28/24 12:49:24.736
  I1228 12:49:24.736585 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7532 --namespace=crd-publish-openapi-7532 create -f -'
  E1228 12:49:25.340591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:26.340816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:26.805242 19 builder.go:146] stderr: ""
  I1228 12:49:26.805281 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5184-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1228 12:49:26.805337 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7532 --namespace=crd-publish-openapi-7532 delete e2e-test-crd-publish-openapi-5184-crds test-cr'
  I1228 12:49:26.858024 19 builder.go:146] stderr: ""
  I1228 12:49:26.858072 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5184-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1228 12:49:26.858114 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7532 --namespace=crd-publish-openapi-7532 apply -f -'
  I1228 12:49:26.915144 19 builder.go:146] stderr: ""
  I1228 12:49:26.915196 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5184-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1228 12:49:26.915245 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7532 --namespace=crd-publish-openapi-7532 delete e2e-test-crd-publish-openapi-5184-crds test-cr'
  I1228 12:49:26.973257 19 builder.go:146] stderr: ""
  I1228 12:49:26.973300 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5184-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/28/24 12:49:26.973
  I1228 12:49:26.973373 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-7532 explain e2e-test-crd-publish-openapi-5184-crds'
  I1228 12:49:27.016507 19 builder.go:146] stderr: ""
  I1228 12:49:27.016583 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5184-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1228 12:49:27.341385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:28.228735 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7532" for this suite. @ 12/28/24 12:49:28.237
• [4.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 12/28/24 12:49:28.248
  I1228 12:49:28.248148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:49:28.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:28.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:28.268
  STEP: Setting up server cert @ 12/28/24 12:49:28.295
  E1228 12:49:28.342374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:49:28.452
  STEP: Deploying the webhook pod @ 12/28/24 12:49:28.462
  STEP: Wait for the deployment to be ready @ 12/28/24 12:49:28.476
  I1228 12:49:28.486054 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 12:49:29.343154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:30.343374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:49:30.501
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:49:30.511
  E1228 12:49:31.343797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:31.512131 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/28/24 12:49:31.519
  STEP: create a pod that should be updated by the webhook @ 12/28/24 12:49:31.533
  I1228 12:49:31.599127 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9966" for this suite. @ 12/28/24 12:49:31.605
  STEP: Destroying namespace "webhook-markers-5095" for this suite. @ 12/28/24 12:49:31.611
• [3.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/28/24 12:49:31.62
  I1228 12:49:31.620448 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:49:31.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:31.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:31.642
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/28/24 12:49:31.645
  I1228 12:49:31.646281 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:49:32.344340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:32.933513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:49:33.345334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:34.345787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:35.346176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:36.346413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:37.347179      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:37.816702 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8371" for this suite. @ 12/28/24 12:49:37.824
• [6.211 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/28/24 12:49:37.831
  I1228 12:49:37.831744 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename subjectreview @ 12/28/24 12:49:37.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:37.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:37.855
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-413" @ 12/28/24 12:49:37.857
  I1228 12:49:37.862039 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-413:e2e"
  I1228 12:49:37.862067 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-413"}
  I1228 12:49:37.862075 19 subjectreviews.go:71] saUID: "8958424a-54c9-4d47-917d-bfd272399f9f"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-413:e2e" @ 12/28/24 12:49:37.862
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-413:e2e" @ 12/28/24 12:49:37.862
  I1228 12:49:37.863999 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-413:e2e" api 'list' configmaps in "subjectreview-413" namespace @ 12/28/24 12:49:37.864
  I1228 12:49:37.865614 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-413:e2e" @ 12/28/24 12:49:37.865
  I1228 12:49:37.867498 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1228 12:49:37.867516 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1228 12:49:37.867594 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-413" for this suite. @ 12/28/24 12:49:37.871
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 12/28/24 12:49:37.879
  I1228 12:49:37.879183 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 12:49:37.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:37.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:37.9
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/28/24 12:49:37.903
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/28/24 12:49:37.903
  STEP: creating a pod to probe DNS @ 12/28/24 12:49:37.903
  STEP: submitting the pod to kubernetes @ 12/28/24 12:49:37.903
  E1228 12:49:38.347308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:39.347632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 12:49:39.922
  STEP: looking for the results for each expected name from probers @ 12/28/24 12:49:39.926
  I1228 12:49:39.946556 19 dns_common.go:527] DNS probes using dns-2140/dns-test-7438d73c-c97a-4032-b5f1-64ba84b97036 succeeded

  STEP: deleting the pod @ 12/28/24 12:49:39.946
  I1228 12:49:39.963363 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2140" for this suite. @ 12/28/24 12:49:39.967
• [2.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/28/24 12:49:39.974
  I1228 12:49:39.974689 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:49:39.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:39.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:39.997
  STEP: creating the pod @ 12/28/24 12:49:40
  STEP: submitting the pod to kubernetes @ 12/28/24 12:49:40
  W1228 12:49:40.009417      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1228 12:49:40.347783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:41.348004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/28/24 12:49:42.023
  STEP: updating the pod @ 12/28/24 12:49:42.026
  E1228 12:49:42.348447      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:42.540121 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-b778dbf9-77ea-443d-8e02-49fe6277037e"
  E1228 12:49:43.348673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:44.349255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:45.349410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:46.349598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:49:46.556376 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2219" for this suite. @ 12/28/24 12:49:46.561
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 12/28/24 12:49:46.567
  I1228 12:49:46.567984 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/28/24 12:49:46.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:49:46.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:49:46.592
  I1228 12:49:46.595179 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 12:49:47.350671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:48.350797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:49.351671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:50.351866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:51.351964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:52.352866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:53.352979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:54.354038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:55.354135      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:56.354839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:57.354986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:58.355642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:49:59.356070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:00.356184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:01.356282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:02.356470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:03.356940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:04.357615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:05.358145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:06.358798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:07.359805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:08.360843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:09.361778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:10.362842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:11.363159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:12.363263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:13.364134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:14.364945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:15.365048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:16.365835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:17.366158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:18.366356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:19.367172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:20.367865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:21.368601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:22.368812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:23.368926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:24.369100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:25.369209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:26.369399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:27.369510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:28.369770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:29.369831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:30.370000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:31.370138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:32.370534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:33.370668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:34.370732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:35.371183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:36.371363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:37.371558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:38.371771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:39.372231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:40.372319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:41.373367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:42.373533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:43.373638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:44.373991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:45.374737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:46.375103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:50:46.595381 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1228 12:50:46.599844 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 12/28/24 12:50:46.599
  I1228 12:50:46.820934 19 taints.go:463] Pod1 is running on ip-172-31-65-66. Tainting Node
  E1228 12:50:47.375862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:48.376863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:50:49.045004 19 taints.go:471] Pod2 is running on ip-172-31-65-66. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/28/24 12:50:49.045
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/28/24 12:50:49.055
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/28/24 12:50:49.059
  E1228 12:50:49.377701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:50.377798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:51.378070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:52.378278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:53.378411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:54.378536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:50:54.485779 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1228 12:50:55.378905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:56.379055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:57.379177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:58.379260      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:50:59.380322      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:00.380522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:01.380866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:02.381002      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:03.381198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:04.382020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:05.382137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:06.382491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:07.382610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:08.382865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:09.382994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:10.383125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:11.383207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:12.384119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:13.384215      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:14.384336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:14.515753 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/28/24 12:51:14.526
  I1228 12:51:14.530662 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6085" for this suite. @ 12/28/24 12:51:14.534
• [87.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 12/28/24 12:51:14.543
  I1228 12:51:14.543899 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl-logs @ 12/28/24 12:51:14.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:14.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:14.568
  STEP: creating a pod @ 12/28/24 12:51:14.571
  I1228 12:51:14.571851 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1228 12:51:14.621407 19 builder.go:146] stderr: ""
  I1228 12:51:14.621428 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/28/24 12:51:14.621
  I1228 12:51:14.621488 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1228 12:51:15.384871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:16.385837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:16.631410 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/28/24 12:51:16.631
  I1228 12:51:16.631510 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 logs logs-generator logs-generator'
  I1228 12:51:16.689029 19 builder.go:146] stderr: ""
  I1228 12:51:16.689067 19 builder.go:147] stdout: "I1228 12:51:15.257936       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/btj 339\nI1228 12:51:15.458001       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/csvj 443\nI1228 12:51:15.658361       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/xw55 483\nI1228 12:51:15.858525       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/f57q 400\nI1228 12:51:16.058841       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/dvq 262\nI1228 12:51:16.258082       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/d882 319\nI1228 12:51:16.458405       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/nbff 252\nI1228 12:51:16.658540       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/bcnn 206\n"
  STEP: limiting log lines @ 12/28/24 12:51:16.689
  I1228 12:51:16.689137 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 logs logs-generator logs-generator --tail=1'
  I1228 12:51:16.741720 19 builder.go:146] stderr: ""
  I1228 12:51:16.741749 19 builder.go:147] stdout: "I1228 12:51:16.658540       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/bcnn 206\n"
  I1228 12:51:16.741757 19 logs.go:180] got output "I1228 12:51:16.658540       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/bcnn 206\n"
  STEP: limiting log bytes @ 12/28/24 12:51:16.741
  I1228 12:51:16.741812 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 logs logs-generator logs-generator --limit-bytes=1'
  I1228 12:51:16.791202 19 builder.go:146] stderr: ""
  I1228 12:51:16.791225 19 builder.go:147] stdout: "I"
  I1228 12:51:16.791234 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 12/28/24 12:51:16.791
  I1228 12:51:16.791283 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 logs logs-generator logs-generator --tail=1 --timestamps'
  I1228 12:51:16.838483 19 builder.go:146] stderr: ""
  I1228 12:51:16.838506 19 builder.go:147] stdout: "2024-12-28T12:51:16.658610600Z I1228 12:51:16.658540       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/bcnn 206\n"
  I1228 12:51:16.838513 19 logs.go:192] got output "2024-12-28T12:51:16.658610600Z I1228 12:51:16.658540       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/bcnn 206\n"
  STEP: restricting to a time range @ 12/28/24 12:51:16.838
  E1228 12:51:17.386240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:18.386858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:19.339041 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 logs logs-generator logs-generator --since=1s'
  E1228 12:51:19.387484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:19.390021 19 builder.go:146] stderr: ""
  I1228 12:51:19.390060 19 builder.go:147] stdout: "I1228 12:51:18.458310       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/pwc 364\nI1228 12:51:18.658525       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/jm7d 420\nI1228 12:51:18.858877       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/4mq 394\nI1228 12:51:19.058124       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/4255 234\nI1228 12:51:19.258450       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/jtd 233\n"
  I1228 12:51:19.390093 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 logs logs-generator logs-generator --since=24h'
  I1228 12:51:19.439957 19 builder.go:146] stderr: ""
  I1228 12:51:19.439996 19 builder.go:147] stdout: "I1228 12:51:15.257936       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/btj 339\nI1228 12:51:15.458001       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/csvj 443\nI1228 12:51:15.658361       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/xw55 483\nI1228 12:51:15.858525       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/f57q 400\nI1228 12:51:16.058841       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/dvq 262\nI1228 12:51:16.258082       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/d882 319\nI1228 12:51:16.458405       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/nbff 252\nI1228 12:51:16.658540       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/bcnn 206\nI1228 12:51:16.858932       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/7w9 387\nI1228 12:51:17.058229       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/kw4v 592\nI1228 12:51:17.258531       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/cnv9 252\nI1228 12:51:17.458846       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/trw9 329\nI1228 12:51:17.658165       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/4t8 377\nI1228 12:51:17.858525       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/dgsk 240\nI1228 12:51:18.058860       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/xb4 550\nI1228 12:51:18.258003       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/gpb 562\nI1228 12:51:18.458310       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/pwc 364\nI1228 12:51:18.658525       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/jm7d 420\nI1228 12:51:18.858877       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/4mq 394\nI1228 12:51:19.058124       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/4255 234\nI1228 12:51:19.258450       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/jtd 233\n"
  I1228 12:51:19.440096 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-logs-5025 delete pod logs-generator'
  E1228 12:51:20.387575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:20.533518 19 builder.go:146] stderr: ""
  I1228 12:51:20.533560 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1228 12:51:20.533766 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5025" for this suite. @ 12/28/24 12:51:20.537
• [6.002 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/28/24 12:51:20.545
  I1228 12:51:20.545615 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/28/24 12:51:20.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:20.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:20.569
  I1228 12:51:20.572876 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:51:21.387697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:22.387805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:23.388855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:23.626087 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9376" for this suite. @ 12/28/24 12:51:23.63
• [3.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/28/24 12:51:23.64
  I1228 12:51:23.640478 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:51:23.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:23.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:23.666
  STEP: Creating secret with name secret-test-0beb6c5e-b83f-4daa-9296-e758d0882e37 @ 12/28/24 12:51:23.698
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:51:23.703
  E1228 12:51:24.388977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:25.389993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:51:25.719
  I1228 12:51:25.723383 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-secrets-3370c21f-3a87-4b99-ac6d-8df866f37dd0 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:51:25.729
  I1228 12:51:25.744867 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4676" for this suite. @ 12/28/24 12:51:25.748
  STEP: Destroying namespace "secret-namespace-6812" for this suite. @ 12/28/24 12:51:25.756
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/28/24 12:51:25.762
  I1228 12:51:25.762367 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename conformance-tests @ 12/28/24 12:51:25.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:25.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:25.784
  STEP: Getting node addresses @ 12/28/24 12:51:25.787
  I1228 12:51:25.787892 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1228 12:51:25.795355 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7583" for this suite. @ 12/28/24 12:51:25.799
• [0.043 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/28/24 12:51:25.805
  I1228 12:51:25.805129 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 12:51:25.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:25.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:25.827
  I1228 12:51:25.830379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:51:26.390336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/28/24 12:51:27.095
  I1228 12:51:27.095734 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-6963 --namespace=crd-publish-openapi-6963 create -f -'
  I1228 12:51:27.159678 19 builder.go:146] stderr: ""
  I1228 12:51:27.159710 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1228 12:51:27.159746 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-6963 --namespace=crd-publish-openapi-6963 delete e2e-test-crd-publish-openapi-6747-crds test-cr'
  I1228 12:51:27.208442 19 builder.go:146] stderr: ""
  I1228 12:51:27.208478 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1228 12:51:27.208514 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-6963 --namespace=crd-publish-openapi-6963 apply -f -'
  I1228 12:51:27.264273 19 builder.go:146] stderr: ""
  I1228 12:51:27.264299 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1228 12:51:27.264352 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-6963 --namespace=crd-publish-openapi-6963 delete e2e-test-crd-publish-openapi-6747-crds test-cr'
  I1228 12:51:27.312509 19 builder.go:146] stderr: ""
  I1228 12:51:27.312540 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/28/24 12:51:27.312
  I1228 12:51:27.312599 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=crd-publish-openapi-6963 explain e2e-test-crd-publish-openapi-6747-crds'
  I1228 12:51:27.351411 19 builder.go:146] stderr: ""
  I1228 12:51:27.351450 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6747-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1228 12:51:27.391310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:28.392390      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:28.562534 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6963" for this suite. @ 12/28/24 12:51:28.569
• [2.773 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/28/24 12:51:28.578
  I1228 12:51:28.578856 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:51:28.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:28.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:28.604
  STEP: Creating configMap with name projected-configmap-test-volume-4ee0dea4-03c1-41a3-b6cd-709aec317f4e @ 12/28/24 12:51:28.607
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:51:28.611
  E1228 12:51:29.393108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:30.393199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:31.393295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:32.393495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:51:32.636
  I1228 12:51:32.641867 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-configmaps-0135b952-c50b-4b76-acc1-8abfedf07fa2 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:51:32.65
  I1228 12:51:32.666271 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7712" for this suite. @ 12/28/24 12:51:32.67
• [4.100 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 12/28/24 12:51:32.678
  I1228 12:51:32.678703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:51:32.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:32.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:32.7
  STEP: creating service multiprotocol-test in namespace services-7578 @ 12/28/24 12:51:32.704
  STEP: creating pod pod1 in namespace services-7578 @ 12/28/24 12:51:32.718
  STEP: Creating pod pod1 in namespace services-7578 @ 12/28/24 12:51:32.718
  E1228 12:51:33.393800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:34.393992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7578 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/28/24 12:51:34.75
  I1228 12:51:34.762352 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-7578 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/28/24 12:51:34.762
  I1228 12:51:34.762393 19 resource.go:361] Creating new exec pod
  E1228 12:51:35.394111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:36.394613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:36.779476 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  I1228 12:51:36.860973 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n"
  I1228 12:51:36.861007 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:51:36.861063 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.176 80'
  E1228 12:51:37.395561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:38.395624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:39.395678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:40.395794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:40.938400 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [udp/*] succeeded!\n"
  I1228 12:51:40.938438 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/28/24 12:51:40.938
  I1228 12:51:40.950604 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  I1228 12:51:41.041056 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.176 80\n+ echo hostName\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n"
  I1228 12:51:41.041086 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:51:41.041220 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.176 80'
  E1228 12:51:41.396250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:42.396849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:43.397411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:44.397786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:45.119849 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [udp/*] succeeded!\n"
  I1228 12:51:45.119891 19 builder.go:147] stdout: ""
  I1228 12:51:45.119944 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.176 80'
  E1228 12:51:45.397874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:46.398871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:47.399563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:48.399748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:49.205909 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [udp/*] succeeded!\n"
  I1228 12:51:49.205954 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/28/24 12:51:49.206
  I1228 12:51:49.217029 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.176 80'
  E1228 12:51:49.400362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:50.400621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:51.400703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:52.400990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:53.309242 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [udp/*] succeeded!\n"
  I1228 12:51:53.309279 19 builder.go:147] stdout: "pod1"
  I1228 12:51:53.309374 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  E1228 12:51:53.401409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:54.401709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:55.387260 19 builder.go:135] rc: 1
  I1228 12:51:55.387323 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.176 80
  nc: connect to 10.152.183.176 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1228 12:51:55.387385 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  E1228 12:51:55.401723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:56.402284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:57.402910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:57.468117 19 builder.go:135] rc: 1
  I1228 12:51:57.468166 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.176 80
  nc: connect to 10.152.183.176 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1228 12:51:57.468225 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  E1228 12:51:58.403442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:51:59.404225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:51:59.552590 19 builder.go:135] rc: 1
  I1228 12:51:59.552669 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7578 exec execpodt7mq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80:
  Command stdout:

  stderr:
  + + echo hostName
  nc -v -t -w 2 10.152.183.176 80
  nc: connect to 10.152.183.176 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1228 12:51:59.552818 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7578" for this suite. @ 12/28/24 12:51:59.558
• [26.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 12/28/24 12:51:59.567
  I1228 12:51:59.567081 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption @ 12/28/24 12:51:59.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:51:59.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:51:59.588
  I1228 12:51:59.609747 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 12:52:00.404358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:01.405311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:02.405425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:03.405501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:04.406072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:05.406870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:06.407204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:07.407330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:08.407895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:09.407933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:10.408279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:11.408457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:12.408573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:13.408773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:14.409701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:15.409782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:16.410765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:17.410913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:18.411954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:19.412042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:20.412750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:21.412932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:22.413356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:23.413829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:24.414112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:25.414210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:26.414774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:27.415841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:28.416844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:29.417150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:30.417292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:31.417847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:32.417963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:33.418064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:34.418767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:35.418959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:36.419555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:37.419798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:38.420739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:39.421233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:40.421385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:41.422230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:42.422387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:43.422479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:44.423244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:45.424018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:46.425040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:47.425842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:48.425979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:49.426025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:50.426746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:51.426790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:52.427842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:53.428842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:54.429228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:55.429411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:56.430242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:57.430849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:58.431885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:52:59.431998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:52:59.615500 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/28/24 12:52:59.619
  I1228 12:52:59.642783 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1228 12:52:59.649192 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1228 12:52:59.668467 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1228 12:52:59.704622 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1228 12:52:59.722681 19 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1228 12:52:59.728950 19 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/28/24 12:52:59.728
  E1228 12:53:00.432943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:01.433053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/28/24 12:53:01.765
  E1228 12:53:02.434061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:03.434158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:04.434854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:05.435891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:05.904670 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7142" for this suite. @ 12/28/24 12:53:05.909
• [66.351 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 12/28/24 12:53:05.918
  I1228 12:53:05.918114 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:53:05.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:05.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:05.939
  STEP: Setting up server cert @ 12/28/24 12:53:05.968
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:53:06.278
  STEP: Deploying the webhook pod @ 12/28/24 12:53:06.287
  STEP: Wait for the deployment to be ready @ 12/28/24 12:53:06.302
  I1228 12:53:06.309226 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1228 12:53:06.436608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:07.436755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:53:08.322
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:53:08.337
  E1228 12:53:08.436768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:09.337572 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/28/24 12:53:09.418
  E1228 12:53:09.436899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/28/24 12:53:09.449
  STEP: Deleting the collection of validation webhooks @ 12/28/24 12:53:09.476
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/28/24 12:53:09.535
  I1228 12:53:09.593390 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5085" for this suite. @ 12/28/24 12:53:09.597
  STEP: Destroying namespace "webhook-markers-173" for this suite. @ 12/28/24 12:53:09.609
• [3.699 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/28/24 12:53:09.617
  I1228 12:53:09.617274 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename security-context-test @ 12/28/24 12:53:09.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:09.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:09.64
  E1228 12:53:10.437328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:11.437505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:12.437897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:13.438101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:13.688008 19 security_context.go:538] Got logs for pod "busybox-privileged-false-7bb88f9a-b627-422e-9b6e-79030babf812": "ip: RTNETLINK answers: Operation not permitted\n"
  I1228 12:53:13.688126 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2440" for this suite. @ 12/28/24 12:53:13.692
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 12/28/24 12:53:13.7
  I1228 12:53:13.700511 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:53:13.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:13.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:13.719
  STEP: creating a Service @ 12/28/24 12:53:13.726
  STEP: watching for the Service to be added @ 12/28/24 12:53:13.743
  I1228 12:53:13.745786 19 service.go:3445] Found Service test-service-nxm2k in namespace services-7137 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31088}]
  I1228 12:53:13.745806 19 service.go:3452] Service test-service-nxm2k created
  STEP: Getting /status @ 12/28/24 12:53:13.745
  I1228 12:53:13.751204 19 service.go:3463] Service test-service-nxm2k has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/28/24 12:53:13.751
  STEP: watching for the Service to be patched @ 12/28/24 12:53:13.756
  I1228 12:53:13.758365 19 service.go:3486] observed Service test-service-nxm2k in namespace services-7137 with annotations: map[] & LoadBalancer: {[]}
  I1228 12:53:13.758398 19 service.go:3489] Found Service test-service-nxm2k in namespace services-7137 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000bb4330 []}]}
  I1228 12:53:13.758407 19 service.go:3496] Service test-service-nxm2k has service status patched
  STEP: updating the ServiceStatus @ 12/28/24 12:53:13.758
  I1228 12:53:13.769519 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/28/24 12:53:13.769
  I1228 12:53:13.771326 19 service.go:3527] Observed Service test-service-nxm2k in namespace services-7137 with annotations: map[] & Conditions: []
  I1228 12:53:13.771345 19 service.go:3538] Observed Service test-service-nxm2k in namespace services-7137 with annotations: map[patchedstatus:true] & Conditions: []
  I1228 12:53:13.771363 19 service.go:3534] Found Service test-service-nxm2k in namespace services-7137 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1228 12:53:13.771370 19 service.go:3545] Service test-service-nxm2k has service status updated
  STEP: patching the service @ 12/28/24 12:53:13.771
  STEP: watching for the Service to be patched @ 12/28/24 12:53:13.781
  I1228 12:53:13.783100 19 service.go:3568] observed Service test-service-nxm2k in namespace services-7137 with labels: map[test-service-static:true]
  I1228 12:53:13.783121 19 service.go:3568] observed Service test-service-nxm2k in namespace services-7137 with labels: map[test-service-static:true]
  I1228 12:53:13.783191 19 service.go:3568] observed Service test-service-nxm2k in namespace services-7137 with labels: map[test-service-static:true]
  I1228 12:53:13.783201 19 service.go:3571] Found Service test-service-nxm2k in namespace services-7137 with labels: map[test-service:patched test-service-static:true]
  I1228 12:53:13.783208 19 service.go:3578] Service test-service-nxm2k patched
  STEP: deleting the service @ 12/28/24 12:53:13.783
  STEP: watching for the Service to be deleted @ 12/28/24 12:53:13.808
  I1228 12:53:13.809636 19 service.go:3602] Observed event: ADDED
  I1228 12:53:13.809779 19 service.go:3602] Observed event: MODIFIED
  I1228 12:53:13.809828 19 service.go:3602] Observed event: MODIFIED
  I1228 12:53:13.809844 19 service.go:3602] Observed event: MODIFIED
  I1228 12:53:13.809895 19 service.go:3598] Found Service test-service-nxm2k in namespace services-7137 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1228 12:53:13.809908 19 service.go:3607] Service test-service-nxm2k deleted
  I1228 12:53:13.810013 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7137" for this suite. @ 12/28/24 12:53:13.813
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/28/24 12:53:13.821
  I1228 12:53:13.821472 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replication-controller @ 12/28/24 12:53:13.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:13.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:13.838
  STEP: Given a ReplicationController is created @ 12/28/24 12:53:13.841
  STEP: When the matched label of one of its pods change @ 12/28/24 12:53:13.848
  I1228 12:53:13.851396 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1228 12:53:14.439153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:15.439284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:16.439395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:17.439528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:18.439760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:18.856521 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/28/24 12:53:18.868
  E1228 12:53:19.440253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:19.879518 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6764" for this suite. @ 12/28/24 12:53:19.884
• [6.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/28/24 12:53:19.893
  I1228 12:53:19.893788 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/28/24 12:53:19.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:19.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:19.909
  STEP: Creating two CSIDrivers @ 12/28/24 12:53:19.912
  STEP: Getting "inline-driver-1c71c131-74f3-4595-bb10-fa1dc5a3b525" & "inline-driver-8a478fa7-882d-417d-877a-81504bb105d8" @ 12/28/24 12:53:19.93
  STEP: Patching the CSIDriver "inline-driver-8a478fa7-882d-417d-877a-81504bb105d8" @ 12/28/24 12:53:19.937
  STEP: Updating the CSIDriver "inline-driver-8a478fa7-882d-417d-877a-81504bb105d8" @ 12/28/24 12:53:19.943
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7118" @ 12/28/24 12:53:19.953
  STEP: Deleting CSIDriver "inline-driver-1c71c131-74f3-4595-bb10-fa1dc5a3b525" @ 12/28/24 12:53:19.956
  STEP: Confirm deletion of CSIDriver "inline-driver-1c71c131-74f3-4595-bb10-fa1dc5a3b525" @ 12/28/24 12:53:19.963
  STEP: Deleting CSIDriver "inline-driver-8a478fa7-882d-417d-877a-81504bb105d8" via DeleteCollection @ 12/28/24 12:53:19.966
  STEP: Confirm deletion of CSIDriver "inline-driver-8a478fa7-882d-417d-877a-81504bb105d8" @ 12/28/24 12:53:19.974
  I1228 12:53:19.980146 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7118" for this suite. @ 12/28/24 12:53:19.983
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/28/24 12:53:19.992
  I1228 12:53:19.992317 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/28/24 12:53:19.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:20.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:20.012
  STEP: getting /apis @ 12/28/24 12:53:20.02
  STEP: getting /apis/admissionregistration.k8s.io @ 12/28/24 12:53:20.023
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/28/24 12:53:20.025
  STEP: creating @ 12/28/24 12:53:20.026
  STEP: getting @ 12/28/24 12:53:20.041
  STEP: listing @ 12/28/24 12:53:20.044
  STEP: watching @ 12/28/24 12:53:20.049
  I1228 12:53:20.049178 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/28/24 12:53:20.05
  STEP: updating @ 12/28/24 12:53:20.057
  I1228 12:53:20.066765 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/28/24 12:53:20.066
  STEP: deleting a collection @ 12/28/24 12:53:20.081
  I1228 12:53:20.103450 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7108" for this suite. @ 12/28/24 12:53:20.107
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/28/24 12:53:20.115
  I1228 12:53:20.115419 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename events @ 12/28/24 12:53:20.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:20.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:20.134
  STEP: Create set of events @ 12/28/24 12:53:20.139
  I1228 12:53:20.145205 19 core_events.go:198] created test-event-1
  I1228 12:53:20.152104 19 core_events.go:198] created test-event-2
  I1228 12:53:20.156925 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/28/24 12:53:20.156
  STEP: delete collection of events @ 12/28/24 12:53:20.16
  I1228 12:53:20.160148 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/28/24 12:53:20.185
  I1228 12:53:20.185172 19 core_events.go:230] requesting list of events to confirm quantity
  I1228 12:53:20.188718 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-27" for this suite. @ 12/28/24 12:53:20.193
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 12/28/24 12:53:20.202
  I1228 12:53:20.202102 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:53:20.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:20.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:20.218
  STEP: creating Agnhost RC @ 12/28/24 12:53:20.222
  I1228 12:53:20.222038 19 kubectl.go:1537] namespace kubectl-7423
  I1228 12:53:20.222072 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-7423 create -f -'
  I1228 12:53:20.300789 19 builder.go:146] stderr: ""
  I1228 12:53:20.300820 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/28/24 12:53:20.3
  E1228 12:53:20.441169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:21.305562 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 12:53:21.305592 19 framework.go:733] Found 1 / 1
  I1228 12:53:21.305606 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1228 12:53:21.311356 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 12:53:21.311374 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1228 12:53:21.311380 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-7423 
  I1228 12:53:21.311426 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-7423 logs agnhost-primary-x7v96 agnhost-primary'
  I1228 12:53:21.369945 19 builder.go:146] stderr: ""
  I1228 12:53:21.369970 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/28/24 12:53:21.37
  I1228 12:53:21.370154 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-7423 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1228 12:53:21.428451 19 builder.go:146] stderr: ""
  I1228 12:53:21.428484 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I1228 12:53:21.438493 19 utils.go:1203] Service rm2 in namespace kubectl-7423 found.
  E1228 12:53:21.441641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:22.441855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:23.442129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: exposing service @ 12/28/24 12:53:23.447
  I1228 12:53:23.447326 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-7423 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1228 12:53:23.502302 19 builder.go:146] stderr: ""
  I1228 12:53:23.502331 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I1228 12:53:23.506821 19 utils.go:1203] Service rm3 in namespace kubectl-7423 found.
  E1228 12:53:24.442809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:25.443870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:25.514831 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7423" for this suite. @ 12/28/24 12:53:25.518
• [5.325 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/28/24 12:53:25.527
  I1228 12:53:25.528004 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/28/24 12:53:25.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:25.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:25.547
  STEP: mirroring a new custom Endpoint @ 12/28/24 12:53:25.561
  I1228 12:53:25.573820 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1228 12:53:26.444531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:27.444934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 12/28/24 12:53:27.578
  I1228 12:53:27.590733 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1228 12:53:28.445856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:29.446072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 12/28/24 12:53:29.595
  I1228 12:53:29.606419 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E1228 12:53:30.446422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:31.446521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:31.611322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6784" for this suite. @ 12/28/24 12:53:31.616
• [6.098 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/28/24 12:53:31.625
  I1228 12:53:31.625674 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:53:31.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:31.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:31.643
  STEP: creating a ConfigMap @ 12/28/24 12:53:31.649
  STEP: fetching the ConfigMap @ 12/28/24 12:53:31.654
  STEP: patching the ConfigMap @ 12/28/24 12:53:31.659
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/28/24 12:53:31.664
  STEP: deleting the ConfigMap by collection with a label selector @ 12/28/24 12:53:31.668
  STEP: listing all ConfigMaps in test namespace @ 12/28/24 12:53:31.677
  I1228 12:53:31.681642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4605" for this suite. @ 12/28/24 12:53:31.685
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/28/24 12:53:31.693
  I1228 12:53:31.693249 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/28/24 12:53:31.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:31.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:31.71
  STEP: creating a target pod @ 12/28/24 12:53:31.713
  E1228 12:53:32.446861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:33.447137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/28/24 12:53:33.736
  E1228 12:53:34.447763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:35.447809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/28/24 12:53:35.753
  I1228 12:53:35.753603 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3254 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 12:53:35.753620 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 12:53:35.754092 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 12:53:35.754129 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3254/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1228 12:53:35.794434 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/28/24 12:53:35.8
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/28/24 12:53:35.806
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/28/24 12:53:35.818
  I1228 12:53:35.824025 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3254" for this suite. @ 12/28/24 12:53:35.829
• [4.148 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/28/24 12:53:35.841
  I1228 12:53:35.841692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 12:53:35.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:35.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:35.867
  STEP: Creating ServiceAccount "e2e-sa-fffd9"  @ 12/28/24 12:53:35.872
  I1228 12:53:35.878861 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-fffd9"  @ 12/28/24 12:53:35.878
  I1228 12:53:35.890143 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I1228 12:53:35.890223 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-795" for this suite. @ 12/28/24 12:53:35.896
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/28/24 12:53:35.907
  I1228 12:53:35.907865 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:53:35.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:35.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:35.931
  STEP: Create set of pods @ 12/28/24 12:53:35.934
  I1228 12:53:35.945781 19 pods.go:871] created test-pod-1
  I1228 12:53:35.954740 19 pods.go:871] created test-pod-2
  I1228 12:53:35.960515 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/28/24 12:53:35.96
  E1228 12:53:36.448854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:37.449062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 12/28/24 12:53:38
  I1228 12:53:38.004600 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1228 12:53:38.449242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:39.005486 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7177" for this suite. @ 12/28/24 12:53:39.009
• [3.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/28/24 12:53:39.019
  I1228 12:53:39.019223 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 12:53:39.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:39.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:39.04
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/28/24 12:53:39.044
  E1228 12:53:39.450281      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:40.450325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:53:41.065
  I1228 12:53:41.069943 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-5a2d2458-49c0-4492-b93f-0614aa52e5f5 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:53:41.077
  I1228 12:53:41.093223 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1003" for this suite. @ 12/28/24 12:53:41.099
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/28/24 12:53:41.107
  I1228 12:53:41.107331 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 12:53:41.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:41.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:41.126
  I1228 12:53:41.152050 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1228 12:53:41.152069 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1228 12:53:41.159372 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I1228 12:53:41.159393 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1228 12:53:41.164640 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1228 12:53:41.164672 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1228 12:53:41.174583 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1228 12:53:41.174604 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1228 12:53:41.183323 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1228 12:53:41.183342 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1228 12:53:41.191584 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1228 12:53:41.191602 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1228 12:53:41.202423 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1228 12:53:41.202438 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1228 12:53:41.212599 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1228 12:53:41.212626 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1228 12:53:41.224285 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1228 12:53:41.224306 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1228 12:53:41.224397 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2719" for this suite. @ 12/28/24 12:53:41.232
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/28/24 12:53:41.24
  I1228 12:53:41.240858 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:53:41.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:41.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:41.264
  STEP: creating a Pod with a static label @ 12/28/24 12:53:41.275
  STEP: watching for Pod to be ready @ 12/28/24 12:53:41.285
  I1228 12:53:41.286722 19 pods.go:945] observed Pod pod-test in namespace pods-6286 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1228 12:53:41.293595 19 pods.go:945] observed Pod pod-test in namespace pods-6286 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC  }]
  I1228 12:53:41.309142 19 pods.go:945] observed Pod pod-test in namespace pods-6286 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC  }]
  E1228 12:53:41.450433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:42.450519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:42.767256 19 pods.go:948] Found Pod pod-test in namespace pods-6286 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:42 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:42 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 12:53:41 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/28/24 12:53:42.771
  STEP: getting the Pod and ensuring that it's patched @ 12/28/24 12:53:42.78
  STEP: replacing the Pod's status Ready condition to False @ 12/28/24 12:53:42.787
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/28/24 12:53:42.797
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/28/24 12:53:42.797
  STEP: watching for the Pod to be deleted @ 12/28/24 12:53:42.81
  I1228 12:53:42.812025 19 pods.go:1058] observed event type MODIFIED
  E1228 12:53:43.450639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:44.451108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:44.769100 19 pods.go:1058] observed event type MODIFIED
  I1228 12:53:44.914546 19 pods.go:1058] observed event type MODIFIED
  E1228 12:53:45.451210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:45.783096 19 pods.go:1058] observed event type MODIFIED
  I1228 12:53:45.793579 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6286" for this suite. @ 12/28/24 12:53:45.797
• [4.565 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/28/24 12:53:45.806
  I1228 12:53:45.806060 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:53:45.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:53:45.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:53:45.826
  STEP: Creating pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222 @ 12/28/24 12:53:45.829
  E1228 12:53:46.452021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:47.452142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 12:53:47.855
  I1228 12:53:47.867167 19 container_probe.go:1749] Initial restart count of pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 is 0
  I1228 12:53:47.875544 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:53:48.452294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:49.452612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:49.880000 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:53:50.452741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:51.452814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:51.886489 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:53:52.452930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:53.453139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:53.891748 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:53:54.453189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:55.453300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:55.898116 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:53:56.453396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:57.453550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:57.905552 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:53:58.453870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:53:59.453988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:53:59.911409 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:54:00.454872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:01.454968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:01.916441 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:54:02.455961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:03.456998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:03.922899 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:54:04.457617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:05.457853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:05.928222 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  E1228 12:54:06.457830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:07.458038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:07.933400 19 container_probe.go:1759] Get pod liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 in namespace container-probe-8222
  I1228 12:54:07.933437 19 container_probe.go:1763] Restart count of pod container-probe-8222/liveness-0ceed3b3-2f3d-4c2a-a416-5590cafc00b8 is now 1 (20.066249503s elapsed)
  STEP: deleting the pod @ 12/28/24 12:54:07.933
  I1228 12:54:07.950365 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8222" for this suite. @ 12/28/24 12:54:07.955
• [22.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/28/24 12:54:07.963
  I1228 12:54:07.963238 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/28/24 12:54:07.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:54:07.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:54:07.984
  STEP: getting /apis @ 12/28/24 12:54:07.994
  STEP: getting /apis/admissionregistration.k8s.io @ 12/28/24 12:54:08.002
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/28/24 12:54:08.004
  STEP: creating @ 12/28/24 12:54:08.01
  STEP: getting @ 12/28/24 12:54:08.055
  STEP: listing @ 12/28/24 12:54:08.061
  STEP: watching @ 12/28/24 12:54:08.072
  I1228 12:54:08.072540 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/28/24 12:54:08.075
  STEP: updating @ 12/28/24 12:54:08.089
  I1228 12:54:08.108963 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 12/28/24 12:54:08.109
  STEP: patching /status @ 12/28/24 12:54:08.114
  STEP: updating /status @ 12/28/24 12:54:08.121
  STEP: deleting @ 12/28/24 12:54:08.135
  STEP: deleting a collection @ 12/28/24 12:54:08.155
  I1228 12:54:08.180606 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9281" for this suite. @ 12/28/24 12:54:08.185
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 12/28/24 12:54:08.194
  I1228 12:54:08.194383 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 12:54:08.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:54:08.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:54:08.262
  STEP: Setting up server cert @ 12/28/24 12:54:08.287
  E1228 12:54:08.458735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 12:54:08.534
  STEP: Deploying the webhook pod @ 12/28/24 12:54:08.546
  STEP: Wait for the deployment to be ready @ 12/28/24 12:54:08.557
  I1228 12:54:08.571724 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 12:54:09.459787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:10.460003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 12:54:10.585
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 12:54:10.599
  E1228 12:54:11.460928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:11.600257 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/28/24 12:54:11.609
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/28/24 12:54:11.623
  STEP: Creating a dummy validating-webhook-configuration object @ 12/28/24 12:54:11.636
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/28/24 12:54:11.647
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/28/24 12:54:11.654
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/28/24 12:54:11.663
  I1228 12:54:11.728341 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4776" for this suite. @ 12/28/24 12:54:11.731
  STEP: Destroying namespace "webhook-markers-6087" for this suite. @ 12/28/24 12:54:11.739
• [3.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/28/24 12:54:11.748
  I1228 12:54:11.748242 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 12:54:11.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:54:11.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:54:11.762
  I1228 12:54:11.769765 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-9349"
  I1228 12:54:11.777099 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-9349"
  STEP: waiting for a new root ca configmap created @ 12/28/24 12:54:12.277
  I1228 12:54:12.282589 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-9349"
  I1228 12:54:12.290732 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-9349"
  E1228 12:54:12.461177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 12/28/24 12:54:12.791
  I1228 12:54:12.796449 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-9349"
  I1228 12:54:12.796555 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9349" for this suite. @ 12/28/24 12:54:12.801
• [1.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/28/24 12:54:12.81
  I1228 12:54:12.810381 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 12:54:12.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:54:12.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:54:12.831
  I1228 12:54:12.846598 19 service_accounts.go:618] created pod
  E1228 12:54:13.461307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:14.462327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:15.462683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:16.462798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:54:16.86
  E1228 12:54:17.462898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:18.463043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:19.463119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:20.463222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:21.463318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:22.463430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:23.463503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:24.463741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:25.463784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:26.463962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:27.464770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:28.464858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:29.465042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:30.465843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:31.466841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:32.467027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:33.467432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:34.467523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:35.467728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:36.467812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:37.467915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:38.468624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:39.469610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:40.469948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:41.470108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:42.470245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:43.470537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:44.470781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:45.471711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:46.471775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:46.861340 19 service_accounts.go:624] polling logs
  I1228 12:54:46.880223 19 service_accounts.go:634] Pod logs: 
  I1228 12:54:13.388628       1 log.go:245] OK: Got token
  I1228 12:54:13.388671       1 log.go:245] validating with in-cluster discovery
  I1228 12:54:13.388865       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1228 12:54:13.389042       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8585:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002dd4f0), NotBefore:(*jwt.NumericDate)(0xc0002dd5e0), IssuedAt:(*jwt.NumericDate)(0xc0002dd500), ID:"7a444cb6-2d8a-415c-9769-37ef52804ccf"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8585", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"db44884b-988d-4dba-b613-5007afcc2122"}}}
  I1228 12:54:13.395148       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1228 12:54:13.398799       1 log.go:245] OK: Validated signature on JWT
  I1228 12:54:13.398854       1 log.go:245] OK: Got valid claims from token!
  I1228 12:54:13.398873       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8585:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002597a0), NotBefore:(*jwt.NumericDate)(0xc0002597c8), IssuedAt:(*jwt.NumericDate)(0xc0002597a8), ID:"7a444cb6-2d8a-415c-9769-37ef52804ccf"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8585", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"db44884b-988d-4dba-b613-5007afcc2122"}}}

  I1228 12:54:46.880271 19 service_accounts.go:638] completed pod
  I1228 12:54:46.887556 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8585" for this suite. @ 12/28/24 12:54:46.891
• [34.090 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/28/24 12:54:46.9
  I1228 12:54:46.900235 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-runtime @ 12/28/24 12:54:46.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:54:46.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:54:46.919
  STEP: create the container @ 12/28/24 12:54:46.922
  W1228 12:54:46.929578      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/28/24 12:54:46.929
  E1228 12:54:47.471900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:48.472769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:49.473471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/28/24 12:54:49.952
  STEP: the container should be terminated @ 12/28/24 12:54:49.958
  STEP: the termination message should be set @ 12/28/24 12:54:49.958
  I1228 12:54:49.958106 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/28/24 12:54:49.958
  I1228 12:54:49.973624 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9069" for this suite. @ 12/28/24 12:54:49.978
• [3.086 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/28/24 12:54:49.986
  I1228 12:54:49.986528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 12:54:49.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:54:50.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:54:50.006
  STEP: Creating pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377 @ 12/28/24 12:54:50.009
  E1228 12:54:50.474452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:51.474546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 12:54:52.031
  I1228 12:54:52.035097 19 container_probe.go:1749] Initial restart count of pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e is 0
  I1228 12:54:52.038397 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:54:52.474811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:53.474937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:54.045642 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:54:54.475024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:55.475114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:56.051194 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:54:56.475743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:57.475917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:54:58.055889 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:54:58.476370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:54:59.477182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:00.061848 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:00.477278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:01.477484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:02.068518 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:02.478097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:03.478310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:04.074705 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:04.479181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:05.479276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:06.079242 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:06.479679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:07.479782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:08.084470 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:08.479900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:09.480024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:10.090535 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:10.481072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:11.481161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:12.096959 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:12.481381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:13.481567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:14.101723 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:14.482287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:15.482425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:16.107887 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:16.483369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:17.483470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:18.112701 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:18.483858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:19.484077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:20.118819 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:20.484189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:21.484255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:22.123388 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:22.484869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:23.484966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:24.129376 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:24.485865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:25.485964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:26.135793 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:26.486466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:27.486768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:28.142697 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:28.486866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:29.487118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:30.148600 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:30.488009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:31.488204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:32.153172 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:32.488585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:33.488780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:34.158433 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:34.488872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:35.489051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:36.164668 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:36.490052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:37.490163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:38.170457 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:38.490828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:39.491068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:40.176476 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  E1228 12:55:40.491907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:41.492024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:42.181300 19 container_probe.go:1759] Get pod busybox-c65586f8-daa4-4396-80ae-7158bc713c0e in namespace container-probe-1377
  I1228 12:55:42.181337 19 container_probe.go:1763] Restart count of pod container-probe-1377/busybox-c65586f8-daa4-4396-80ae-7158bc713c0e is now 1 (50.146216261s elapsed)
  STEP: deleting the pod @ 12/28/24 12:55:42.181
  I1228 12:55:42.194624 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1377" for this suite. @ 12/28/24 12:55:42.198
• [52.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 12/28/24 12:55:42.211
  I1228 12:55:42.211148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 12:55:42.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:55:42.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:55:42.234
  STEP: Creating a job @ 12/28/24 12:55:42.237
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/28/24 12:55:42.245
  E1228 12:55:42.492861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:43.493158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/28/24 12:55:44.25
  STEP: updating /status @ 12/28/24 12:55:44.26
  STEP: get /status @ 12/28/24 12:55:44.269
  I1228 12:55:44.273981 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9602" for this suite. @ 12/28/24 12:55:44.279
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/28/24 12:55:44.288
  I1228 12:55:44.288855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename namespaces @ 12/28/24 12:55:44.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:55:44.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:55:44.307
  STEP: creating a Namespace @ 12/28/24 12:55:44.31
  STEP: patching the Namespace @ 12/28/24 12:55:44.325
  STEP: get the Namespace and ensuring it has the label @ 12/28/24 12:55:44.333
  I1228 12:55:44.336111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7656" for this suite. @ 12/28/24 12:55:44.34
  STEP: Destroying namespace "nspatchtest-63b4d0a8-537e-4321-acf2-ce23c37fe173-6892" for this suite. @ 12/28/24 12:55:44.347
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/28/24 12:55:44.354
  I1228 12:55:44.354548 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename proxy @ 12/28/24 12:55:44.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:55:44.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:55:44.372
  STEP: starting an echo server on multiple ports @ 12/28/24 12:55:44.385
  STEP: creating replication controller proxy-service-v4nmg in namespace proxy-824 @ 12/28/24 12:55:44.385
  I1228 12:55:44.393110      19 runners.go:193] Created replication controller with name: proxy-service-v4nmg, namespace: proxy-824, replica count: 1
  E1228 12:55:44.493960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:45.443948      19 runners.go:193] proxy-service-v4nmg Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1228 12:55:45.494125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:46.444781      19 runners.go:193] proxy-service-v4nmg Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 12:55:46.450697 19 proxy.go:230] setup took 2.075336948s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/28/24 12:55:46.45
  I1228 12:55:46.456593 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.635498ms)
  I1228 12:55:46.456761 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 5.985469ms)
  I1228 12:55:46.460028 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 9.117905ms)
  I1228 12:55:46.461061 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 9.976598ms)
  I1228 12:55:46.461079 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 9.755903ms)
  I1228 12:55:46.461078 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 9.772066ms)
  I1228 12:55:46.461093 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 9.906359ms)
  I1228 12:55:46.463125 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 11.862726ms)
  I1228 12:55:46.463367 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 12.202918ms)
  I1228 12:55:46.463368 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 12.084844ms)
  I1228 12:55:46.463787 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 12.789811ms)
  I1228 12:55:46.464111 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 13.247151ms)
  I1228 12:55:46.464230 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 13.209245ms)
  I1228 12:55:46.464240 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 13.021972ms)
  I1228 12:55:46.464266 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 13.121825ms)
  I1228 12:55:46.464402 19 proxy.go:558] (0) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 13.162482ms)
  I1228 12:55:46.469128 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 4.564093ms)
  I1228 12:55:46.469213 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 4.507308ms)
  I1228 12:55:46.469285 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.617919ms)
  I1228 12:55:46.469570 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 4.962742ms)
  I1228 12:55:46.469583 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.139434ms)
  I1228 12:55:46.469588 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.051931ms)
  I1228 12:55:46.469842 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.295189ms)
  I1228 12:55:46.470525 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 6.098573ms)
  I1228 12:55:46.470888 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 6.402594ms)
  I1228 12:55:46.471331 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 6.739487ms)
  I1228 12:55:46.471511 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 6.82607ms)
  I1228 12:55:46.471862 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.349798ms)
  I1228 12:55:46.471864 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.241496ms)
  I1228 12:55:46.472085 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 7.36502ms)
  I1228 12:55:46.472570 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.994563ms)
  I1228 12:55:46.473557 19 proxy.go:558] (1) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 8.920144ms)
  I1228 12:55:46.477695 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 4.065513ms)
  I1228 12:55:46.477834 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 4.222896ms)
  I1228 12:55:46.478382 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.605724ms)
  I1228 12:55:46.478761 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.117993ms)
  I1228 12:55:46.478933 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 5.095206ms)
  I1228 12:55:46.478936 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 5.255873ms)
  I1228 12:55:46.479084 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 5.50039ms)
  I1228 12:55:46.479965 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 6.239416ms)
  I1228 12:55:46.480259 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.680114ms)
  I1228 12:55:46.480493 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 6.735495ms)
  I1228 12:55:46.480506 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.699938ms)
  I1228 12:55:46.480725 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 7.013947ms)
  I1228 12:55:46.481221 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.402927ms)
  I1228 12:55:46.481345 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 7.556307ms)
  I1228 12:55:46.481729 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 8.032896ms)
  I1228 12:55:46.482695 19 proxy.go:558] (2) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 8.95678ms)
  I1228 12:55:46.486411 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 3.636145ms)
  I1228 12:55:46.487490 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 4.5715ms)
  I1228 12:55:46.487507 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 4.572899ms)
  I1228 12:55:46.487692 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.882226ms)
  I1228 12:55:46.488076 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 5.249585ms)
  I1228 12:55:46.488315 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.519258ms)
  I1228 12:55:46.488328 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.470292ms)
  I1228 12:55:46.489005 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 6.056552ms)
  I1228 12:55:46.489786 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 7.035051ms)
  I1228 12:55:46.490057 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 7.215345ms)
  I1228 12:55:46.490235 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.347578ms)
  I1228 12:55:46.490378 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 7.661766ms)
  I1228 12:55:46.490452 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.724025ms)
  I1228 12:55:46.490578 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 7.675285ms)
  I1228 12:55:46.491170 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 8.206422ms)
  I1228 12:55:46.491183 19 proxy.go:558] (3) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 8.30824ms)
  E1228 12:55:46.494679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:46.495112 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 3.865783ms)
  I1228 12:55:46.495886 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 4.517375ms)
  I1228 12:55:46.496035 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.61941ms)
  I1228 12:55:46.496318 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 5.119069ms)
  I1228 12:55:46.496472 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.148988ms)
  I1228 12:55:46.497133 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 5.825576ms)
  I1228 12:55:46.497520 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.073742ms)
  I1228 12:55:46.497980 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.502618ms)
  I1228 12:55:46.497997 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.663129ms)
  I1228 12:55:46.498068 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 6.608029ms)
  I1228 12:55:46.498243 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 6.842623ms)
  I1228 12:55:46.498263 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 6.995059ms)
  I1228 12:55:46.499421 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 8.036375ms)
  I1228 12:55:46.499435 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 8.084465ms)
  I1228 12:55:46.500509 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 9.219591ms)
  I1228 12:55:46.501539 19 proxy.go:558] (4) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 10.106096ms)
  I1228 12:55:46.505898 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 4.267232ms)
  I1228 12:55:46.506096 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.529042ms)
  I1228 12:55:46.506535 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 4.75581ms)
  I1228 12:55:46.506838 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.100338ms)
  I1228 12:55:46.507477 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 5.678728ms)
  I1228 12:55:46.507748 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 5.98276ms)
  I1228 12:55:46.508018 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.189919ms)
  I1228 12:55:46.508065 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 6.315043ms)
  I1228 12:55:46.508396 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 6.665569ms)
  I1228 12:55:46.508827 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 6.969707ms)
  I1228 12:55:46.508944 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 7.266776ms)
  I1228 12:55:46.509104 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.26183ms)
  I1228 12:55:46.509136 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.44561ms)
  I1228 12:55:46.509735 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 8.120045ms)
  I1228 12:55:46.510139 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 8.431987ms)
  I1228 12:55:46.510980 19 proxy.go:558] (5) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 9.166826ms)
  I1228 12:55:46.515450 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 4.297616ms)
  I1228 12:55:46.515456 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 4.290573ms)
  I1228 12:55:46.516460 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.223561ms)
  I1228 12:55:46.516464 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 5.256225ms)
  I1228 12:55:46.516605 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.562358ms)
  I1228 12:55:46.516681 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.57566ms)
  I1228 12:55:46.516818 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 5.68077ms)
  I1228 12:55:46.517479 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.419212ms)
  I1228 12:55:46.518115 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 6.924269ms)
  I1228 12:55:46.518384 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 7.386847ms)
  I1228 12:55:46.518384 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 7.260969ms)
  I1228 12:55:46.518450 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.229255ms)
  I1228 12:55:46.518454 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.437801ms)
  I1228 12:55:46.518587 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 7.503318ms)
  I1228 12:55:46.519468 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 8.28873ms)
  I1228 12:55:46.519540 19 proxy.go:558] (6) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 8.292915ms)
  I1228 12:55:46.523434 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 3.790686ms)
  I1228 12:55:46.524845 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 5.135685ms)
  I1228 12:55:46.524845 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.049344ms)
  I1228 12:55:46.524864 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 5.284429ms)
  I1228 12:55:46.525017 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.283705ms)
  I1228 12:55:46.525017 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 5.399892ms)
  I1228 12:55:46.526022 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 6.301177ms)
  I1228 12:55:46.526345 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.776499ms)
  I1228 12:55:46.526616 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 6.795858ms)
  I1228 12:55:46.526756 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.950945ms)
  I1228 12:55:46.526758 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.97934ms)
  I1228 12:55:46.526769 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.935811ms)
  I1228 12:55:46.527175 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.503814ms)
  I1228 12:55:46.527495 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 7.803641ms)
  I1228 12:55:46.527627 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 7.880942ms)
  I1228 12:55:46.528666 19 proxy.go:558] (7) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 8.901331ms)
  I1228 12:55:46.532428 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 3.699754ms)
  I1228 12:55:46.532428 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 3.738268ms)
  I1228 12:55:46.533319 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 4.39647ms)
  I1228 12:55:46.533352 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.563243ms)
  I1228 12:55:46.533995 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 5.233474ms)
  I1228 12:55:46.534235 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.388076ms)
  I1228 12:55:46.534891 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.939314ms)
  I1228 12:55:46.535145 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.274944ms)
  I1228 12:55:46.535214 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.213896ms)
  I1228 12:55:46.535443 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.504964ms)
  I1228 12:55:46.535443 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 6.559309ms)
  I1228 12:55:46.536191 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.384926ms)
  I1228 12:55:46.536279 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 7.295676ms)
  I1228 12:55:46.536553 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 7.723544ms)
  I1228 12:55:46.537065 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 8.159768ms)
  I1228 12:55:46.537556 19 proxy.go:558] (8) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 8.587742ms)
  I1228 12:55:46.541514 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 3.926664ms)
  I1228 12:55:46.542300 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 4.54811ms)
  I1228 12:55:46.542314 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 4.530558ms)
  I1228 12:55:46.542671 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.085824ms)
  I1228 12:55:46.542671 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 4.847571ms)
  I1228 12:55:46.543551 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 5.857413ms)
  I1228 12:55:46.544020 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.402682ms)
  I1228 12:55:46.544033 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 6.194992ms)
  I1228 12:55:46.544198 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.478828ms)
  I1228 12:55:46.544546 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 6.777042ms)
  I1228 12:55:46.545188 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 7.511402ms)
  I1228 12:55:46.546786 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 9.146383ms)
  I1228 12:55:46.546894 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 9.187748ms)
  I1228 12:55:46.546959 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 9.148774ms)
  I1228 12:55:46.547048 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 9.249793ms)
  I1228 12:55:46.547960 19 proxy.go:558] (9) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 10.227402ms)
  I1228 12:55:46.552226 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 4.230345ms)
  I1228 12:55:46.552845 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 4.802169ms)
  I1228 12:55:46.552979 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 4.919796ms)
  I1228 12:55:46.553361 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 5.342743ms)
  I1228 12:55:46.553393 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 5.302017ms)
  I1228 12:55:46.553593 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.613837ms)
  I1228 12:55:46.554555 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.405098ms)
  I1228 12:55:46.554571 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 6.465158ms)
  I1228 12:55:46.554700 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.625525ms)
  I1228 12:55:46.554858 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.632142ms)
  I1228 12:55:46.555294 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 7.157589ms)
  I1228 12:55:46.555327 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.157176ms)
  I1228 12:55:46.559579 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 11.378952ms)
  I1228 12:55:46.559604 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 11.481075ms)
  I1228 12:55:46.560102 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 11.888004ms)
  I1228 12:55:46.561371 19 proxy.go:558] (10) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 13.185732ms)
  I1228 12:55:46.576169 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 14.766089ms)
  I1228 12:55:46.579293 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 17.817866ms)
  I1228 12:55:46.579293 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 17.799339ms)
  I1228 12:55:46.579466 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 17.960479ms)
  I1228 12:55:46.581001 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 19.295321ms)
  I1228 12:55:46.581283 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 19.664459ms)
  I1228 12:55:46.587048 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 25.441829ms)
  I1228 12:55:46.587077 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 25.383939ms)
  I1228 12:55:46.587088 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 25.501014ms)
  I1228 12:55:46.587093 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 25.539204ms)
  I1228 12:55:46.587100 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 25.641586ms)
  I1228 12:55:46.587103 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 25.529718ms)
  I1228 12:55:46.587108 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 25.473225ms)
  I1228 12:55:46.587378 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 25.858209ms)
  I1228 12:55:46.587480 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 25.81833ms)
  I1228 12:55:46.588612 19 proxy.go:558] (11) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 26.932762ms)
  I1228 12:55:46.596099 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 7.464809ms)
  I1228 12:55:46.597472 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 8.627645ms)
  I1228 12:55:46.598208 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 9.433555ms)
  I1228 12:55:46.598211 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 9.470822ms)
  I1228 12:55:46.598479 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 9.817917ms)
  I1228 12:55:46.598594 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 9.769138ms)
  I1228 12:55:46.598608 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 9.748486ms)
  I1228 12:55:46.598619 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 9.867226ms)
  I1228 12:55:46.598608 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 9.735718ms)
  I1228 12:55:46.599185 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 10.256845ms)
  I1228 12:55:46.599814 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 11.009268ms)
  I1228 12:55:46.600543 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 11.831226ms)
  I1228 12:55:46.601751 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 12.961952ms)
  I1228 12:55:46.601758 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 13.072052ms)
  I1228 12:55:46.601876 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 12.984155ms)
  I1228 12:55:46.602416 19 proxy.go:558] (12) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 13.506914ms)
  I1228 12:55:46.613292 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 10.70115ms)
  I1228 12:55:46.613292 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 10.594159ms)
  I1228 12:55:46.613356 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 10.87395ms)
  I1228 12:55:46.613391 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 10.959132ms)
  I1228 12:55:46.613430 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 10.801842ms)
  I1228 12:55:46.613760 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 11.048409ms)
  I1228 12:55:46.613795 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 11.054568ms)
  I1228 12:55:46.614320 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 11.710222ms)
  I1228 12:55:46.614615 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 12.04459ms)
  I1228 12:55:46.615323 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 12.547247ms)
  I1228 12:55:46.615327 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 12.816828ms)
  I1228 12:55:46.616844 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 14.28826ms)
  I1228 12:55:46.616975 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 14.313693ms)
  I1228 12:55:46.617898 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 15.175081ms)
  I1228 12:55:46.623345 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 20.668223ms)
  I1228 12:55:46.623367 19 proxy.go:558] (13) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 20.605835ms)
  I1228 12:55:46.635166 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 11.701076ms)
  I1228 12:55:46.635171 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 11.60349ms)
  I1228 12:55:46.635297 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 11.801084ms)
  I1228 12:55:46.637794 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 14.07534ms)
  I1228 12:55:46.638572 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 14.925977ms)
  I1228 12:55:46.638590 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 14.961304ms)
  I1228 12:55:46.638601 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 15.213884ms)
  I1228 12:55:46.638628 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 14.949502ms)
  I1228 12:55:46.639331 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 15.630493ms)
  I1228 12:55:46.640418 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 16.882348ms)
  I1228 12:55:46.640941 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 17.328143ms)
  I1228 12:55:46.641906 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 18.306361ms)
  I1228 12:55:46.641978 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 18.428033ms)
  I1228 12:55:46.642220 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 18.487229ms)
  I1228 12:55:46.642541 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 19.016844ms)
  I1228 12:55:46.642972 19 proxy.go:558] (14) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 19.38526ms)
  I1228 12:55:46.648352 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.350444ms)
  I1228 12:55:46.649506 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.321831ms)
  I1228 12:55:46.651336 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 8.169086ms)
  I1228 12:55:46.652456 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 9.329045ms)
  I1228 12:55:46.653003 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 9.96104ms)
  I1228 12:55:46.655083 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 12.089044ms)
  I1228 12:55:46.658119 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 14.96553ms)
  I1228 12:55:46.658145 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 15.121262ms)
  I1228 12:55:46.659302 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 16.094395ms)
  I1228 12:55:46.661362 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 18.301777ms)
  I1228 12:55:46.661391 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 18.155528ms)
  I1228 12:55:46.661399 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 18.287687ms)
  I1228 12:55:46.661829 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 18.577124ms)
  I1228 12:55:46.662566 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 19.48814ms)
  I1228 12:55:46.663040 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 19.826947ms)
  I1228 12:55:46.663594 19 proxy.go:558] (15) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 20.499874ms)
  I1228 12:55:46.669286 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.51404ms)
  I1228 12:55:46.669296 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 5.5471ms)
  I1228 12:55:46.670550 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 6.882531ms)
  I1228 12:55:46.670637 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.852736ms)
  I1228 12:55:46.670751 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.925759ms)
  I1228 12:55:46.670826 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 7.141024ms)
  I1228 12:55:46.671455 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 7.749597ms)
  I1228 12:55:46.672265 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 8.454246ms)
  I1228 12:55:46.672278 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 8.666117ms)
  I1228 12:55:46.672869 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 9.069839ms)
  I1228 12:55:46.673471 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 9.716527ms)
  I1228 12:55:46.673486 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 9.863679ms)
  I1228 12:55:46.673938 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 10.072039ms)
  I1228 12:55:46.674550 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 10.698109ms)
  I1228 12:55:46.674641 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 10.803327ms)
  I1228 12:55:46.675619 19 proxy.go:558] (16) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 11.897023ms)
  I1228 12:55:46.679964 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 4.217866ms)
  I1228 12:55:46.680513 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 4.591837ms)
  I1228 12:55:46.680593 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 4.747319ms)
  I1228 12:55:46.681085 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 5.278476ms)
  I1228 12:55:46.681129 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.255528ms)
  I1228 12:55:46.681351 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 5.672642ms)
  I1228 12:55:46.681598 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 5.887969ms)
  I1228 12:55:46.681642 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 6.007841ms)
  I1228 12:55:46.682295 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 6.390092ms)
  I1228 12:55:46.682311 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 6.377238ms)
  I1228 12:55:46.682503 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 6.727699ms)
  I1228 12:55:46.682579 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 6.78909ms)
  I1228 12:55:46.682580 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 6.81877ms)
  I1228 12:55:46.683386 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 7.496532ms)
  I1228 12:55:46.683847 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 7.989142ms)
  I1228 12:55:46.684250 19 proxy.go:558] (17) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 8.408237ms)
  I1228 12:55:46.688248 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 3.960922ms)
  I1228 12:55:46.688452 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 4.000145ms)
  I1228 12:55:46.688614 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 4.201832ms)
  I1228 12:55:46.688614 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 4.251551ms)
  I1228 12:55:46.688865 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 4.346712ms)
  I1228 12:55:46.689760 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 5.427251ms)
  I1228 12:55:46.689771 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 5.205677ms)
  I1228 12:55:46.690231 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 5.836228ms)
  I1228 12:55:46.690901 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.369383ms)
  I1228 12:55:46.690905 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 6.476715ms)
  I1228 12:55:46.691252 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 6.783424ms)
  I1228 12:55:46.691264 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 6.762006ms)
  I1228 12:55:46.692245 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 7.698704ms)
  I1228 12:55:46.692312 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 7.824506ms)
  I1228 12:55:46.692549 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.965497ms)
  I1228 12:55:46.693240 19 proxy.go:558] (18) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 8.934197ms)
  I1228 12:55:46.697219 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:462/proxy/: tls qux (200; 3.871515ms)
  I1228 12:55:46.697690 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:443/proxy/tlsrewriteme... (200; 4.359352ms)
  I1228 12:55:46.698200 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 4.712593ms)
  I1228 12:55:46.698273 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 4.816755ms)
  I1228 12:55:46.698608 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:160/proxy/: foo (200; 5.176038ms)
  I1228 12:55:46.698668 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/http:proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">t... (200; 5.270886ms)
  I1228 12:55:46.699129 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:162/proxy/: bar (200; 5.841265ms)
  I1228 12:55:46.699541 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname1/proxy/: foo (200; 6.232788ms)
  I1228 12:55:46.699699 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname2/proxy/: tls qux (200; 6.443663ms)
  I1228 12:55:46.700283 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/https:proxy-service-v4nmg-l5jqj:460/proxy/: tls baz (200; 6.780666ms)
  I1228 12:55:46.700553 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj:1080/proxy/rewriteme">test</... (200; 7.190171ms)
  I1228 12:55:46.700565 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/: <a href="/api/v1/namespaces/proxy-824/pods/proxy-service-v4nmg-l5jqj/proxy/rewriteme">test</a> (200; 7.094896ms)
  I1228 12:55:46.700568 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname1/proxy/: foo (200; 7.30855ms)
  I1228 12:55:46.701183 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/services/https:proxy-service-v4nmg:tlsportname1/proxy/: tls baz (200; 7.771312ms)
  I1228 12:55:46.701304 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/services/proxy-service-v4nmg:portname2/proxy/: bar (200; 7.866114ms)
  I1228 12:55:46.702392 19 proxy.go:558] (19) /api/v1/namespaces/proxy-824/services/http:proxy-service-v4nmg:portname2/proxy/: bar (200; 9.010783ms)
  STEP: deleting ReplicationController proxy-service-v4nmg in namespace proxy-824, will wait for the garbage collector to delete the pods @ 12/28/24 12:55:46.702
  I1228 12:55:46.766163 19 resources.go:139] Deleting ReplicationController proxy-service-v4nmg took: 10.583531ms
  I1228 12:55:46.866888 19 resources.go:163] Terminating ReplicationController proxy-service-v4nmg pods took: 100.717634ms
  E1228 12:55:47.495415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:48.495973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:55:49.068024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-824" for this suite. @ 12/28/24 12:55:49.072
• [4.727 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/28/24 12:55:49.081
  I1228 12:55:49.081762 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 12:55:49.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:55:49.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:55:49.101
  STEP: Creating secret with name secret-test-59670caa-946f-4e24-9675-c596c63a4938 @ 12/28/24 12:55:49.104
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:55:49.111
  E1228 12:55:49.496911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:50.497869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:51.498936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:52.499116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:55:53.132
  I1228 12:55:53.137579 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-secrets-45ec192f-fb03-4994-8898-dd132801549f container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:55:53.145
  I1228 12:55:53.164578 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6203" for this suite. @ 12/28/24 12:55:53.169
• [4.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/28/24 12:55:53.177
  I1228 12:55:53.177189 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:55:53.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:55:53.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:55:53.197
  STEP: Creating projection with secret that has name projected-secret-test-map-f1f8c90f-679d-4ca5-8089-aec94262902e @ 12/28/24 12:55:53.201
  STEP: Creating a pod to test consume secrets @ 12/28/24 12:55:53.206
  E1228 12:55:53.499359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:54.500415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:55:55.227
  I1228 12:55:55.230802 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-secrets-f4418374-510f-486a-af2c-d1363bc54b61 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 12:55:55.237
  I1228 12:55:55.257917 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3956" for this suite. @ 12/28/24 12:55:55.263
• [2.094 seconds]
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/28/24 12:55:55.27
  I1228 12:55:55.270757 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 12:55:55.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:55:55.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:55:55.288
  STEP: Creating configMap with name configmap-test-upd-13584edc-8783-4a78-ade6-a41bb1a92a47 @ 12/28/24 12:55:55.296
  STEP: Creating the pod @ 12/28/24 12:55:55.3
  E1228 12:55:55.501116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:56.501318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-13584edc-8783-4a78-ade6-a41bb1a92a47 @ 12/28/24 12:55:57.332
  STEP: waiting to observe update in volume @ 12/28/24 12:55:57.339
  E1228 12:55:57.501489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:58.501623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:55:59.501915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:00.502115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:01.503001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:02.503146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:03.504152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:04.505182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:05.505872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:06.506008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:07.506317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:08.506415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:09.506878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:10.507012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:11.507544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:12.507684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:13.508334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:14.508552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:15.509319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:16.509436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:17.509729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:18.509949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:19.510393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:20.510538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:21.510754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:22.510888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:23.511900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:24.512055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:25.513080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:26.513878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:27.514540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:28.514795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:29.515588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:30.515878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:31.516816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:32.517021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:33.517306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:34.518255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:35.518598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:36.519054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:37.519255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:38.519735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:39.520008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:40.520495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:41.521501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:42.522433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:43.522707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:44.523246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:45.523465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:46.524369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:47.524559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:48.524675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:49.524797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:50.524898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:51.525878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:52.525959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:53.526070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:54.526194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:55.526849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:56.526968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:57.527173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:58.527845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:56:59.528862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:00.528981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:01.529071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:02.529192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:03.529320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:04.529860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:05.529996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:06.530138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:07.530235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:08.530353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:09.530437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:10.530549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:11.530773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:12.531409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:13.531621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:14.531742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:15.531948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:16.532066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:17.532176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:18.532285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:19.533251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:20.533310      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:21.533414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:57:21.750878 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2647" for this suite. @ 12/28/24 12:57:21.755
• [86.494 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/28/24 12:57:21.765
  I1228 12:57:21.765167 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename containers @ 12/28/24 12:57:21.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:21.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:21.786
  STEP: Creating a pod to test override arguments @ 12/28/24 12:57:21.789
  E1228 12:57:22.533877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:23.533940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:24.534051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:25.534152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:57:25.815
  I1228 12:57:25.820244 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod client-containers-46dce784-3833-4349-80bb-daf31fa9e749 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:57:25.826
  I1228 12:57:25.851514 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1922" for this suite. @ 12/28/24 12:57:25.857
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/28/24 12:57:25.867
  I1228 12:57:25.867136 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/28/24 12:57:25.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:25.937
  I1228 12:57:25.940457 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 12:57:26.534919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:27.535831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:28.536468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:57:29.031197 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5934" for this suite. @ 12/28/24 12:57:29.037
• [3.179 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 12/28/24 12:57:29.046
  I1228 12:57:29.046367 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename disruption @ 12/28/24 12:57:29.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:29.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:29.063
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:57:29.071
  E1228 12:57:29.536861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:30.536976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 12/28/24 12:57:31.075
  STEP: Waiting for all pods to be running @ 12/28/24 12:57:31.083
  I1228 12:57:31.093395 19 disruption.go:691] running pods: 0 < 1
  E1228 12:57:31.537874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:32.537966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/28/24 12:57:33.089
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:57:33.104
  STEP: Patching PodDisruptionBudget status @ 12/28/24 12:57:33.113
  STEP: Waiting for the pdb to be processed @ 12/28/24 12:57:33.121
  I1228 12:57:33.126780 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4905" for this suite. @ 12/28/24 12:57:33.13
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/28/24 12:57:33.138
  I1228 12:57:33.138455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename apf @ 12/28/24 12:57:33.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:33.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:33.158
  STEP: getting /apis @ 12/28/24 12:57:33.163
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/28/24 12:57:33.166
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/28/24 12:57:33.167
  STEP: creating @ 12/28/24 12:57:33.169
  STEP: getting @ 12/28/24 12:57:33.187
  STEP: listing @ 12/28/24 12:57:33.192
  STEP: watching @ 12/28/24 12:57:33.196
  I1228 12:57:33.196453 19 flowcontrol.go:394] starting watch
  STEP: patching @ 12/28/24 12:57:33.197
  STEP: updating @ 12/28/24 12:57:33.202
  I1228 12:57:33.213701 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 12/28/24 12:57:33.213
  STEP: patching /status @ 12/28/24 12:57:33.217
  STEP: updating /status @ 12/28/24 12:57:33.225
  STEP: deleting @ 12/28/24 12:57:33.237
  STEP: deleting a collection @ 12/28/24 12:57:33.251
  I1228 12:57:33.273095 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6775" for this suite. @ 12/28/24 12:57:33.276
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/28/24 12:57:33.284
  I1228 12:57:33.284359 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:57:33.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:33.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:33.302
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:57:33.306
  E1228 12:57:33.538827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:34.539865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:35.540539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:36.540743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:57:37.333
  I1228 12:57:37.338059 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod downwardapi-volume-30e36097-9a6a-4863-8e47-82c0feee868d container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:57:37.35
  I1228 12:57:37.371424 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5733" for this suite. @ 12/28/24 12:57:37.375
• [4.099 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/28/24 12:57:37.383
  I1228 12:57:37.383592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 12:57:37.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:37.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:37.402
  STEP: Creating a pod to test substitution in container's args @ 12/28/24 12:57:37.405
  E1228 12:57:37.541697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:38.541873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:57:39.426
  I1228 12:57:39.431089 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod var-expansion-4a6a543b-1de8-48bb-8bb2-625adea92dd6 container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 12:57:39.438
  I1228 12:57:39.457405 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3697" for this suite. @ 12/28/24 12:57:39.462
• [2.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/28/24 12:57:39.472
  I1228 12:57:39.472518 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename proxy @ 12/28/24 12:57:39.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:39.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:39.5
  I1228 12:57:39.504960 19 proxy.go:387] Creating pod...
  E1228 12:57:39.542357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:40.542541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:57:41.533025 19 proxy.go:411] Creating service...
  E1228 12:57:41.543188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:57:41.546969 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=DELETE
  I1228 12:57:41.556069 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1228 12:57:41.556097 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=OPTIONS
  I1228 12:57:41.560727 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1228 12:57:41.560752 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=PATCH
  I1228 12:57:41.566230 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1228 12:57:41.566256 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=POST
  I1228 12:57:41.569964 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1228 12:57:41.569988 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=PUT
  I1228 12:57:41.573723 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1228 12:57:41.573746 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=DELETE
  I1228 12:57:41.580118 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1228 12:57:41.580147 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1228 12:57:41.585063 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1228 12:57:41.585085 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=PATCH
  I1228 12:57:41.591659 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1228 12:57:41.591681 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=POST
  I1228 12:57:41.598155 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1228 12:57:41.598181 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=PUT
  I1228 12:57:41.603552 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1228 12:57:41.603573 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=GET
  I1228 12:57:41.606294 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1228 12:57:41.606317 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=GET
  I1228 12:57:41.613317 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1228 12:57:41.613352 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/pods/agnhost/proxy?method=HEAD
  I1228 12:57:41.616464 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1228 12:57:41.616517 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9454/services/e2e-proxy-test-service/proxy?method=HEAD
  I1228 12:57:41.621405 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1228 12:57:41.621585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9454" for this suite. @ 12/28/24 12:57:41.626
• [2.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/28/24 12:57:41.634
  I1228 12:57:41.634966 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sysctl @ 12/28/24 12:57:41.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:41.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:41.652
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/28/24 12:57:41.656
  STEP: Watching for error events or started pod @ 12/28/24 12:57:41.664
  E1228 12:57:42.543336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:43.543446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 12/28/24 12:57:43.669
  E1228 12:57:44.543460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:45.543557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 12/28/24 12:57:45.684
  STEP: Getting logs from the pod @ 12/28/24 12:57:45.684
  STEP: Checking that the sysctl is actually updated @ 12/28/24 12:57:45.69
  I1228 12:57:45.690639 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3747" for this suite. @ 12/28/24 12:57:45.696
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/28/24 12:57:45.704
  I1228 12:57:45.704613 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename volumeattachment @ 12/28/24 12:57:45.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:45.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:45.725
  STEP: Create VolumeAttachment "va-e2e-zbnk8" on node "ip-172-31-45-142" @ 12/28/24 12:57:45.733
  STEP: Get VolumeAttachment "va-e2e-zbnk8" on node "ip-172-31-45-142" @ 12/28/24 12:57:45.738
  STEP: Patch VolumeAttachment "va-e2e-zbnk8" on node "ip-172-31-45-142" @ 12/28/24 12:57:45.742
  STEP: List VolumeAttachments with "va-e2e-zbnk8=patched" label @ 12/28/24 12:57:45.747
  STEP: Delete VolumeAttachment "va-e2e-zbnk8" on node "ip-172-31-45-142" @ 12/28/24 12:57:45.75
  STEP: Confirm deletion of VolumeAttachment "va-e2e-zbnk8" on node "ip-172-31-45-142" @ 12/28/24 12:57:45.758
  STEP: Create VolumeAttachment "va-e2e-tz92v" on node "ip-172-31-65-66" @ 12/28/24 12:57:45.765
  STEP: Update the VolumeAttachment "va-e2e-tz92v" on node "ip-172-31-65-66" with label "va-e2e=updated" @ 12/28/24 12:57:45.77
  STEP: Create VolumeAttachment "va-e2e-jbmqv" on node "ip-172-31-87-122" @ 12/28/24 12:57:45.784
  STEP: Update the VolumeAttachment "va-e2e-jbmqv" on node "ip-172-31-87-122" with label "va-e2e=updated" @ 12/28/24 12:57:45.791
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/28/24 12:57:45.802
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/28/24 12:57:45.819
  I1228 12:57:45.822846 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8991" for this suite. @ 12/28/24 12:57:45.826
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 12/28/24 12:57:45.834
  I1228 12:57:45.834348 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 12:57:45.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:45.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:45.871
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/28/24 12:57:45.877
  I1228 12:57:45.877689 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-6618 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1228 12:57:45.933209 19 builder.go:146] stderr: ""
  I1228 12:57:45.933233 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/28/24 12:57:45.933
  I1228 12:57:45.949061 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-6618 delete pods e2e-test-httpd-pod'
  E1228 12:57:46.543781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:57:47.313114 19 builder.go:146] stderr: ""
  I1228 12:57:47.313151 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1228 12:57:47.313319 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6618" for this suite. @ 12/28/24 12:57:47.317
• [1.491 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 12/28/24 12:57:47.325
  I1228 12:57:47.325261 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 12:57:47.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:47.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:47.345
  STEP: Counting existing ResourceQuota @ 12/28/24 12:57:47.348
  E1228 12:57:47.544856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:48.544955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:49.545031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:50.545733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:51.546259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 12:57:52.353
  STEP: Ensuring resource quota status is calculated @ 12/28/24 12:57:52.359
  E1228 12:57:52.546860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:53.547014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 12/28/24 12:57:54.364
  STEP: Creating a NodePort Service @ 12/28/24 12:57:54.384
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/28/24 12:57:54.41
  STEP: Ensuring resource quota status captures service creation @ 12/28/24 12:57:54.432
  E1228 12:57:54.547822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:55.548866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 12/28/24 12:57:56.437
  STEP: Ensuring resource quota status released usage @ 12/28/24 12:57:56.483
  E1228 12:57:56.549580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:57:57.549789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:57:58.488517 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7833" for this suite. @ 12/28/24 12:57:58.494
• [11.176 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/28/24 12:57:58.501
  I1228 12:57:58.501235 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/28/24 12:57:58.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:58.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:58.526
  STEP: getting /apis @ 12/28/24 12:57:58.529
  STEP: getting /apis/storage.k8s.io @ 12/28/24 12:57:58.532
  STEP: getting /apis/storage.k8s.io/v1 @ 12/28/24 12:57:58.533
  STEP: creating @ 12/28/24 12:57:58.535
  E1228 12:57:58.550368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: watching @ 12/28/24 12:57:58.556
  I1228 12:57:58.556113 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/28/24 12:57:58.563
  STEP: listing in namespace @ 12/28/24 12:57:58.566
  STEP: listing across namespaces @ 12/28/24 12:57:58.571
  STEP: patching @ 12/28/24 12:57:58.575
  STEP: updating @ 12/28/24 12:57:58.58
  I1228 12:57:58.587373 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1228 12:57:58.587436 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/28/24 12:57:58.587
  STEP: deleting a collection @ 12/28/24 12:57:58.601
  I1228 12:57:58.621595 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6672" for this suite. @ 12/28/24 12:57:58.626
• [0.131 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/28/24 12:57:58.632
  I1228 12:57:58.632525 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename ingress @ 12/28/24 12:57:58.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:58.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:58.653
  STEP: getting /apis @ 12/28/24 12:57:58.656
  STEP: getting /apis/networking.k8s.io @ 12/28/24 12:57:58.659
  STEP: getting /apis/networking.k8s.iov1 @ 12/28/24 12:57:58.66
  STEP: creating @ 12/28/24 12:57:58.662
  STEP: getting @ 12/28/24 12:57:58.686
  STEP: listing @ 12/28/24 12:57:58.689
  STEP: watching @ 12/28/24 12:57:58.695
  I1228 12:57:58.695398 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/28/24 12:57:58.697
  STEP: cluster-wide watching @ 12/28/24 12:57:58.7
  I1228 12:57:58.700462 19 ingress.go:198] starting watch
  STEP: patching @ 12/28/24 12:57:58.701
  STEP: updating @ 12/28/24 12:57:58.71
  I1228 12:57:58.718796 19 ingress.go:221] waiting for watch events with expected annotations
  I1228 12:57:58.718986 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/28/24 12:57:58.719
  STEP: updating /status @ 12/28/24 12:57:58.726
  STEP: get /status @ 12/28/24 12:57:58.735
  STEP: deleting @ 12/28/24 12:57:58.742
  STEP: deleting a collection @ 12/28/24 12:57:58.767
  I1228 12:57:58.785113 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4075" for this suite. @ 12/28/24 12:57:58.788
• [0.163 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 12/28/24 12:57:58.796
  I1228 12:57:58.796240 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption @ 12/28/24 12:57:58.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:57:58.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:57:58.815
  I1228 12:57:58.833359 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 12:57:59.551414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:00.551727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:01.551892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:02.552775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:03.552889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:04.552981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:05.553866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:06.553932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:07.554049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:08.554133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:09.554330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:10.554422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:11.554873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:12.554950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:13.555071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:14.555170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:15.555859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:16.556848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:17.557062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:18.557177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:19.557868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:20.558036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:21.558161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:22.558296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:23.558454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:24.559301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:25.559441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:26.559561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:27.559721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:28.560563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:29.561614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:30.561803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:31.561990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:32.562217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:33.562781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:34.563838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:35.563885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:36.563913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:37.564767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:38.564855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:39.565839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:40.566837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:41.566940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:42.567848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:43.568422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:44.568670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:45.568780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:46.569839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:47.569933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:48.570832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:49.571839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:50.572060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:51.572262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:52.572840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:53.573734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:54.573781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:55.574264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:56.574319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:57.574771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:58:58.575839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:58:58.839243 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/28/24 12:58:58.844
  I1228 12:58:58.865471 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1228 12:58:58.872832 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1228 12:58:58.888759 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1228 12:58:58.898468 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1228 12:58:58.919806 19 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1228 12:58:58.930803 19 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/28/24 12:58:58.93
  E1228 12:58:59.576326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:00.576412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/28/24 12:59:00.966
  E1228 12:59:01.576826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:02.577048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:03.578023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:04.578139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:05.065118 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7961" for this suite. @ 12/28/24 12:59:05.07
• [66.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 12/28/24 12:59:05.082
  I1228 12:59:05.082491 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:59:05.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:05.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:05.107
  STEP: fetching services @ 12/28/24 12:59:05.111
  I1228 12:59:05.128111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1695" for this suite. @ 12/28/24 12:59:05.132
• [0.058 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/28/24 12:59:05.14
  I1228 12:59:05.140871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 12:59:05.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:05.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:05.211
  STEP: Creating configMap with name projected-configmap-test-volume-map-25011c58-0b4b-42de-86b8-8c3fde3ac7c9 @ 12/28/24 12:59:05.214
  STEP: Creating a pod to test consume configMaps @ 12/28/24 12:59:05.22
  E1228 12:59:05.578859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:06.578976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:07.579091      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:08.579297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:59:09.246
  I1228 12:59:09.250173 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-configmaps-f84e864c-5b08-4a50-b6b4-30f09d5e20a8 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 12:59:09.258
  I1228 12:59:09.277956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2868" for this suite. @ 12/28/24 12:59:09.283
• [4.151 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 12/28/24 12:59:09.291
  I1228 12:59:09.291623 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename security-context @ 12/28/24 12:59:09.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:09.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:09.313
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/28/24 12:59:09.316
  E1228 12:59:09.579401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:10.579526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:11.580124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:12.580238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:59:13.342
  I1228 12:59:13.345833 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod security-context-5d3c9a3e-59b3-4883-ba7b-1d10c52d7b2a container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:59:13.354
  I1228 12:59:13.373229 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5043" for this suite. @ 12/28/24 12:59:13.376
• [4.092 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/28/24 12:59:13.383
  I1228 12:59:13.384061 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename runtimeclass @ 12/28/24 12:59:13.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:13.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:13.404
  I1228 12:59:13.413695 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5040" for this suite. @ 12/28/24 12:59:13.418
• [0.043 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/28/24 12:59:13.427
  I1228 12:59:13.427499 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 12:59:13.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:13.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:13.445
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 12:59:13.448
  E1228 12:59:13.580321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:14.581327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:59:15.469
  I1228 12:59:15.472624 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-d38f320b-36e0-47c9-810e-c763865075e2 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 12:59:15.48
  I1228 12:59:15.498336 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-440" for this suite. @ 12/28/24 12:59:15.502
• [2.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 12/28/24 12:59:15.509
  I1228 12:59:15.509837 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 12:59:15.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:15.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:15.528
  STEP: creating service in namespace services-3231 @ 12/28/24 12:59:15.531
  STEP: creating service affinity-clusterip-transition in namespace services-3231 @ 12/28/24 12:59:15.531
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3231 @ 12/28/24 12:59:15.543
  I1228 12:59:15.550543      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-3231, replica count: 3
  E1228 12:59:15.581433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:16.582166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:17.582264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:18.582360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:18.602598      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 12:59:18.609121 19 resource.go:361] Creating new exec pod
  E1228 12:59:19.583258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:20.583351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:21.583442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:21.630746 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3231 exec execpod-affinity98zdq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1228 12:59:21.722936 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1228 12:59:21.722970 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:59:21.723030 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3231 exec execpod-affinity98zdq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.45 80'
  I1228 12:59:21.796776 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.45 80\nConnection to 10.152.183.45 80 port [tcp/http] succeeded!\n"
  I1228 12:59:21.796807 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 12:59:21.807148 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3231 exec execpod-affinity98zdq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.45:80/ ; done'
  I1228 12:59:21.942570 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n"
  I1228 12:59:21.942614 19 builder.go:147] stdout: "\naffinity-clusterip-transition-5pxzb\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-656vh\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-5pxzb\naffinity-clusterip-transition-656vh\naffinity-clusterip-transition-5pxzb\naffinity-clusterip-transition-656vh\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-5pxzb\naffinity-clusterip-transition-5pxzb\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-656vh\naffinity-clusterip-transition-5pxzb\naffinity-clusterip-transition-qslbq"
  I1228 12:59:21.942624 19 service.go:242] Received response from host: affinity-clusterip-transition-5pxzb
  I1228 12:59:21.942632 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:21.942638 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:21.942659 19 service.go:242] Received response from host: affinity-clusterip-transition-656vh
  I1228 12:59:21.942665 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:21.942672 19 service.go:242] Received response from host: affinity-clusterip-transition-5pxzb
  I1228 12:59:21.942677 19 service.go:242] Received response from host: affinity-clusterip-transition-656vh
  I1228 12:59:21.942683 19 service.go:242] Received response from host: affinity-clusterip-transition-5pxzb
  I1228 12:59:21.942689 19 service.go:242] Received response from host: affinity-clusterip-transition-656vh
  I1228 12:59:21.942694 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:21.942699 19 service.go:242] Received response from host: affinity-clusterip-transition-5pxzb
  I1228 12:59:21.942705 19 service.go:242] Received response from host: affinity-clusterip-transition-5pxzb
  I1228 12:59:21.942711 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:21.942719 19 service.go:242] Received response from host: affinity-clusterip-transition-656vh
  I1228 12:59:21.942724 19 service.go:242] Received response from host: affinity-clusterip-transition-5pxzb
  I1228 12:59:21.942730 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:21.952533 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3231 exec execpod-affinity98zdq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.45:80/ ; done'
  I1228 12:59:22.104064 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.45:80/\n"
  I1228 12:59:22.104104 19 builder.go:147] stdout: "\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq\naffinity-clusterip-transition-qslbq"
  I1228 12:59:22.104115 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104122 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104128 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104135 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104144 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104149 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104154 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104159 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104165 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104170 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104179 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104184 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104189 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104194 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104200 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104205 19 service.go:242] Received response from host: affinity-clusterip-transition-qslbq
  I1228 12:59:22.104284 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3231, will wait for the garbage collector to delete the pods @ 12/28/24 12:59:22.119
  I1228 12:59:22.183616 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 10.860492ms
  I1228 12:59:22.284599 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.979365ms
  E1228 12:59:22.584312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:23.584392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:24.584919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:25.406778 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3231" for this suite. @ 12/28/24 12:59:25.41
• [9.907 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 12/28/24 12:59:25.417
  I1228 12:59:25.417074 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename security-context @ 12/28/24 12:59:25.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:25.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:25.435
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/28/24 12:59:25.438
  E1228 12:59:25.585041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:26.585144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:27.586158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:28.586249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 12:59:29.462
  I1228 12:59:29.467414 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod security-context-edbc0284-e9cf-4b61-8632-32b0402efa5f container test-container: <nil>
  STEP: delete the pod @ 12/28/24 12:59:29.474
  I1228 12:59:29.491866 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1215" for this suite. @ 12/28/24 12:59:29.496
• [4.088 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/28/24 12:59:29.505
  I1228 12:59:29.505423 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 12:59:29.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:29.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:29.524
  I1228 12:59:29.527539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: creating the pod @ 12/28/24 12:59:29.527
  STEP: submitting the pod to kubernetes @ 12/28/24 12:59:29.527
  E1228 12:59:29.586786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:30.586962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:31.566997 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-68" for this suite. @ 12/28/24 12:59:31.571
• [2.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/28/24 12:59:31.58
  I1228 12:59:31.580580 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/28/24 12:59:31.581
  E1228 12:59:31.587723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:31.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:31.596
  STEP: Creating 50 configmaps @ 12/28/24 12:59:31.598
  STEP: Creating RC which spawns configmap-volume pods @ 12/28/24 12:59:31.878
  I1228 12:59:31.986396 19 resource.go:87] Pod name wrapped-volume-race-28a3a2f9-8463-47aa-abfb-5b9c86ef7299: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/28/24 12:59:31.986
  E1228 12:59:32.587916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:33.588057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 12/28/24 12:59:34.036
  I1228 12:59:34.050948 19 resource.go:87] Pod name wrapped-volume-race-2edd4a48-f6e0-4c32-b514-858836b096a0: Found 0 pods out of 5
  E1228 12:59:34.588814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:35.589047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:36.589336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:37.589454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:38.589537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:39.060396 19 resource.go:87] Pod name wrapped-volume-race-2edd4a48-f6e0-4c32-b514-858836b096a0: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/28/24 12:59:39.06
  STEP: Creating RC which spawns configmap-volume pods @ 12/28/24 12:59:39.084
  I1228 12:59:39.100967 19 resource.go:87] Pod name wrapped-volume-race-e41a4112-d324-4d65-a80f-fac3b9c0d12c: Found 0 pods out of 5
  E1228 12:59:39.589691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:40.589795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:41.590017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:42.590211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:43.590392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:44.112717 19 resource.go:87] Pod name wrapped-volume-race-e41a4112-d324-4d65-a80f-fac3b9c0d12c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/28/24 12:59:44.112
  STEP: deleting ReplicationController wrapped-volume-race-e41a4112-d324-4d65-a80f-fac3b9c0d12c in namespace emptydir-wrapper-4060, will wait for the garbage collector to delete the pods @ 12/28/24 12:59:44.139
  I1228 12:59:44.205909 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-e41a4112-d324-4d65-a80f-fac3b9c0d12c took: 7.796289ms
  I1228 12:59:44.306406 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-e41a4112-d324-4d65-a80f-fac3b9c0d12c pods took: 100.492836ms
  E1228 12:59:44.592097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:45.591828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2edd4a48-f6e0-4c32-b514-858836b096a0 in namespace emptydir-wrapper-4060, will wait for the garbage collector to delete the pods @ 12/28/24 12:59:45.707
  I1228 12:59:45.772592 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-2edd4a48-f6e0-4c32-b514-858836b096a0 took: 7.965952ms
  I1228 12:59:45.873074 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-2edd4a48-f6e0-4c32-b514-858836b096a0 pods took: 100.479837ms
  E1228 12:59:46.592306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-28a3a2f9-8463-47aa-abfb-5b9c86ef7299 in namespace emptydir-wrapper-4060, will wait for the garbage collector to delete the pods @ 12/28/24 12:59:47.573
  E1228 12:59:47.592834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:47.637625 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-28a3a2f9-8463-47aa-abfb-5b9c86ef7299 took: 7.632436ms
  I1228 12:59:47.738224 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-28a3a2f9-8463-47aa-abfb-5b9c86ef7299 pods took: 100.596836ms
  E1228 12:59:48.593559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 12/28/24 12:59:49.438
  E1228 12:59:49.594607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 12:59:49.792096 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4060" for this suite. @ 12/28/24 12:59:49.795
• [18.224 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 12/28/24 12:59:49.804
  I1228 12:59:49.804362 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 12:59:49.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 12:59:49.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 12:59:49.831
  STEP: Creating a ResourceQuota with terminating scope @ 12/28/24 12:59:49.836
  STEP: Ensuring ResourceQuota status is calculated @ 12/28/24 12:59:49.845
  E1228 12:59:50.594818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:51.595839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 12/28/24 12:59:51.852
  STEP: Ensuring ResourceQuota status is calculated @ 12/28/24 12:59:51.858
  E1228 12:59:52.595962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:53.596058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 12/28/24 12:59:53.863
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/28/24 12:59:53.877
  E1228 12:59:54.596177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:55.596341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/28/24 12:59:55.884
  E1228 12:59:56.596813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:57.597283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/28/24 12:59:57.891
  STEP: Ensuring resource quota status released the pod usage @ 12/28/24 12:59:57.908
  E1228 12:59:58.597372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 12:59:59.598341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 12/28/24 12:59:59.914
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/28/24 12:59:59.926
  E1228 13:00:00.598522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:01.598674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/28/24 13:00:01.933
  E1228 13:00:02.598834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:03.598940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/28/24 13:00:03.939
  STEP: Ensuring resource quota status released the pod usage @ 12/28/24 13:00:03.958
  E1228 13:00:04.599973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:05.600108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:05.963369 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3491" for this suite. @ 12/28/24 13:00:05.969
• [16.172 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/28/24 13:00:05.976
  I1228 13:00:05.976316 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/28/24 13:00:05.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:05.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:05.998
  STEP: creating a policy with variables @ 12/28/24 13:00:06.009
  STEP: waiting until the marker is denied @ 12/28/24 13:00:06.026
  STEP: testing a replicated Deployment to be allowed @ 12/28/24 13:00:06.436
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/28/24 13:00:06.454
  I1228 13:00:06.516549 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5533" for this suite. @ 12/28/24 13:00:06.525
• [0.559 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/28/24 13:00:06.535
  I1228 13:00:06.535585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 13:00:06.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:06.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:06.551
  STEP: Creating a pod to test substitution in volume subpath @ 12/28/24 13:00:06.555
  E1228 13:00:06.600895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:07.601114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:08.601920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:09.602043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:00:10.579
  I1228 13:00:10.582609 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod var-expansion-0aa76315-4232-4a41-b79a-b0a31672ea74 container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 13:00:10.601
  E1228 13:00:10.602279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:10.622299 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4802" for this suite. @ 12/28/24 13:00:10.627
• [4.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/28/24 13:00:10.635
  I1228 13:00:10.635413 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 13:00:10.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:10.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:10.654
  STEP: Creating service test in namespace statefulset-6442 @ 12/28/24 13:00:10.657
  I1228 13:00:10.682365 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1228 13:00:11.602559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:12.602787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:13.602966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:14.603238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:15.603355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:16.603412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:17.603593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:18.603814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:19.604847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:20.604968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:20.679673 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/28/24 13:00:20.689
  I1228 13:00:20.706728 19 wait.go:40] Found 1 stateful pods, waiting for 2
  E1228 13:00:21.605070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:22.605166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:23.605230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:24.605865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:25.606071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:26.606878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:27.607068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:28.607184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:29.607234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:30.607387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:30.708592 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:00:30.708634 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/28/24 13:00:30.716
  STEP: Delete all of the StatefulSets @ 12/28/24 13:00:30.721
  STEP: Verify that StatefulSets have been deleted @ 12/28/24 13:00:30.731
  I1228 13:00:30.735838 19 statefulset.go:138] Deleting all statefulset in ns statefulset-6442
  I1228 13:00:30.755312 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6442" for this suite. @ 12/28/24 13:00:30.763
• [20.137 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 12/28/24 13:00:30.772
  I1228 13:00:30.772720 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 13:00:30.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:30.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:30.799
  STEP: Looking for a node to schedule job pod @ 12/28/24 13:00:30.803
  STEP: Creating a job @ 12/28/24 13:00:30.806
  STEP: Ensuring job fails @ 12/28/24 13:00:30.814
  E1228 13:00:31.607457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:32.607700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:33.607795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:34.608024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:34.822600 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6967" for this suite. @ 12/28/24 13:00:34.828
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/28/24 13:00:34.836
  I1228 13:00:34.836381 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replication-controller @ 12/28/24 13:00:34.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:34.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:34.857
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/28/24 13:00:34.86
  E1228 13:00:35.608190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:36.608509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 12/28/24 13:00:36.887
  STEP: Then the orphan pod is adopted @ 12/28/24 13:00:36.895
  E1228 13:00:37.609021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:37.905665 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5073" for this suite. @ 12/28/24 13:00:37.91
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/28/24 13:00:37.918
  I1228 13:00:37.918279 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 13:00:37.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:37.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:37.938
  STEP: Creating a pod to test substitution in container's command @ 12/28/24 13:00:37.942
  E1228 13:00:38.609116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:39.609217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:00:39.967
  I1228 13:00:39.972612 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod var-expansion-0db481f8-3369-4737-ba67-0520a5d5043f container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 13:00:39.979
  I1228 13:00:39.995852 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1051" for this suite. @ 12/28/24 13:00:40.001
• [2.090 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 12/28/24 13:00:40.008
  I1228 13:00:40.008543 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:00:40.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:40.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:40.027
  STEP: Counting existing ResourceQuota @ 12/28/24 13:00:40.03
  E1228 13:00:40.609320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:41.610146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:42.611099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:43.611543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:44.611677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 13:00:45.034
  STEP: Ensuring resource quota status is calculated @ 12/28/24 13:00:45.039
  E1228 13:00:45.612546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:46.613323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:47.046330 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1786" for this suite. @ 12/28/24 13:00:47.051
• [7.050 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 12/28/24 13:00:47.058
  I1228 13:00:47.058321 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubelet-test @ 12/28/24 13:00:47.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:47.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:47.079
  E1228 13:00:47.613675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:48.614252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:49.120669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5676" for this suite. @ 12/28/24 13:00:49.125
• [2.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/28/24 13:00:49.135
  I1228 13:00:49.135393 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 13:00:49.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:49.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:49.153
  STEP: Creating configMap with name configmap-test-volume-d6613fdb-8ed6-481d-86c8-dfbe88ee9662 @ 12/28/24 13:00:49.156
  STEP: Creating a pod to test consume configMaps @ 12/28/24 13:00:49.16
  E1228 13:00:49.614505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:50.615449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:51.616005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:52.616889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:00:53.187
  I1228 13:00:53.191230 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-configmaps-dbf0c7d7-c049-4243-88c7-de24c27df478 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:00:53.198
  I1228 13:00:53.218757 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2548" for this suite. @ 12/28/24 13:00:53.222
• [4.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 12/28/24 13:00:53.229
  I1228 13:00:53.229777 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:00:53.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:00:53.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:00:53.248
  STEP: creating service in namespace services-3662 @ 12/28/24 13:00:53.251
  STEP: creating service affinity-nodeport-transition in namespace services-3662 @ 12/28/24 13:00:53.251
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3662 @ 12/28/24 13:00:53.264
  I1228 13:00:53.276895      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-3662, replica count: 3
  E1228 13:00:53.617399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:54.618381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:55.618413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:56.328307      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 13:00:56.341762 19 resource.go:361] Creating new exec pod
  E1228 13:00:56.619207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:57.619840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:00:58.620549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:59.361087 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3662 exec execpod-affinity44662 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1228 13:00:59.445863 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1228 13:00:59.445910 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:00:59.445990 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3662 exec execpod-affinity44662 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  I1228 13:00:59.528214 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  I1228 13:00:59.528252 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:00:59.528325 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3662 exec execpod-affinity44662 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.122 31676'
  I1228 13:00:59.611311 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.122 31676\nConnection to 172.31.87.122 31676 port [tcp/*] succeeded!\n"
  I1228 13:00:59.611350 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:00:59.611414 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3662 exec execpod-affinity44662 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.66 31676'
  E1228 13:00:59.620755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:00:59.693194 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.66 31676\nConnection to 172.31.65.66 31676 port [tcp/*] succeeded!\n"
  I1228 13:00:59.693226 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:00:59.703099 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3662 exec execpod-affinity44662 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.45.142:31676/ ; done'
  I1228 13:00:59.897045 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n"
  I1228 13:00:59.897092 19 builder.go:147] stdout: "\naffinity-nodeport-transition-bpmmq\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-v76x6\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5"
  I1228 13:00:59.897106 19 service.go:242] Received response from host: affinity-nodeport-transition-bpmmq
  I1228 13:00:59.897130 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897137 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.897147 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897181 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897189 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897249 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897256 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.897263 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897269 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897275 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.897301 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.897356 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.897362 19 service.go:242] Received response from host: affinity-nodeport-transition-v76x6
  I1228 13:00:59.897369 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.897376 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:00:59.908699 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-3662 exec execpod-affinity44662 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.45.142:31676/ ; done'
  I1228 13:01:00.055098 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.45.142:31676/\n"
  I1228 13:01:00.055145 19 builder.go:147] stdout: "\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5\naffinity-nodeport-transition-tsvq5"
  I1228 13:01:00.055155 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055163 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055169 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055174 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055180 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055184 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055204 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055210 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055217 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055222 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055227 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055232 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055238 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055243 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055248 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055253 19 service.go:242] Received response from host: affinity-nodeport-transition-tsvq5
  I1228 13:01:00.055358 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3662, will wait for the garbage collector to delete the pods @ 12/28/24 13:01:00.07
  I1228 13:01:00.133744 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 7.57849ms
  I1228 13:01:00.234782 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.021916ms
  E1228 13:01:00.621567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:01.622622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:02.622799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:01:02.863619 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3662" for this suite. @ 12/28/24 13:01:02.868
• [9.647 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/28/24 13:01:02.876
  I1228 13:01:02.876823 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pod-network-test @ 12/28/24 13:01:02.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:02.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:02.898
  STEP: Performing setup for networking test in namespace pod-network-test-2179 @ 12/28/24 13:01:02.901
  STEP: creating a selector @ 12/28/24 13:01:02.901
  STEP: Creating the service pods in kubernetes @ 12/28/24 13:01:02.901
  I1228 13:01:02.901912 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1228 13:01:03.623138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:04.623242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:05.623827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:06.624454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:07.624543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:08.624621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:09.624761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:10.624815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:11.624899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:12.625007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:13.625095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:14.625178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/28/24 13:01:14.991
  E1228 13:01:15.625852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:16.626861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:01:17.014362 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1228 13:01:17.014394 19 networking.go:42] Breadth first check of 192.168.189.59 on host 172.31.45.142...
  I1228 13:01:17.018360 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.90:9080/dial?request=hostname&protocol=udp&host=192.168.189.59&port=8081&tries=1'] Namespace:pod-network-test-2179 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:01:17.018382 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:01:17.018861 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:01:17.018901 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2179/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.189.59%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1228 13:01:17.061444 19 utils.go:356] Waiting for responses: map[]
  I1228 13:01:17.061467 19 utils.go:360] reached 192.168.189.59 after 0/1 tries
  I1228 13:01:17.061475 19 networking.go:42] Breadth first check of 192.168.206.106 on host 172.31.65.66...
  I1228 13:01:17.065548 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.90:9080/dial?request=hostname&protocol=udp&host=192.168.206.106&port=8081&tries=1'] Namespace:pod-network-test-2179 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:01:17.065568 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:01:17.065909 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:01:17.065945 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2179/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.206.106%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1228 13:01:17.109550 19 utils.go:356] Waiting for responses: map[]
  I1228 13:01:17.109578 19 utils.go:360] reached 192.168.206.106 after 0/1 tries
  I1228 13:01:17.109590 19 networking.go:42] Breadth first check of 192.168.178.63 on host 172.31.87.122...
  I1228 13:01:17.113914 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.90:9080/dial?request=hostname&protocol=udp&host=192.168.178.63&port=8081&tries=1'] Namespace:pod-network-test-2179 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:01:17.113934 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:01:17.114236 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:01:17.114269 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2179/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.178.63%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1228 13:01:17.153852 19 utils.go:356] Waiting for responses: map[]
  I1228 13:01:17.153873 19 utils.go:360] reached 192.168.178.63 after 0/1 tries
  I1228 13:01:17.153882 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1228 13:01:17.153958 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2179" for this suite. @ 12/28/24 13:01:17.16
• [14.294 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 12/28/24 13:01:17.17
  I1228 13:01:17.170502 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:01:17.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:17.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:17.187
  STEP: creating a replication controller @ 12/28/24 13:01:17.19
  I1228 13:01:17.190368 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 create -f -'
  I1228 13:01:17.268160 19 builder.go:146] stderr: ""
  I1228 13:01:17.268187 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/28/24 13:01:17.268
  I1228 13:01:17.268264 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1228 13:01:17.314174 19 builder.go:146] stderr: ""
  I1228 13:01:17.314212 19 builder.go:147] stdout: "update-demo-nautilus-87w8m update-demo-nautilus-8g862 "
  I1228 13:01:17.314243 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods update-demo-nautilus-87w8m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:01:17.356471 19 builder.go:146] stderr: ""
  I1228 13:01:17.356499 19 builder.go:147] stdout: ""
  I1228 13:01:17.356508 19 kubectl.go:2502] update-demo-nautilus-87w8m is created but not running
  E1228 13:01:17.627882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:18.628938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:19.628947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:20.629118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:21.629300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:01:22.356734 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1228 13:01:22.399668 19 builder.go:146] stderr: ""
  I1228 13:01:22.399702 19 builder.go:147] stdout: "update-demo-nautilus-87w8m update-demo-nautilus-8g862 "
  I1228 13:01:22.399736 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods update-demo-nautilus-87w8m -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:01:22.441121 19 builder.go:146] stderr: ""
  I1228 13:01:22.441155 19 builder.go:147] stdout: "true"
  I1228 13:01:22.441196 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods update-demo-nautilus-87w8m -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1228 13:01:22.493208 19 builder.go:146] stderr: ""
  I1228 13:01:22.493238 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:01:22.493248 19 kubectl.go:2393] validating pod update-demo-nautilus-87w8m
  I1228 13:01:22.499677 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:01:22.499738 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:01:22.499749 19 kubectl.go:2520] update-demo-nautilus-87w8m is verified up and running
  I1228 13:01:22.499850 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods update-demo-nautilus-8g862 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:01:22.538741 19 builder.go:146] stderr: ""
  I1228 13:01:22.538766 19 builder.go:147] stdout: "true"
  I1228 13:01:22.538797 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods update-demo-nautilus-8g862 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1228 13:01:22.579700 19 builder.go:146] stderr: ""
  I1228 13:01:22.579726 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:01:22.579735 19 kubectl.go:2393] validating pod update-demo-nautilus-8g862
  I1228 13:01:22.585929 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:01:22.585969 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:01:22.585979 19 kubectl.go:2520] update-demo-nautilus-8g862 is verified up and running
  STEP: using delete to clean up resources @ 12/28/24 13:01:22.585
  I1228 13:01:22.586047 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 delete --grace-period=0 --force -f -'
  E1228 13:01:22.629583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:01:22.630964 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 13:01:22.630989 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1228 13:01:22.631021 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get rc,svc -l name=update-demo --no-headers'
  I1228 13:01:22.689353 19 builder.go:146] stderr: "No resources found in kubectl-1268 namespace.\n"
  I1228 13:01:22.689383 19 builder.go:147] stdout: ""
  I1228 13:01:22.689415 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-1268 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1228 13:01:22.731783 19 builder.go:146] stderr: ""
  I1228 13:01:22.731811 19 builder.go:147] stdout: ""
  I1228 13:01:22.731935 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1268" for this suite. @ 12/28/24 13:01:22.735
• [5.573 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/28/24 13:01:22.743
  I1228 13:01:22.743745 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename namespaces @ 12/28/24 13:01:22.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:22.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:22.762
  STEP: Creating a test namespace @ 12/28/24 13:01:22.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:22.779
  STEP: Creating a pod in the namespace @ 12/28/24 13:01:22.782
  STEP: Waiting for the pod to have running status @ 12/28/24 13:01:22.793
  E1228 13:01:23.630413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:24.630457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 12/28/24 13:01:24.803
  STEP: Waiting for the namespace to be removed. @ 12/28/24 13:01:24.812
  E1228 13:01:25.631522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:26.631688      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:27.631822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:28.632072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:29.632159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:30.632291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:31.632888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:32.632955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:33.633015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:34.633153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:35.633845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/28/24 13:01:35.817
  STEP: Verifying there are no pods in the namespace @ 12/28/24 13:01:35.834
  I1228 13:01:35.840692 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7593" for this suite. @ 12/28/24 13:01:35.846
  STEP: Destroying namespace "nsdeletetest-6008" for this suite. @ 12/28/24 13:01:35.857
  I1228 13:01:35.861302 19 framework.go:370] Namespace nsdeletetest-6008 was already deleted
  STEP: Destroying namespace "nsdeletetest-3968" for this suite. @ 12/28/24 13:01:35.861
• [13.130 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/28/24 13:01:35.873
  I1228 13:01:35.873598 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 13:01:35.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:35.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:35.895
  I1228 13:01:35.947911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3631" for this suite. @ 12/28/24 13:01:35.951
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/28/24 13:01:35.961
  I1228 13:01:35.961500 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename watch @ 12/28/24 13:01:35.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:35.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:35.978
  STEP: creating a watch on configmaps @ 12/28/24 13:01:35.981
  STEP: creating a new configmap @ 12/28/24 13:01:35.982
  STEP: modifying the configmap once @ 12/28/24 13:01:35.987
  STEP: closing the watch once it receives two notifications @ 12/28/24 13:01:35.997
  I1228 13:01:35.997264 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7770  f7c4c3e2-e24c-40bd-88d8-8f2ce30be2ac 30085 0 2024-12-28 13:01:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-28 13:01:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:01:35.997360 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7770  f7c4c3e2-e24c-40bd-88d8-8f2ce30be2ac 30086 0 2024-12-28 13:01:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-28 13:01:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/28/24 13:01:35.997
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/28/24 13:01:36.006
  STEP: deleting the configmap @ 12/28/24 13:01:36.007
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/28/24 13:01:36.013
  I1228 13:01:36.013081 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7770  f7c4c3e2-e24c-40bd-88d8-8f2ce30be2ac 30087 0 2024-12-28 13:01:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-28 13:01:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:01:36.013331 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7770  f7c4c3e2-e24c-40bd-88d8-8f2ce30be2ac 30088 0 2024-12-28 13:01:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-28 13:01:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:01:36.013469 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7770" for this suite. @ 12/28/24 13:01:36.016
• [0.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 12/28/24 13:01:36.024
  I1228 13:01:36.024509 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:01:36.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:36.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:36.041
  I1228 13:01:36.044704 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-72 version'
  I1228 13:01:36.080994 19 builder.go:146] stderr: ""
  I1228 13:01:36.081022 19 builder.go:147] stdout: "Client Version: v1.31.4\nKustomize Version: v5.4.2\nServer Version: v1.31.4\n"
  I1228 13:01:36.081188 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-72" for this suite. @ 12/28/24 13:01:36.086
• [0.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/28/24 13:01:36.095
  I1228 13:01:36.095088 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename chunking @ 12/28/24 13:01:36.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:01:36.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:01:36.112
  STEP: creating a large number of resources @ 12/28/24 13:01:36.116
  E1228 13:01:36.634609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:37.635143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:38.635584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:39.635808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:40.636750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:41.637499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:42.638543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:43.638992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:44.639133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:45.639541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:46.639838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:47.639962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:48.640498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:49.640557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:50.640596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:51.641122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:52.641774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:53.642090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 12/28/24 13:01:53.802
  I1228 13:01:53.851091 19 chunking.go:163] Retrieved 40/40 results with rv 30566 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/28/24 13:01:53.851
  E1228 13:01:54.642889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:55.643000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:56.643244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:57.643365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:58.643456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:01:59.644357      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:00.645130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:01.645240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:02.645313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:03.645853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:04.646096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:05.646840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:06.647843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:07.648048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:08.648262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:09.648376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:10.648568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:11.648762      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:12.648962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:13.649538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:02:13.858664 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:02:14.650478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:15.650700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:16.650956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:17.651207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:18.651848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:19.652163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:20.652259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:21.652455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:22.652674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:23.652858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:24.653121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:25.654139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:26.655095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:27.655200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:28.655839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:29.656149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:30.656836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:31.657844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:32.658028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:33.658166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:02:33.857023 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:02:34.658847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:35.659027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:36.659871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:37.660074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:38.660256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:39.660433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:40.660618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:41.660782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:42.661836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:43.662014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:44.662118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:45.662323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:46.662536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:47.662750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:48.662875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:49.663012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:50.663205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:51.663379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:52.663477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:53.664166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:02:53.857936 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:02:54.664660      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:55.664779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:56.665843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:57.665934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:58.666849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:02:59.667067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:00.667237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:01.667903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:02.668037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:03.668234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:04.668555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:05.668752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:06.668937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:07.669136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:08.669347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:09.670416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:10.671050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:11.671296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:12.671493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:13.671600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:03:13.856966 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:03:14.671837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:15.672047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:16.672232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:17.672408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:18.672598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:19.672718      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:20.672904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:21.673096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:22.673266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:23.673854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:24.674835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:25.674949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:26.675054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:27.675837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:28.675929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:29.676839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:30.677850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:31.678055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:32.678190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:33.678403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:03:33.856209 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:03:34.678727      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:35.678752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:36.679185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:37.679445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:38.679677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:39.679903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:40.680052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:41.680158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:42.680356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:43.680477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:44.681415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:45.681609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:46.681792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:47.681974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:48.682154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:49.682327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:50.682416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:51.682604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:52.682802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:53.683857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:03:53.856831 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:03:54.684834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:55.684942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:56.685838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:57.686834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:58.687847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:03:59.687955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:00.688147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:01.689033      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:02.689272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:03.689508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:04.690530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:05.690898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:06.691840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:07.692109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:08.692835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:09.693042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:10.693226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:11.694134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:12.694231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:13.694455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:04:13.856613 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:04:14.694517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:15.695399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:16.695552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:17.695841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:18.695902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:19.696862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:20.697844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:21.698083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:22.698261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:23.698435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:24.699450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:25.700191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:26.700374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:27.700559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:28.700865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:29.701255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:30.701392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:31.701573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:32.701631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:33.701840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:04:33.858689 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:04:34.702278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:35.702873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:36.703055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:37.703236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:38.704139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:39.704853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:40.704952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:41.705840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:42.706832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:43.707010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:44.708016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:45.708134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:46.708339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:47.708531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:48.708777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:49.709096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:50.709283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:51.709459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:52.709638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:53.709844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:04:53.857849 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:04:54.710765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:55.710785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:56.710956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:57.711100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:58.711866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:04:59.712143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:00.712396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:01.712674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:02.712794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:03.712970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:04.713972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:05.714082      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:06.715169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:07.715234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:08.715843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:09.716860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:10.717845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:11.718062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:12.718252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:13.718462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:05:13.856135 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:05:14.719124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:15.719311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:16.719913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:17.720035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:18.720223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:19.721066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:20.721203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:21.721844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:22.722846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:23.723019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:24.723252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:25.723333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:26.723510      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:27.723621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:28.723778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:29.724878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:30.724977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:31.725075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:32.725840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:33.726846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:05:33.857512 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:05:34.727136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:35.727062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:36.727247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:37.727484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:38.727637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:39.728693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:40.728858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:41.729045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:42.729222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:43.729435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:44.730351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:45.730523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:46.730737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:47.730977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:48.731841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:49.732251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:50.732467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:51.732880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:52.732956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:53.733144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:05:53.856914 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:05:54.733882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:55.734239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:56.734851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:57.735847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:58.736839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:05:59.736945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:00.737059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:01.737159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:02.737335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:03.737433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:04.738484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:05.738594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:06.738689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:07.738786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:08.738938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:09.739044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:10.739229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:11.739433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:12.739633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:13.739887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:06:13.858363 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:06:14.739981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:15.740156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:16.740346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:17.740561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:18.740779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:19.741007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:20.741186      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:21.741373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:22.741640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:23.741772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:24.742085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:25.742203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:26.742313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:27.742848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:28.743870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:29.743915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:30.744007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:31.744860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:32.745855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:33.746844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:06:33.858554 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:06:34.747641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:35.747804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:36.748874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:37.749149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:38.749399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:39.749491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:40.749733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:41.749908      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:42.750147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:43.750333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:44.750441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:45.750675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:46.750860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:47.751096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:48.751207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:49.751550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:50.751784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:51.751951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:52.752191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:53.752400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:06:53.858043 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:06:54.753166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:55.753279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:56.753465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:57.753679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:58.754697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:06:59.754773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:00.755837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:01.756835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:02.757026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:03.757088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:04.757862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:05.757969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:06.758068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:07.758268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:08.758781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:09.759007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:10.759210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:11.759853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:12.760086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:13.760277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:07:13.857116 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:07:14.761148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:15.761977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:16.762879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:17.763061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:18.763159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:19.763358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:20.763835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:21.763937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:22.764092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:23.764867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:24.765848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:25.766851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:26.766943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:27.767855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:28.768865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:29.769772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:30.769984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:31.770139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:32.770321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:33.770508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:07:33.856709 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:07:34.770895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:35.770824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:36.770788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:37.770994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:38.771116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:39.771364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:40.771851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:41.772105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:42.772956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:43.773066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:44.773135      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:45.774007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:46.774856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:47.775859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:48.776857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:49.777024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:50.777920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:51.778110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:52.778327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:53.778534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:07:53.858167 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA1NjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1228 13:07:54.778791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:55.778906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:56.779093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:57.779287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:58.779470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:07:59.779596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:00.779827      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:01.780049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:02.780881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:03.781072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:04.782093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:05.782297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:06.782840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:07.783081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:08.783249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:09.784285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:10.784377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:11.784857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:12.785845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:13.786845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:13.856843 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1228 13:08:13.856876 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/28/24 13:08:13.856
  STEP: retrieving all remaining pages @ 12/28/24 13:08:13.86
  I1228 13:08:13.866247 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1228 13:08:13.870546 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1228 13:08:13.875228 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1228 13:08:13.880342 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1228 13:08:13.884429 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1228 13:08:13.888394 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1228 13:08:13.893985 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEzMTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1228 13:08:13.898068 19 chunking.go:221] Retrieved 40/40 results with rv 31317 and continue 
  I1228 13:08:13.898191 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2598" for this suite. @ 12/28/24 13:08:13.902
• [397.815 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 12/28/24 13:08:13.909
  I1228 13:08:13.909909 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:08:13.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:08:13.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:08:13.933
  STEP: Counting existing ResourceQuota @ 12/28/24 13:08:13.936
  E1228 13:08:14.787430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:15.787578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:16.787702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:17.787751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:18.787865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 13:08:18.94
  STEP: Ensuring resource quota status is calculated @ 12/28/24 13:08:18.947
  E1228 13:08:19.788557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:20.788676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 12/28/24 13:08:20.951
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/28/24 13:08:20.968
  E1228 13:08:21.788969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:22.789090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/28/24 13:08:22.974
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/28/24 13:08:22.977
  STEP: Ensuring a pod cannot update its resource requirements @ 12/28/24 13:08:22.98
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/28/24 13:08:22.985
  E1228 13:08:23.789811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:24.790043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/28/24 13:08:24.991
  STEP: Ensuring resource quota status released the pod usage @ 12/28/24 13:08:25.004
  E1228 13:08:25.790177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:26.790717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:27.011375 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7527" for this suite. @ 12/28/24 13:08:27.017
• [13.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/28/24 13:08:27.024
  I1228 13:08:27.024299 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename cronjob @ 12/28/24 13:08:27.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:08:27.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:08:27.043
  STEP: Creating a cronjob @ 12/28/24 13:08:27.046
  STEP: creating @ 12/28/24 13:08:27.046
  STEP: getting @ 12/28/24 13:08:27.053
  STEP: listing @ 12/28/24 13:08:27.057
  STEP: watching @ 12/28/24 13:08:27.061
  I1228 13:08:27.061917 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/28/24 13:08:27.063
  STEP: cluster-wide watching @ 12/28/24 13:08:27.067
  I1228 13:08:27.067100 19 cronjob.go:382] starting watch
  STEP: patching @ 12/28/24 13:08:27.068
  STEP: updating @ 12/28/24 13:08:27.074
  I1228 13:08:27.086351 19 cronjob.go:406] waiting for watch events with expected annotations
  I1228 13:08:27.086378 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/28/24 13:08:27.086
  STEP: updating /status @ 12/28/24 13:08:27.091
  STEP: get /status @ 12/28/24 13:08:27.101
  STEP: deleting @ 12/28/24 13:08:27.104
  STEP: deleting a collection @ 12/28/24 13:08:27.123
  I1228 13:08:27.137446 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7234" for this suite. @ 12/28/24 13:08:27.142
• [0.124 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/28/24 13:08:27.148
  I1228 13:08:27.148254 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 13:08:27.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:08:27.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:08:27.166
  STEP: Creating secret with name secret-test-83346242-9308-4168-8e61-80b276b647ff @ 12/28/24 13:08:27.169
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:08:27.175
  E1228 13:08:27.790822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:28.790917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:29.791119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:30.791280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:08:31.201
  I1228 13:08:31.205308 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-secrets-fbb3b6a8-3141-4901-95df-7ebf2e8521c9 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:08:31.219
  I1228 13:08:31.240661 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2907" for this suite. @ 12/28/24 13:08:31.245
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 12/28/24 13:08:31.253
  I1228 13:08:31.253741 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:08:31.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:08:31.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:08:31.273
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7863 @ 12/28/24 13:08:31.276
  STEP: changing the ExternalName service to type=NodePort @ 12/28/24 13:08:31.281
  STEP: creating replication controller externalname-service in namespace services-7863 @ 12/28/24 13:08:31.305
  I1228 13:08:31.315179      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7863, replica count: 2
  E1228 13:08:31.792001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:32.792693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:33.792902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:34.366614      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 13:08:34.366662 19 resource.go:361] Creating new exec pod
  E1228 13:08:34.793788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:35.793899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:36.794530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:37.387408 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1228 13:08:37.471177 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1228 13:08:37.471213 19 builder.go:147] stdout: "externalname-service-45fqw"
  I1228 13:08:37.471281 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.194 80'
  I1228 13:08:37.554364 19 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 10.152.183.194 80\nConnection to 10.152.183.194 80 port [tcp/http] succeeded!\n"
  I1228 13:08:37.554397 19 builder.go:147] stdout: ""
  E1228 13:08:37.794613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:38.471415 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.194 80'
  I1228 13:08:38.555557 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.194 80\nConnection to 10.152.183.194 80 port [tcp/http] succeeded!\n"
  I1228 13:08:38.555591 19 builder.go:147] stdout: ""
  E1228 13:08:38.794941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:39.471902 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.194 80'
  I1228 13:08:39.551510 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.194 80\nConnection to 10.152.183.194 80 port [tcp/http] succeeded!\n"
  I1228 13:08:39.551548 19 builder.go:147] stdout: ""
  E1228 13:08:39.795969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:08:40.471412 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.194 80'
  I1228 13:08:40.546218 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.194 80\nConnection to 10.152.183.194 80 port [tcp/http] succeeded!\n"
  I1228 13:08:40.546250 19 builder.go:147] stdout: "externalname-service-v2mc5"
  I1228 13:08:40.546316 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.122 30425'
  I1228 13:08:40.629840 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.122 30425\nConnection to 172.31.87.122 30425 port [tcp/*] succeeded!\n"
  I1228 13:08:40.629878 19 builder.go:147] stdout: "externalname-service-v2mc5"
  I1228 13:08:40.629953 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-7863 exec execpodv2fzq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.66 30425'
  I1228 13:08:40.701835 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.66 30425\nConnection to 172.31.65.66 30425 port [tcp/*] succeeded!\n"
  I1228 13:08:40.701869 19 builder.go:147] stdout: "externalname-service-v2mc5"
  I1228 13:08:40.701941 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1228 13:08:40.731221 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7863" for this suite. @ 12/28/24 13:08:40.735
• [9.488 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/28/24 13:08:40.741
  I1228 13:08:40.741325 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename cronjob @ 12/28/24 13:08:40.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:08:40.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:08:40.762
  STEP: Creating a cronjob @ 12/28/24 13:08:40.765
  STEP: Ensuring more than one job is running at a time @ 12/28/24 13:08:40.771
  E1228 13:08:40.796870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:41.796956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:42.797127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:43.797354      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:44.797822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:45.798086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:46.798615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:47.798769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:48.799035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:49.799147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:50.799710      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:51.799831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:52.800195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:53.800300      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:54.800745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:55.800962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:56.801226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:57.801458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:58.802408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:08:59.802543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:00.803171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:01.803380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:02.804108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:03.804849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:04.805635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:05.805781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:06.806786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:07.806897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:08.807713      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:09.807806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:10.807897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:11.808972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:12.809158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:13.810024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:14.810702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:15.810880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:16.810930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:17.811051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:18.811665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:19.811818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:20.812638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:21.812846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:22.813428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:23.813630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:24.814344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:25.814939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:26.815385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:27.815476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:28.816361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:29.816740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:30.817084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:31.817860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:32.818775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:33.818945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:34.819271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:35.819160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:36.819742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:37.819860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:38.820029      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:39.820997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:40.821844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:41.822109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:42.822501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:43.822712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:44.822737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:45.822781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:46.823689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:47.823780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:48.824074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:49.825592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:50.825749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:51.825850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:52.826533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:53.826832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:54.827119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:55.827274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:56.827839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:57.828017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:58.828716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:09:59.830278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/28/24 13:10:00.776
  STEP: Removing cronjob @ 12/28/24 13:10:00.78
  I1228 13:10:00.788363 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8416" for this suite. @ 12/28/24 13:10:00.793
• [80.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/28/24 13:10:00.805
  I1228 13:10:00.805423 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 13:10:00.806
  E1228 13:10:00.830363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:00.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:00.843
  STEP: Creating a pod to test service account token:  @ 12/28/24 13:10:00.846
  E1228 13:10:01.830577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:02.830815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:03.830963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:04.831016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:10:04.869
  I1228 13:10:04.872972 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod test-pod-8e094442-6945-4579-a566-ae0b7cc7bc6b container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:10:04.885
  I1228 13:10:04.906090 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-882" for this suite. @ 12/28/24 13:10:04.911
• [4.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 12/28/24 13:10:04.918
  I1228 13:10:04.918528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 13:10:04.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:04.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:04.935
  STEP: Creating a test headless service @ 12/28/24 13:10:04.938
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3693 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3693;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3693 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3693;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3693.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3693.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3693.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3693.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3693.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3693.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3693.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3693.svc;check="$$(dig +notcp +noall +answer +search 250.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.250_udp@PTR;check="$$(dig +tcp +noall +answer +search 250.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.250_tcp@PTR;sleep 1; done
   @ 12/28/24 13:10:04.959
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3693 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3693;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3693 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3693;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3693.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3693.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3693.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3693.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3693.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3693.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3693.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3693.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3693.svc;check="$$(dig +notcp +noall +answer +search 250.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.250_udp@PTR;check="$$(dig +tcp +noall +answer +search 250.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.250_tcp@PTR;sleep 1; done
   @ 12/28/24 13:10:04.959
  STEP: creating a pod to probe DNS @ 12/28/24 13:10:04.959
  STEP: submitting the pod to kubernetes @ 12/28/24 13:10:04.959
  E1228 13:10:05.831199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:06.831326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 13:10:06.986
  STEP: looking for the results for each expected name from probers @ 12/28/24 13:10:06.991
  I1228 13:10:06.997961 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.002138 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.007712 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3693 from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.011798 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3693 from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.015604 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.021199 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.025553 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.029202 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.051300 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.055114 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.060547 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3693 from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.064549 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3693 from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.068643 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.074554 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.078870 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.082990 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3693.svc from pod dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e: the server could not find the requested resource (get pods dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e)
  I1228 13:10:07.102228 19 dns_common.go:489] Lookups using dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3693 wheezy_tcp@dns-test-service.dns-3693 wheezy_udp@dns-test-service.dns-3693.svc wheezy_tcp@dns-test-service.dns-3693.svc wheezy_udp@_http._tcp.dns-test-service.dns-3693.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3693.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3693 jessie_tcp@dns-test-service.dns-3693 jessie_udp@dns-test-service.dns-3693.svc jessie_tcp@dns-test-service.dns-3693.svc jessie_udp@_http._tcp.dns-test-service.dns-3693.svc jessie_tcp@_http._tcp.dns-test-service.dns-3693.svc]

  I1228 13:10:07.109730 19 dns_common.go:495] Pod client logs for webserver: 
  I1228 13:10:07.115560 19 dns_common.go:495] Pod client logs for querier: 
  I1228 13:10:07.124532 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1228 13:10:07.832004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:08.832136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:09.832168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:10.832848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:11.833187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:12.127495 19 dns_common.go:527] DNS probes using dns-3693/dns-test-8e2ce2fa-0665-4630-b019-d5389e5ca69e succeeded

  STEP: deleting the pod @ 12/28/24 13:10:12.127
  STEP: deleting the test service @ 12/28/24 13:10:12.15
  STEP: deleting the test headless service @ 12/28/24 13:10:12.175
  I1228 13:10:12.190371 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3693" for this suite. @ 12/28/24 13:10:12.195
• [7.286 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/28/24 13:10:12.204
  I1228 13:10:12.204625 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:10:12.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:12.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:12.222
  STEP: Creating projection with secret that has name projected-secret-test-1ce2ad0f-0361-4598-a37a-0ba2d75fddce @ 12/28/24 13:10:12.225
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:10:12.23
  E1228 13:10:12.834044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:13.834236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:14.834494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:15.834586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:10:16.26
  I1228 13:10:16.266028 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-secrets-172e70f5-dc4c-44bb-b2d7-21781e67066c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:10:16.273
  I1228 13:10:16.290149 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-607" for this suite. @ 12/28/24 13:10:16.295
• [4.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/28/24 13:10:16.305
  I1228 13:10:16.305759 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 13:10:16.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:16.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:16.324
  STEP: create the deployment @ 12/28/24 13:10:16.327
  W1228 13:10:16.334604      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/28/24 13:10:16.334
  STEP: delete the deployment @ 12/28/24 13:10:16.448
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/28/24 13:10:16.458
  E1228 13:10:16.835520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/28/24 13:10:16.98
  W1228 13:10:16.986370      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1228 13:10:16.986396 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1228 13:10:16.986543 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2523" for this suite. @ 12/28/24 13:10:16.991
• [0.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/28/24 13:10:17.004
  I1228 13:10:17.004601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename security-context-test @ 12/28/24 13:10:17.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:17.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:17.023
  E1228 13:10:17.835809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:18.836016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:19.836809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:20.836932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:21.058719 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2819" for this suite. @ 12/28/24 13:10:21.062
• [4.069 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/28/24 13:10:21.073
  I1228 13:10:21.073576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:10:21.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:21.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:21.09
  STEP: Creating configMap with name projected-configmap-test-volume-map-16cd034e-bacc-49a0-8ec6-6e5cfc109964 @ 12/28/24 13:10:21.093
  STEP: Creating a pod to test consume configMaps @ 12/28/24 13:10:21.098
  E1228 13:10:21.837020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:22.837858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:23.838028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:24.838108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:10:25.121
  I1228 13:10:25.126096 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-configmaps-120c1336-6894-4c17-8c9b-1100f9528d8a container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:10:25.136
  I1228 13:10:25.152399 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2261" for this suite. @ 12/28/24 13:10:25.156
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/28/24 13:10:25.164
  I1228 13:10:25.164505 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replicaset @ 12/28/24 13:10:25.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:25.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:25.183
  I1228 13:10:25.201768 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1228 13:10:25.838226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:26.838387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:27.838477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:28.838588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:29.840232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:30.205728 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/28/24 13:10:30.205
  STEP: Scaling up "test-rs" replicaset @ 12/28/24 13:10:30.205
  I1228 13:10:30.216179 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/28/24 13:10:30.216
  I1228 13:10:30.228959 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1674 with ReadyReplicas 1, AvailableReplicas 1
  I1228 13:10:30.245426 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1674 with ReadyReplicas 1, AvailableReplicas 1
  I1228 13:10:30.259441 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1674 with ReadyReplicas 1, AvailableReplicas 1
  I1228 13:10:30.265757 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1674 with ReadyReplicas 1, AvailableReplicas 1
  E1228 13:10:30.840246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:31.376642 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1674 with ReadyReplicas 2, AvailableReplicas 2
  I1228 13:10:31.499377 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1674 with ReadyReplicas 3 found true
  I1228 13:10:31.499511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1674" for this suite. @ 12/28/24 13:10:31.503
• [6.348 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/28/24 13:10:31.512
  I1228 13:10:31.512611 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 13:10:31.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:31.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:31.532
  I1228 13:10:31.538398 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: creating the pod @ 12/28/24 13:10:31.538
  STEP: submitting the pod to kubernetes @ 12/28/24 13:10:31.538
  E1228 13:10:31.840679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:32.840843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:33.612443 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3730" for this suite. @ 12/28/24 13:10:33.618
• [2.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/28/24 13:10:33.632
  I1228 13:10:33.632043 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 13:10:33.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:33.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:33.653
  I1228 13:10:33.726256 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8986776e-e13c-4a84-93c6-e301e8b562c6", Controller:(*bool)(0xc002cbd356), BlockOwnerDeletion:(*bool)(0xc002cbd357)}}
  I1228 13:10:33.735514 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"1a19c5e9-92f6-463d-baa4-b80e4166f1a8", Controller:(*bool)(0xc00103513e), BlockOwnerDeletion:(*bool)(0xc00103513f)}}
  I1228 13:10:33.747477 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"aab4c894-aaea-49ba-a3fe-1e21aa945443", Controller:(*bool)(0xc002cbd616), BlockOwnerDeletion:(*bool)(0xc002cbd617)}}
  E1228 13:10:33.841759      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:34.841899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:35.842053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:36.842900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:37.842977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:38.757629 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1564" for this suite. @ 12/28/24 13:10:38.762
• [5.139 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/28/24 13:10:38.77
  I1228 13:10:38.770950 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/28/24 13:10:38.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:38.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:38.788
  I1228 13:10:38.795171 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4349" for this suite. @ 12/28/24 13:10:38.798
• [0.037 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 12/28/24 13:10:38.807
  I1228 13:10:38.807849 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubelet-test @ 12/28/24 13:10:38.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:38.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:38.828
  STEP: Waiting for pod completion @ 12/28/24 13:10:38.839
  E1228 13:10:38.843632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:39.843799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:40.844302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:40.859670 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7307" for this suite. @ 12/28/24 13:10:40.864
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 12/28/24 13:10:40.871
  I1228 13:10:40.871808 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 13:10:40.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:40.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:40.888
  I1228 13:10:40.892413 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:10:41.844355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:42.845154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1228 13:10:43.429585      19 warnings.go:70] unknown field "alpha"
  W1228 13:10:43.429606      19 warnings.go:70] unknown field "beta"
  W1228 13:10:43.429610      19 warnings.go:70] unknown field "delta"
  W1228 13:10:43.429613      19 warnings.go:70] unknown field "epsilon"
  W1228 13:10:43.429616      19 warnings.go:70] unknown field "gamma"
  E1228 13:10:43.845248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:10:43.978367 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8995" for this suite. @ 12/28/24 13:10:43.982
• [3.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/28/24 13:10:43.988
  I1228 13:10:43.988565 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename hostport @ 12/28/24 13:10:43.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:10:44.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:10:44.011
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/28/24 13:10:44.024
  E1228 13:10:44.845428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:45.845856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.87.122 on the node which pod1 resides and expect scheduled @ 12/28/24 13:10:46.041
  E1228 13:10:46.846837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:47.846943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:48.847202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:49.847319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:50.847810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:51.848884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:52.848963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:53.849059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:54.849231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:55.849931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:56.850048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:57.850232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.87.122 but use UDP protocol on the node which pod2 resides @ 12/28/24 13:10:58.088
  E1228 13:10:58.850924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:10:59.851015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:00.851104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:01.851883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/28/24 13:11:02.126
  I1228 13:11:02.126171 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.87.122 http://127.0.0.1:54323/hostname] Namespace:hostport-9755 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:11:02.126214 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:11:02.126593 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:11:02.126627 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9755/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.87.122+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.87.122, port: 54323 @ 12/28/24 13:11:02.171
  I1228 13:11:02.171268 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.87.122:54323/hostname] Namespace:hostport-9755 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:11:02.171289 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:11:02.171622 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:11:02.171670 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9755/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.87.122%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.87.122, port: 54323 UDP @ 12/28/24 13:11:02.208
  I1228 13:11:02.208858 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.87.122 54323] Namespace:hostport-9755 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:11:02.208870 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:11:02.209228 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:11:02.209279 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9755/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.87.122+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1228 13:11:02.852673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:03.852987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:04.853235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:05.854263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:06.854365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:07.249521 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9755" for this suite. @ 12/28/24 13:11:07.254
• [23.274 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/28/24 13:11:07.262
  I1228 13:11:07.262731 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 13:11:07.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:11:07.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:11:07.282
  STEP: Creating pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956 @ 12/28/24 13:11:07.285
  E1228 13:11:07.854485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:08.854553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 13:11:09.307
  I1228 13:11:09.312573 19 container_probe.go:1749] Initial restart count of pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d is 0
  I1228 13:11:09.316573 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:09.854867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:10.854985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:11.322106 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:11.855758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:12.855973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:13.328740 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:13.856977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:14.857088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:15.334039 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:15.857189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:16.857308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:17.340632 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:17.858016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:18.858141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:19.345264 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:19.858950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:20.859026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:21.351870 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:21.859145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:22.859237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:23.357922 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:23.859372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:24.859547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:25.364514 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:25.859684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:26.859773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:27.370082 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:27.860633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:28.860871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:29.378557 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:29.861862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:30.862945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:31.382953 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:31.863566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:32.864614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:33.389361 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:33.864874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:34.865119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:35.393516 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:35.865860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:36.866042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:37.399738 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:37.866829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:38.867838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:39.405541 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:39.868826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:40.868993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:41.410074 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:41.869166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:42.869345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:43.415611 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:43.870142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:44.871180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:45.420355 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:45.871869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:46.871984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:47.424946 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:47.872081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:48.872259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:49.430417 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:49.872840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:50.873067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:51.434944 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:51.873170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:52.873937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:53.440578 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:53.875006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:54.875097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:55.447281 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:55.875757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:56.875792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:57.452062 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:57.876591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:11:58.877405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:11:59.457328 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:11:59.877781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:00.878810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:01.462955 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:01.879509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:02.879714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:03.468066 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:03.880625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:04.880922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:05.474361 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:05.881011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:06.881193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:07.479000 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:07.881481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:08.881701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:09.485665 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:09.882147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:10.882836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:11.490815 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:11.883121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:12.883212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:13.495839 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:13.883317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:14.883449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:15.502748 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:15.884297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:16.884408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:17.508040 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:17.884502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:18.884847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:19.512384 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:19.885844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:20.885943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:21.516755 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:21.886037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:22.886838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:23.522146 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:23.887686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:24.887781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:25.526835 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:25.888261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:26.888464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:27.532221 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:27.888666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:28.888852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:29.537680 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:29.889850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:30.890845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:31.544635 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:31.891038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:32.891229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:33.556743 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:33.891892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:34.891974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:35.562357 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:35.892795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:36.892896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:37.567354 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:37.893730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:38.893857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:39.572148 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:39.894558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:40.895600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:41.576980 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:41.896398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:42.896521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:43.583736 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:43.896868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:44.897140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:45.588414 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:45.897819      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:46.897921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:47.593528 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:47.898862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:48.899055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:49.598676 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:49.900030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:50.900138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:51.603669 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:51.900868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:52.901016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:53.608398 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:53.901805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:54.901992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:55.613273 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:55.902692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:56.902880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:57.618260 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:57.903705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:12:58.903807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:12:59.624560 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:12:59.904864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:00.904966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:01.629391 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:01.905776      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:02.905806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:03.635971 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:03.906326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:04.907163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:05.641169 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:05.907609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:06.907746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:07.646744 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:07.907838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:08.907963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:09.652502 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:09.908889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:10.909076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:11.657953 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:11.909210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:12.909479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:13.664512 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:13.909871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:14.910090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:15.670699 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:15.910866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:16.911139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:17.675297 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:17.911703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:18.911805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:19.680593 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:19.911861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:20.912012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:21.685724 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:21.913035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:22.913155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:23.691376 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:23.913744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:24.914716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:25.697978 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:25.915275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:26.915373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:27.702906 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:27.916243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:28.916858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:29.709896 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:29.917268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:30.917376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:31.715725 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:31.918028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:32.918173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:33.722604 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:33.918944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:34.919238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:35.727348 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:35.919741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:36.919946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:37.734052 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:37.920344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:38.920860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:39.740954 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:39.921237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:40.921413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:41.747859 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:41.922128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:42.922249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:43.753089 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:43.922378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:44.922593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:45.759122 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:45.923337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:46.924319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:47.763795 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:47.925072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:48.925172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:49.769270 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:49.925494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:50.925611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:51.773492 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:51.925686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:52.925823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:53.779289 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:53.926525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:54.926983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:55.782940 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:55.927075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:56.927844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:57.787425 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:57.928759      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:13:58.928950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:13:59.793675 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:13:59.929909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:00.930032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:01.801155 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:01.930404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:02.930858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:03.806877 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:03.930938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:04.931223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:05.812471 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:05.931693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:06.931901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:07.818060 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:07.932406      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:08.932521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:09.825327 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:09.933532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:10.934105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:11.830175 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:11.934359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:12.934468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:13.835718 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:13.934826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:14.934921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:15.840589 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:15.935728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:16.935781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:17.846407 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:17.936637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:18.936780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:19.851562 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:19.937146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:20.937259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:21.858167 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:21.937335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:22.937519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:23.862908 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:23.938163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:24.938836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:25.869868 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:25.938927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:26.940006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:27.874410 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:27.940610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:28.940949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:29.878527 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:29.941697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:30.941873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:31.883404 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:31.942575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:32.942832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:33.889707 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:33.943808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:34.944826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:35.896614 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:35.945739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:36.945795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:37.901412 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:37.946471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:38.946687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:39.907847 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:39.946973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:40.948051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:41.914249 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:41.948411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:42.948833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:43.919704 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:43.949743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:44.950028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:45.925093 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:45.950189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:46.950331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:47.931799 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:47.950973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:48.951879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:49.936780 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:49.952882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:50.953005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:51.943708 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:51.953789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:52.954767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:53.948948 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:53.955004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:54.955840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:55.955943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:55.955994 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:56.956837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:57.956859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:57.961366 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:14:58.957134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:14:59.958207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:14:59.966339 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:15:00.959019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:01.959860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:01.972291 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:15:02.960001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:03.960866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:03.977430 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:15:04.960922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:05.961020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:05.983157 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:15:06.961257      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:07.961435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:07.990239 19 container_probe.go:1759] Get pod test-webserver-e63affe1-867b-4e96-a629-1a96f4a2549d in namespace container-probe-6956
  E1228 13:15:08.961596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:09.961940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/28/24 13:15:09.991
  I1228 13:15:10.008540 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6956" for this suite. @ 12/28/24 13:15:10.014
• [242.758 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/28/24 13:15:10.021
  I1228 13:15:10.021129 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:15:10.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:10.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:10.043
  STEP: Creating configMap with name projected-configmap-test-volume-c17a9c27-1248-485c-9b46-b730afb1c922 @ 12/28/24 13:15:10.047
  STEP: Creating a pod to test consume configMaps @ 12/28/24 13:15:10.054
  E1228 13:15:10.962364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:11.962564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:15:12.075
  I1228 13:15:12.079101 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-configmaps-0371c993-dd0a-4d99-85b2-44f4004f2216 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:15:12.098
  I1228 13:15:12.118251 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1174" for this suite. @ 12/28/24 13:15:12.122
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/28/24 13:15:12.129
  I1228 13:15:12.129776 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename ingressclass @ 12/28/24 13:15:12.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:12.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:12.148
  STEP: getting /apis @ 12/28/24 13:15:12.152
  STEP: getting /apis/networking.k8s.io @ 12/28/24 13:15:12.155
  STEP: getting /apis/networking.k8s.iov1 @ 12/28/24 13:15:12.157
  STEP: creating @ 12/28/24 13:15:12.158
  STEP: getting @ 12/28/24 13:15:12.176
  STEP: listing @ 12/28/24 13:15:12.18
  STEP: watching @ 12/28/24 13:15:12.184
  I1228 13:15:12.184611 19 ingressclass.go:348] starting watch
  STEP: patching @ 12/28/24 13:15:12.186
  STEP: updating @ 12/28/24 13:15:12.194
  I1228 13:15:12.199838 19 ingressclass.go:364] waiting for watch events with expected annotations
  I1228 13:15:12.199867 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/28/24 13:15:12.199
  STEP: deleting a collection @ 12/28/24 13:15:12.216
  I1228 13:15:12.235551 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5536" for this suite. @ 12/28/24 13:15:12.24
• [0.119 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/28/24 13:15:12.248
  I1228 13:15:12.248770 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/28/24 13:15:12.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:12.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:12.267
  STEP: set up a multi version CRD @ 12/28/24 13:15:12.27
  I1228 13:15:12.271119 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:15:12.962944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:13.963878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:14.963959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 12/28/24 13:15:15.426
  STEP: check the new version name is served @ 12/28/24 13:15:15.437
  E1228 13:15:15.964014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 12/28/24 13:15:16.17
  STEP: check the other version is not changed @ 12/28/24 13:15:16.778
  E1228 13:15:16.964821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:17.965377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:18.965802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:19.295563 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1640" for this suite. @ 12/28/24 13:15:19.302
• [7.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 12/28/24 13:15:19.309
  I1228 13:15:19.309362 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:15:19.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:19.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:19.335
  STEP: creating an Endpoint @ 12/28/24 13:15:19.346
  STEP: waiting for available Endpoint @ 12/28/24 13:15:19.352
  STEP: listing all Endpoints @ 12/28/24 13:15:19.353
  STEP: updating the Endpoint @ 12/28/24 13:15:19.358
  STEP: fetching the Endpoint @ 12/28/24 13:15:19.365
  STEP: patching the Endpoint @ 12/28/24 13:15:19.368
  STEP: fetching the Endpoint @ 12/28/24 13:15:19.377
  STEP: deleting the Endpoint by Collection @ 12/28/24 13:15:19.381
  STEP: waiting for Endpoint deletion @ 12/28/24 13:15:19.39
  STEP: fetching the Endpoint @ 12/28/24 13:15:19.393
  I1228 13:15:19.396635 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4206" for this suite. @ 12/28/24 13:15:19.401
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/28/24 13:15:19.409
  I1228 13:15:19.409188 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 13:15:19.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:19.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:19.434
  I1228 13:15:19.458422 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/28/24 13:15:19.463
  I1228 13:15:19.466468 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:19.466499 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:19.471269 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:15:19.471287 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:15:19.965975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:20.469590 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:20.469634 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:20.473457 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:15:20.473479 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:15:20.966853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:21.468938 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:21.468987 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:21.472687 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 13:15:21.472707 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/28/24 13:15:21.488
  STEP: Check that daemon pods images are updated. @ 12/28/24 13:15:21.501
  I1228 13:15:21.505490 19 daemon_set.go:1193] Wrong image for pod: daemon-set-b2v4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1228 13:15:21.505511 19 daemon_set.go:1193] Wrong image for pod: daemon-set-v4chq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1228 13:15:21.505518 19 daemon_set.go:1193] Wrong image for pod: daemon-set-wdsd8. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1228 13:15:21.512236 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:21.512270 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1228 13:15:21.967774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:22.508214 19 daemon_set.go:1193] Wrong image for pod: daemon-set-b2v4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1228 13:15:22.508240 19 daemon_set.go:1193] Wrong image for pod: daemon-set-v4chq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1228 13:15:22.508247 19 daemon_set.go:1198] Pod daemon-set-xffsg is not available
  I1228 13:15:22.512797 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:22.512833 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1228 13:15:22.967824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:23.506452 19 daemon_set.go:1193] Wrong image for pod: daemon-set-b2v4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1228 13:15:23.506484 19 daemon_set.go:1198] Pod daemon-set-b7xpg is not available
  I1228 13:15:23.509966 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:23.509998 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1228 13:15:23.968448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:24.508269 19 daemon_set.go:1198] Pod daemon-set-6zgjm is not available
  I1228 13:15:24.512318 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:24.512354 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/28/24 13:15:24.512
  I1228 13:15:24.515441 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:24.515473 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:24.518438 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1228 13:15:24.518456 19 fixtures.go:130] Node ip-172-31-65-66 is running 0 daemon pod, expected 1
  E1228 13:15:24.968873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:25.516940 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:25.516984 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:25.521761 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 13:15:25.521781 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/28/24 13:15:25.539
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4961, will wait for the garbage collector to delete the pods @ 12/28/24 13:15:25.539
  I1228 13:15:25.600135 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.763863ms
  I1228 13:15:25.701274 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.134695ms
  E1228 13:15:25.969025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:26.969262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:27.006060 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:15:27.006087 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1228 13:15:27.010381 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33722"},"items":null}

  I1228 13:15:27.013698 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33722"},"items":null}

  I1228 13:15:27.029316 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4961" for this suite. @ 12/28/24 13:15:27.033
• [7.630 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 12/28/24 13:15:27.039
  I1228 13:15:27.039742 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename disruption @ 12/28/24 13:15:27.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:27.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:27.063
  STEP: Creating a kubernetes client @ 12/28/24 13:15:27.066
  I1228 13:15:27.066991 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename disruption-2 @ 12/28/24 13:15:27.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:27.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:27.087
  STEP: Waiting for the pdb to be processed @ 12/28/24 13:15:27.096
  E1228 13:15:27.969427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:28.969545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/28/24 13:15:29.107
  E1228 13:15:29.969744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:30.969958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/28/24 13:15:31.119
  E1228 13:15:31.970408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:32.970613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 12/28/24 13:15:33.124
  STEP: listing a collection of PDBs in namespace disruption-6717 @ 12/28/24 13:15:33.127
  STEP: deleting a collection of PDBs @ 12/28/24 13:15:33.132
  STEP: Waiting for the PDB collection to be deleted @ 12/28/24 13:15:33.145
  I1228 13:15:33.149349 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4046" for this suite. @ 12/28/24 13:15:33.152
  I1228 13:15:33.162061 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6717" for this suite. @ 12/28/24 13:15:33.166
• [6.134 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/28/24 13:15:33.173
  I1228 13:15:33.173576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 13:15:33.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:33.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:33.198
  I1228 13:15:33.226414 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1228 13:15:33.232432 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1228 13:15:33.236818 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:33.236849 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:33.239734 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:15:33.239752 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:15:33.971629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:34.237723 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:34.237770 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:34.241131 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 13:15:34.241150 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1228 13:15:34.241163 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1228 13:15:34.253223 19 daemon_set.go:102] Updating DaemonSet daemon-set
  E1228 13:15:34.971746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:35.265698 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1228 13:15:35.275573 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1228 13:15:35.275597 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1228 13:15:35.282884 19 daemon_set.go:1193] Wrong image for pod: daemon-set-p9hh9. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1228 13:15:35.282902 19 daemon_set.go:1198] Pod daemon-set-p9hh9 is not available
  I1228 13:15:35.289088 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:35.289120 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1228 13:15:35.972171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:36.286246 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:36.286290 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1228 13:15:36.973028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:37.280223 19 daemon_set.go:1198] Pod daemon-set-hjm52 is not available
  I1228 13:15:37.283829 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:15:37.283859 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/28/24 13:15:37.291
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3047, will wait for the garbage collector to delete the pods @ 12/28/24 13:15:37.291
  I1228 13:15:37.352569 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.783986ms
  I1228 13:15:37.453263 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.688986ms
  E1228 13:15:37.973963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:38.958752 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:15:38.958783 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1228 13:15:38.962030 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33945"},"items":null}

  I1228 13:15:38.965275 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33945"},"items":null}

  E1228 13:15:38.974786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:38.980047 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3047" for this suite. @ 12/28/24 13:15:38.984
• [5.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/28/24 13:15:38.991
  I1228 13:15:38.991894 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-runtime @ 12/28/24 13:15:38.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:39.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:39.013
  STEP: create the container @ 12/28/24 13:15:39.017
  W1228 13:15:39.025389      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/28/24 13:15:39.025
  E1228 13:15:39.974944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:40.975039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:41.975125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/28/24 13:15:42.046
  STEP: the container should be terminated @ 12/28/24 13:15:42.05
  STEP: the termination message should be set @ 12/28/24 13:15:42.05
  I1228 13:15:42.050477 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/28/24 13:15:42.05
  I1228 13:15:42.070193 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3881" for this suite. @ 12/28/24 13:15:42.073
• [3.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/28/24 13:15:42.081
  I1228 13:15:42.081780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:15:42.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:42.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:42.104
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/28/24 13:15:42.108
  E1228 13:15:42.975862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:43.976861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:15:44.133
  I1228 13:15:44.136615 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-ed1038b3-0865-48c3-811d-7fcade67dcb3 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 13:15:44.15
  I1228 13:15:44.168008 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5260" for this suite. @ 12/28/24 13:15:44.171
• [2.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/28/24 13:15:44.178
  I1228 13:15:44.178787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/28/24 13:15:44.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:44.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:44.207
  I1228 13:15:44.210291 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:15:44.977064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:45.977453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:46.978093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:47.978174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:48.978873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:49.979411      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:50.425305 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-453" for this suite. @ 12/28/24 13:15:50.429
• [6.258 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/28/24 13:15:50.437
  I1228 13:15:50.437233 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename watch @ 12/28/24 13:15:50.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:50.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:50.459
  STEP: getting a starting resourceVersion @ 12/28/24 13:15:50.462
  STEP: starting a background goroutine to produce watch events @ 12/28/24 13:15:50.466
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/28/24 13:15:50.466
  E1228 13:15:50.980024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:51.980233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:52.980574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:53.244000 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9253" for this suite. @ 12/28/24 13:15:53.293
• [2.909 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 12/28/24 13:15:53.346
  I1228 13:15:53.346506 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:15:53.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:53.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:53.367
  STEP: Setting up server cert @ 12/28/24 13:15:53.398
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:15:53.657
  STEP: Deploying the webhook pod @ 12/28/24 13:15:53.667
  STEP: Wait for the deployment to be ready @ 12/28/24 13:15:53.682
  I1228 13:15:53.696019 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:15:53.981376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:54.981556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:15:55.709
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:15:55.72
  E1228 13:15:55.981591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:15:56.720426 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/28/24 13:15:56.729
  STEP: verifying the validating webhook match conditions @ 12/28/24 13:15:56.739
  STEP: updating the validating webhook match conditions @ 12/28/24 13:15:56.742
  STEP: verifying the validating webhook match conditions @ 12/28/24 13:15:56.75
  I1228 13:15:56.802482 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3388" for this suite. @ 12/28/24 13:15:56.807
  STEP: Destroying namespace "webhook-markers-5507" for this suite. @ 12/28/24 13:15:56.815
• [3.477 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/28/24 13:15:56.823
  I1228 13:15:56.823630 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/28/24 13:15:56.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:15:56.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:15:56.846
  STEP: create the container to handle the HTTPGet hook request. @ 12/28/24 13:15:56.852
  E1228 13:15:56.981620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:57.982112      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/28/24 13:15:58.877
  E1228 13:15:58.982721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:15:59.982794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/28/24 13:16:00.896
  STEP: delete the pod with lifecycle hook @ 12/28/24 13:16:00.906
  E1228 13:16:00.983051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:01.984062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:16:02.923488 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4245" for this suite. @ 12/28/24 13:16:02.926
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/28/24 13:16:02.936
  I1228 13:16:02.936696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 13:16:02.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:16:02.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:16:02.961
  E1228 13:16:02.984394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:03.984885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:04.985068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:05.985201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:06.985797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:07.985885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:08.985981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:09.986851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:10.987800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:11.987929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:12.988012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:13.988103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:14.988917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:15.988974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:16.989086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:17.989189      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:18.989309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:19.989502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:20.989621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:21.989797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:22.989882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:23.989999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:24.990128      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:25.990214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:26.990367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:27.990489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:28.990602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:29.991026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:30.991167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:31.991309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:32.991401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:33.991501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:34.992541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:35.992681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:36.992796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:37.992918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:38.992993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:39.993455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:40.993873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:41.993970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:42.994047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:43.994870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:44.994956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:45.995045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:46.995136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:47.995225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:48.995853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:49.996588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:50.996877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:51.996964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:52.997062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:53.997878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:54.997929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:55.998077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:56.998211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:57.998356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:58.998484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:16:59.998593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:00.998866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:01.998984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:02.979214 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2733" for this suite. @ 12/28/24 13:17:02.982
• [60.054 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/28/24 13:17:02.99
  I1228 13:17:02.990963 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:17:02.991
  E1228 13:17:02.999638      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:03.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:03.011
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 13:17:03.014
  E1228 13:17:04.000615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:05.000753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:06.000922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:07.001021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:17:07.04
  I1228 13:17:07.045736 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-212b2e71-8dca-4731-b688-c1e2df17a439 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 13:17:07.054
  I1228 13:17:07.075459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7228" for this suite. @ 12/28/24 13:17:07.079
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 12/28/24 13:17:07.086
  I1228 13:17:07.086780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:17:07.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:07.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:07.109
  STEP: Setting up server cert @ 12/28/24 13:17:07.141
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:17:07.275
  STEP: Deploying the webhook pod @ 12/28/24 13:17:07.283
  STEP: Wait for the deployment to be ready @ 12/28/24 13:17:07.295
  I1228 13:17:07.303280 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:17:08.001109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:09.001197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:17:09.317
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:17:09.328
  E1228 13:17:10.001452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:10.328968 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/28/24 13:17:10.339
  STEP: create a namespace for the webhook @ 12/28/24 13:17:10.351
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/28/24 13:17:10.37
  I1228 13:17:10.416030 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5476" for this suite. @ 12/28/24 13:17:10.419
  STEP: Destroying namespace "webhook-markers-9374" for this suite. @ 12/28/24 13:17:10.432
  STEP: Destroying namespace "fail-closed-namespace-7662" for this suite. @ 12/28/24 13:17:10.439
• [3.358 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/28/24 13:17:10.445
  I1228 13:17:10.445026 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 13:17:10.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:10.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:10.464
  STEP: Creating service test in namespace statefulset-6773 @ 12/28/24 13:17:10.467
  STEP: Creating statefulset ss in namespace statefulset-6773 @ 12/28/24 13:17:10.473
  I1228 13:17:10.486219 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1228 13:17:11.001861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:12.002221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:13.002425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:14.002612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:15.002773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:16.002970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:17.003197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:18.003399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:19.003489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:20.003773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:20.488462 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/28/24 13:17:20.496
  STEP: updating a scale subresource @ 12/28/24 13:17:20.499
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/28/24 13:17:20.507
  STEP: Patch a scale subresource @ 12/28/24 13:17:20.51
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/28/24 13:17:20.516
  I1228 13:17:20.524210 19 statefulset.go:138] Deleting all statefulset in ns statefulset-6773
  I1228 13:17:20.528562 19 rest.go:150] Scaling statefulset ss to 0
  E1228 13:17:21.004635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:22.004808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:23.004904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:24.005465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:25.005578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:26.005765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:27.005787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:28.005971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:29.006051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:30.006119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:30.546242 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 13:17:30.549213 19 rest.go:88] Deleting statefulset ss
  I1228 13:17:30.563266 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6773" for this suite. @ 12/28/24 13:17:30.567
• [20.131 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/28/24 13:17:30.575
  I1228 13:17:30.575703 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:17:30.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:30.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:30.598
  STEP: Creating Pod @ 12/28/24 13:17:30.601
  E1228 13:17:31.006858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:32.007862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 12/28/24 13:17:32.622
  I1228 13:17:32.622036 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9154 PodName:pod-sharedvolume-adf0a3a4-7644-4b39-a39f-02457bdcb4cc ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:17:32.622055 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:17:32.622453 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:17:32.622489 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-9154/pods/pod-sharedvolume-adf0a3a4-7644-4b39-a39f-02457bdcb4cc/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1228 13:17:32.661666 19 exec_util.go:111] Exec stderr: ""
  I1228 13:17:32.661769 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9154" for this suite. @ 12/28/24 13:17:32.665
• [2.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 12/28/24 13:17:32.672
  I1228 13:17:32.672930 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-webhook @ 12/28/24 13:17:32.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:32.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:32.695
  STEP: Setting up server cert @ 12/28/24 13:17:32.698
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/28/24 13:17:32.826
  STEP: Deploying the custom resource conversion webhook pod @ 12/28/24 13:17:32.831
  STEP: Wait for the deployment to be ready @ 12/28/24 13:17:32.843
  I1228 13:17:32.850898 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1228 13:17:33.008198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:34.008356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:17:34.863
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:17:34.874
  E1228 13:17:35.008476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:35.874267 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1228 13:17:35.882744 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:17:36.009071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:37.009911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:38.010800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/28/24 13:17:38.441
  STEP: v2 custom resource should be converted @ 12/28/24 13:17:38.446
  I1228 13:17:39.008378 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1228 13:17:39.011484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-2912" for this suite. @ 12/28/24 13:17:39.012
• [6.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 12/28/24 13:17:39.021
  I1228 13:17:39.021310 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 13:17:39.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:39.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:39.04
  STEP: Creating a suspended job @ 12/28/24 13:17:39.047
  STEP: Patching the Job @ 12/28/24 13:17:39.054
  STEP: Watching for Job to be patched @ 12/28/24 13:17:39.069
  I1228 13:17:39.070829 19 job.go:1330] Event ADDED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-job-label:e2e-5r8mc] and annotations: map[]
  I1228 13:17:39.070856 19 job.go:1330] Event MODIFIED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-job-label:e2e-5r8mc] and annotations: map[]
  I1228 13:17:39.071001 19 job.go:1333] Event MODIFIED found for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[]
  STEP: Updating the job @ 12/28/24 13:17:39.071
  STEP: Watching for Job to be updated @ 12/28/24 13:17:39.082
  I1228 13:17:39.084397 19 job.go:1333] Event MODIFIED found for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  I1228 13:17:39.084455 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/28/24 13:17:39.084
  I1228 13:17:39.088550 19 job.go:1233] Job: e2e-5r8mc as labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc]
  STEP: Waiting for job to complete @ 12/28/24 13:17:39.088
  E1228 13:17:40.011717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:41.011840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:42.012146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:43.012246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:44.012449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:45.012917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:46.013022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:47.013173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:48.013815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:49.014865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 12/28/24 13:17:49.097
  STEP: Watching for Job to be deleted @ 12/28/24 13:17:49.107
  I1228 13:17:49.109619 19 job.go:1330] Event MODIFIED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  I1228 13:17:49.109679 19 job.go:1330] Event MODIFIED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  I1228 13:17:49.109691 19 job.go:1330] Event MODIFIED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  I1228 13:17:49.109796 19 job.go:1330] Event MODIFIED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  I1228 13:17:49.109815 19 job.go:1330] Event MODIFIED observed for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  I1228 13:17:49.109826 19 job.go:1333] Event DELETED found for Job e2e-5r8mc in namespace job-4032 with labels: map[e2e-5r8mc:patched e2e-job-label:e2e-5r8mc] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/28/24 13:17:49.109
  I1228 13:17:49.114551 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4032" for this suite. @ 12/28/24 13:17:49.117
• [10.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 12/28/24 13:17:49.134
  I1228 13:17:49.134199 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:17:49.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:49.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:49.155
  STEP: creating service endpoint-test2 in namespace services-4441 @ 12/28/24 13:17:49.158
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4441 to expose endpoints map[] @ 12/28/24 13:17:49.168
  I1228 13:17:49.172704 19 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1228 13:17:50.015790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:50.182344 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4441 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4441 @ 12/28/24 13:17:50.182
  E1228 13:17:51.015968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:52.016858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4441 to expose endpoints map[pod1:[80]] @ 12/28/24 13:17:52.205
  I1228 13:17:52.221298 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4441 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/28/24 13:17:52.221
  I1228 13:17:52.221344 19 resource.go:361] Creating new exec pod
  E1228 13:17:53.016968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:54.017359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:55.017490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:55.236835 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-4441 exec execpodh8m75 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1228 13:17:55.326508 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1228 13:17:55.326547 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:17:55.326614 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-4441 exec execpodh8m75 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.23 80'
  I1228 13:17:55.409918 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.23 80\nConnection to 10.152.183.23 80 port [tcp/http] succeeded!\n"
  I1228 13:17:55.409957 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4441 @ 12/28/24 13:17:55.409
  E1228 13:17:56.017734      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:17:57.018059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4441 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/28/24 13:17:57.428
  I1228 13:17:57.444111 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4441 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/28/24 13:17:57.444
  E1228 13:17:58.018164      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:58.444696 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-4441 exec execpodh8m75 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1228 13:17:58.529682 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1228 13:17:58.529725 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:17:58.529791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-4441 exec execpodh8m75 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.23 80'
  I1228 13:17:58.610040 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.23 80\nConnection to 10.152.183.23 80 port [tcp/http] succeeded!\n"
  I1228 13:17:58.610080 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4441 @ 12/28/24 13:17:58.61
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4441 to expose endpoints map[pod2:[80]] @ 12/28/24 13:17:58.628
  I1228 13:17:58.648234 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4441 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/28/24 13:17:58.648
  E1228 13:17:59.019153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:17:59.648857 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-4441 exec execpodh8m75 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1228 13:17:59.732831 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1228 13:17:59.732872 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:17:59.732939 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-4441 exec execpodh8m75 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.23 80'
  I1228 13:17:59.838600 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.23 80\nConnection to 10.152.183.23 80 port [tcp/http] succeeded!\n"
  I1228 13:17:59.838835 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4441 @ 12/28/24 13:17:59.838
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4441 to expose endpoints map[] @ 12/28/24 13:17:59.864
  I1228 13:17:59.884812 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4441 exposes endpoints map[]
  I1228 13:17:59.903660 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4441" for this suite. @ 12/28/24 13:17:59.908
• [10.781 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/28/24 13:17:59.915
  I1228 13:17:59.915535 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replicaset @ 12/28/24 13:17:59.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:17:59.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:17:59.937
  STEP: Create a Replicaset @ 12/28/24 13:17:59.946
  STEP: Verify that the required pods have come up. @ 12/28/24 13:17:59.951
  I1228 13:17:59.954571 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1228 13:18:00.019887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:01.020217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:02.020366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:03.020578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:04.020785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:04.961157 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/28/24 13:18:04.961
  STEP: Getting /status @ 12/28/24 13:18:04.961
  I1228 13:18:04.965616 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/28/24 13:18:04.965
  I1228 13:18:04.973526 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/28/24 13:18:04.973
  I1228 13:18:04.975241 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1228 13:18:04.975324 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.975372 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.975537 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.975560 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-3470 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1228 13:18:04.975569 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/28/24 13:18:04.975
  I1228 13:18:04.975668 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1228 13:18:04.983051 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/28/24 13:18:04.983
  I1228 13:18:04.984753 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1228 13:18:04.984842 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.984935 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.985095 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.985111 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-3470 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 13:18:04.985195 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1228 13:18:04.985240 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-3470 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1228 13:18:04.985278 19 replica_set.go:729] Replicaset test-rs has a patched status
  I1228 13:18:04.985380 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3470" for this suite. @ 12/28/24 13:18:04.989
• [5.082 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 12/28/24 13:18:04.997
  I1228 13:18:04.997502 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:18:04.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:18:05.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:18:05.017
  STEP: Creating a ResourceQuota @ 12/28/24 13:18:05.02
  E1228 13:18:05.020741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting a ResourceQuota @ 12/28/24 13:18:05.025
  STEP: Updating a ResourceQuota @ 12/28/24 13:18:05.029
  STEP: Verifying a ResourceQuota was modified @ 12/28/24 13:18:05.034
  STEP: Deleting a ResourceQuota @ 12/28/24 13:18:05.041
  STEP: Verifying the deleted ResourceQuota @ 12/28/24 13:18:05.048
  I1228 13:18:05.052508 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9115" for this suite. @ 12/28/24 13:18:05.055
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/28/24 13:18:05.062
  I1228 13:18:05.062629 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 13:18:05.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:18:05.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:18:05.08
  STEP: Creating service test in namespace statefulset-3721 @ 12/28/24 13:18:05.084
  STEP: Creating stateful set ss in namespace statefulset-3721 @ 12/28/24 13:18:05.09
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3721 @ 12/28/24 13:18:05.096
  I1228 13:18:05.100023 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1228 13:18:06.020962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:07.021073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:08.021328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:09.021435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:10.021703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:11.021910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:12.021979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:13.022275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:14.022373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:15.022525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:15.102612 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/28/24 13:18:15.102
  I1228 13:18:15.107003 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:18:15.190356 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:18:15.190389 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:18:15.190398 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:18:15.194191 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1228 13:18:16.023076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:17.024078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:18.024927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:19.025030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:20.025840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:21.026835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:22.026958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:23.027072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:24.027255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:25.027601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:25.197039 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:18:25.197077 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1228 13:18:25.214793 19 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I1228 13:18:25.214835 19 resource.go:175] ss-0  ip-172-31-65-66  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:05 +0000 UTC  }]
  I1228 13:18:25.214841 19 resource.go:178] 
  I1228 13:18:25.214847 19 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E1228 13:18:26.027775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:26.220918 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995936539s
  E1228 13:18:27.028791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:27.227055 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.989970609s
  E1228 13:18:28.028909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:28.231767 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983810885s
  E1228 13:18:29.029576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:29.237602 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.979109917s
  E1228 13:18:30.030491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:30.242759 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.97315244s
  E1228 13:18:31.030970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:31.247772 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.96761129s
  E1228 13:18:32.031063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:32.253496 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.962583219s
  E1228 13:18:33.031876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:33.258992 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.956760759s
  E1228 13:18:34.032855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:34.264138 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 951.607463ms
  E1228 13:18:35.033894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3721 @ 12/28/24 13:18:35.264
  I1228 13:18:35.270496 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:18:35.348385 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:18:35.348417 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:18:35.348425 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:18:35.348462 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:18:35.475464 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1228 13:18:35.475499 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:18:35.475509 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:18:35.475561 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:18:35.571810 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1228 13:18:35.571847 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:18:35.571858 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:18:35.575852 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:18:35.575877 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:18:35.575885 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/28/24 13:18:35.575
  I1228 13:18:35.580625 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:18:35.652579 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:18:35.652626 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:18:35.652635 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:18:35.652690 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:18:35.731369 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:18:35.731403 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:18:35.731411 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:18:35.731450 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-3721 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:18:35.807747 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:18:35.807783 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:18:35.807791 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:18:35.807800 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1228 13:18:35.812618 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1228 13:18:36.034887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:37.035864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:38.035962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:39.036055      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:40.036173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:41.036250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:42.036345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:43.036452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:44.036536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:18:45.036671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:45.816745 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:18:45.816777 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:18:45.816783 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:18:45.832949 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1228 13:18:45.832996 19 resource.go:175] ss-0  ip-172-31-65-66   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:05 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:05 +0000 UTC  }]
  I1228 13:18:45.833007 19 resource.go:175] ss-1  ip-172-31-87-122  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:25 +0000 UTC  }]
  I1228 13:18:45.833018 19 resource.go:175] ss-2  ip-172-31-45-142  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-28 13:18:25 +0000 UTC  }]
  I1228 13:18:45.833021 19 resource.go:178] 
  I1228 13:18:45.833025 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1228 13:18:46.037241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:46.838869 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.99501356s
  E1228 13:18:47.038235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:47.843087 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.989063434s
  E1228 13:18:48.038401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:48.848604 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.984886239s
  E1228 13:18:49.039034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:49.853966 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.978617844s
  E1228 13:18:50.039466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:50.858441 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.974027444s
  E1228 13:18:51.039619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:51.864106 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.969555615s
  E1228 13:18:52.040528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:52.869189 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.963879314s
  E1228 13:18:53.041551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:53.873967 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.958781309s
  E1228 13:18:54.042305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:54.879831 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 954.025483ms
  E1228 13:18:55.043145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3721 @ 12/28/24 13:18:55.879
  I1228 13:18:55.884895 19 rest.go:150] Scaling statefulset ss to 0
  I1228 13:18:55.893274 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 13:18:55.896663 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3721
  I1228 13:18:55.901779 19 rest.go:150] Scaling statefulset ss to 0
  I1228 13:18:55.908924 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 13:18:55.911840 19 rest.go:88] Deleting statefulset ss
  I1228 13:18:55.925431 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3721" for this suite. @ 12/28/24 13:18:55.928
• [50.873 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 12/28/24 13:18:55.935
  I1228 13:18:55.935744 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:18:55.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:18:55.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:18:55.956
  I1228 13:18:55.959642 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 create -f -'
  I1228 13:18:56.038141 19 builder.go:146] stderr: ""
  I1228 13:18:56.038171 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1228 13:18:56.038211 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 create -f -'
  E1228 13:18:56.043625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:56.120553 19 builder.go:146] stderr: ""
  I1228 13:18:56.120587 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/28/24 13:18:56.12
  E1228 13:18:57.043980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:57.127126 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 13:18:57.127159 19 framework.go:733] Found 0 / 1
  E1228 13:18:58.044868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:18:58.125678 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 13:18:58.125710 19 framework.go:733] Found 1 / 1
  I1228 13:18:58.125726 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1228 13:18:58.130626 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1228 13:18:58.130642 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1228 13:18:58.130697 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 describe pod agnhost-primary-shgss'
  I1228 13:18:58.183440 19 builder.go:146] stderr: ""
  I1228 13:18:58.183489 19 builder.go:147] stdout: "Name:             agnhost-primary-shgss\nNamespace:        kubectl-3325\nPriority:         0\nService Account:  default\nNode:             ip-172-31-65-66/172.31.65.66\nStart Time:       Sat, 28 Dec 2024 13:18:56 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.206.124\nIPs:\n  IP:           192.168.206.124\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6c833234187c5e41a6cbd70b665f58d781ee9a3b15aea29e2ddbcef8058b27a7\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 28 Dec 2024 13:18:56 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8tqk8 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-8tqk8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-3325/agnhost-primary-shgss to ip-172-31-65-66\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I1228 13:18:58.183538 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 describe rc agnhost-primary'
  I1228 13:18:58.238060 19 builder.go:146] stderr: ""
  I1228 13:18:58.238094 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3325\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-shgss\n"
  I1228 13:18:58.238135 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 describe service agnhost-primary'
  I1228 13:18:58.292677 19 builder.go:146] stderr: ""
  I1228 13:18:58.292709 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3325\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.161\nIPs:                      10.152.183.161\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.206.124:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1228 13:18:58.297342 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 describe node ip-172-31-19-50'
  I1228 13:18:58.363110 19 builder.go:146] stderr: ""
  I1228 13:18:58.363318 19 builder.go:147] stdout: "Name:               ip-172-31-19-50\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-19-50\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 28 Dec 2024 11:53:06 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-19-50\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 28 Dec 2024 13:18:53 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 28 Dec 2024 12:09:07 +0000   Sat, 28 Dec 2024 12:09:07 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 28 Dec 2024 13:14:19 +0000   Sat, 28 Dec 2024 11:53:06 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 28 Dec 2024 13:14:19 +0000   Sat, 28 Dec 2024 11:53:06 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 28 Dec 2024 13:14:19 +0000   Sat, 28 Dec 2024 11:53:06 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 28 Dec 2024 13:14:19 +0000   Sat, 28 Dec 2024 11:54:41 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.19.50\n  Hostname:    ip-172-31-19-50\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967636Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865236Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec20d10d24c5138697ea59c44234ca3f\n  System UUID:                ec20d10d-24c5-1386-97ea-59c44234ca3f\n  Boot ID:                    815c02ac-6d93-48bf-9d12-7ed8028091d5\n  Kernel Version:             6.8.0-1021-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.4\n  Kube-Proxy Version:         v1.31.4\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-l9mb7                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         69m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-jx2lm    0 (0%)        0 (0%)      0 (0%)           0 (0%)         66m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1228 13:18:58.363384 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3325 describe namespace kubectl-3325'
  I1228 13:18:58.415853 19 builder.go:146] stderr: ""
  I1228 13:18:58.415892 19 builder.go:147] stdout: "Name:         kubectl-3325\nLabels:       e2e-framework=kubectl\n              e2e-run=4e2befbe-a7a7-4839-8b3e-f434f95850f4\n              kubernetes.io/metadata.name=kubectl-3325\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1228 13:18:58.416009 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3325" for this suite. @ 12/28/24 13:18:58.419
• [2.491 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/28/24 13:18:58.427
  I1228 13:18:58.427329 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename init-container @ 12/28/24 13:18:58.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:18:58.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:18:58.452
  STEP: creating the pod @ 12/28/24 13:18:58.454
  I1228 13:18:58.454968 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1228 13:18:59.044960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:00.045865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:01.045972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:19:01.301988 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5514" for this suite. @ 12/28/24 13:19:01.305
• [2.886 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 12/28/24 13:19:01.313
  I1228 13:19:01.313892 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:19:01.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:19:01.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:19:01.339
  STEP: Setting up server cert @ 12/28/24 13:19:01.372
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:19:01.487
  STEP: Deploying the webhook pod @ 12/28/24 13:19:01.497
  STEP: Wait for the deployment to be ready @ 12/28/24 13:19:01.511
  I1228 13:19:01.518199 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1228 13:19:02.046054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:03.046156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:19:03.536
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:19:03.547
  E1228 13:19:04.046854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:19:04.547316 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1228 13:19:04.557485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:19:05.047575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9190-crds.webhook.example.com via the AdmissionRegistration API @ 12/28/24 13:19:05.069
  STEP: Creating a custom resource while v1 is storage version @ 12/28/24 13:19:05.084
  E1228 13:19:06.047701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:07.047813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/28/24 13:19:07.113
  STEP: Patching the custom resource while v2 is storage version @ 12/28/24 13:19:07.14
  I1228 13:19:07.764201 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5234" for this suite. @ 12/28/24 13:19:07.767
  STEP: Destroying namespace "webhook-markers-2183" for this suite. @ 12/28/24 13:19:07.775
• [6.470 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/28/24 13:19:07.783
  I1228 13:19:07.783904 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pod-network-test @ 12/28/24 13:19:07.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:19:07.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:19:07.806
  STEP: Performing setup for networking test in namespace pod-network-test-5485 @ 12/28/24 13:19:07.809
  STEP: creating a selector @ 12/28/24 13:19:07.809
  STEP: Creating the service pods in kubernetes @ 12/28/24 13:19:07.809
  I1228 13:19:07.809957 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1228 13:19:08.048280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:09.048392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:10.048816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:11.049841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:12.050313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:13.050417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:14.050531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:15.050752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:16.051123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:17.051324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:18.051393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:19.051605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/28/24 13:19:19.895
  E1228 13:19:20.052262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:21.052862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:19:21.913077 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1228 13:19:21.913108 19 networking.go:42] Breadth first check of 192.168.189.24 on host 172.31.45.142...
  I1228 13:19:21.915781 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.109:9080/dial?request=hostname&protocol=http&host=192.168.189.24&port=8083&tries=1'] Namespace:pod-network-test-5485 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:19:21.915800 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:19:21.916153 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:19:21.916190 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5485/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.189.24%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1228 13:19:21.958261 19 utils.go:356] Waiting for responses: map[]
  I1228 13:19:21.958287 19 utils.go:360] reached 192.168.189.24 after 0/1 tries
  I1228 13:19:21.958296 19 networking.go:42] Breadth first check of 192.168.206.76 on host 172.31.65.66...
  I1228 13:19:21.961879 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.109:9080/dial?request=hostname&protocol=http&host=192.168.206.76&port=8083&tries=1'] Namespace:pod-network-test-5485 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:19:21.961898 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:19:21.962232 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:19:21.962269 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5485/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.206.76%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1228 13:19:22.007708 19 utils.go:356] Waiting for responses: map[]
  I1228 13:19:22.007730 19 utils.go:360] reached 192.168.206.76 after 0/1 tries
  I1228 13:19:22.007743 19 networking.go:42] Breadth first check of 192.168.178.21 on host 172.31.87.122...
  I1228 13:19:22.011300 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.206.109:9080/dial?request=hostname&protocol=http&host=192.168.178.21&port=8083&tries=1'] Namespace:pod-network-test-5485 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:19:22.011320 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:19:22.011628 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:19:22.011676 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5485/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.206.109%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.178.21%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1228 13:19:22.050485 19 utils.go:356] Waiting for responses: map[]
  I1228 13:19:22.050507 19 utils.go:360] reached 192.168.178.21 after 0/1 tries
  I1228 13:19:22.050515 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1228 13:19:22.050593 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1228 13:19:22.053848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pod-network-test-5485" for this suite. @ 12/28/24 13:19:22.054
• [14.277 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/28/24 13:19:22.061
  I1228 13:19:22.061359 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename subpath @ 12/28/24 13:19:22.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:19:22.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:19:22.089
  STEP: Setting up data @ 12/28/24 13:19:22.097
  STEP: Creating pod pod-subpath-test-secret-f2zn @ 12/28/24 13:19:22.108
  STEP: Creating a pod to test atomic-volume-subpath @ 12/28/24 13:19:22.108
  E1228 13:19:23.054022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:24.054119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:25.054208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:26.054303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:27.054399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:28.054487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:29.054580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:30.054685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:31.055253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:32.055327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:33.055809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:34.056860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:35.056993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:36.057199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:37.057307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:38.057432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:39.057523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:40.057609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:41.057805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:42.057897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:43.058031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:44.058161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:45.058282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:46.058387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:19:46.191
  I1228 13:19:46.194760 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-subpath-test-secret-f2zn container test-container-subpath-secret-f2zn: <nil>
  STEP: delete the pod @ 12/28/24 13:19:46.213
  STEP: Deleting pod pod-subpath-test-secret-f2zn @ 12/28/24 13:19:46.231
  I1228 13:19:46.231735 19 delete.go:62] Deleting pod "pod-subpath-test-secret-f2zn" in namespace "subpath-9369"
  I1228 13:19:46.236277 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9369" for this suite. @ 12/28/24 13:19:46.24
• [24.185 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/28/24 13:19:46.246
  I1228 13:19:46.246485 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:19:46.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:19:46.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:19:46.268
  STEP: starting the proxy server @ 12/28/24 13:19:46.271
  I1228 13:19:46.271146 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-482 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/28/24 13:19:46.3
  I1228 13:19:46.307195 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1228 13:19:46.308169 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:39545

  I1228 13:19:46.308169 19 kubectl.go:2229] kubectl proxy stderr: W1228 13:19:46.300462     725 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-482" for this suite. @ 12/28/24 13:19:46.312
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/28/24 13:19:46.318
  I1228 13:19:46.318422 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 13:19:46.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:19:46.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:19:46.341
  STEP: Creating service test in namespace statefulset-7328 @ 12/28/24 13:19:46.344
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/28/24 13:19:46.351
  STEP: Creating stateful set ss in namespace statefulset-7328 @ 12/28/24 13:19:46.356
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7328 @ 12/28/24 13:19:46.364
  I1228 13:19:46.368303 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E1228 13:19:47.059262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:48.059369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:49.059461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:50.059548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:51.059687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:52.060007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:53.060207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:54.060386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:55.060493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:56.060858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:19:56.371066 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/28/24 13:19:56.371
  I1228 13:19:56.375070 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:19:56.458057 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:19:56.458084 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:19:56.458091 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:19:56.461601 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1228 13:19:57.061194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:58.061119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:19:59.061326      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:00.061630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:01.061824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:02.062006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:03.062220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:04.062398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:05.062743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:06.062910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:06.463641 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:20:06.463694 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1228 13:20:06.483828 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999981s
  E1228 13:20:07.063049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:07.490172 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.994987247s
  E1228 13:20:08.063856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:08.494964 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.989357497s
  E1228 13:20:09.064634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:09.500668 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.984468187s
  E1228 13:20:10.065445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:10.505898 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.978776264s
  E1228 13:20:11.065485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:11.511156 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.972987205s
  E1228 13:20:12.065562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:12.517834 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.967600948s
  E1228 13:20:13.066483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:13.523157 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.961718583s
  E1228 13:20:14.066784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:14.527865 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.956465134s
  E1228 13:20:15.067542      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:15.533753 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 951.700564ms
  E1228 13:20:16.068417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7328 @ 12/28/24 13:20:16.533
  I1228 13:20:16.539256 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:20:16.625818 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:20:16.625864 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:20:16.625872 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:20:16.631059 19 wait.go:40] Found 1 stateful pods, waiting for 3
  E1228 13:20:17.069256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:18.069845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:19.070022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:20.070274      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:21.070374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:22.070462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:23.070562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:24.070703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:25.070828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:26.071032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:26.633169 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:20:26.633200 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:20:26.633206 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/28/24 13:20:26.633
  STEP: Scale down will halt with unhealthy stateful pod @ 12/28/24 13:20:26.633
  I1228 13:20:26.640635 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:20:26.722100 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:20:26.722134 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:20:26.722144 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:20:26.722186 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:20:26.799626 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:20:26.799684 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:20:26.799692 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:20:26.799734 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:20:26.876847 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:20:26.876879 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:20:26.876888 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1228 13:20:26.876896 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1228 13:20:26.881017 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1228 13:20:27.071346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:28.071852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:29.072056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:30.072301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:31.072486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:32.072682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:33.072849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:34.073106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:35.073185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:36.073303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:36.886059 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:20:36.886091 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:20:36.886097 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1228 13:20:36.900003 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999751s
  E1228 13:20:37.074261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:37.905412 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996423518s
  E1228 13:20:38.074611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:38.910610 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991011596s
  E1228 13:20:39.074874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:39.915008 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.985811132s
  E1228 13:20:40.075221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:40.921307 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.981428785s
  E1228 13:20:41.075514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:41.926198 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.975112004s
  E1228 13:20:42.076369      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:42.931161 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.970127072s
  E1228 13:20:43.077276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:43.937100 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.965333845s
  E1228 13:20:44.078258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:44.941874 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.958800651s
  E1228 13:20:45.079270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:45.946487 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 954.339815ms
  E1228 13:20:46.079685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7328 @ 12/28/24 13:20:46.946
  I1228 13:20:46.952476 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:20:47.026852 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:20:47.026892 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:20:47.026901 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:20:47.026969 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1228 13:20:47.080379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:20:47.107175 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:20:47.107208 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:20:47.107217 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:20:47.107257 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-7328 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:20:47.177687 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:20:47.177725 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:20:47.177733 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1228 13:20:47.177742 19 rest.go:150] Scaling statefulset ss to 0
  E1228 13:20:48.081031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:49.081116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:50.081245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:51.082137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:52.082352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:53.082480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:54.082704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:55.082836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:56.082955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:57.083134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/28/24 13:20:57.185
  I1228 13:20:57.185832 19 statefulset.go:138] Deleting all statefulset in ns statefulset-7328
  I1228 13:20:57.190700 19 rest.go:150] Scaling statefulset ss to 0
  I1228 13:20:57.196901 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 13:20:57.199973 19 rest.go:88] Deleting statefulset ss
  I1228 13:20:57.213786 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7328" for this suite. @ 12/28/24 13:20:57.218
• [70.907 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 12/28/24 13:20:57.225
  I1228 13:20:57.225921 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:20:57.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:20:57.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:20:57.25
  STEP: Setting up server cert @ 12/28/24 13:20:57.279
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:20:57.608
  STEP: Deploying the webhook pod @ 12/28/24 13:20:57.617
  STEP: Wait for the deployment to be ready @ 12/28/24 13:20:57.63
  I1228 13:20:57.642493 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:20:58.083998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:20:59.084972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:20:59.656
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:20:59.667
  E1228 13:21:00.085065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:21:00.668634 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1228 13:21:00.677572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:21:01.085772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6532-crds.webhook.example.com via the AdmissionRegistration API @ 12/28/24 13:21:01.191
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/28/24 13:21:01.205
  E1228 13:21:02.085804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:03.086876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:21:03.797846 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5623" for this suite. @ 12/28/24 13:21:03.802
  STEP: Destroying namespace "webhook-markers-9684" for this suite. @ 12/28/24 13:21:03.81
• [6.594 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 12/28/24 13:21:03.819
  I1228 13:21:03.819410 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:21:03.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:21:03.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:21:03.84
  STEP: Setting up server cert @ 12/28/24 13:21:03.865
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:21:04.069
  STEP: Deploying the webhook pod @ 12/28/24 13:21:04.076
  E1228 13:21:04.087764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 12/28/24 13:21:04.088
  I1228 13:21:04.102566 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:21:05.088019      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:06.088174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:21:06.115
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:21:06.126
  E1228 13:21:07.088277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:21:07.126428 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/28/24 13:21:07.135
  STEP: create a configmap that should be updated by the webhook @ 12/28/24 13:21:07.149
  I1228 13:21:07.205260 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5979" for this suite. @ 12/28/24 13:21:07.208
  STEP: Destroying namespace "webhook-markers-166" for this suite. @ 12/28/24 13:21:07.215
• [3.402 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/28/24 13:21:07.221
  I1228 13:21:07.221127 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename cronjob @ 12/28/24 13:21:07.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:21:07.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:21:07.243
  STEP: Creating a suspended cronjob @ 12/28/24 13:21:07.246
  STEP: Ensuring no jobs are scheduled @ 12/28/24 13:21:07.251
  E1228 13:21:08.089323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:09.089432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:10.089580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:11.089804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:12.090803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:13.090800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:14.091873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:15.091999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:16.092109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:17.092228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:18.092340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:19.092436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:20.092843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:21.092955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:22.093547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:23.094250      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:24.095220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:25.095327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:26.095414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:27.095508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:28.095804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:29.095935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:30.096001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:31.096124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:32.096217      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:33.096307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:34.096860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:35.096971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:36.097070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:37.097271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:38.097415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:39.097520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:40.097779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:41.097913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:42.098056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:43.098160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:44.099101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:45.099195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:46.099308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:47.099422      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:48.099559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:49.099773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:50.099864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:51.099980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:52.100092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:53.100184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:54.100293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:55.100407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:56.100798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:57.101104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:58.101521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:21:59.101729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:00.101754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:01.101787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:02.102732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:03.102961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:04.103107      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:05.104199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:06.104532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:07.104617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:08.105475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:09.105887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:10.106736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:11.106784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:12.107102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:13.107877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:14.108868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:15.108974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:16.109072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:17.109177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:18.110041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:19.110238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:20.110341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:21.110465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:22.110576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:23.110798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:24.110918      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:25.111212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:26.111855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:27.112051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:28.112156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:29.112855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:30.112974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:31.113745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:32.113841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:33.113899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:34.114013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:35.114098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:36.114878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:37.114963      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:38.115793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:39.115889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:40.115972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:41.116077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:42.116856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:43.116959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:44.117069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:45.117299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:46.117879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:47.118172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:48.119194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:49.119391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:50.119537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:51.119765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:52.119869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:53.120104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:54.120213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:55.120868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:56.121860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:57.122017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:58.122190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:22:59.122305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:00.123220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:01.123386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:02.123476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:03.123576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:04.124505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:05.124619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:06.125623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:07.125788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:08.126606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:09.126807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:10.126912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:11.127004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:12.127172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:13.127239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:14.128225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:15.128343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:16.128441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:17.128518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:18.129500      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:19.129636      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:20.130635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:21.130846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:22.131545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:23.131681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:24.131796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:25.132115      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:26.133162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:27.133272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:28.133924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:29.134865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:30.135575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:31.135729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:32.135831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:33.135898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:34.136026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:35.136107      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:36.136869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:37.137839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:38.138796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:39.139011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:40.139101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:41.139190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:42.139328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:43.139439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:44.140318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:45.140425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:46.141263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:47.141372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:48.142156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:49.142271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:50.142877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:51.143052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:52.143877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:53.143974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:54.144857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:55.144954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:56.145740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:57.145990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:58.146672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:23:59.146851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:00.146958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:01.147150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:02.147371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:03.148332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:04.148871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:05.148998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:06.149905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:07.150157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:08.150749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:09.150935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:10.151920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:11.152102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:12.152766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:13.152870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:14.152983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:15.153254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:16.153367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:17.153539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:18.153637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:19.153770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:20.154708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:21.154782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:22.155073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:23.155832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:24.156227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:25.156830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:26.157821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:27.158020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:28.158402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:29.158579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:30.159666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:31.159859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:32.160719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:33.160907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:34.161463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:35.161573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:36.162341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:37.162535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:38.163188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:39.163290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:40.163358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:41.163860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:42.164836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:43.164929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:44.165123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:45.165832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:46.166677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:47.166861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:48.167777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:49.168205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:50.168424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:51.168840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:52.169427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:53.169523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:54.170470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:55.170574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:56.170717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:57.170957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:58.171747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:24:59.171862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:00.172526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:01.172668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:02.173455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:03.173550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:04.174296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:05.175074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:06.175614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:07.175777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:08.176831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:09.176945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:10.177849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:11.178027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:12.178548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:13.178680      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:14.179454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:15.179767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:16.180684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:17.180796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:18.181324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:19.181436      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:20.182458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:21.182841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:22.183879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:23.183979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:24.184460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:25.184554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:26.185296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:27.185380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:28.186301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:29.186404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:30.187089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:31.187188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:32.187763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:33.187877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:34.188241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:35.188333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:36.189239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:37.189378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:38.190307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:39.190429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:40.191284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:41.191397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:42.192228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:43.192463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:44.192554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:45.192826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:46.193131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:47.193758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:48.193852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:49.193946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:50.194306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:51.194900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:52.195489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:53.195860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:54.196573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:55.196773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:56.197138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:57.197480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:58.197852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:25:59.198043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:00.198471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:01.198615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:02.199553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:03.199769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:04.200218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:05.200327      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:06.200441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:07.200639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/28/24 13:26:07.251
  STEP: Removing cronjob @ 12/28/24 13:26:07.257
  I1228 13:26:07.265318 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8188" for this suite. @ 12/28/24 13:26:07.269
• [300.056 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/28/24 13:26:07.277
  I1228 13:26:07.277125 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 13:26:07.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:26:07.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:26:07.301
  STEP: Creating service test in namespace statefulset-3595 @ 12/28/24 13:26:07.303
  STEP: Creating a new StatefulSet @ 12/28/24 13:26:07.309
  I1228 13:26:07.320928 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1228 13:26:08.201037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:09.201153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:10.201402      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:11.201586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:12.201842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:13.202054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:14.202252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:15.202368      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:16.202457      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:17.202563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:26:17.322683 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:26:17.322713 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:26:17.322720 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/28/24 13:26:17.333
  I1228 13:26:17.345875 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/28/24 13:26:17.345
  E1228 13:26:18.202807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:19.202907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:20.202985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:21.203092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:22.203210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:23.203318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:24.203386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:25.203535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:26.203677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:27.203873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/28/24 13:26:27.354
  STEP: Performing a canary update @ 12/28/24 13:26:27.354
  I1228 13:26:27.364471 19 statefulset.go:2507] Updating stateful set ss2
  I1228 13:26:27.374852 19 wait.go:74] Waiting for Pod statefulset-3595/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1228 13:26:28.204590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:29.205442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:30.205795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:31.206833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:32.207835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:33.207948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:34.208192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:35.208302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:36.208508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:37.208786      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/28/24 13:26:37.374
  I1228 13:26:37.412090 19 wait.go:40] Found 1 stateful pods, waiting for 3
  E1228 13:26:38.208929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:39.209038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:40.209122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:41.209258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:42.209396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:43.209498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:44.209578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:45.209733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:46.209864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:47.209964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:26:47.411197 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:26:47.411232 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:26:47.411240 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/28/24 13:26:47.418
  I1228 13:26:47.429325 19 statefulset.go:2507] Updating stateful set ss2
  I1228 13:26:47.437872 19 wait.go:74] Waiting for Pod statefulset-3595/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1228 13:26:48.210946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:49.211080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:50.211879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:51.212079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:52.212296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:53.212486      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:54.212681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:55.212989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:56.213838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:57.213958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:26:57.450704 19 statefulset.go:2507] Updating stateful set ss2
  I1228 13:26:57.460757 19 wait.go:56] Waiting for StatefulSet statefulset-3595/ss2 to complete update
  I1228 13:26:57.460782 19 wait.go:63] Waiting for Pod statefulset-3595/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1228 13:26:58.214058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:26:59.214868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:00.215866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:01.215946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:02.216081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:03.216154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:04.216243      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:05.216395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:06.216519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:07.216781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:07.461043 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3595
  I1228 13:27:07.464519 19 rest.go:150] Scaling statefulset ss2 to 0
  E1228 13:27:08.216905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:09.217853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:10.218129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:11.218323      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:12.218435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:13.218581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:14.218694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:15.218801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:16.218912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:17.219099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:17.480134 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 13:27:17.483867 19 rest.go:88] Deleting statefulset ss2
  I1228 13:27:17.498321 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3595" for this suite. @ 12/28/24 13:27:17.501
• [70.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/28/24 13:27:17.508
  I1228 13:27:17.508870 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename init-container @ 12/28/24 13:27:17.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:17.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:17.53
  STEP: creating the pod @ 12/28/24 13:27:17.533
  I1228 13:27:17.533673 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1228 13:27:18.219586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:19.220256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:20.221169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:21.209597 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1600" for this suite. @ 12/28/24 13:27:21.214
• [3.712 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 12/28/24 13:27:21.22
  I1228 13:27:21.220821 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename field-validation @ 12/28/24 13:27:21.221
  E1228 13:27:21.221466      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:21.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:21.244
  I1228 13:27:21.246897 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:27:22.221674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:23.221982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1228 13:27:23.783741      19 warnings.go:70] unknown field "alpha"
  W1228 13:27:23.783760      19 warnings.go:70] unknown field "beta"
  W1228 13:27:23.783763      19 warnings.go:70] unknown field "delta"
  W1228 13:27:23.783766      19 warnings.go:70] unknown field "epsilon"
  W1228 13:27:23.783769      19 warnings.go:70] unknown field "gamma"
  E1228 13:27:24.222273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:24.331514 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5111" for this suite. @ 12/28/24 13:27:24.335
• [3.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 12/28/24 13:27:24.341
  I1228 13:27:24.341308 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-pred @ 12/28/24 13:27:24.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:24.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:24.361
  I1228 13:27:24.364106 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1228 13:27:24.371686 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1228 13:27:24.375044 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-142 before test
  I1228 13:27:24.380058 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-g5p6f from ingress-nginx-kubernetes-worker started at 2024-12-28 12:03:46 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.380072 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:27:24.380078 19 predicates.go:957] calico-node-fvkk5 from kube-system started at 2024-12-28 12:09:59 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.380083 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:27:24.380088 19 predicates.go:957] sonobuoy-e2e-job-fa890f0e542246f4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:27:24.380092 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1228 13:27:24.380098 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:27:24.380103 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-78kv4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:27:24.380111 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:27:24.380115 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:27:24.380121 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-66 before test
  I1228 13:27:24.384827 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-lc442 from ingress-nginx-kubernetes-worker started at 2024-12-28 12:51:14 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.384841 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:27:24.384847 19 predicates.go:957] pod-init-cf8df22b-7ab4-4961-8952-080783a254a4 from init-container-1600 started at 2024-12-28 13:27:17 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.384853 19 predicates.go:959] 	Container run1 ready: false, restart count 0
  I1228 13:27:24.384860 19 predicates.go:957] calico-node-5vw2r from kube-system started at 2024-12-28 12:08:44 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.384864 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:27:24.384869 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-28 12:12:27 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.384873 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1228 13:27:24.384879 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-shlws from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:27:24.384882 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:27:24.384887 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:27:24.384892 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-87-122 before test
  I1228 13:27:24.391305 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gr62s from ingress-nginx-kubernetes-worker started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.391320 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:27:24.391327 19 predicates.go:957] calico-node-2xjh4 from kube-system started at 2024-12-28 12:08:55 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.391332 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:27:24.391337 19 predicates.go:957] coredns-5b4857d7c8-qkzcv from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.391341 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1228 13:27:24.391347 19 predicates.go:957] kube-state-metrics-5d7bdccd49-24hp5 from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.391351 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1228 13:27:24.391356 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9bmck from kube-system started at 2024-12-28 11:53:44 +0000 UTC (2 container statuses recorded)
  I1228 13:27:24.391361 19 predicates.go:959] 	Container metrics-server ready: true, restart count 1
  I1228 13:27:24.391366 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1228 13:27:24.391374 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-h28df from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.391379 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1228 13:27:24.391383 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-874gb from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:27:24.391387 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 5
  I1228 13:27:24.391393 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-l94qm from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:27:24.391396 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:27:24.391402 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/28/24 13:27:24.391
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18155a3bd322d560], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 12/28/24 13:27:24.42
  E1228 13:27:25.222378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:25.418644 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-605" for this suite. @ 12/28/24 13:27:25.422
• [1.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/28/24 13:27:25.432
  I1228 13:27:25.432153 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename server-version @ 12/28/24 13:27:25.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:25.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:25.453
  STEP: Request ServerVersion @ 12/28/24 13:27:25.456
  STEP: Confirm major version @ 12/28/24 13:27:25.458
  I1228 13:27:25.458061 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/28/24 13:27:25.458
  I1228 13:27:25.458094 19 server_version.go:58] cleanMinorVersion: 31
  I1228 13:27:25.458101 19 server_version.go:62] Minor version: 31
  I1228 13:27:25.458184 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5319" for this suite. @ 12/28/24 13:27:25.461
• [0.037 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/28/24 13:27:25.468
  I1228 13:27:25.468811 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-runtime @ 12/28/24 13:27:25.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:25.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:25.492
  STEP: create the container @ 12/28/24 13:27:25.495
  W1228 13:27:25.504227      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/28/24 13:27:25.504
  E1228 13:27:26.222849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:27.222953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:28.223063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/28/24 13:27:28.523
  STEP: the container should be terminated @ 12/28/24 13:27:28.526
  STEP: the termination message should be set @ 12/28/24 13:27:28.526
  I1228 13:27:28.526587 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/28/24 13:27:28.526
  I1228 13:27:28.543363 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4511" for this suite. @ 12/28/24 13:27:28.548
• [3.089 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/28/24 13:27:28.557
  I1228 13:27:28.557431 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:27:28.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:28.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:28.58
  STEP: Creating configMap with name configmap-projected-all-test-volume-34d9246f-483a-4f33-a719-2f6775acdead @ 12/28/24 13:27:28.583
  STEP: Creating secret with name secret-projected-all-test-volume-687a0e4c-2686-42fd-8758-8528da287ced @ 12/28/24 13:27:28.588
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/28/24 13:27:28.592
  E1228 13:27:29.223872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:30.224420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:31.224802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:32.224896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:27:32.618
  I1228 13:27:32.622385 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod projected-volume-9468f06a-1b8a-4bf7-8516-626b97241bb7 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:27:32.638
  I1228 13:27:32.657465 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5439" for this suite. @ 12/28/24 13:27:32.661
• [4.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/28/24 13:27:32.667
  I1228 13:27:32.667813 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename endpointslice @ 12/28/24 13:27:32.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:32.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:32.688
  STEP: getting /apis @ 12/28/24 13:27:32.692
  STEP: getting /apis/discovery.k8s.io @ 12/28/24 13:27:32.695
  STEP: getting /apis/discovery.k8s.iov1 @ 12/28/24 13:27:32.697
  STEP: creating @ 12/28/24 13:27:32.698
  STEP: getting @ 12/28/24 13:27:32.714
  STEP: listing @ 12/28/24 13:27:32.717
  STEP: watching @ 12/28/24 13:27:32.721
  I1228 13:27:32.721371 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/28/24 13:27:32.722
  STEP: cluster-wide watching @ 12/28/24 13:27:32.726
  I1228 13:27:32.726045 19 endpointslice.go:459] starting watch
  STEP: patching @ 12/28/24 13:27:32.727
  STEP: updating @ 12/28/24 13:27:32.732
  I1228 13:27:32.740433 19 endpointslice.go:482] waiting for watch events with expected annotations
  I1228 13:27:32.740457 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/28/24 13:27:32.74
  STEP: deleting a collection @ 12/28/24 13:27:32.753
  I1228 13:27:32.770137 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2359" for this suite. @ 12/28/24 13:27:32.775
• [0.115 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/28/24 13:27:32.783
  I1228 13:27:32.783178 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 13:27:32.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:32.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:32.806
  STEP: Creating simple DaemonSet "daemon-set" @ 12/28/24 13:27:32.831
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/28/24 13:27:32.835
  I1228 13:27:32.839385 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:32.839418 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:32.842799 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:27:32.842817 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:27:33.225857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:33.842069 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:33.842109 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:33.846106 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:27:33.846126 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:27:34.226562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:34.840892 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:34.840937 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:34.844674 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 13:27:34.844693 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/28/24 13:27:34.849
  I1228 13:27:34.864827 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:34.864857 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:34.869852 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1228 13:27:34.869869 19 fixtures.go:130] Node ip-172-31-65-66 is running 0 daemon pod, expected 1
  E1228 13:27:35.227325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:35.867396 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:35.867439 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:35.873988 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1228 13:27:35.874007 19 fixtures.go:130] Node ip-172-31-65-66 is running 0 daemon pod, expected 1
  E1228 13:27:36.227392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:36.866974 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:36.867019 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:27:36.871757 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 13:27:36.871775 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/28/24 13:27:36.875
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5120, will wait for the garbage collector to delete the pods @ 12/28/24 13:27:36.875
  I1228 13:27:36.939155 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.464166ms
  I1228 13:27:37.039852 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.689488ms
  E1228 13:27:37.227903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:38.143884 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:27:38.143918 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1228 13:27:38.146997 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37994"},"items":null}

  I1228 13:27:38.151764 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37994"},"items":null}

  I1228 13:27:38.165551 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5120" for this suite. @ 12/28/24 13:27:38.17
• [5.394 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 12/28/24 13:27:38.177
  I1228 13:27:38.177300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 13:27:38.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:38.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:38.198
  STEP: Creating Indexed job @ 12/28/24 13:27:38.201
  STEP: Ensuring job reaches completions @ 12/28/24 13:27:38.208
  E1228 13:27:38.228320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:39.228666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:40.229415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:41.229630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:42.229850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:43.230861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:44.231768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:45.231888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:46.231912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:47.232136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 12/28/24 13:27:48.218
  I1228 13:27:48.224007 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5826" for this suite. @ 12/28/24 13:27:48.227
  E1228 13:27:48.232796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [10.060 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/28/24 13:27:48.237
  I1228 13:27:48.237123 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 13:27:48.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:48.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:48.262
  STEP: creating the pod @ 12/28/24 13:27:48.267
  STEP: setting up watch @ 12/28/24 13:27:48.267
  STEP: submitting the pod to kubernetes @ 12/28/24 13:27:48.372
  STEP: verifying the pod is in kubernetes @ 12/28/24 13:27:48.381
  STEP: verifying pod creation was observed @ 12/28/24 13:27:48.388
  E1228 13:27:49.232938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:50.233266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/28/24 13:27:50.402
  STEP: verifying pod deletion was observed @ 12/28/24 13:27:50.412
  I1228 13:27:51.162194 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2024" for this suite. @ 12/28/24 13:27:51.165
• [2.935 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/28/24 13:27:51.172
  I1228 13:27:51.172026 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename aggregator @ 12/28/24 13:27:51.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:27:51.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:27:51.192
  I1228 13:27:51.195595 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Registering the sample API server. @ 12/28/24 13:27:51.196
  E1228 13:27:51.233668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:51.446024 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1228 13:27:51.478228 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1228 13:27:52.233900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:53.233983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:53.527622 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:27:54.234065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:55.234173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:55.533262 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:27:56.235027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:57.235302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:57.533586 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:27:58.235209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:27:59.235262      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:27:59.533225 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:00.235763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:01.235859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:01.533554 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:02.235946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:03.236871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:03.533354 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:04.237035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:05.237205      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:05.533146 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:06.237769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:07.237888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:07.533779 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:08.238526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:09.238987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:09.532915 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:10.239174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:11.239366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:11.533175 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:12.239920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:13.240139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:13.533490 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 27, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1228 13:28:14.240463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:15.240635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:15.659663 19 aggregator.go:755] Waited 119.615156ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/28/24 13:28:15.694
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/28/24 13:28:15.698
  STEP: List APIServices @ 12/28/24 13:28:15.704
  I1228 13:28:15.709441 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/28/24 13:28:15.709
  I1228 13:28:15.722153 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/28/24 13:28:15.722
  I1228 13:28:15.733279 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 28, 13, 28, 15, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/28/24 13:28:15.733
  I1228 13:28:15.736458 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-28 13:28:15 +0000 UTC Passed all checks passed}
  I1228 13:28:15.736489 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 13:28:15.736499 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/28/24 13:28:15.736
  I1228 13:28:15.747737 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-869418447" @ 12/28/24 13:28:15.747
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/28/24 13:28:15.756
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/28/24 13:28:15.763
  STEP: Patch APIService Status @ 12/28/24 13:28:15.766
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/28/24 13:28:15.773
  I1228 13:28:15.777754 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-28 13:28:15 +0000 UTC Passed all checks passed}
  I1228 13:28:15.777779 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 13:28:15.777788 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1228 13:28:15.777799 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/28/24 13:28:15.777
  STEP: Confirm that the generated APIService has been deleted @ 12/28/24 13:28:15.789
  I1228 13:28:15.789464 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1228 13:28:15.793093 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1228 13:28:15.793111 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1228 13:28:15.902018 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9576" for this suite. @ 12/28/24 13:28:15.905
• [24.740 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/28/24 13:28:15.912
  I1228 13:28:15.912580 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename events @ 12/28/24 13:28:15.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:15.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:15.936
  STEP: Create set of events @ 12/28/24 13:28:15.939
  STEP: get a list of Events with a label in the current namespace @ 12/28/24 13:28:15.957
  STEP: delete a list of events @ 12/28/24 13:28:15.962
  I1228 13:28:15.962058 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/28/24 13:28:15.983
  I1228 13:28:15.985939 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1799" for this suite. @ 12/28/24 13:28:15.992
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/28/24 13:28:15.999
  I1228 13:28:15.999551 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 13:28:16
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:16.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:16.022
  STEP: creating a ServiceAccount @ 12/28/24 13:28:16.025
  STEP: watching for the ServiceAccount to be added @ 12/28/24 13:28:16.034
  STEP: patching the ServiceAccount @ 12/28/24 13:28:16.035
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/28/24 13:28:16.042
  STEP: deleting the ServiceAccount @ 12/28/24 13:28:16.045
  I1228 13:28:16.061245 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6889" for this suite. @ 12/28/24 13:28:16.064
• [0.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 12/28/24 13:28:16.072
  I1228 13:28:16.072234 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:28:16.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:16.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:16.093
  STEP: Setting up server cert @ 12/28/24 13:28:16.12
  E1228 13:28:16.241342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:28:16.384
  STEP: Deploying the webhook pod @ 12/28/24 13:28:16.389
  STEP: Wait for the deployment to be ready @ 12/28/24 13:28:16.403
  I1228 13:28:16.413074 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:28:17.241935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:18.242070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:28:18.426
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:28:18.436
  E1228 13:28:19.242602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:19.437012 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/28/24 13:28:19.446
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/28/24 13:28:19.459
  I1228 13:28:19.459585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:28:19.509122 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8865" for this suite. @ 12/28/24 13:28:19.514
  STEP: Destroying namespace "webhook-markers-5631" for this suite. @ 12/28/24 13:28:19.52
• [3.454 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/28/24 13:28:19.526
  I1228 13:28:19.526342 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svc-latency @ 12/28/24 13:28:19.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:19.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:19.545
  I1228 13:28:19.548395 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6186 @ 12/28/24 13:28:19.548
  I1228 13:28:19.556002      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6186, replica count: 1
  E1228 13:28:20.242863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:20.607417      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 13:28:20.720485 19 service_latency.go:356] Created: latency-svc-r6nnb
  I1228 13:28:20.726835 19 service_latency.go:363] Got endpoints: latency-svc-r6nnb [18.468003ms]
  I1228 13:28:20.742267 19 service_latency.go:356] Created: latency-svc-862bp
  I1228 13:28:20.746181 19 service_latency.go:356] Created: latency-svc-sgvwr
  I1228 13:28:20.747879 19 service_latency.go:363] Got endpoints: latency-svc-862bp [20.860575ms]
  I1228 13:28:20.752454 19 service_latency.go:363] Got endpoints: latency-svc-sgvwr [25.555391ms]
  I1228 13:28:20.755054 19 service_latency.go:356] Created: latency-svc-2t9gm
  I1228 13:28:20.761125 19 service_latency.go:363] Got endpoints: latency-svc-2t9gm [34.061688ms]
  I1228 13:28:20.766002 19 service_latency.go:356] Created: latency-svc-gsjg7
  I1228 13:28:20.767320 19 service_latency.go:356] Created: latency-svc-6smt7
  I1228 13:28:20.772127 19 service_latency.go:363] Got endpoints: latency-svc-gsjg7 [45.01108ms]
  I1228 13:28:20.774977 19 service_latency.go:363] Got endpoints: latency-svc-6smt7 [47.842243ms]
  I1228 13:28:20.779022 19 service_latency.go:356] Created: latency-svc-j6wkf
  I1228 13:28:20.783793 19 service_latency.go:363] Got endpoints: latency-svc-j6wkf [56.610359ms]
  I1228 13:28:20.786541 19 service_latency.go:356] Created: latency-svc-brbgq
  I1228 13:28:20.792372 19 service_latency.go:363] Got endpoints: latency-svc-brbgq [64.981111ms]
  I1228 13:28:20.797541 19 service_latency.go:356] Created: latency-svc-mn9tw
  I1228 13:28:20.804785 19 service_latency.go:356] Created: latency-svc-pzhck
  I1228 13:28:20.805379 19 service_latency.go:363] Got endpoints: latency-svc-mn9tw [78.026316ms]
  I1228 13:28:20.812105 19 service_latency.go:363] Got endpoints: latency-svc-pzhck [84.804122ms]
  I1228 13:28:20.815455 19 service_latency.go:356] Created: latency-svc-swt9x
  I1228 13:28:20.817512 19 service_latency.go:356] Created: latency-svc-swb62
  I1228 13:28:20.823811 19 service_latency.go:363] Got endpoints: latency-svc-swt9x [96.55091ms]
  I1228 13:28:20.824408 19 service_latency.go:363] Got endpoints: latency-svc-swb62 [97.092883ms]
  I1228 13:28:20.827222 19 service_latency.go:356] Created: latency-svc-6wh4f
  I1228 13:28:20.833086 19 service_latency.go:363] Got endpoints: latency-svc-6wh4f [105.878718ms]
  I1228 13:28:20.836220 19 service_latency.go:356] Created: latency-svc-hq2nb
  I1228 13:28:20.841672 19 service_latency.go:356] Created: latency-svc-2kgq2
  I1228 13:28:20.843025 19 service_latency.go:363] Got endpoints: latency-svc-hq2nb [115.650573ms]
  I1228 13:28:20.847570 19 service_latency.go:363] Got endpoints: latency-svc-2kgq2 [120.3358ms]
  I1228 13:28:20.852729 19 service_latency.go:356] Created: latency-svc-wwx7b
  I1228 13:28:20.860708 19 service_latency.go:356] Created: latency-svc-d8pp7
  I1228 13:28:20.863164 19 service_latency.go:356] Created: latency-svc-vrvzw
  I1228 13:28:20.867092 19 service_latency.go:363] Got endpoints: latency-svc-wwx7b [139.812795ms]
  I1228 13:28:20.869272 19 service_latency.go:363] Got endpoints: latency-svc-d8pp7 [121.37177ms]
  I1228 13:28:20.874514 19 service_latency.go:356] Created: latency-svc-zv8mv
  I1228 13:28:20.874967 19 service_latency.go:363] Got endpoints: latency-svc-vrvzw [122.479244ms]
  I1228 13:28:20.880182 19 service_latency.go:356] Created: latency-svc-58ddk
  I1228 13:28:20.886344 19 service_latency.go:356] Created: latency-svc-pzph4
  I1228 13:28:20.887133 19 service_latency.go:363] Got endpoints: latency-svc-zv8mv [125.981234ms]
  I1228 13:28:20.889786 19 service_latency.go:363] Got endpoints: latency-svc-58ddk [117.635934ms]
  I1228 13:28:20.897289 19 service_latency.go:356] Created: latency-svc-vbf68
  I1228 13:28:20.899092 19 service_latency.go:363] Got endpoints: latency-svc-pzph4 [124.08836ms]
  I1228 13:28:20.906328 19 service_latency.go:356] Created: latency-svc-vxrr4
  I1228 13:28:20.908227 19 service_latency.go:363] Got endpoints: latency-svc-vbf68 [124.41415ms]
  I1228 13:28:20.909490 19 service_latency.go:356] Created: latency-svc-z827x
  I1228 13:28:20.913310 19 service_latency.go:363] Got endpoints: latency-svc-vxrr4 [120.915376ms]
  I1228 13:28:20.918428 19 service_latency.go:363] Got endpoints: latency-svc-z827x [113.023201ms]
  I1228 13:28:20.921093 19 service_latency.go:356] Created: latency-svc-v6w8w
  I1228 13:28:20.925976 19 service_latency.go:356] Created: latency-svc-n8qbm
  I1228 13:28:20.926772 19 service_latency.go:363] Got endpoints: latency-svc-v6w8w [114.641865ms]
  I1228 13:28:20.931732 19 service_latency.go:356] Created: latency-svc-s6mdb
  I1228 13:28:20.934737 19 service_latency.go:363] Got endpoints: latency-svc-n8qbm [110.875737ms]
  I1228 13:28:20.941410 19 service_latency.go:363] Got endpoints: latency-svc-s6mdb [116.984396ms]
  I1228 13:28:20.942666 19 service_latency.go:356] Created: latency-svc-l9jwm
  I1228 13:28:20.949789 19 service_latency.go:356] Created: latency-svc-4vdqp
  I1228 13:28:20.953671 19 service_latency.go:363] Got endpoints: latency-svc-l9jwm [120.560632ms]
  I1228 13:28:20.956099 19 service_latency.go:363] Got endpoints: latency-svc-4vdqp [113.056534ms]
  I1228 13:28:20.961320 19 service_latency.go:356] Created: latency-svc-f9nvv
  I1228 13:28:20.965428 19 service_latency.go:356] Created: latency-svc-x778s
  I1228 13:28:20.967422 19 service_latency.go:363] Got endpoints: latency-svc-f9nvv [119.825763ms]
  I1228 13:28:20.975185 19 service_latency.go:356] Created: latency-svc-q9mbw
  I1228 13:28:20.978731 19 service_latency.go:356] Created: latency-svc-vgr7h
  I1228 13:28:20.980379 19 service_latency.go:363] Got endpoints: latency-svc-x778s [113.261744ms]
  I1228 13:28:20.989585 19 service_latency.go:363] Got endpoints: latency-svc-q9mbw [120.284215ms]
  I1228 13:28:20.989995 19 service_latency.go:356] Created: latency-svc-x228z
  I1228 13:28:20.990082 19 service_latency.go:363] Got endpoints: latency-svc-vgr7h [115.099609ms]
  I1228 13:28:20.997287 19 service_latency.go:356] Created: latency-svc-dvpgb
  I1228 13:28:20.997316 19 service_latency.go:363] Got endpoints: latency-svc-x228z [110.163365ms]
  I1228 13:28:21.004107 19 service_latency.go:363] Got endpoints: latency-svc-dvpgb [114.295016ms]
  I1228 13:28:21.006124 19 service_latency.go:356] Created: latency-svc-r9rk4
  I1228 13:28:21.011680 19 service_latency.go:356] Created: latency-svc-b5hs5
  I1228 13:28:21.017517 19 service_latency.go:356] Created: latency-svc-r46lc
  I1228 13:28:21.021843 19 service_latency.go:356] Created: latency-svc-vqxcx
  I1228 13:28:21.029811 19 service_latency.go:363] Got endpoints: latency-svc-r9rk4 [130.699848ms]
  I1228 13:28:21.030628 19 service_latency.go:356] Created: latency-svc-rt4g6
  I1228 13:28:21.037877 19 service_latency.go:356] Created: latency-svc-jz9rk
  I1228 13:28:21.043053 19 service_latency.go:356] Created: latency-svc-psdmb
  I1228 13:28:21.049153 19 service_latency.go:356] Created: latency-svc-h7mtv
  I1228 13:28:21.058226 19 service_latency.go:356] Created: latency-svc-zbxdp
  I1228 13:28:21.061316 19 service_latency.go:356] Created: latency-svc-nsrfj
  I1228 13:28:21.066255 19 service_latency.go:356] Created: latency-svc-2bgrd
  I1228 13:28:21.077417 19 service_latency.go:356] Created: latency-svc-ghzmw
  I1228 13:28:21.077754 19 service_latency.go:363] Got endpoints: latency-svc-b5hs5 [169.505411ms]
  I1228 13:28:21.082194 19 service_latency.go:356] Created: latency-svc-dzp5l
  I1228 13:28:21.088130 19 service_latency.go:356] Created: latency-svc-257dd
  I1228 13:28:21.094860 19 service_latency.go:356] Created: latency-svc-mx2g4
  I1228 13:28:21.097730 19 service_latency.go:356] Created: latency-svc-48mh8
  I1228 13:28:21.105547 19 service_latency.go:356] Created: latency-svc-kpvc7
  I1228 13:28:21.127055 19 service_latency.go:363] Got endpoints: latency-svc-r46lc [213.72301ms]
  I1228 13:28:21.138002 19 service_latency.go:356] Created: latency-svc-n5nlh
  I1228 13:28:21.178955 19 service_latency.go:363] Got endpoints: latency-svc-vqxcx [260.506366ms]
  I1228 13:28:21.188771 19 service_latency.go:356] Created: latency-svc-b8wwk
  I1228 13:28:21.227700 19 service_latency.go:363] Got endpoints: latency-svc-rt4g6 [300.910648ms]
  I1228 13:28:21.240514 19 service_latency.go:356] Created: latency-svc-7l8r5
  E1228 13:28:21.243605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:21.282060 19 service_latency.go:363] Got endpoints: latency-svc-jz9rk [347.296174ms]
  I1228 13:28:21.292712 19 service_latency.go:356] Created: latency-svc-j8xp9
  I1228 13:28:21.330284 19 service_latency.go:363] Got endpoints: latency-svc-psdmb [388.85165ms]
  I1228 13:28:21.338919 19 service_latency.go:356] Created: latency-svc-2bcwt
  I1228 13:28:21.379277 19 service_latency.go:363] Got endpoints: latency-svc-h7mtv [425.585103ms]
  I1228 13:28:21.388686 19 service_latency.go:356] Created: latency-svc-6b789
  I1228 13:28:21.429617 19 service_latency.go:363] Got endpoints: latency-svc-zbxdp [473.496522ms]
  I1228 13:28:21.442327 19 service_latency.go:356] Created: latency-svc-jpqcd
  I1228 13:28:21.477865 19 service_latency.go:363] Got endpoints: latency-svc-nsrfj [510.417722ms]
  I1228 13:28:21.488603 19 service_latency.go:356] Created: latency-svc-g6hvz
  I1228 13:28:21.527331 19 service_latency.go:363] Got endpoints: latency-svc-2bgrd [546.92312ms]
  I1228 13:28:21.537928 19 service_latency.go:356] Created: latency-svc-l445k
  I1228 13:28:21.580718 19 service_latency.go:363] Got endpoints: latency-svc-ghzmw [591.094566ms]
  I1228 13:28:21.593145 19 service_latency.go:356] Created: latency-svc-v8nbm
  I1228 13:28:21.628672 19 service_latency.go:363] Got endpoints: latency-svc-dzp5l [638.571924ms]
  I1228 13:28:21.640735 19 service_latency.go:356] Created: latency-svc-h2r6b
  I1228 13:28:21.678016 19 service_latency.go:363] Got endpoints: latency-svc-257dd [680.68416ms]
  I1228 13:28:21.692054 19 service_latency.go:356] Created: latency-svc-kt6g5
  I1228 13:28:21.728324 19 service_latency.go:363] Got endpoints: latency-svc-mx2g4 [724.193448ms]
  I1228 13:28:21.740169 19 service_latency.go:356] Created: latency-svc-sqftn
  I1228 13:28:21.779908 19 service_latency.go:363] Got endpoints: latency-svc-48mh8 [750.0757ms]
  I1228 13:28:21.788953 19 service_latency.go:356] Created: latency-svc-pvc94
  I1228 13:28:21.829189 19 service_latency.go:363] Got endpoints: latency-svc-kpvc7 [751.415346ms]
  I1228 13:28:21.842229 19 service_latency.go:356] Created: latency-svc-mgcmx
  I1228 13:28:21.877760 19 service_latency.go:363] Got endpoints: latency-svc-n5nlh [750.681405ms]
  I1228 13:28:21.890476 19 service_latency.go:356] Created: latency-svc-h4pn2
  I1228 13:28:21.928018 19 service_latency.go:363] Got endpoints: latency-svc-b8wwk [749.039817ms]
  I1228 13:28:21.939701 19 service_latency.go:356] Created: latency-svc-2rgnt
  I1228 13:28:21.977683 19 service_latency.go:363] Got endpoints: latency-svc-7l8r5 [749.948657ms]
  I1228 13:28:21.988026 19 service_latency.go:356] Created: latency-svc-vxnzx
  I1228 13:28:22.030323 19 service_latency.go:363] Got endpoints: latency-svc-j8xp9 [748.240268ms]
  I1228 13:28:22.041827 19 service_latency.go:356] Created: latency-svc-4hdhv
  I1228 13:28:22.078751 19 service_latency.go:363] Got endpoints: latency-svc-2bcwt [748.442904ms]
  I1228 13:28:22.090711 19 service_latency.go:356] Created: latency-svc-jsl8n
  I1228 13:28:22.127874 19 service_latency.go:363] Got endpoints: latency-svc-6b789 [748.567555ms]
  I1228 13:28:22.139691 19 service_latency.go:356] Created: latency-svc-8f8v6
  I1228 13:28:22.176904 19 service_latency.go:363] Got endpoints: latency-svc-jpqcd [747.260746ms]
  I1228 13:28:22.188180 19 service_latency.go:356] Created: latency-svc-zg8rr
  I1228 13:28:22.228530 19 service_latency.go:363] Got endpoints: latency-svc-g6hvz [750.632854ms]
  I1228 13:28:22.240535 19 service_latency.go:356] Created: latency-svc-92rqc
  E1228 13:28:22.243618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:22.280579 19 service_latency.go:363] Got endpoints: latency-svc-l445k [753.220251ms]
  I1228 13:28:22.291362 19 service_latency.go:356] Created: latency-svc-4h7qv
  I1228 13:28:22.328978 19 service_latency.go:363] Got endpoints: latency-svc-v8nbm [748.233408ms]
  I1228 13:28:22.340531 19 service_latency.go:356] Created: latency-svc-4dxbs
  I1228 13:28:22.377426 19 service_latency.go:363] Got endpoints: latency-svc-h2r6b [748.728574ms]
  I1228 13:28:22.388147 19 service_latency.go:356] Created: latency-svc-46q4p
  I1228 13:28:22.427928 19 service_latency.go:363] Got endpoints: latency-svc-kt6g5 [749.883022ms]
  I1228 13:28:22.439887 19 service_latency.go:356] Created: latency-svc-zp9fv
  I1228 13:28:22.478386 19 service_latency.go:363] Got endpoints: latency-svc-sqftn [750.032883ms]
  I1228 13:28:22.490211 19 service_latency.go:356] Created: latency-svc-2kdbb
  I1228 13:28:22.528842 19 service_latency.go:363] Got endpoints: latency-svc-pvc94 [748.910451ms]
  I1228 13:28:22.539055 19 service_latency.go:356] Created: latency-svc-dchl5
  I1228 13:28:22.579533 19 service_latency.go:363] Got endpoints: latency-svc-mgcmx [750.313558ms]
  I1228 13:28:22.589567 19 service_latency.go:356] Created: latency-svc-rcm4n
  I1228 13:28:22.629403 19 service_latency.go:363] Got endpoints: latency-svc-h4pn2 [751.582842ms]
  I1228 13:28:22.641956 19 service_latency.go:356] Created: latency-svc-rktfk
  I1228 13:28:22.677270 19 service_latency.go:363] Got endpoints: latency-svc-2rgnt [749.227152ms]
  I1228 13:28:22.685988 19 service_latency.go:356] Created: latency-svc-gstk5
  I1228 13:28:22.730933 19 service_latency.go:363] Got endpoints: latency-svc-vxnzx [753.226488ms]
  I1228 13:28:22.741539 19 service_latency.go:356] Created: latency-svc-vfv9g
  I1228 13:28:22.779885 19 service_latency.go:363] Got endpoints: latency-svc-4hdhv [749.539853ms]
  I1228 13:28:22.791575 19 service_latency.go:356] Created: latency-svc-bgskm
  I1228 13:28:22.829441 19 service_latency.go:363] Got endpoints: latency-svc-jsl8n [750.659233ms]
  I1228 13:28:22.838503 19 service_latency.go:356] Created: latency-svc-lq5nh
  I1228 13:28:22.878791 19 service_latency.go:363] Got endpoints: latency-svc-8f8v6 [750.861678ms]
  I1228 13:28:22.890311 19 service_latency.go:356] Created: latency-svc-jv6t2
  I1228 13:28:22.928360 19 service_latency.go:363] Got endpoints: latency-svc-zg8rr [751.408555ms]
  I1228 13:28:22.939286 19 service_latency.go:356] Created: latency-svc-5z7ml
  I1228 13:28:22.977937 19 service_latency.go:363] Got endpoints: latency-svc-92rqc [749.377558ms]
  I1228 13:28:22.987182 19 service_latency.go:356] Created: latency-svc-kcr6p
  I1228 13:28:23.030951 19 service_latency.go:363] Got endpoints: latency-svc-4h7qv [750.34654ms]
  I1228 13:28:23.042000 19 service_latency.go:356] Created: latency-svc-n966r
  I1228 13:28:23.078077 19 service_latency.go:363] Got endpoints: latency-svc-4dxbs [749.068136ms]
  I1228 13:28:23.091420 19 service_latency.go:356] Created: latency-svc-cdfj4
  I1228 13:28:23.126957 19 service_latency.go:363] Got endpoints: latency-svc-46q4p [749.49566ms]
  I1228 13:28:23.138466 19 service_latency.go:356] Created: latency-svc-qqp9c
  I1228 13:28:23.179032 19 service_latency.go:363] Got endpoints: latency-svc-zp9fv [751.071229ms]
  I1228 13:28:23.189179 19 service_latency.go:356] Created: latency-svc-8xvxj
  I1228 13:28:23.229810 19 service_latency.go:363] Got endpoints: latency-svc-2kdbb [751.392695ms]
  I1228 13:28:23.241767 19 service_latency.go:356] Created: latency-svc-frg6m
  E1228 13:28:23.243806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:23.278705 19 service_latency.go:363] Got endpoints: latency-svc-dchl5 [749.838868ms]
  I1228 13:28:23.289518 19 service_latency.go:356] Created: latency-svc-5wrtv
  I1228 13:28:23.328948 19 service_latency.go:363] Got endpoints: latency-svc-rcm4n [749.378791ms]
  I1228 13:28:23.340760 19 service_latency.go:356] Created: latency-svc-wxsvj
  I1228 13:28:23.378300 19 service_latency.go:363] Got endpoints: latency-svc-rktfk [748.875487ms]
  I1228 13:28:23.390839 19 service_latency.go:356] Created: latency-svc-s7562
  I1228 13:28:23.427320 19 service_latency.go:363] Got endpoints: latency-svc-gstk5 [750.028101ms]
  I1228 13:28:23.436776 19 service_latency.go:356] Created: latency-svc-t78f6
  I1228 13:28:23.480247 19 service_latency.go:363] Got endpoints: latency-svc-vfv9g [749.268855ms]
  I1228 13:28:23.491485 19 service_latency.go:356] Created: latency-svc-6dhv5
  I1228 13:28:23.529028 19 service_latency.go:363] Got endpoints: latency-svc-bgskm [749.11401ms]
  I1228 13:28:23.539684 19 service_latency.go:356] Created: latency-svc-vlgqp
  I1228 13:28:23.578006 19 service_latency.go:363] Got endpoints: latency-svc-lq5nh [748.541863ms]
  I1228 13:28:23.588809 19 service_latency.go:356] Created: latency-svc-6gt9l
  I1228 13:28:23.628290 19 service_latency.go:363] Got endpoints: latency-svc-jv6t2 [749.471172ms]
  I1228 13:28:23.638462 19 service_latency.go:356] Created: latency-svc-52xlb
  I1228 13:28:23.679879 19 service_latency.go:363] Got endpoints: latency-svc-5z7ml [751.496668ms]
  I1228 13:28:23.694752 19 service_latency.go:356] Created: latency-svc-8pgk7
  I1228 13:28:23.729547 19 service_latency.go:363] Got endpoints: latency-svc-kcr6p [751.58048ms]
  I1228 13:28:23.738581 19 service_latency.go:356] Created: latency-svc-tjwq7
  I1228 13:28:23.781073 19 service_latency.go:363] Got endpoints: latency-svc-n966r [750.093465ms]
  I1228 13:28:23.792161 19 service_latency.go:356] Created: latency-svc-m9nmv
  I1228 13:28:23.828240 19 service_latency.go:363] Got endpoints: latency-svc-cdfj4 [750.13165ms]
  I1228 13:28:23.840509 19 service_latency.go:356] Created: latency-svc-jqx7k
  I1228 13:28:23.878287 19 service_latency.go:363] Got endpoints: latency-svc-qqp9c [751.30371ms]
  I1228 13:28:23.889601 19 service_latency.go:356] Created: latency-svc-8nvft
  I1228 13:28:23.929480 19 service_latency.go:363] Got endpoints: latency-svc-8xvxj [750.418007ms]
  I1228 13:28:23.942592 19 service_latency.go:356] Created: latency-svc-hppll
  I1228 13:28:23.979250 19 service_latency.go:363] Got endpoints: latency-svc-frg6m [749.406597ms]
  I1228 13:28:23.989819 19 service_latency.go:356] Created: latency-svc-dxnwm
  I1228 13:28:24.027071 19 service_latency.go:363] Got endpoints: latency-svc-5wrtv [748.337088ms]
  I1228 13:28:24.042873 19 service_latency.go:356] Created: latency-svc-mnrkx
  I1228 13:28:24.078686 19 service_latency.go:363] Got endpoints: latency-svc-wxsvj [749.705878ms]
  I1228 13:28:24.088167 19 service_latency.go:356] Created: latency-svc-cj9hp
  I1228 13:28:24.129981 19 service_latency.go:363] Got endpoints: latency-svc-s7562 [751.647186ms]
  I1228 13:28:24.141358 19 service_latency.go:356] Created: latency-svc-h2545
  I1228 13:28:24.179157 19 service_latency.go:363] Got endpoints: latency-svc-t78f6 [751.805745ms]
  I1228 13:28:24.187620 19 service_latency.go:356] Created: latency-svc-htrjn
  I1228 13:28:24.229993 19 service_latency.go:363] Got endpoints: latency-svc-6dhv5 [749.716322ms]
  I1228 13:28:24.240596 19 service_latency.go:356] Created: latency-svc-msd9z
  E1228 13:28:24.244711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:24.278038 19 service_latency.go:363] Got endpoints: latency-svc-vlgqp [748.986319ms]
  I1228 13:28:24.291238 19 service_latency.go:356] Created: latency-svc-gmsbw
  I1228 13:28:24.327961 19 service_latency.go:363] Got endpoints: latency-svc-6gt9l [749.923592ms]
  I1228 13:28:24.338490 19 service_latency.go:356] Created: latency-svc-vpvcz
  I1228 13:28:24.380326 19 service_latency.go:363] Got endpoints: latency-svc-52xlb [751.898085ms]
  I1228 13:28:24.391303 19 service_latency.go:356] Created: latency-svc-8k7zl
  I1228 13:28:24.429643 19 service_latency.go:363] Got endpoints: latency-svc-8pgk7 [749.661671ms]
  I1228 13:28:24.441663 19 service_latency.go:356] Created: latency-svc-vxzp9
  I1228 13:28:24.477427 19 service_latency.go:363] Got endpoints: latency-svc-tjwq7 [747.844382ms]
  I1228 13:28:24.487989 19 service_latency.go:356] Created: latency-svc-fcn26
  I1228 13:28:24.527033 19 service_latency.go:363] Got endpoints: latency-svc-m9nmv [745.927092ms]
  I1228 13:28:24.538569 19 service_latency.go:356] Created: latency-svc-ppbg5
  I1228 13:28:24.578369 19 service_latency.go:363] Got endpoints: latency-svc-jqx7k [750.063844ms]
  I1228 13:28:24.589855 19 service_latency.go:356] Created: latency-svc-xjpkq
  I1228 13:28:24.628695 19 service_latency.go:363] Got endpoints: latency-svc-8nvft [750.367111ms]
  I1228 13:28:24.644083 19 service_latency.go:356] Created: latency-svc-fjtxc
  I1228 13:28:24.676869 19 service_latency.go:363] Got endpoints: latency-svc-hppll [747.355197ms]
  I1228 13:28:24.689286 19 service_latency.go:356] Created: latency-svc-5vnfx
  I1228 13:28:24.727891 19 service_latency.go:363] Got endpoints: latency-svc-dxnwm [748.606303ms]
  I1228 13:28:24.740393 19 service_latency.go:356] Created: latency-svc-4wkg5
  I1228 13:28:24.778171 19 service_latency.go:363] Got endpoints: latency-svc-mnrkx [751.062634ms]
  I1228 13:28:24.786712 19 service_latency.go:356] Created: latency-svc-2vvlh
  I1228 13:28:24.830350 19 service_latency.go:363] Got endpoints: latency-svc-cj9hp [751.627348ms]
  I1228 13:28:24.839799 19 service_latency.go:356] Created: latency-svc-2m569
  I1228 13:28:24.877727 19 service_latency.go:363] Got endpoints: latency-svc-h2545 [747.708128ms]
  I1228 13:28:24.890849 19 service_latency.go:356] Created: latency-svc-vzfwc
  I1228 13:28:24.928468 19 service_latency.go:363] Got endpoints: latency-svc-htrjn [749.270312ms]
  I1228 13:28:24.941777 19 service_latency.go:356] Created: latency-svc-n5rj4
  I1228 13:28:24.979676 19 service_latency.go:363] Got endpoints: latency-svc-msd9z [749.651017ms]
  I1228 13:28:24.989741 19 service_latency.go:356] Created: latency-svc-fz5j8
  I1228 13:28:25.029895 19 service_latency.go:363] Got endpoints: latency-svc-gmsbw [751.82706ms]
  I1228 13:28:25.041063 19 service_latency.go:356] Created: latency-svc-dn2pd
  I1228 13:28:25.078639 19 service_latency.go:363] Got endpoints: latency-svc-vpvcz [750.635549ms]
  I1228 13:28:25.089998 19 service_latency.go:356] Created: latency-svc-kq55p
  I1228 13:28:25.127743 19 service_latency.go:363] Got endpoints: latency-svc-8k7zl [747.384796ms]
  I1228 13:28:25.140550 19 service_latency.go:356] Created: latency-svc-vtmmg
  I1228 13:28:25.178871 19 service_latency.go:363] Got endpoints: latency-svc-vxzp9 [749.163855ms]
  I1228 13:28:25.191091 19 service_latency.go:356] Created: latency-svc-wbthr
  I1228 13:28:25.229408 19 service_latency.go:363] Got endpoints: latency-svc-fcn26 [751.938643ms]
  I1228 13:28:25.239331 19 service_latency.go:356] Created: latency-svc-rgz4l
  E1228 13:28:25.245403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:25.279527 19 service_latency.go:363] Got endpoints: latency-svc-ppbg5 [752.455428ms]
  I1228 13:28:25.290116 19 service_latency.go:356] Created: latency-svc-vkdw4
  I1228 13:28:25.327990 19 service_latency.go:363] Got endpoints: latency-svc-xjpkq [749.567706ms]
  I1228 13:28:25.340679 19 service_latency.go:356] Created: latency-svc-s6rbl
  I1228 13:28:25.377950 19 service_latency.go:363] Got endpoints: latency-svc-fjtxc [749.22357ms]
  I1228 13:28:25.390369 19 service_latency.go:356] Created: latency-svc-685td
  I1228 13:28:25.428090 19 service_latency.go:363] Got endpoints: latency-svc-5vnfx [751.181197ms]
  I1228 13:28:25.439150 19 service_latency.go:356] Created: latency-svc-dxbb6
  I1228 13:28:25.478895 19 service_latency.go:363] Got endpoints: latency-svc-4wkg5 [750.968393ms]
  I1228 13:28:25.491071 19 service_latency.go:356] Created: latency-svc-lws8c
  I1228 13:28:25.530583 19 service_latency.go:363] Got endpoints: latency-svc-2vvlh [752.379235ms]
  I1228 13:28:25.539617 19 service_latency.go:356] Created: latency-svc-f9zsv
  I1228 13:28:25.577690 19 service_latency.go:363] Got endpoints: latency-svc-2m569 [747.296097ms]
  I1228 13:28:25.589638 19 service_latency.go:356] Created: latency-svc-9vrdh
  I1228 13:28:25.627321 19 service_latency.go:363] Got endpoints: latency-svc-vzfwc [749.546243ms]
  I1228 13:28:25.640313 19 service_latency.go:356] Created: latency-svc-tvcth
  I1228 13:28:25.680786 19 service_latency.go:363] Got endpoints: latency-svc-n5rj4 [752.270116ms]
  I1228 13:28:25.689919 19 service_latency.go:356] Created: latency-svc-l5jfd
  I1228 13:28:25.730164 19 service_latency.go:363] Got endpoints: latency-svc-fz5j8 [750.451615ms]
  I1228 13:28:25.741250 19 service_latency.go:356] Created: latency-svc-lc2bg
  I1228 13:28:25.777456 19 service_latency.go:363] Got endpoints: latency-svc-dn2pd [747.458805ms]
  I1228 13:28:25.791130 19 service_latency.go:356] Created: latency-svc-t8kzc
  I1228 13:28:25.828569 19 service_latency.go:363] Got endpoints: latency-svc-kq55p [749.728761ms]
  I1228 13:28:25.839564 19 service_latency.go:356] Created: latency-svc-bn659
  I1228 13:28:25.880126 19 service_latency.go:363] Got endpoints: latency-svc-vtmmg [752.300014ms]
  I1228 13:28:25.891385 19 service_latency.go:356] Created: latency-svc-7q2tf
  I1228 13:28:25.929323 19 service_latency.go:363] Got endpoints: latency-svc-wbthr [750.417737ms]
  I1228 13:28:25.940809 19 service_latency.go:356] Created: latency-svc-nwdg2
  I1228 13:28:25.979471 19 service_latency.go:363] Got endpoints: latency-svc-rgz4l [749.922223ms]
  I1228 13:28:25.989118 19 service_latency.go:356] Created: latency-svc-s25hj
  I1228 13:28:26.028010 19 service_latency.go:363] Got endpoints: latency-svc-vkdw4 [748.44646ms]
  I1228 13:28:26.041303 19 service_latency.go:356] Created: latency-svc-7m45h
  I1228 13:28:26.077158 19 service_latency.go:363] Got endpoints: latency-svc-s6rbl [749.057952ms]
  I1228 13:28:26.091700 19 service_latency.go:356] Created: latency-svc-tbhz8
  I1228 13:28:26.128045 19 service_latency.go:363] Got endpoints: latency-svc-685td [749.940489ms]
  I1228 13:28:26.137139 19 service_latency.go:356] Created: latency-svc-55678
  I1228 13:28:26.179586 19 service_latency.go:363] Got endpoints: latency-svc-dxbb6 [751.469593ms]
  I1228 13:28:26.190679 19 service_latency.go:356] Created: latency-svc-mnbnj
  I1228 13:28:26.229266 19 service_latency.go:363] Got endpoints: latency-svc-lws8c [750.328302ms]
  I1228 13:28:26.240742 19 service_latency.go:356] Created: latency-svc-qf8n8
  E1228 13:28:26.245980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:26.277820 19 service_latency.go:363] Got endpoints: latency-svc-f9zsv [747.193036ms]
  I1228 13:28:26.294588 19 service_latency.go:356] Created: latency-svc-7kq4w
  I1228 13:28:26.327883 19 service_latency.go:363] Got endpoints: latency-svc-9vrdh [750.154663ms]
  I1228 13:28:26.337886 19 service_latency.go:356] Created: latency-svc-r225n
  I1228 13:28:26.378186 19 service_latency.go:363] Got endpoints: latency-svc-tvcth [750.838723ms]
  I1228 13:28:26.389578 19 service_latency.go:356] Created: latency-svc-vrkpg
  I1228 13:28:26.430515 19 service_latency.go:363] Got endpoints: latency-svc-l5jfd [749.68863ms]
  I1228 13:28:26.439365 19 service_latency.go:356] Created: latency-svc-zpgvl
  I1228 13:28:26.479365 19 service_latency.go:363] Got endpoints: latency-svc-lc2bg [749.159806ms]
  I1228 13:28:26.490229 19 service_latency.go:356] Created: latency-svc-s7hfd
  I1228 13:28:26.528954 19 service_latency.go:363] Got endpoints: latency-svc-t8kzc [751.464223ms]
  I1228 13:28:26.543723 19 service_latency.go:356] Created: latency-svc-9xrnh
  I1228 13:28:26.578135 19 service_latency.go:363] Got endpoints: latency-svc-bn659 [749.428032ms]
  I1228 13:28:26.591529 19 service_latency.go:356] Created: latency-svc-n6x5n
  I1228 13:28:26.627891 19 service_latency.go:363] Got endpoints: latency-svc-7q2tf [747.741709ms]
  I1228 13:28:26.638167 19 service_latency.go:356] Created: latency-svc-xnq58
  I1228 13:28:26.678625 19 service_latency.go:363] Got endpoints: latency-svc-nwdg2 [749.277321ms]
  I1228 13:28:26.689718 19 service_latency.go:356] Created: latency-svc-t79lh
  I1228 13:28:26.730480 19 service_latency.go:363] Got endpoints: latency-svc-s25hj [750.973013ms]
  I1228 13:28:26.739207 19 service_latency.go:356] Created: latency-svc-7r85h
  I1228 13:28:26.778860 19 service_latency.go:363] Got endpoints: latency-svc-7m45h [750.784006ms]
  I1228 13:28:26.791525 19 service_latency.go:356] Created: latency-svc-qjzb4
  I1228 13:28:26.828623 19 service_latency.go:363] Got endpoints: latency-svc-tbhz8 [751.429115ms]
  I1228 13:28:26.840551 19 service_latency.go:356] Created: latency-svc-9h8n7
  I1228 13:28:26.877858 19 service_latency.go:363] Got endpoints: latency-svc-55678 [749.774756ms]
  I1228 13:28:26.890784 19 service_latency.go:356] Created: latency-svc-k6zb7
  I1228 13:28:26.928545 19 service_latency.go:363] Got endpoints: latency-svc-mnbnj [748.918098ms]
  I1228 13:28:26.939390 19 service_latency.go:356] Created: latency-svc-mmvms
  I1228 13:28:26.978365 19 service_latency.go:363] Got endpoints: latency-svc-qf8n8 [749.056984ms]
  I1228 13:28:26.990111 19 service_latency.go:356] Created: latency-svc-9dx2h
  I1228 13:28:27.030707 19 service_latency.go:363] Got endpoints: latency-svc-7kq4w [752.846713ms]
  I1228 13:28:27.042988 19 service_latency.go:356] Created: latency-svc-qtzlm
  I1228 13:28:27.077922 19 service_latency.go:363] Got endpoints: latency-svc-r225n [750.005408ms]
  I1228 13:28:27.090722 19 service_latency.go:356] Created: latency-svc-p6vtt
  I1228 13:28:27.127542 19 service_latency.go:363] Got endpoints: latency-svc-vrkpg [749.318397ms]
  I1228 13:28:27.139584 19 service_latency.go:356] Created: latency-svc-8zd2r
  I1228 13:28:27.178450 19 service_latency.go:363] Got endpoints: latency-svc-zpgvl [747.898996ms]
  I1228 13:28:27.193797 19 service_latency.go:356] Created: latency-svc-jxb47
  I1228 13:28:27.227663 19 service_latency.go:363] Got endpoints: latency-svc-s7hfd [748.237488ms]
  I1228 13:28:27.237437 19 service_latency.go:356] Created: latency-svc-svr8z
  E1228 13:28:27.246518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:27.278674 19 service_latency.go:363] Got endpoints: latency-svc-9xrnh [749.688765ms]
  I1228 13:28:27.289799 19 service_latency.go:356] Created: latency-svc-ckcxm
  I1228 13:28:27.330171 19 service_latency.go:363] Got endpoints: latency-svc-n6x5n [752.003884ms]
  I1228 13:28:27.339546 19 service_latency.go:356] Created: latency-svc-fr6wn
  I1228 13:28:27.378933 19 service_latency.go:363] Got endpoints: latency-svc-xnq58 [751.014818ms]
  I1228 13:28:27.389510 19 service_latency.go:356] Created: latency-svc-gh5ww
  I1228 13:28:27.427714 19 service_latency.go:363] Got endpoints: latency-svc-t79lh [749.038757ms]
  I1228 13:28:27.442404 19 service_latency.go:356] Created: latency-svc-kwkvl
  I1228 13:28:27.478221 19 service_latency.go:363] Got endpoints: latency-svc-7r85h [747.704699ms]
  I1228 13:28:27.490535 19 service_latency.go:356] Created: latency-svc-4545p
  I1228 13:28:27.529367 19 service_latency.go:363] Got endpoints: latency-svc-qjzb4 [750.468575ms]
  I1228 13:28:27.540043 19 service_latency.go:356] Created: latency-svc-nlnj5
  I1228 13:28:27.579347 19 service_latency.go:363] Got endpoints: latency-svc-9h8n7 [750.67703ms]
  I1228 13:28:27.590853 19 service_latency.go:356] Created: latency-svc-ngrlj
  I1228 13:28:27.628632 19 service_latency.go:363] Got endpoints: latency-svc-k6zb7 [750.674807ms]
  I1228 13:28:27.640198 19 service_latency.go:356] Created: latency-svc-xw52r
  I1228 13:28:27.679600 19 service_latency.go:363] Got endpoints: latency-svc-mmvms [751.009875ms]
  I1228 13:28:27.691339 19 service_latency.go:356] Created: latency-svc-x4wcp
  I1228 13:28:27.727405 19 service_latency.go:363] Got endpoints: latency-svc-9dx2h [749.003645ms]
  I1228 13:28:27.739591 19 service_latency.go:356] Created: latency-svc-wwcvg
  I1228 13:28:27.782221 19 service_latency.go:363] Got endpoints: latency-svc-qtzlm [751.361875ms]
  I1228 13:28:27.791869 19 service_latency.go:356] Created: latency-svc-hr52k
  I1228 13:28:27.829019 19 service_latency.go:363] Got endpoints: latency-svc-p6vtt [750.98458ms]
  I1228 13:28:27.838854 19 service_latency.go:356] Created: latency-svc-gppn4
  I1228 13:28:27.878120 19 service_latency.go:363] Got endpoints: latency-svc-8zd2r [750.549265ms]
  I1228 13:28:27.889920 19 service_latency.go:356] Created: latency-svc-d2clc
  I1228 13:28:27.928392 19 service_latency.go:363] Got endpoints: latency-svc-jxb47 [749.909408ms]
  I1228 13:28:27.938343 19 service_latency.go:356] Created: latency-svc-fgvpt
  I1228 13:28:27.979459 19 service_latency.go:363] Got endpoints: latency-svc-svr8z [751.758223ms]
  I1228 13:28:27.990814 19 service_latency.go:356] Created: latency-svc-x8mx9
  I1228 13:28:28.029491 19 service_latency.go:363] Got endpoints: latency-svc-ckcxm [750.782438ms]
  I1228 13:28:28.042557 19 service_latency.go:356] Created: latency-svc-s2nfb
  I1228 13:28:28.078326 19 service_latency.go:363] Got endpoints: latency-svc-fr6wn [748.122709ms]
  I1228 13:28:28.089031 19 service_latency.go:356] Created: latency-svc-2kr9z
  I1228 13:28:28.127769 19 service_latency.go:363] Got endpoints: latency-svc-gh5ww [748.800061ms]
  I1228 13:28:28.139053 19 service_latency.go:356] Created: latency-svc-j76b2
  I1228 13:28:28.178054 19 service_latency.go:363] Got endpoints: latency-svc-kwkvl [750.308487ms]
  I1228 13:28:28.188564 19 service_latency.go:356] Created: latency-svc-4l2h8
  I1228 13:28:28.230669 19 service_latency.go:363] Got endpoints: latency-svc-4545p [752.424252ms]
  I1228 13:28:28.242445 19 service_latency.go:356] Created: latency-svc-twtgw
  E1228 13:28:28.247479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:28.278733 19 service_latency.go:363] Got endpoints: latency-svc-nlnj5 [749.337504ms]
  I1228 13:28:28.288548 19 service_latency.go:356] Created: latency-svc-sl9xp
  I1228 13:28:28.328170 19 service_latency.go:363] Got endpoints: latency-svc-ngrlj [748.698571ms]
  I1228 13:28:28.341323 19 service_latency.go:356] Created: latency-svc-l64rl
  I1228 13:28:28.379261 19 service_latency.go:363] Got endpoints: latency-svc-xw52r [750.562741ms]
  I1228 13:28:28.389173 19 service_latency.go:356] Created: latency-svc-4k4zp
  I1228 13:28:28.427845 19 service_latency.go:363] Got endpoints: latency-svc-x4wcp [748.208152ms]
  I1228 13:28:28.438842 19 service_latency.go:356] Created: latency-svc-6mlq2
  I1228 13:28:28.479333 19 service_latency.go:363] Got endpoints: latency-svc-wwcvg [751.88401ms]
  I1228 13:28:28.490306 19 service_latency.go:356] Created: latency-svc-xflk8
  I1228 13:28:28.528260 19 service_latency.go:363] Got endpoints: latency-svc-hr52k [745.985954ms]
  I1228 13:28:28.539341 19 service_latency.go:356] Created: latency-svc-v5g7z
  I1228 13:28:28.578216 19 service_latency.go:363] Got endpoints: latency-svc-gppn4 [749.168685ms]
  I1228 13:28:28.629328 19 service_latency.go:363] Got endpoints: latency-svc-d2clc [751.175793ms]
  I1228 13:28:28.678115 19 service_latency.go:363] Got endpoints: latency-svc-fgvpt [749.693351ms]
  I1228 13:28:28.729459 19 service_latency.go:363] Got endpoints: latency-svc-x8mx9 [749.970689ms]
  I1228 13:28:28.776699 19 service_latency.go:363] Got endpoints: latency-svc-s2nfb [747.17318ms]
  I1228 13:28:28.829879 19 service_latency.go:363] Got endpoints: latency-svc-2kr9z [751.511887ms]
  I1228 13:28:28.877978 19 service_latency.go:363] Got endpoints: latency-svc-j76b2 [750.176771ms]
  I1228 13:28:28.928866 19 service_latency.go:363] Got endpoints: latency-svc-4l2h8 [750.786724ms]
  I1228 13:28:28.978989 19 service_latency.go:363] Got endpoints: latency-svc-twtgw [748.284232ms]
  I1228 13:28:29.030208 19 service_latency.go:363] Got endpoints: latency-svc-sl9xp [751.430816ms]
  I1228 13:28:29.077554 19 service_latency.go:363] Got endpoints: latency-svc-l64rl [749.35356ms]
  I1228 13:28:29.130579 19 service_latency.go:363] Got endpoints: latency-svc-4k4zp [751.289998ms]
  I1228 13:28:29.178682 19 service_latency.go:363] Got endpoints: latency-svc-6mlq2 [750.80276ms]
  I1228 13:28:29.226843 19 service_latency.go:363] Got endpoints: latency-svc-xflk8 [747.476901ms]
  E1228 13:28:29.248280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:28:29.280512 19 service_latency.go:363] Got endpoints: latency-svc-v5g7z [752.198585ms]
  I1228 13:28:29.280616 19 service_latency.go:114] Latencies: [20.860575ms 25.555391ms 34.061688ms 45.01108ms 47.842243ms 56.610359ms 64.981111ms 78.026316ms 84.804122ms 96.55091ms 97.092883ms 105.878718ms 110.163365ms 110.875737ms 113.023201ms 113.056534ms 113.261744ms 114.295016ms 114.641865ms 115.099609ms 115.650573ms 116.984396ms 117.635934ms 119.825763ms 120.284215ms 120.3358ms 120.560632ms 120.915376ms 121.37177ms 122.479244ms 124.08836ms 124.41415ms 125.981234ms 130.699848ms 139.812795ms 169.505411ms 213.72301ms 260.506366ms 300.910648ms 347.296174ms 388.85165ms 425.585103ms 473.496522ms 510.417722ms 546.92312ms 591.094566ms 638.571924ms 680.68416ms 724.193448ms 745.927092ms 745.985954ms 747.17318ms 747.193036ms 747.260746ms 747.296097ms 747.355197ms 747.384796ms 747.458805ms 747.476901ms 747.704699ms 747.708128ms 747.741709ms 747.844382ms 747.898996ms 748.122709ms 748.208152ms 748.233408ms 748.237488ms 748.240268ms 748.284232ms 748.337088ms 748.442904ms 748.44646ms 748.541863ms 748.567555ms 748.606303ms 748.698571ms 748.728574ms 748.800061ms 748.875487ms 748.910451ms 748.918098ms 748.986319ms 749.003645ms 749.038757ms 749.039817ms 749.056984ms 749.057952ms 749.068136ms 749.11401ms 749.159806ms 749.163855ms 749.168685ms 749.22357ms 749.227152ms 749.268855ms 749.270312ms 749.277321ms 749.318397ms 749.337504ms 749.35356ms 749.377558ms 749.378791ms 749.406597ms 749.428032ms 749.471172ms 749.49566ms 749.539853ms 749.546243ms 749.567706ms 749.651017ms 749.661671ms 749.68863ms 749.688765ms 749.693351ms 749.705878ms 749.716322ms 749.728761ms 749.774756ms 749.838868ms 749.883022ms 749.909408ms 749.922223ms 749.923592ms 749.940489ms 749.948657ms 749.970689ms 750.005408ms 750.028101ms 750.032883ms 750.063844ms 750.0757ms 750.093465ms 750.13165ms 750.154663ms 750.176771ms 750.308487ms 750.313558ms 750.328302ms 750.34654ms 750.367111ms 750.417737ms 750.418007ms 750.451615ms 750.468575ms 750.549265ms 750.562741ms 750.632854ms 750.635549ms 750.659233ms 750.674807ms 750.67703ms 750.681405ms 750.782438ms 750.784006ms 750.786724ms 750.80276ms 750.838723ms 750.861678ms 750.968393ms 750.973013ms 750.98458ms 751.009875ms 751.014818ms 751.062634ms 751.071229ms 751.175793ms 751.181197ms 751.289998ms 751.30371ms 751.361875ms 751.392695ms 751.408555ms 751.415346ms 751.429115ms 751.430816ms 751.464223ms 751.469593ms 751.496668ms 751.511887ms 751.58048ms 751.582842ms 751.627348ms 751.647186ms 751.758223ms 751.805745ms 751.82706ms 751.88401ms 751.898085ms 751.938643ms 752.003884ms 752.198585ms 752.270116ms 752.300014ms 752.379235ms 752.424252ms 752.455428ms 752.846713ms 753.220251ms 753.226488ms]
  I1228 13:28:29.280629 19 service_latency.go:118] 50 %ile: 749.35356ms
  I1228 13:28:29.280635 19 service_latency.go:119] 90 %ile: 751.58048ms
  I1228 13:28:29.280645 19 service_latency.go:120] 99 %ile: 753.220251ms
  I1228 13:28:29.280666 19 service_latency.go:121] Total sample count: 200
  I1228 13:28:29.280747 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6186" for this suite. @ 12/28/24 13:28:29.286
• [9.769 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/28/24 13:28:29.295
  I1228 13:28:29.295871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename subpath @ 12/28/24 13:28:29.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:29.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:29.313
  STEP: Setting up data @ 12/28/24 13:28:29.316
  STEP: Creating pod pod-subpath-test-downwardapi-jgqt @ 12/28/24 13:28:29.327
  STEP: Creating a pod to test atomic-volume-subpath @ 12/28/24 13:28:29.327
  E1228 13:28:30.248398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:31.248566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:32.248615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:33.248816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:34.249571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:35.249674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:36.249793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:37.249887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:38.249986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:39.250911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:40.251054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:41.251141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:42.251235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:43.251366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:44.251859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:45.251987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:46.252119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:47.252211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:48.252430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:49.253185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:50.253221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:51.253358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:28:51.401
  I1228 13:28:51.404524 19 output.go:196] Trying to get logs from node ip-172-31-45-142 pod pod-subpath-test-downwardapi-jgqt container test-container-subpath-downwardapi-jgqt: <nil>
  STEP: delete the pod @ 12/28/24 13:28:51.422
  STEP: Deleting pod pod-subpath-test-downwardapi-jgqt @ 12/28/24 13:28:51.438
  I1228 13:28:51.438295 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-jgqt" in namespace "subpath-2080"
  I1228 13:28:51.442609 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2080" for this suite. @ 12/28/24 13:28:51.445
• [22.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/28/24 13:28:51.455
  I1228 13:28:51.455414 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:28:51.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:51.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:51.477
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 13:28:51.48
  E1228 13:28:52.254332      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:53.254863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:28:53.501
  I1228 13:28:53.504881 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-59d10bfb-d94a-45e0-b536-9756b0595b94 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 13:28:53.512
  I1228 13:28:53.533372 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3549" for this suite. @ 12/28/24 13:28:53.536
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/28/24 13:28:53.542
  I1228 13:28:53.542775 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename gc @ 12/28/24 13:28:53.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:53.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:53.563
  STEP: create the deployment @ 12/28/24 13:28:53.566
  W1228 13:28:53.572521      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/28/24 13:28:53.572
  STEP: delete the deployment @ 12/28/24 13:28:53.578
  STEP: wait for all rs to be garbage collected @ 12/28/24 13:28:53.587
  STEP: expected 0 rs, got 1 rs @ 12/28/24 13:28:53.59
  STEP: expected 0 pods, got 1 pods @ 12/28/24 13:28:53.597
  STEP: Gathering metrics @ 12/28/24 13:28:54.101
  W1228 13:28:54.106781      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1228 13:28:54.106807 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1228 13:28:54.106931 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7907" for this suite. @ 12/28/24 13:28:54.11
• [0.574 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/28/24 13:28:54.117
  I1228 13:28:54.117062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:28:54.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:54.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:54.141
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/28/24 13:28:54.144
  E1228 13:28:54.255891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:55.256038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:56.256501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:57.256602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:28:58.169
  I1228 13:28:58.172490 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-e19d1c08-4c28-47cc-ba60-4afa5bb4a80e container test-container: <nil>
  STEP: delete the pod @ 12/28/24 13:28:58.181
  I1228 13:28:58.199806 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3097" for this suite. @ 12/28/24 13:28:58.203
• [4.094 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 12/28/24 13:28:58.21
  I1228 13:28:58.210701 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption @ 12/28/24 13:28:58.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:28:58.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:28:58.233
  I1228 13:28:58.252251 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 13:28:58.256608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:28:59.256984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:00.257290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:01.259421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:02.259683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:03.259854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:04.260566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:05.260729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:06.261183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:07.261352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:08.261502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:09.261946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:10.262415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:11.262567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:12.262816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:13.263015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:14.263498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:15.263595      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:16.264216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:17.264917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:18.270674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:19.270912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:20.271434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:21.271611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:22.272348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:23.272547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:24.273529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:25.274589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:26.275123      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:27.275248      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:28.275298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:29.275988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:30.276603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:31.276774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:32.277078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:33.277843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:34.278667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:35.278809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:36.279598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:37.279803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:38.280066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:39.280925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:40.281324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:41.281503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:42.282337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:43.282439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:44.282808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:45.283382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:46.283821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:47.283954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:48.284597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:49.285561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:50.286334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:51.286523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:52.286788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:53.286912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:54.287160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:55.287347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:56.287531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:29:57.287678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:29:58.257815 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/28/24 13:29:58.261
  I1228 13:29:58.261090 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/28/24 13:29:58.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:29:58.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:29:58.283
  E1228 13:29:58.288442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:29:58.301257 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1228 13:29:58.304757 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1228 13:29:58.375289 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3414" for this suite. @ 12/28/24 13:29:58.378
  I1228 13:29:58.387919 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4984" for this suite. @ 12/28/24 13:29:58.392
• [60.189 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 12/28/24 13:29:58.399
  I1228 13:29:58.399815 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 13:29:58.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:29:58.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:29:58.421
  STEP: Creating a test externalName service @ 12/28/24 13:29:58.425
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3162.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3162.svc.cluster.local; sleep 1; done
   @ 12/28/24 13:29:58.43
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3162.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3162.svc.cluster.local; sleep 1; done
   @ 12/28/24 13:29:58.43
  STEP: creating a pod to probe DNS @ 12/28/24 13:29:58.43
  STEP: submitting the pod to kubernetes @ 12/28/24 13:29:58.43
  E1228 13:29:59.288544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:00.288681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 13:30:00.452
  STEP: looking for the results for each expected name from probers @ 12/28/24 13:30:00.456
  I1228 13:30:00.466391 19 dns_common.go:552] DNS probes using dns-test-44d06dd8-c6ef-4457-8369-41f672c786b1 succeeded

  STEP: changing the externalName to bar.example.com @ 12/28/24 13:30:00.466
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3162.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3162.svc.cluster.local; sleep 1; done
   @ 12/28/24 13:30:00.478
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3162.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3162.svc.cluster.local; sleep 1; done
   @ 12/28/24 13:30:00.478
  STEP: creating a second pod to probe DNS @ 12/28/24 13:30:00.478
  STEP: submitting the pod to kubernetes @ 12/28/24 13:30:00.478
  E1228 13:30:01.288757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:02.288802      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:03.288914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:04.289914      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:05.290875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:06.290972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 13:30:06.503
  STEP: looking for the results for each expected name from probers @ 12/28/24 13:30:06.508
  I1228 13:30:06.518247 19 dns_common.go:552] DNS probes using dns-test-914ac24c-08e8-4f50-9bee-71ed732666e7 succeeded

  STEP: changing the service to type=ClusterIP @ 12/28/24 13:30:06.518
  W1228 13:30:06.532878      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3162.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3162.svc.cluster.local; sleep 1; done
   @ 12/28/24 13:30:06.532
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3162.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3162.svc.cluster.local; sleep 1; done
   @ 12/28/24 13:30:06.532
  STEP: creating a third pod to probe DNS @ 12/28/24 13:30:06.532
  STEP: submitting the pod to kubernetes @ 12/28/24 13:30:06.536
  E1228 13:30:07.291970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:08.292184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 13:30:08.556
  STEP: looking for the results for each expected name from probers @ 12/28/24 13:30:08.56
  I1228 13:30:08.570189 19 dns_common.go:552] DNS probes using dns-test-3f6ae22d-af4e-452c-8be7-9806eecfe650 succeeded

  STEP: deleting the pod @ 12/28/24 13:30:08.57
  STEP: deleting the pod @ 12/28/24 13:30:08.586
  STEP: deleting the pod @ 12/28/24 13:30:08.607
  STEP: deleting the test externalName service @ 12/28/24 13:30:08.63
  I1228 13:30:08.647191 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3162" for this suite. @ 12/28/24 13:30:08.65
• [10.256 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 12/28/24 13:30:08.656
  I1228 13:30:08.656219 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 13:30:08.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:08.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:08.677
  STEP: Creating a job @ 12/28/24 13:30:08.68
  STEP: Ensuring job reaches completions @ 12/28/24 13:30:08.687
  E1228 13:30:09.292597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:10.292807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:11.292904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:12.292984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:13.293043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:14.293306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:15.293493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:16.293730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:17.294642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:18.294795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:19.295464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:20.295870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:30:20.698120 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5998" for this suite. @ 12/28/24 13:30:20.701
• [12.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/28/24 13:30:20.71
  I1228 13:30:20.710250 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:30:20.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:20.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:20.729
  STEP: Starting the proxy @ 12/28/24 13:30:20.732
  I1228 13:30:20.732908 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4600 proxy --unix-socket=/tmp/kubectl-proxy-unix865758893/test'
  STEP: retrieving proxy /api/ output @ 12/28/24 13:30:20.761
  I1228 13:30:20.762074 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4600" for this suite. @ 12/28/24 13:30:20.767
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/28/24 13:30:20.776
  I1228 13:30:20.776085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename events @ 12/28/24 13:30:20.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:20.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:20.8
  STEP: creating a test event @ 12/28/24 13:30:20.804
  STEP: listing all events in all namespaces @ 12/28/24 13:30:20.809
  STEP: patching the test event @ 12/28/24 13:30:20.813
  STEP: fetching the test event @ 12/28/24 13:30:20.82
  STEP: updating the test event @ 12/28/24 13:30:20.823
  STEP: getting the test event @ 12/28/24 13:30:20.834
  STEP: deleting the test event @ 12/28/24 13:30:20.836
  STEP: listing all events in all namespaces @ 12/28/24 13:30:20.844
  I1228 13:30:20.849483 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3585" for this suite. @ 12/28/24 13:30:20.853
• [0.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/28/24 13:30:20.861
  I1228 13:30:20.861700 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:30:20.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:20.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:20.882
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/28/24 13:30:20.885
  E1228 13:30:21.296860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:22.297706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:23.298574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:24.299629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:30:24.907
  I1228 13:30:24.911131 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-145bdacb-cab5-4e3d-8208-c1bd1382d673 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 13:30:24.917
  I1228 13:30:24.936153 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6291" for this suite. @ 12/28/24 13:30:24.941
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/28/24 13:30:24.948
  I1228 13:30:24.948454 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 13:30:24.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:24.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:24.968
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 13:30:24.971
  E1228 13:30:25.299818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:26.300127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:27.301011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:28.301876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:30:28.997
  I1228 13:30:29.001686 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-a6bca80c-eae2-4425-b229-07e6a2038df7 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 13:30:29.008
  I1228 13:30:29.029169 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1842" for this suite. @ 12/28/24 13:30:29.034
• [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/28/24 13:30:29.042
  I1228 13:30:29.042570 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 13:30:29.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:29.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:29.067
  STEP: Creating configMap with name configmap-test-volume-map-4cd4afaf-9a5a-4b4b-90aa-f978e0939db6 @ 12/28/24 13:30:29.07
  STEP: Creating a pod to test consume configMaps @ 12/28/24 13:30:29.076
  E1228 13:30:29.301911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:30.302120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:31.302208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:32.302338      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:30:33.102
  I1228 13:30:33.106364 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-d75b02a9-c3c3-4f5d-b063-6fc39e033ac2 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:30:33.112
  I1228 13:30:33.132215 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8375" for this suite. @ 12/28/24 13:30:33.135
• [4.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/28/24 13:30:33.142
  I1228 13:30:33.142961 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 13:30:33.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:33.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:33.165
  STEP: Creating a pod to test downward api env vars @ 12/28/24 13:30:33.168
  E1228 13:30:33.302401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:34.302663      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:35.303334      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:36.303449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:30:37.195
  I1228 13:30:37.199133 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downward-api-22c90b6a-b889-4588-baf3-bf0db1be93a4 container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 13:30:37.207
  I1228 13:30:37.227002 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7776" for this suite. @ 12/28/24 13:30:37.23
• [4.095 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 12/28/24 13:30:37.238
  I1228 13:30:37.238177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:30:37.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:37.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:37.263
  STEP: Counting existing ResourceQuota @ 12/28/24 13:30:37.27
  E1228 13:30:37.304161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:38.305150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:39.305740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:40.306336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:41.306557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 13:30:42.274
  STEP: Ensuring resource quota status is calculated @ 12/28/24 13:30:42.28
  E1228 13:30:42.307220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:43.307493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 12/28/24 13:30:44.286
  STEP: Ensuring resource quota status captures replicaset creation @ 12/28/24 13:30:44.299
  E1228 13:30:44.308339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:45.308517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 12/28/24 13:30:46.304
  E1228 13:30:46.309200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 12/28/24 13:30:46.312
  E1228 13:30:47.309335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:48.309454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:30:48.318850 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4895" for this suite. @ 12/28/24 13:30:48.322
• [11.093 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/28/24 13:30:48.331
  I1228 13:30:48.331509 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename endpointslice @ 12/28/24 13:30:48.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:48.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:48.354
  E1228 13:30:49.309639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:50.309793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 12/28/24 13:30:50.426
  STEP: referencing matching pods with named port @ 12/28/24 13:30:50.434
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/28/24 13:30:50.443
  STEP: recreating EndpointSlices after they've been deleted @ 12/28/24 13:30:50.451
  I1228 13:30:50.471494 19 endpointslice.go:938] EndpointSlice for Service endpointslice-7403/example-named-port not found
  E1228 13:30:51.309895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:52.310148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:30:52.478507 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7403" for this suite. @ 12/28/24 13:30:52.483
• [4.161 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 12/28/24 13:30:52.492
  I1228 13:30:52.492548 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-pred @ 12/28/24 13:30:52.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:52.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:52.515
  I1228 13:30:52.518313 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1228 13:30:52.524905 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1228 13:30:52.527714 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-142 before test
  I1228 13:30:52.531902 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-g5p6f from ingress-nginx-kubernetes-worker started at 2024-12-28 12:03:46 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.531916 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:30:52.531922 19 predicates.go:957] calico-node-fvkk5 from kube-system started at 2024-12-28 12:09:59 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.531928 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:30:52.531933 19 predicates.go:957] sonobuoy-e2e-job-fa890f0e542246f4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:30:52.531937 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1228 13:30:52.531943 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:30:52.531948 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-78kv4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:30:52.531952 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:30:52.531957 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:30:52.531962 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-66 before test
  I1228 13:30:52.536463 19 predicates.go:957] pod1 from endpointslice-7403 started at 2024-12-28 13:30:48 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.536477 19 predicates.go:959] 	Container container1 ready: true, restart count 0
  I1228 13:30:52.536483 19 predicates.go:957] pod2 from endpointslice-7403 started at 2024-12-28 13:30:48 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.536488 19 predicates.go:959] 	Container container1 ready: true, restart count 0
  I1228 13:30:52.536494 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-lc442 from ingress-nginx-kubernetes-worker started at 2024-12-28 12:51:14 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.536498 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:30:52.536504 19 predicates.go:957] calico-node-5vw2r from kube-system started at 2024-12-28 12:08:44 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.536508 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:30:52.536514 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-28 12:12:27 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.536519 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1228 13:30:52.536531 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-shlws from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:30:52.536535 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:30:52.536540 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:30:52.536545 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-87-122 before test
  I1228 13:30:52.542985 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gr62s from ingress-nginx-kubernetes-worker started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.542999 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:30:52.543005 19 predicates.go:957] calico-node-2xjh4 from kube-system started at 2024-12-28 12:08:55 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.543009 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:30:52.543014 19 predicates.go:957] coredns-5b4857d7c8-qkzcv from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.543019 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1228 13:30:52.543025 19 predicates.go:957] kube-state-metrics-5d7bdccd49-24hp5 from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.543029 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1228 13:30:52.543039 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9bmck from kube-system started at 2024-12-28 11:53:44 +0000 UTC (2 container statuses recorded)
  I1228 13:30:52.543043 19 predicates.go:959] 	Container metrics-server ready: true, restart count 1
  I1228 13:30:52.543047 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1228 13:30:52.543053 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-h28df from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.543057 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1228 13:30:52.543062 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-874gb from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:30:52.543067 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 5
  I1228 13:30:52.543072 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-l94qm from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:30:52.543075 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:30:52.543097 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/28/24 13:30:52.543
  E1228 13:30:53.310856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:54.310913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/28/24 13:30:54.564
  STEP: Trying to apply a random label on the found node. @ 12/28/24 13:30:54.58
  STEP: verifying the node has the label kubernetes.io/e2e-42000fa7-aa1a-40d7-9c42-ac6a9489314b 42 @ 12/28/24 13:30:54.59
  STEP: Trying to relaunch the pod, now with labels. @ 12/28/24 13:30:54.593
  E1228 13:30:55.311788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:56.311869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-42000fa7-aa1a-40d7-9c42-ac6a9489314b off the node ip-172-31-45-142 @ 12/28/24 13:30:56.614
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-42000fa7-aa1a-40d7-9c42-ac6a9489314b @ 12/28/24 13:30:56.626
  I1228 13:30:56.630582 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3286" for this suite. @ 12/28/24 13:30:56.634
• [4.150 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/28/24 13:30:56.643
  I1228 13:30:56.643172 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 13:30:56.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:56.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:56.668
  STEP: creating secret secrets-745/secret-test-abc94c50-a50c-4f8d-93ee-e5888b0c482e @ 12/28/24 13:30:56.671
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:30:56.676
  E1228 13:30:57.312093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:30:58.312865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:30:58.697
  I1228 13:30:58.700207 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-e961be62-5c39-495a-ac41-d1614ccb3580 container env-test: <nil>
  STEP: delete the pod @ 12/28/24 13:30:58.708
  I1228 13:30:58.727859 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-745" for this suite. @ 12/28/24 13:30:58.732
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 12/28/24 13:30:58.738
  I1228 13:30:58.738968 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 13:30:58.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:30:58.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:30:58.761
  STEP: Creating a job @ 12/28/24 13:30:58.764
  STEP: Ensuring active pods == parallelism @ 12/28/24 13:30:58.769
  E1228 13:30:59.312957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:00.313062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 12/28/24 13:31:00.774
  STEP: deleting Job.batch foo in namespace job-694, will wait for the garbage collector to delete the pods @ 12/28/24 13:31:00.774
  I1228 13:31:00.836920 19 resources.go:139] Deleting Job.batch foo took: 7.132787ms
  I1228 13:31:00.937775 19 resources.go:163] Terminating Job.batch foo pods took: 100.850641ms
  E1228 13:31:01.313740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 12/28/24 13:31:01.637
  I1228 13:31:01.643379 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-694" for this suite. @ 12/28/24 13:31:01.647
• [2.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/28/24 13:31:01.656
  I1228 13:31:01.656480 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename prestop @ 12/28/24 13:31:01.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:31:01.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:31:01.677
  STEP: Creating server pod server in namespace prestop-4797 @ 12/28/24 13:31:01.68
  STEP: Waiting for pods to come up. @ 12/28/24 13:31:01.688
  E1228 13:31:02.313801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:03.313962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4797 @ 12/28/24 13:31:03.699
  E1228 13:31:04.314612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:05.314865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 12/28/24 13:31:05.717
  E1228 13:31:06.315876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:07.315957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:08.316039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:09.316921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:10.317023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:10.732988 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/28/24 13:31:10.733
  I1228 13:31:10.749924 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4797" for this suite. @ 12/28/24 13:31:10.753
• [9.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 12/28/24 13:31:10.761
  I1228 13:31:10.761256 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:31:10.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:31:10.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:31:10.783
  STEP: Setting up server cert @ 12/28/24 13:31:10.809
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:31:11.009
  STEP: Deploying the webhook pod @ 12/28/24 13:31:11.021
  STEP: Wait for the deployment to be ready @ 12/28/24 13:31:11.035
  I1228 13:31:11.045668 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:31:11.317858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:12.318017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:31:13.059
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:31:13.07
  E1228 13:31:13.318105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:14.070974 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1228 13:31:14.080944 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:31:14.319040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/28/24 13:31:14.591
  STEP: Creating a custom resource that should be denied by the webhook @ 12/28/24 13:31:14.606
  E1228 13:31:15.319799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:16.319892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/28/24 13:31:16.621
  STEP: Updating the custom resource with disallowed data should be denied @ 12/28/24 13:31:16.63
  STEP: Deleting the custom resource should be denied @ 12/28/24 13:31:16.639
  STEP: Remove the offending key and value from the custom resource data @ 12/28/24 13:31:16.647
  STEP: Deleting the updated custom resource should be successful @ 12/28/24 13:31:16.658
  I1228 13:31:17.229819 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9980" for this suite. @ 12/28/24 13:31:17.234
  STEP: Destroying namespace "webhook-markers-3278" for this suite. @ 12/28/24 13:31:17.243
• [6.490 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/28/24 13:31:17.251
  I1228 13:31:17.251678 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename containers @ 12/28/24 13:31:17.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:31:17.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:31:17.275
  E1228 13:31:17.320424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:18.320351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:19.306047 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1764" for this suite. @ 12/28/24 13:31:19.309
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/28/24 13:31:19.319
  I1228 13:31:19.319293 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename container-probe @ 12/28/24 13:31:19.319
  E1228 13:31:19.321036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:31:19.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:31:19.341
  STEP: Creating pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231 @ 12/28/24 13:31:19.344
  E1228 13:31:20.321267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:21.321377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/28/24 13:31:21.364
  I1228 13:31:21.369520 19 container_probe.go:1749] Initial restart count of pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 is 0
  I1228 13:31:21.372952 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:22.322161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:23.322287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:23.377618 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:24.322697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:25.322862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:25.382573 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:26.323890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:27.323961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:27.388257 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:28.324925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:29.325988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:29.397455 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:30.326104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:31.326188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:31.402715 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:32.326293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:33.326370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:33.408107 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:34.327013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:35.327125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:35.415249 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:36.327207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:37.327294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:37.420268 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:38.327420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:39.327681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:39.425260 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:40.327801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:41.328005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:41.431571 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:42.328527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:43.328667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:43.436899 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:44.329692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:45.329803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:45.442845 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:46.330874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:47.331085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:47.447414 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:48.331194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:49.332167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:49.453395 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:50.332335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:51.332526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:51.458238 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:52.332635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:53.332811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:53.463325 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:54.333431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:55.333560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:55.469472 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:56.333631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:57.333745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:57.474305 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:31:58.334088      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:31:59.334980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:31:59.479703 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:00.335095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:01.335198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:01.486269 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:02.335862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:03.335962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:03.491742 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:04.336669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:05.336820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:05.496619 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:06.336905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:07.337868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:07.501562 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:08.337985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:09.338134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:09.506889 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:10.338793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:11.338901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:11.513642 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:12.339555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:13.339758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:13.519092 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:14.339971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:15.340066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:15.523479 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:16.340158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:17.340337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:17.529282 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:18.340456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:19.341078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:19.534190 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:20.341106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:21.341211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:21.538978 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:22.341321      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:23.341505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:23.545934 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:24.342017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:25.342304      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:25.551198 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:26.342772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:27.342854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:27.557616 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:28.343477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:29.343835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:29.562664 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:30.344490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:31.345467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:31.567110 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:32.345769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:33.345866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:33.573205 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:34.345935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:35.346825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:35.579287 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:36.346931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:37.347100      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:37.584089 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:38.347912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:39.347942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:39.590031 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:40.348871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:41.348981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:41.595282 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:42.349069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:43.349265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:43.600321 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:44.350006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:45.350097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:45.606813 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:46.350618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:47.350778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:47.613052 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:48.351982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:49.351933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:49.617857 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:50.352039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:51.352835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:51.622892 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:52.353671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:53.353773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:53.628990 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:54.354626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:55.354767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:55.633774 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:56.355506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:57.356228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:57.639121 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:32:58.356777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:32:59.357022      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:32:59.645317 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:00.357955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:01.358113      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:01.650192 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:02.359013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:03.359137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:03.654713 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:04.359596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:05.359730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:05.659870 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:06.360697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:07.360873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:07.666231 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:08.360984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:09.362045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:09.671047 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:10.362805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:11.362986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:11.676021 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:12.363074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:13.363178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:13.681553 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:14.364130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:15.364849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:15.686853 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:16.364935      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:17.365834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:17.692738 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:18.366470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:19.367068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:19.698187 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:20.367835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:21.368041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:21.702669 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:22.368156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:23.368848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:23.709583 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:24.369097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:25.369313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:25.714547 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:26.369837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:27.370832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:27.720734 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:28.370959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:29.371545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:29.725611 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:30.372351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:31.372540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:31.730456 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:32.372671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:33.373346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:33.736263 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:34.374047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:35.374219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:35.741592 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:36.375024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:37.376075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:37.747040 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:38.376611      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:39.376828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:39.752673 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:40.376943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:41.377842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:41.758039 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:42.378784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:43.378911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:43.762426 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:44.379051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:45.379231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:45.768496 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:46.380246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:47.380840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:47.773539 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:48.381151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:49.381235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:49.779776 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:50.381455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:51.381636      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:51.784243 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:52.381787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:53.381967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:53.788863 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:54.382705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:55.382807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:55.794892 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:56.383678      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:57.383775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:57.799596 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:33:58.383868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:33:59.384707      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:33:59.805635 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:00.384777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:01.384873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:01.812558 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:02.384959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:03.385840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:03.818146 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:04.386829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:05.386994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:05.822921 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:06.387557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:07.387753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:07.828356 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:08.387942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:09.388266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:09.836123 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:10.389075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:11.389979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:11.842896 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:12.390499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:13.390706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:13.847927 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:14.391717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:15.391795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:15.852166 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:16.392850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:17.393006      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:17.858113 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:18.393752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:19.394708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:19.862468 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:20.394778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:21.395838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:21.868513 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:22.395938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:23.396857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:23.875032 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:24.397750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:25.397978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:25.879796 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:26.398396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:27.398939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:27.886685 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:28.399190      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:29.400234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:29.891021 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:30.400344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:31.400610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:31.895877 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:32.401578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:33.401713      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:33.901939 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:34.402616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:35.402782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:35.907543 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:36.403078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:37.403912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:37.912623 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:38.404842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:39.405143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:39.918632 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:40.405845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:41.406837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:41.924540 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:42.406948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:43.407856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:43.929841 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:44.408551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:45.408682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:45.935349 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:46.408923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:47.409108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:47.941822 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:48.409346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:49.410150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:49.947679 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:50.411228      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:51.411341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:51.952256 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:52.411461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:53.411867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:53.957683 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:54.411968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:55.412151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:55.962398 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:56.412962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:57.413051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:57.966860 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:34:58.413146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:34:59.414118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:34:59.973314 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:00.414761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:01.415836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:01.978916 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:02.416443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:03.416549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:03.983467 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:04.417147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:05.417328      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:05.989443 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:06.417843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:07.417942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:07.994425 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:08.418851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:09.419010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:10.000701 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:10.419121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:11.419315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:12.005849 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:12.419352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:13.419552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:14.010139 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:14.419667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:15.419808      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:16.016682 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:16.420143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:17.420961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:18.023004 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:18.421464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:19.421686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:20.027812 19 container_probe.go:1759] Get pod test-grpc-f1abd062-cbe9-4b66-af83-b997a30226f7 in namespace container-probe-4231
  E1228 13:35:20.422168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:21.422294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/28/24 13:35:22.027
  I1228 13:35:22.046838 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4231" for this suite. @ 12/28/24 13:35:22.053
• [242.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/28/24 13:35:22.061
  I1228 13:35:22.061774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/28/24 13:35:22.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:35:22.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:35:22.084
  STEP: fetching the /apis discovery document @ 12/28/24 13:35:22.088
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/28/24 13:35:22.09
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/28/24 13:35:22.09
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/28/24 13:35:22.09
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/28/24 13:35:22.091
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/28/24 13:35:22.091
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/28/24 13:35:22.093
  I1228 13:35:22.093617 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8103" for this suite. @ 12/28/24 13:35:22.1
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 12/28/24 13:35:22.109
  I1228 13:35:22.109177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 13:35:22.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:35:22.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:35:22.131
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/28/24 13:35:22.135
  I1228 13:35:22.144882 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2404  73a836cf-ff47-42a6-9a6d-a312c7ad2d2a 42140 0 2024-12-28 13:35:22 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-28 13:35:22 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wwplm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wwplm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1228 13:35:22.422883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:23.423121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/28/24 13:35:24.155
  I1228 13:35:24.155386 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2404 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:35:24.155403 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:35:24.155843 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:35:24.155882 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2404/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/28/24 13:35:24.21
  I1228 13:35:24.210352 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2404 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1228 13:35:24.210368 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:35:24.210801 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1228 13:35:24.210846 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2404/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1228 13:35:24.252489 19 dns.go:423] Deleting pod test-dns-nameservers...
  I1228 13:35:24.264602 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2404" for this suite. @ 12/28/24 13:35:24.271
• [2.170 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 12/28/24 13:35:24.279
  I1228 13:35:24.279508 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:35:24.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:35:24.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:35:24.302
  STEP: Setting up server cert @ 12/28/24 13:35:24.33
  E1228 13:35:24.424052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:35:24.731
  STEP: Deploying the webhook pod @ 12/28/24 13:35:24.74
  STEP: Wait for the deployment to be ready @ 12/28/24 13:35:24.753
  I1228 13:35:24.766016 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:35:25.424700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:26.424804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:35:26.777
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:35:26.788
  E1228 13:35:27.425044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:27.788509 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/28/24 13:35:27.796
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/28/24 13:35:27.796
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/28/24 13:35:27.81
  E1228 13:35:28.425857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/28/24 13:35:28.821
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/28/24 13:35:28.821
  E1228 13:35:29.425991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/28/24 13:35:29.856
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/28/24 13:35:29.856
  E1228 13:35:30.426528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:31.426728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:32.426837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:33.427207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:34.428155      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/28/24 13:35:34.891
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/28/24 13:35:34.891
  E1228 13:35:35.428336      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:36.428434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:37.428607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:38.428838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:39.429061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:35:39.969714 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5858" for this suite. @ 12/28/24 13:35:39.973
  STEP: Destroying namespace "webhook-markers-5164" for this suite. @ 12/28/24 13:35:39.98
• [15.708 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/28/24 13:35:39.987
  I1228 13:35:39.987545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename subpath @ 12/28/24 13:35:39.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:35:40.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:35:40.005
  STEP: Setting up data @ 12/28/24 13:35:40.009
  STEP: Creating pod pod-subpath-test-configmap-xq6f @ 12/28/24 13:35:40.019
  STEP: Creating a pod to test atomic-volume-subpath @ 12/28/24 13:35:40.019
  E1228 13:35:40.429665      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:41.429814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:42.430548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:43.430681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:44.431180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:45.431306      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:46.431454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:47.431588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:48.431721      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:49.432494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:50.433028      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:51.433897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:52.434012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:53.434932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:54.435458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:55.435551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:56.435894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:57.435904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:58.436878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:35:59.436982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:00.437443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:01.437557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:02.438492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:03.438743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:36:04.102
  I1228 13:36:04.106331 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-subpath-test-configmap-xq6f container test-container-subpath-configmap-xq6f: <nil>
  STEP: delete the pod @ 12/28/24 13:36:04.121
  STEP: Deleting pod pod-subpath-test-configmap-xq6f @ 12/28/24 13:36:04.14
  I1228 13:36:04.141016 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-xq6f" in namespace "subpath-8691"
  I1228 13:36:04.144046 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8691" for this suite. @ 12/28/24 13:36:04.147
• [24.167 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/28/24 13:36:04.154
  I1228 13:36:04.154761 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:36:04.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:04.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:04.177
  STEP: Creating configMap with name projected-configmap-test-volume-map-ae5f3af2-a887-4138-bc15-3b96816338c1 @ 12/28/24 13:36:04.181
  STEP: Creating a pod to test consume configMaps @ 12/28/24 13:36:04.185
  E1228 13:36:04.439413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:05.439571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:36:06.202
  I1228 13:36:06.207108 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-configmaps-eff3716a-5190-41fc-b5c5-f12286b9a432 container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:36:06.213
  I1228 13:36:06.231728 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6878" for this suite. @ 12/28/24 13:36:06.236
• [2.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/28/24 13:36:06.244
  I1228 13:36:06.244277 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename watch @ 12/28/24 13:36:06.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:06.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:06.268
  STEP: creating a watch on configmaps with label A @ 12/28/24 13:36:06.271
  STEP: creating a watch on configmaps with label B @ 12/28/24 13:36:06.272
  STEP: creating a watch on configmaps with label A or B @ 12/28/24 13:36:06.274
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/28/24 13:36:06.275
  I1228 13:36:06.280976 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42420 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:36:06.281117 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42420 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/28/24 13:36:06.281
  I1228 13:36:06.290273 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42421 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:36:06.290339 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42421 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/28/24 13:36:06.29
  I1228 13:36:06.299164 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42422 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:36:06.299243 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42422 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/28/24 13:36:06.299
  I1228 13:36:06.305146 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42423 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:36:06.305180 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1601  09ae167c-2afb-4f19-965f-feaadb758f0b 42423 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/28/24 13:36:06.305
  I1228 13:36:06.310683 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1601  f21f0aa5-728a-4fc5-9b88-e7fcdaa43f8b 42424 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:36:06.310738 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1601  f21f0aa5-728a-4fc5-9b88-e7fcdaa43f8b 42424 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1228 13:36:06.439920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:07.440192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:08.440292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:09.440639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:10.440568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:11.440787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:12.441025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:13.441889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:14.442085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:15.442265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/28/24 13:36:16.311
  I1228 13:36:16.320091 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1601  f21f0aa5-728a-4fc5-9b88-e7fcdaa43f8b 42467 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:36:16.320132 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1601  f21f0aa5-728a-4fc5-9b88-e7fcdaa43f8b 42467 0 2024-12-28 13:36:06 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-28 13:36:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1228 13:36:16.442365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:17.442539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:18.442737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:19.443136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:20.443235      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:21.443345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:22.443522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:23.443630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:24.443976      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:25.444076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:26.321315 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1601" for this suite. @ 12/28/24 13:36:26.326
• [20.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 12/28/24 13:36:26.332
  I1228 13:36:26.332856 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:36:26.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:26.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:26.354
  STEP: Setting up server cert @ 12/28/24 13:36:26.383
  E1228 13:36:26.444320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:36:26.56
  STEP: Deploying the webhook pod @ 12/28/24 13:36:26.569
  STEP: Wait for the deployment to be ready @ 12/28/24 13:36:26.583
  I1228 13:36:26.594084 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:36:27.444795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:28.444910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:36:28.608
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:36:28.621
  E1228 13:36:29.445277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:29.622685 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/28/24 13:36:29.631
  I1228 13:36:29.669289 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2130" for this suite. @ 12/28/24 13:36:29.672
  STEP: Destroying namespace "webhook-markers-243" for this suite. @ 12/28/24 13:36:29.68
• [3.357 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/28/24 13:36:29.689
  I1228 13:36:29.689670 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:36:29.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:29.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:29.711
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/28/24 13:36:29.713
  E1228 13:36:30.445360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:31.445862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:32.445960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:33.446063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:36:33.737
  I1228 13:36:33.743407 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-78a16e61-f2e6-4009-aec3-040bb6cbe507 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 13:36:33.751
  I1228 13:36:33.769101 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5976" for this suite. @ 12/28/24 13:36:33.773
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/28/24 13:36:33.781
  I1228 13:36:33.781008 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 13:36:33.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:33.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:33.803
  STEP: Creating configMap with name configmap-test-volume-map-1d09193f-0a81-4c60-8312-516e8c156192 @ 12/28/24 13:36:33.806
  STEP: Creating a pod to test consume configMaps @ 12/28/24 13:36:33.81
  E1228 13:36:34.446140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:35.446239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:36.446835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:37.447042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:36:37.833
  I1228 13:36:37.836769 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-configmaps-c667f99d-a152-45f1-9fea-e13b96fdf93b container agnhost-container: <nil>
  STEP: delete the pod @ 12/28/24 13:36:37.844
  I1228 13:36:37.862117 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8776" for this suite. @ 12/28/24 13:36:37.866
• [4.094 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/28/24 13:36:37.874
  I1228 13:36:37.874885 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/28/24 13:36:37.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:37.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:37.897
  STEP: creating the policy @ 12/28/24 13:36:37.905
  STEP: waiting until the marker is denied @ 12/28/24 13:36:37.917
  STEP: testing a replicated Deployment to be allowed @ 12/28/24 13:36:38.226
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/28/24 13:36:38.238
  I1228 13:36:38.265983 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6207" for this suite. @ 12/28/24 13:36:38.273
• [0.407 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 12/28/24 13:36:38.281
  I1228 13:36:38.281712 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:36:38.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:38.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:38.347
  STEP: Setting up server cert @ 12/28/24 13:36:38.38
  E1228 13:36:38.447051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:36:38.583
  STEP: Deploying the webhook pod @ 12/28/24 13:36:38.59
  STEP: Wait for the deployment to be ready @ 12/28/24 13:36:38.604
  I1228 13:36:38.611243 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1228 13:36:39.448129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:40.448325      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:36:40.626
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:36:40.638
  E1228 13:36:41.448443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:41.639829 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/28/24 13:36:41.75
  STEP: Creating a configMap that should be mutated @ 12/28/24 13:36:41.759
  STEP: Deleting the collection of validation webhooks @ 12/28/24 13:36:41.787
  STEP: Creating a configMap that should not be mutated @ 12/28/24 13:36:41.837
  I1228 13:36:41.882574 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9975" for this suite. @ 12/28/24 13:36:41.886
  STEP: Destroying namespace "webhook-markers-8293" for this suite. @ 12/28/24 13:36:41.897
• [3.621 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/28/24 13:36:41.902
  I1228 13:36:41.902616 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:36:41.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:41.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:41.922
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/28/24 13:36:41.926
  E1228 13:36:42.449256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:43.449371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:44.450175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:45.450290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:36:45.95
  I1228 13:36:45.953393 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-8ed21660-4811-4474-8a4c-89c2fe251462 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 13:36:45.962
  I1228 13:36:45.982318 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9970" for this suite. @ 12/28/24 13:36:45.986
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 12/28/24 13:36:45.993
  I1228 13:36:45.993230 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:36:45.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:46.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:46.014
  STEP: Setting up server cert @ 12/28/24 13:36:46.039
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:36:46.32
  STEP: Deploying the webhook pod @ 12/28/24 13:36:46.327
  STEP: Wait for the deployment to be ready @ 12/28/24 13:36:46.341
  I1228 13:36:46.350239 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1228 13:36:46.450364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:47.450496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:36:48.363
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:36:48.374
  E1228 13:36:48.451018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:49.374864 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/28/24 13:36:49.383
  I1228 13:36:49.429291 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4481" for this suite. @ 12/28/24 13:36:49.432
  STEP: Destroying namespace "webhook-markers-2401" for this suite. @ 12/28/24 13:36:49.441
• [3.454 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 12/28/24 13:36:49.447
  I1228 13:36:49.447717 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:36:49.448
  E1228 13:36:49.451634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:49.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:49.467
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8420 @ 12/28/24 13:36:49.47
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/28/24 13:36:49.488
  STEP: creating service externalsvc in namespace services-8420 @ 12/28/24 13:36:49.488
  STEP: creating replication controller externalsvc in namespace services-8420 @ 12/28/24 13:36:49.499
  I1228 13:36:49.506744      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8420, replica count: 2
  E1228 13:36:50.452514      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:51.452603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:52.452879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:52.558134      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/28/24 13:36:52.562
  I1228 13:36:52.581818 19 resource.go:361] Creating new exec pod
  E1228 13:36:53.452979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:54.453070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:54.600633 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-8420 exec execpodd9tvd -- /bin/sh -x -c nslookup nodeport-service.services-8420.svc.cluster.local'
  I1228 13:36:54.705420 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-8420.svc.cluster.local\n"
  I1228 13:36:54.705464 19 builder.go:147] stdout: "Server:\t\t10.152.183.28\nAddress:\t10.152.183.28#53\n\nnodeport-service.services-8420.svc.cluster.local\tcanonical name = externalsvc.services-8420.svc.cluster.local.\nName:\texternalsvc.services-8420.svc.cluster.local\nAddress: 10.152.183.207\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8420, will wait for the garbage collector to delete the pods @ 12/28/24 13:36:54.705
  I1228 13:36:54.767769 19 resources.go:139] Deleting ReplicationController externalsvc took: 8.935531ms
  I1228 13:36:54.868671 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.874554ms
  E1228 13:36:55.453931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:56.454285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:57.455296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:36:57.987876 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1228 13:36:57.998145 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8420" for this suite. @ 12/28/24 13:36:58.001
• [8.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 12/28/24 13:36:58.016
  I1228 13:36:58.016943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:36:58.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:36:58.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:36:58.04
  STEP: Counting existing ResourceQuota @ 12/28/24 13:36:58.043
  E1228 13:36:58.455864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:36:59.456054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:00.456193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:01.456847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:02.457858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 13:37:03.047
  STEP: Ensuring resource quota status is calculated @ 12/28/24 13:37:03.051
  E1228 13:37:03.458133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:04.459173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 12/28/24 13:37:05.057
  STEP: Ensuring resource quota status captures replication controller creation @ 12/28/24 13:37:05.069
  E1228 13:37:05.459295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:06.459409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 12/28/24 13:37:07.074
  STEP: Ensuring resource quota status released usage @ 12/28/24 13:37:07.083
  E1228 13:37:07.460403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:08.460604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:09.090197 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9333" for this suite. @ 12/28/24 13:37:09.095
• [11.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/28/24 13:37:09.103
  I1228 13:37:09.103174 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:37:09.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:09.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:09.122
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 13:37:09.125
  E1228 13:37:09.461064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:10.461282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:11.461383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:12.461518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:37:13.151
  I1228 13:37:13.157035 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-60466248-ea90-4d36-a9ec-0979cb10213e container client-container: <nil>
  STEP: delete the pod @ 12/28/24 13:37:13.164
  I1228 13:37:13.183690 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3125" for this suite. @ 12/28/24 13:37:13.187
• [4.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 12/28/24 13:37:13.194
  I1228 13:37:13.194593 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:37:13.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:13.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:13.216
  STEP: Discovering how many secrets are in namespace by default @ 12/28/24 13:37:13.219
  E1228 13:37:13.461762      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:14.462181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:15.462723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:16.463407      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:17.463996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/28/24 13:37:18.225
  E1228 13:37:18.464791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:19.465780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:20.466599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:21.467163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:22.467295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/28/24 13:37:23.229
  STEP: Ensuring resource quota status is calculated @ 12/28/24 13:37:23.235
  E1228 13:37:23.467907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:24.468052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 12/28/24 13:37:25.242
  STEP: Ensuring resource quota status captures secret creation @ 12/28/24 13:37:25.255
  E1228 13:37:25.468261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:26.468359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 12/28/24 13:37:27.26
  STEP: Ensuring resource quota status released usage @ 12/28/24 13:37:27.268
  E1228 13:37:27.468795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:28.469024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:29.275165 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9692" for this suite. @ 12/28/24 13:37:29.28
• [16.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/28/24 13:37:29.293
  I1228 13:37:29.293294 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:37:29.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:29.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:29.316
  STEP: Creating projection with secret that has name projected-secret-test-c71153f7-f7fa-4540-8af2-6ab6af405847 @ 12/28/24 13:37:29.319
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:37:29.323
  E1228 13:37:29.469479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:30.470193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:31.470563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:32.470821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:37:33.347
  I1228 13:37:33.350809 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-secrets-31bc0b01-7bd2-484b-a2ef-03330a864961 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:37:33.358
  I1228 13:37:33.375590 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9322" for this suite. @ 12/28/24 13:37:33.378
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/28/24 13:37:33.385
  I1228 13:37:33.386016 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename csi-storageclass @ 12/28/24 13:37:33.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:33.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:33.406
  STEP: Creating a StorageClass @ 12/28/24 13:37:33.409
  STEP: Get StorageClass "e2e-7wttp" @ 12/28/24 13:37:33.413
  STEP: Patching the StorageClass "e2e-7wttp" @ 12/28/24 13:37:33.417
  STEP: Delete StorageClass "e2e-7wttp" @ 12/28/24 13:37:33.423
  STEP: Confirm deletion of StorageClass "e2e-7wttp" @ 12/28/24 13:37:33.429
  STEP: Create a replacement StorageClass @ 12/28/24 13:37:33.432
  STEP: Updating StorageClass "e2e-v2-z2chc" @ 12/28/24 13:37:33.436
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-z2chc=updated" @ 12/28/24 13:37:33.445
  STEP: Deleting StorageClass "e2e-v2-z2chc" via DeleteCollection @ 12/28/24 13:37:33.448
  STEP: Confirm deletion of StorageClass "e2e-v2-z2chc" @ 12/28/24 13:37:33.455
  I1228 13:37:33.459944 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9125" for this suite. @ 12/28/24 13:37:33.465
  E1228 13:37:33.471167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [0.087 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/28/24 13:37:33.472
  I1228 13:37:33.472743 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename watch @ 12/28/24 13:37:33.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:33.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:33.491
  STEP: creating a watch on configmaps with a certain label @ 12/28/24 13:37:33.494
  STEP: creating a new configmap @ 12/28/24 13:37:33.495
  STEP: modifying the configmap once @ 12/28/24 13:37:33.499
  STEP: changing the label value of the configmap @ 12/28/24 13:37:33.507
  STEP: Expecting to observe a delete notification for the watched object @ 12/28/24 13:37:33.515
  I1228 13:37:33.515976 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9481  7b644463-057c-4e67-b622-7d85d6cb2f7f 43291 0 2024-12-28 13:37:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-28 13:37:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:37:33.516135 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9481  7b644463-057c-4e67-b622-7d85d6cb2f7f 43292 0 2024-12-28 13:37:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-28 13:37:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:37:33.516209 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9481  7b644463-057c-4e67-b622-7d85d6cb2f7f 43293 0 2024-12-28 13:37:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-28 13:37:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/28/24 13:37:33.516
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/28/24 13:37:33.523
  E1228 13:37:34.472231      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:35.472342      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:36.472425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:37.472544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:38.472775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:39.473126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:40.473351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:41.473449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:42.473541      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:43.474433      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 12/28/24 13:37:43.523
  STEP: modifying the configmap a third time @ 12/28/24 13:37:43.533
  STEP: deleting the configmap @ 12/28/24 13:37:43.542
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/28/24 13:37:43.549
  I1228 13:37:43.549213 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9481  7b644463-057c-4e67-b622-7d85d6cb2f7f 43339 0 2024-12-28 13:37:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-28 13:37:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:37:43.549361 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9481  7b644463-057c-4e67-b622-7d85d6cb2f7f 43340 0 2024-12-28 13:37:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-28 13:37:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:37:43.549427 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9481  7b644463-057c-4e67-b622-7d85d6cb2f7f 43341 0 2024-12-28 13:37:33 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-28 13:37:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1228 13:37:43.549570 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9481" for this suite. @ 12/28/24 13:37:43.553
• [10.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/28/24 13:37:43.56
  I1228 13:37:43.560169 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename svcaccounts @ 12/28/24 13:37:43.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:43.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:43.584
  E1228 13:37:44.475034      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:45.475862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 12/28/24 13:37:45.616
  I1228 13:37:45.616266 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5867 pod-service-account-b752ccb3-84ab-4394-98d1-3f4ec26230e2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/28/24 13:37:45.695
  I1228 13:37:45.695759 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5867 pod-service-account-b752ccb3-84ab-4394-98d1-3f4ec26230e2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/28/24 13:37:45.776
  I1228 13:37:45.776564 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5867 pod-service-account-b752ccb3-84ab-4394-98d1-3f4ec26230e2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1228 13:37:45.872363 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-5867"
  I1228 13:37:45.874368 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5867" for this suite. @ 12/28/24 13:37:45.878
• [2.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 12/28/24 13:37:45.886
  I1228 13:37:45.886814 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 13:37:45.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:45.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:45.912
  STEP: Creating simple DaemonSet "daemon-set" @ 12/28/24 13:37:45.937
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/28/24 13:37:45.943
  I1228 13:37:45.949579 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:37:45.949614 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:37:45.952586 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:37:45.952606 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:37:46.476213      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:46.950868 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:37:46.950919 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:37:46.954002 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:37:46.954022 19 fixtures.go:130] Node ip-172-31-45-142 is running 0 daemon pod, expected 1
  E1228 13:37:47.476275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:47.949901 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-50 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:37:47.949954 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-86-197 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1228 13:37:47.954099 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1228 13:37:47.954121 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/28/24 13:37:47.957
  I1228 13:37:47.961179 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/28/24 13:37:47.961
  I1228 13:37:47.973184 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/28/24 13:37:47.973
  I1228 13:37:47.975080 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1228 13:37:47.975149 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.975228 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.975351 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.975403 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.975456 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.975522 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9748 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1228 13:37:47.975600 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/28/24 13:37:47.975
  STEP: watching for the daemon set status to be patched @ 12/28/24 13:37:47.981
  I1228 13:37:47.983239 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1228 13:37:47.983300 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.983357 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.983496 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.983589 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.983771 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.983793 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9748 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1228 13:37:47.983893 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1228 13:37:47.983918 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9748 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1228 13:37:47.983927 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/28/24 13:37:47.99
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9748, will wait for the garbage collector to delete the pods @ 12/28/24 13:37:47.99
  I1228 13:37:48.052470 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.389047ms
  I1228 13:37:48.152728 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.250804ms
  E1228 13:37:48.476946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:49.358304 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:37:49.358338 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1228 13:37:49.362030 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43459"},"items":null}

  I1228 13:37:49.366304 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43459"},"items":null}

  I1228 13:37:49.381193 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9748" for this suite. @ 12/28/24 13:37:49.386
• [3.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/28/24 13:37:49.396
  I1228 13:37:49.396592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:37:49.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:49.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:49.421
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 13:37:49.427
  E1228 13:37:49.477269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:50.477481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:37:51.445
  I1228 13:37:51.450419 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-989629c3-7f3c-4f47-a0ab-1af539901b06 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 13:37:51.456
  I1228 13:37:51.476194 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1228 13:37:51.478278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-1752" for this suite. @ 12/28/24 13:37:51.479
• [2.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/28/24 13:37:51.49
  I1228 13:37:51.490207 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename podtemplate @ 12/28/24 13:37:51.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:51.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:51.512
  I1228 13:37:51.548688 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2332" for this suite. @ 12/28/24 13:37:51.553
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 12/28/24 13:37:51.562
  I1228 13:37:51.562619 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:37:51.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:37:51.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:37:51.582
  STEP: creating service in namespace services-1615 @ 12/28/24 13:37:51.585
  STEP: creating service affinity-clusterip in namespace services-1615 @ 12/28/24 13:37:51.585
  STEP: creating replication controller affinity-clusterip in namespace services-1615 @ 12/28/24 13:37:51.595
  I1228 13:37:51.603107      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1615, replica count: 3
  E1228 13:37:52.478412      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:53.479444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:54.479588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:54.653951      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 13:37:54.662616 19 resource.go:361] Creating new exec pod
  E1228 13:37:55.480254      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:56.480517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:57.480578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:37:57.685843 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-1615 exec execpod-affinityd8frc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1228 13:37:57.766809 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1228 13:37:57.766852 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:37:57.767026 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-1615 exec execpod-affinityd8frc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I1228 13:37:57.854785 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.145 80\nConnection to 10.152.183.145 80 port [tcp/http] succeeded!\n"
  I1228 13:37:57.854826 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1228 13:37:57.854948 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-1615 exec execpod-affinityd8frc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.145:80/ ; done'
  I1228 13:37:58.000177 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.145:80/\n"
  I1228 13:37:58.000226 19 builder.go:147] stdout: "\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb\naffinity-clusterip-2xhpb"
  I1228 13:37:58.000241 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000250 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000257 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000263 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000268 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000274 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000280 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000286 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000292 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000298 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000303 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000310 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000316 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000322 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000328 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000333 19 service.go:242] Received response from host: affinity-clusterip-2xhpb
  I1228 13:37:58.000399 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1615, will wait for the garbage collector to delete the pods @ 12/28/24 13:37:58.016
  I1228 13:37:58.078692 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 7.827029ms
  I1228 13:37:58.179128 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.41884ms
  E1228 13:37:58.480905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:37:59.481771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:00.481941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:38:01.397078 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1615" for this suite. @ 12/28/24 13:38:01.4
• [9.844 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/28/24 13:38:01.406
  I1228 13:38:01.406860 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename statefulset @ 12/28/24 13:38:01.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:38:01.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:38:01.429
  STEP: Creating service test in namespace statefulset-4546 @ 12/28/24 13:38:01.433
  STEP: Creating a new StatefulSet @ 12/28/24 13:38:01.438
  I1228 13:38:01.450022 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E1228 13:38:01.482225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:02.482455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:03.482996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:04.483097      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:05.483386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:06.483607      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:07.483785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:08.483880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:09.484094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:10.485074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:38:11.452595 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:38:11.452622 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:38:11.452628 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1228 13:38:11.464308 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-4546 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1228 13:38:11.485599      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:38:11.555537 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:38:11.555575 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:38:11.555585 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1228 13:38:12.485800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:13.485919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:14.485983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:15.486093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:16.486200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:17.486258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:18.486370      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:19.486872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:20.486977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:21.487072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/28/24 13:38:21.565
  I1228 13:38:21.577993 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/28/24 13:38:21.578
  E1228 13:38:22.487313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:23.487506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:24.487790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:25.487929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:26.488037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:27.488116      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:28.488234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:29.488978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:30.489139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:31.489252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 12/28/24 13:38:31.588
  I1228 13:38:31.592027 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-4546 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:38:31.676004 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:38:31.676041 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:38:31.676053 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1228 13:38:32.489431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:33.489643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:34.490041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:35.490157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:36.490288      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:37.490345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:38.490467      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:39.491297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:40.491395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:41.491479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 12/28/24 13:38:41.695
  I1228 13:38:41.695390 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-4546 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1228 13:38:41.779437 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1228 13:38:41.779482 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1228 13:38:41.779493 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1228 13:38:42.491619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:43.491756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:44.491792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:45.491945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:46.492059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:47.492174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:48.492271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:49.492462      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:50.492581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:51.492695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:38:51.798108 19 statefulset.go:2507] Updating stateful set ss2
  E1228 13:38:52.492917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:53.493037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:54.493084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:55.493209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:56.493312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:57.493421      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:58.493549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:38:59.493701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:00.493884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:01.493981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 12/28/24 13:39:01.809
  I1228 13:39:01.813058 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=statefulset-4546 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1228 13:39:01.900406 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1228 13:39:01.900446 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1228 13:39:01.900455 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1228 13:39:02.494875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:03.494929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:04.495343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:05.495416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:06.495499      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:07.495621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:08.495821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:09.495895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:10.496023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:11.496111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:11.920097 19 statefulset.go:138] Deleting all statefulset in ns statefulset-4546
  I1228 13:39:11.923168 19 rest.go:150] Scaling statefulset ss2 to 0
  E1228 13:39:12.496214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:13.496299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:14.497208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:15.497394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:16.497523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:17.497622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:18.497783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:19.498865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:20.499008      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:21.499122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:21.940367 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1228 13:39:21.943856 19 rest.go:88] Deleting statefulset ss2
  I1228 13:39:21.960589 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4546" for this suite. @ 12/28/24 13:39:21.968
• [80.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/28/24 13:39:21.975
  I1228 13:39:21.975660 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 13:39:21.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:21.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:21.997
  STEP: Creating secret with name secret-test-cc22e616-7e13-499e-89c5-31b6d2baa6ab @ 12/28/24 13:39:22
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:39:22.006
  E1228 13:39:22.499796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:23.500010      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:24.500903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:25.501118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:39:26.03
  I1228 13:39:26.033590 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-secrets-d3ebb363-63f6-4e19-9d11-8c3c89eece96 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:39:26.046
  I1228 13:39:26.063794 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2476" for this suite. @ 12/28/24 13:39:26.067
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 12/28/24 13:39:26.074
  I1228 13:39:26.074544 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename crd-webhook @ 12/28/24 13:39:26.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:26.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:26.095
  STEP: Setting up server cert @ 12/28/24 13:39:26.098
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/28/24 13:39:26.302
  STEP: Deploying the custom resource conversion webhook pod @ 12/28/24 13:39:26.309
  STEP: Wait for the deployment to be ready @ 12/28/24 13:39:26.322
  I1228 13:39:26.330065 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1228 13:39:26.501242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:27.501374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:39:28.344
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:39:28.356
  E1228 13:39:28.501763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:29.356504 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1228 13:39:29.368154 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:39:29.502511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:30.503136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:31.503549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/28/24 13:39:31.922
  STEP: Create a v2 custom resource @ 12/28/24 13:39:31.94
  STEP: List CRs in v1 @ 12/28/24 13:39:31.963
  STEP: List CRs in v2 @ 12/28/24 13:39:31.968
  E1228 13:39:32.503744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:32.527827 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3032" for this suite. @ 12/28/24 13:39:32.531
• [6.467 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/28/24 13:39:32.541
  I1228 13:39:32.541372 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename runtimeclass @ 12/28/24 13:39:32.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:32.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:32.561
  STEP: Deleting RuntimeClass runtimeclass-1146-delete-me @ 12/28/24 13:39:32.571
  STEP: Waiting for the RuntimeClass to disappear @ 12/28/24 13:39:32.578
  I1228 13:39:32.589285 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1146" for this suite. @ 12/28/24 13:39:32.593
• [0.059 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/28/24 13:39:32.6
  I1228 13:39:32.600324 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename daemonsets @ 12/28/24 13:39:32.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:32.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:32.621
  I1228 13:39:32.644294 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/28/24 13:39:32.65
  I1228 13:39:32.653235 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:32.653255 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/28/24 13:39:32.653
  I1228 13:39:32.676224 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:32.676244 19 fixtures.go:130] Node ip-172-31-87-122 is running 0 daemon pod, expected 1
  E1228 13:39:33.503891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:33.677892 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:33.677917 19 fixtures.go:130] Node ip-172-31-87-122 is running 0 daemon pod, expected 1
  E1228 13:39:34.504946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:34.676704 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1228 13:39:34.676733 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/28/24 13:39:34.68
  I1228 13:39:34.697859 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1228 13:39:34.697879 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E1228 13:39:35.505048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:35.697795 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:35.697830 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/28/24 13:39:35.697
  I1228 13:39:35.706633 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:35.706677 19 fixtures.go:130] Node ip-172-31-87-122 is running 0 daemon pod, expected 1
  E1228 13:39:36.505142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:36.710010 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:36.710046 19 fixtures.go:130] Node ip-172-31-87-122 is running 0 daemon pod, expected 1
  E1228 13:39:37.505800      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:37.708553 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1228 13:39:37.708585 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/28/24 13:39:37.717
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4381, will wait for the garbage collector to delete the pods @ 12/28/24 13:39:37.717
  I1228 13:39:37.778883 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.970119ms
  I1228 13:39:37.879926 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.026874ms
  E1228 13:39:38.505882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:39.285902 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1228 13:39:39.285938 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1228 13:39:39.289411 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"44530"},"items":null}

  I1228 13:39:39.293002 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"44530"},"items":null}

  I1228 13:39:39.314537 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4381" for this suite. @ 12/28/24 13:39:39.319
• [6.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/28/24 13:39:39.327
  I1228 13:39:39.327348 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:39:39.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:39.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:39.349
  STEP: Creating projection with secret that has name projected-secret-test-map-7a4d10b4-e207-4b00-b9e9-dffed2bb470b @ 12/28/24 13:39:39.352
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:39:39.357
  E1228 13:39:39.506131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:40.507094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:41.507192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:42.507408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:39:43.38
  I1228 13:39:43.385339 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-secrets-90eabf43-07d9-486e-ae6a-3b17724c207e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:39:43.392
  I1228 13:39:43.412252 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5764" for this suite. @ 12/28/24 13:39:43.416
• [4.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 12/28/24 13:39:43.424
  I1228 13:39:43.424431 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:39:43.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:43.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:43.447
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/28/24 13:39:43.45
  I1228 13:39:43.451006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3355 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1228 13:39:43.498809 19 builder.go:146] stderr: ""
  I1228 13:39:43.498836 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/28/24 13:39:43.498
  I1228 13:39:43.498890 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3355 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E1228 13:39:43.508210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:43.551497 19 builder.go:146] stderr: ""
  I1228 13:39:43.551528 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/28/24 13:39:43.551
  I1228 13:39:43.555405 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3355 delete pods e2e-test-httpd-pod'
  E1228 13:39:44.508348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:39:45.477799 19 builder.go:146] stderr: ""
  I1228 13:39:45.477837 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1228 13:39:45.477950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3355" for this suite. @ 12/28/24 13:39:45.482
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/28/24 13:39:45.49
  I1228 13:39:45.490984 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 13:39:45.491
  E1228 13:39:45.508453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:39:45.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:39:45.513
  STEP: creating the pod with failed condition @ 12/28/24 13:39:45.516
  E1228 13:39:46.509577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:47.509811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:48.509929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:49.510144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:50.510799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:51.510925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:52.511031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:53.511184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:54.511862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:55.511985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:56.512119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:57.512309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:58.512397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:39:59.513258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:00.513362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:01.514077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:02.514860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:03.515868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:04.516060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:05.516173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:06.516269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:07.516363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:08.516807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:09.517868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:10.518060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:11.518275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:12.518388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:13.518527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:14.518814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:15.518928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:16.519044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:17.519141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:18.519245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:19.519846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:20.519988      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:21.520152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:22.521050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:23.521265      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:24.521376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:25.521628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:26.521783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:27.521991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:28.522109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:29.522145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:30.522301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:31.522456      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:32.522550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:33.523163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:34.524226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:35.524807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:36.524903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:37.524967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:38.525089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:39.525131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:40.525552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:41.525676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:42.525835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:43.526879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:44.527283      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:45.527858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:46.527997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:47.528219      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:48.528358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:49.529145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:50.529255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:51.529929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:52.530209      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:53.530345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:54.530874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:55.530982      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:56.532020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:57.532118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:58.532271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:40:59.532373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:00.533398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:01.533618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:02.533746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:03.534089      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:04.535016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:05.535883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:06.536884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:07.537007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:08.537110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:09.537246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:10.537353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:11.537584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:12.537897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:13.538045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:14.538264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:15.538489      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:16.538730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:17.538795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:18.539903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:19.540908      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:20.541901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:21.542138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:22.542308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:23.542557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:24.542740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:25.542930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:26.543910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:27.543957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:28.544803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:29.545078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:30.545548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:31.545867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:32.546893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:33.546999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:34.547200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:35.548026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:36.548158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:37.548378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:38.548882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:39.549713      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:40.549888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:41.550175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:42.551150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:43.551299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:44.551869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 12/28/24 13:41:45.528
  E1228 13:41:45.551964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:41:46.044002 19 pod_client.go:173] Successfully updated pod "var-expansion-59359365-38ca-4557-b39b-4522e21c3a48"
  STEP: waiting for pod running @ 12/28/24 13:41:46.044
  E1228 13:41:46.553004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:47.553848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/28/24 13:41:48.053
  I1228 13:41:48.053543 19 delete.go:62] Deleting pod "var-expansion-59359365-38ca-4557-b39b-4522e21c3a48" in namespace "var-expansion-4381"
  I1228 13:41:48.063193 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-59359365-38ca-4557-b39b-4522e21c3a48" to be fully deleted
  E1228 13:41:48.554027      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:49.554153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:50.554246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:51.554347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:52.555371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:53.555875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:54.556372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:55.556601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:56.557331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:57.557543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:58.557627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:41:59.557797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:00.557972      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:01.558077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:02.558181      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:03.558417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:04.558536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:05.558781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:06.558925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:07.559178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:08.559318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:09.559419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:10.560317      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:11.560479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:12.561445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:13.561624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:14.562126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:15.562363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:16.563203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:17.563970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:18.564603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:19.564818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:20.158670 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4381" for this suite. @ 12/28/24 13:42:20.163
• [154.680 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/28/24 13:42:20.171
  I1228 13:42:20.171513 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 13:42:20.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:20.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:20.192
  E1228 13:42:20.565573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:21.565741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:22.215852 19 delete.go:62] Deleting pod "var-expansion-7743a24c-03c0-4701-b66c-aac9b37d81e3" in namespace "var-expansion-9193"
  I1228 13:42:22.224705 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-7743a24c-03c0-4701-b66c-aac9b37d81e3" to be fully deleted
  E1228 13:42:22.566420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:23.566505      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:24.233981 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9193" for this suite. @ 12/28/24 13:42:24.238
• [4.074 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/28/24 13:42:24.245
  I1228 13:42:24.245203 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 13:42:24.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:24.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:24.271
  I1228 13:42:24.315215 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1704" for this suite. @ 12/28/24 13:42:24.32
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/28/24 13:42:24.326
  I1228 13:42:24.326476 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename replicaset @ 12/28/24 13:42:24.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:24.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:24.35
  STEP: Create a ReplicaSet @ 12/28/24 13:42:24.353
  STEP: Verify that the required pods have come up @ 12/28/24 13:42:24.36
  I1228 13:42:24.363308 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E1228 13:42:24.566617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:25.566740      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:26.567504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:27.567878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:28.568990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:29.368558 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/28/24 13:42:29.368
  I1228 13:42:29.371699 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/28/24 13:42:29.371
  STEP: DeleteCollection of the ReplicaSets @ 12/28/24 13:42:29.376
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/28/24 13:42:29.385
  I1228 13:42:29.388708 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7897" for this suite. @ 12/28/24 13:42:29.391
• [5.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/28/24 13:42:29.407
  I1228 13:42:29.407819 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename configmap @ 12/28/24 13:42:29.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:29.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:29.435
  STEP: Creating configMap that has name configmap-test-emptyKey-6152b8bd-8052-4e23-ab80-b1ea1dd099a0 @ 12/28/24 13:42:29.438
  I1228 13:42:29.440811 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3142" for this suite. @ 12/28/24 13:42:29.444
• [0.045 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/28/24 13:42:29.452
  I1228 13:42:29.453007 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/28/24 13:42:29.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:29.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:29.474
  I1228 13:42:29.478979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  E1228 13:42:29.571392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:30.572075      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:31.572259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:32.534726 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1459" for this suite. @ 12/28/24 13:42:32.54
• [3.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 12/28/24 13:42:32.549
  I1228 13:42:32.549723 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename webhook @ 12/28/24 13:42:32.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:32.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:32.571
  E1228 13:42:32.572574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 12/28/24 13:42:32.596
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/28/24 13:42:32.774
  STEP: Deploying the webhook pod @ 12/28/24 13:42:32.786
  STEP: Wait for the deployment to be ready @ 12/28/24 13:42:32.799
  I1228 13:42:32.806270 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1228 13:42:33.572784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:34.573671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/28/24 13:42:34.821
  STEP: Verifying the service has paired with the endpoint @ 12/28/24 13:42:34.833
  E1228 13:42:35.573815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:35.834221 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/28/24 13:42:35.842
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/28/24 13:42:35.855
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/28/24 13:42:35.861
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/28/24 13:42:35.872
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/28/24 13:42:35.885
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/28/24 13:42:35.892
  I1228 13:42:35.941039 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1812" for this suite. @ 12/28/24 13:42:35.944
  STEP: Destroying namespace "webhook-markers-3344" for this suite. @ 12/28/24 13:42:35.955
• [3.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/28/24 13:42:35.961
  I1228 13:42:35.961820 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/28/24 13:42:35.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:35.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:35.983
  I1228 13:42:35.986095 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  I1228 13:42:36.528948 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7211" for this suite. @ 12/28/24 13:42:36.537
• [0.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/28/24 13:42:36.543
  I1228 13:42:36.543635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename deployment @ 12/28/24 13:42:36.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:36.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:36.564
  STEP: creating a Deployment @ 12/28/24 13:42:36.571
  I1228 13:42:36.571249 19 deployment.go:507] Creating simple deployment test-deployment-bx9pp
  E1228 13:42:36.574335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:42:36.584476 19 deployment.go:222] deployment "test-deployment-bx9pp" doesn't have the required revision set
  E1228 13:42:37.574640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:38.574826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 12/28/24 13:42:38.6
  I1228 13:42:38.605242 19 deployment.go:532] Deployment test-deployment-bx9pp has Conditions: [{Available True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bx9pp-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/28/24 13:42:38.605
  I1228 13:42:38.615556 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 42, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 28, 13, 42, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 28, 13, 42, 36, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-bx9pp-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/28/24 13:42:38.615
  I1228 13:42:38.617242 19 deployment.go:579] Observed &Deployment event: ADDED
  I1228 13:42:38.617268 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bx9pp-f4dbbbf74"}
  I1228 13:42:38.617338 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1228 13:42:38.617353 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bx9pp-f4dbbbf74"}
  I1228 13:42:38.617362 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1228 13:42:38.617426 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1228 13:42:38.617438 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1228 13:42:38.617456 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-bx9pp-f4dbbbf74" is progressing.}
  I1228 13:42:38.617515 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1228 13:42:38.617531 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1228 13:42:38.617540 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bx9pp-f4dbbbf74" has successfully progressed.}
  I1228 13:42:38.617600 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1228 13:42:38.617614 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1228 13:42:38.617623 19 deployment.go:575] Observed Deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bx9pp-f4dbbbf74" has successfully progressed.}
  I1228 13:42:38.617634 19 deployment.go:572] Found Deployment test-deployment-bx9pp in namespace deployment-9878 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 13:42:38.617642 19 deployment.go:583] Deployment test-deployment-bx9pp has an updated status
  STEP: patching the Statefulset Status @ 12/28/24 13:42:38.617
  I1228 13:42:38.617681 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1228 13:42:38.624485 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/28/24 13:42:38.624
  I1228 13:42:38.626429 19 deployment.go:616] Observed &Deployment event: ADDED
  I1228 13:42:38.626453 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bx9pp-f4dbbbf74"}
  I1228 13:42:38.626521 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1228 13:42:38.626538 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bx9pp-f4dbbbf74"}
  I1228 13:42:38.626548 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1228 13:42:38.626618 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1228 13:42:38.626672 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1228 13:42:38.626685 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:36 +0000 UTC 2024-12-28 13:42:36 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-bx9pp-f4dbbbf74" is progressing.}
  I1228 13:42:38.626809 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1228 13:42:38.626825 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1228 13:42:38.626862 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bx9pp-f4dbbbf74" has successfully progressed.}
  I1228 13:42:38.626933 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1228 13:42:38.626952 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:37 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1228 13:42:38.626968 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-28 13:42:37 +0000 UTC 2024-12-28 13:42:36 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bx9pp-f4dbbbf74" has successfully progressed.}
  I1228 13:42:38.626976 19 deployment.go:612] Observed deployment test-deployment-bx9pp in namespace deployment-9878 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1228 13:42:38.627047 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1228 13:42:38.627064 19 deployment.go:609] Found deployment test-deployment-bx9pp in namespace deployment-9878 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1228 13:42:38.627073 19 deployment.go:620] Deployment test-deployment-bx9pp has a patched status
  I1228 13:42:38.631796 19 deployment.go:633] Deployment "test-deployment-bx9pp":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-bx9pp",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9878",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46066c9e-c5bf-4582-b74d-b94ed3de722f",
      ResourceVersion: (string) (len=5) "45289",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870990156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-bx9pp-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1228 13:42:38.636737 19 deployment.go:39] New ReplicaSet "test-deployment-bx9pp-f4dbbbf74" of Deployment "test-deployment-bx9pp":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-bx9pp-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9878",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6eed094e-8880-410d-a290-171187b682aa",
      ResourceVersion: (string) (len=5) "45281",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870990156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-bx9pp",
          UID: (types.UID) (len=36) "46066c9e-c5bf-4582-b74d-b94ed3de722f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 34 36 30  |k:{\"uid\":\"460|
              00000120  36 36 63 39 65 2d 63 35  62 66 2d 34 35 38 32 2d  |66c9e-c5bf-4582-|
              00000130  62 37 34 64 2d 62 39 34  65 64 33 64 65 37 32 32  |b74d-b94ed3de722|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1228 13:42:38.641249 19 deployment.go:67] Pod "test-deployment-bx9pp-f4dbbbf74-5kpqj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-bx9pp-f4dbbbf74-5kpqj",
      GenerateName: (string) (len=32) "test-deployment-bx9pp-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-9878",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cf29c87-1ca7-4cd3-a831-4b70d3219c5d",
      ResourceVersion: (string) (len=5) "45280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870990156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-bx9pp-f4dbbbf74",
          UID: (types.UID) (len=36) "6eed094e-8880-410d-a290-171187b682aa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 65 65 64 30 39 34  65 2d 38 38 38 30 2d 34  |"6eed094e-8880-4|
              000000a0  31 30 64 2d 61 32 39 30  2d 31 37 31 31 38 37 62  |10d-a290-171187b|
              000000b0  36 38 32 61 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |682aa\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  36 2e 31 31 37 5c 22 7d  |2.168.206.117\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bwkkw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bwkkw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-66",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870990156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.66",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.66"
        }
      },
      PodIP: (string) (len=15) "192.168.206.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.206.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870990156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870990157,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6cffd551f3f1681cd37ebb5b5f49143d829011508ae803cf2262e644730e8498",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bwkkw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1228 13:42:38.642719 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9878" for this suite. @ 12/28/24 13:42:38.647
• [2.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 12/28/24 13:42:38.654
  I1228 13:42:38.654376 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-pred @ 12/28/24 13:42:38.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:42:38.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:42:38.676
  I1228 13:42:38.679642 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1228 13:42:38.686589 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1228 13:42:38.689886 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-142 before test
  I1228 13:42:38.695148 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-g5p6f from ingress-nginx-kubernetes-worker started at 2024-12-28 12:03:46 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.695167 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:42:38.695174 19 predicates.go:957] calico-node-fvkk5 from kube-system started at 2024-12-28 12:09:59 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.695179 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:42:38.695185 19 predicates.go:957] sonobuoy-e2e-job-fa890f0e542246f4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:42:38.695190 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1228 13:42:38.695196 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:42:38.695202 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-78kv4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:42:38.695210 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:42:38.695215 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:42:38.695220 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-66 before test
  I1228 13:42:38.701585 19 predicates.go:957] test-deployment-bx9pp-f4dbbbf74-5kpqj from deployment-9878 started at 2024-12-28 13:42:36 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.701612 19 predicates.go:959] 	Container httpd ready: true, restart count 0
  I1228 13:42:38.701618 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-lc442 from ingress-nginx-kubernetes-worker started at 2024-12-28 12:51:14 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.701623 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:42:38.701629 19 predicates.go:957] calico-node-5vw2r from kube-system started at 2024-12-28 12:08:44 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.701635 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:42:38.701641 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-28 12:12:27 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.701660 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1228 13:42:38.701665 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-shlws from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:42:38.701670 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:42:38.701674 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:42:38.701681 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-87-122 before test
  I1228 13:42:38.706215 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gr62s from ingress-nginx-kubernetes-worker started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.706235 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:42:38.706241 19 predicates.go:957] calico-node-2xjh4 from kube-system started at 2024-12-28 12:08:55 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.706248 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:42:38.706254 19 predicates.go:957] coredns-5b4857d7c8-qkzcv from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.706259 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1228 13:42:38.706265 19 predicates.go:957] kube-state-metrics-5d7bdccd49-24hp5 from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.706272 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1228 13:42:38.706282 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9bmck from kube-system started at 2024-12-28 11:53:44 +0000 UTC (2 container statuses recorded)
  I1228 13:42:38.706287 19 predicates.go:959] 	Container metrics-server ready: true, restart count 1
  I1228 13:42:38.706292 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1228 13:42:38.706297 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-h28df from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.706302 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1228 13:42:38.706308 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-874gb from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:42:38.706313 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 5
  I1228 13:42:38.706318 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-l94qm from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:42:38.706323 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:42:38.706328 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/28/24 13:42:38.706
  E1228 13:42:39.575439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:40.575553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/28/24 13:42:40.726
  STEP: Trying to apply a random label on the found node. @ 12/28/24 13:42:40.748
  STEP: verifying the node has the label kubernetes.io/e2e-e5331a91-dfb8-4189-aacf-adc3f22f0310 95 @ 12/28/24 13:42:40.756
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/28/24 13:42:40.76
  E1228 13:42:41.575868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:42.575975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.45.142 on the node which pod4 resides and expect not scheduled @ 12/28/24 13:42:42.777
  E1228 13:42:43.576723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:44.576867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:45.577864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:46.578072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:47.578104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:48.578305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:49.579144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:50.579330      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:51.579817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:52.579937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:53.580950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:54.581048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:55.581198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:56.581408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:57.581534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:58.581634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:42:59.581818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:00.582032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:01.582864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:02.583072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:03.583244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:04.583318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:05.583828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:06.584158      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:07.584252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:08.584904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:09.585341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:10.585460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:11.585810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:12.585913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:13.586891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:14.587752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:15.587947      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:16.588172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:17.588302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:18.588427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:19.588879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:20.589204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:21.590195      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:22.590973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:23.591058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:24.591222      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:25.592124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:26.592249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:27.592871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:28.593068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:29.593339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:30.593468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:31.593795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:32.594862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:33.594952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:34.595214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:35.595780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:36.595872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:37.596474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:38.596706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:39.597246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:40.597381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:41.597460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:42.597720      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:43.597814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:44.598853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:45.599147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:46.599472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:47.599793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:48.599910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:49.600917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:50.601241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:51.602258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:52.602396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:53.603397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:54.603980      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:55.604926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:56.605843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:57.606858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:58.606970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:43:59.607959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:00.608226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:01.608324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:02.609255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:03.610163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:04.610371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:05.611318      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:06.611451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:07.611799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:08.612003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:09.612901      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:10.613090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:11.614024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:12.614121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:13.614909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:14.615846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:15.616855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:16.617159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:17.617424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:18.617614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:19.618730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:20.618760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:21.618884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:22.619870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:23.619997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:24.620178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:25.621148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:26.621478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:27.621833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:28.622073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:29.622206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:30.622423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:31.622523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:32.622737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:33.623485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:34.624394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:35.624780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:36.625842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:37.626175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:38.626878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:39.626990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:40.627198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:41.627871      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:42.628845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:43.628950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:44.629031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:45.629117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:46.629860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:47.630782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:48.630873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:49.630959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:50.631374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:51.631474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:52.631753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:53.632644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:54.632771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:55.633176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:56.634013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:57.634853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:58.635263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:44:59.635339      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:00.636020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:01.636860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:02.636971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:03.637683      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:04.638246      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:05.639312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:06.640234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:07.640263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:08.640480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:09.641475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:10.641585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:11.642385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:12.642627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:13.643491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:14.644372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:15.644473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:16.644677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:17.644775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:18.645844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:19.646615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:20.646773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:21.647689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:22.647788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:23.648587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:24.649534      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:25.650432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:26.650622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:27.650671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:28.650782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:29.651101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:30.651118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:31.652020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:32.652200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:33.652305      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:34.652393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:35.653185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:36.653295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:37.654174      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:38.654850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:39.655340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:40.655848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:41.656756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:42.656853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:43.657692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:44.657889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:45.658120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:46.658320      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:47.659312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:48.659424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:49.659532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:50.659643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:51.660566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:52.660705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:53.661077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:54.661268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:55.662238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:56.662538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:57.663474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:58.663552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:45:59.664452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:00.664919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:01.665741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:02.665783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:03.666275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:04.666375      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:05.666474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:06.666911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:07.667711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:08.667814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:09.668838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:10.669133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:11.669887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:12.670079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:13.670974      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:14.671994      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:15.672858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:16.672960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:17.673869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:18.673968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:19.674861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:20.674956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:21.675854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:22.675944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:23.676619      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:24.676889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:25.677849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:26.678058      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:27.679137      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:28.679313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:29.680291      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:30.680484      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:31.681092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:32.681249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:33.682200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:34.682359      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:35.682588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:36.682769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:37.683428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:38.683532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:39.684004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:40.684111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:41.684617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:42.685059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:43.685686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:44.685864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:45.685939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:46.686851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:47.687414      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:48.687778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:49.688578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:50.688714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:51.689441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:52.689855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:53.690603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:54.690627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:55.691566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:56.691833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:57.692770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:58.692977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:46:59.693066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:00.693270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:01.693376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:02.693479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:03.693983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:04.694760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:05.694858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:06.695847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:07.696168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:08.696270      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:09.697264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:10.697371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:11.698203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:12.698351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:13.698838      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:14.699074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:15.699117      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:16.699333      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:17.700355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:18.700512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:19.701129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:20.701238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:21.702103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:22.702290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:23.702511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:24.703472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:25.703763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:26.704846      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:27.705616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:28.705789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:29.706085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:30.706025      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:31.706771      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:32.706924      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:33.707834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:34.707954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:35.708280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:36.708475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:37.709550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:38.709716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:39.710729      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:40.710820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:41.710997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:42.711197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e5331a91-dfb8-4189-aacf-adc3f22f0310 off the node ip-172-31-45-142 @ 12/28/24 13:47:42.787
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e5331a91-dfb8-4189-aacf-adc3f22f0310 @ 12/28/24 13:47:42.8
  I1228 13:47:42.804214 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8921" for this suite. @ 12/28/24 13:47:42.81
• [304.164 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/28/24 13:47:42.82
  I1228 13:47:42.820261 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename var-expansion @ 12/28/24 13:47:42.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:47:42.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:47:42.847
  STEP: Creating a pod to test env composition @ 12/28/24 13:47:42.85
  E1228 13:47:43.712226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:44.713234      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:45.713804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:46.713904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:47:46.878
  I1228 13:47:46.881363 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod var-expansion-3446aecd-5f7a-49d2-bfee-4a6a81acd59b container dapi-container: <nil>
  STEP: delete the pod @ 12/28/24 13:47:46.899
  I1228 13:47:46.919022 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5456" for this suite. @ 12/28/24 13:47:46.923
• [4.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 12/28/24 13:47:46.933
  I1228 13:47:46.933125 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:47:46.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:47:46.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:47:46.956
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-608 @ 12/28/24 13:47:46.96
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/28/24 13:47:46.969
  STEP: creating service externalsvc in namespace services-608 @ 12/28/24 13:47:46.969
  STEP: creating replication controller externalsvc in namespace services-608 @ 12/28/24 13:47:46.984
  I1228 13:47:46.993006      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-608, replica count: 2
  E1228 13:47:47.714299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:48.714833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:49.714961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:47:50.044384      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/28/24 13:47:50.05
  I1228 13:47:50.064046 19 resource.go:361] Creating new exec pod
  E1228 13:47:50.715863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:51.715964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:47:52.085166 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-608 exec execpod94l2b -- /bin/sh -x -c nslookup clusterip-service.services-608.svc.cluster.local'
  I1228 13:47:52.177383 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-608.svc.cluster.local\n"
  I1228 13:47:52.177428 19 builder.go:147] stdout: "Server:\t\t10.152.183.28\nAddress:\t10.152.183.28#53\n\nclusterip-service.services-608.svc.cluster.local\tcanonical name = externalsvc.services-608.svc.cluster.local.\nName:\texternalsvc.services-608.svc.cluster.local\nAddress: 10.152.183.187\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-608, will wait for the garbage collector to delete the pods @ 12/28/24 13:47:52.177
  I1228 13:47:52.240384 19 resources.go:139] Deleting ReplicationController externalsvc took: 8.255064ms
  I1228 13:47:52.340807 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.417897ms
  E1228 13:47:52.716806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:53.717236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:54.717512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:47:55.259927 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1228 13:47:55.272597 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-608" for this suite. @ 12/28/24 13:47:55.277
• [8.352 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 12/28/24 13:47:55.284
  I1228 13:47:55.284997 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption @ 12/28/24 13:47:55.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:47:55.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:47:55.309
  I1228 13:47:55.325871 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1228 13:47:55.718392      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:56.718608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:57.719255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:58.719446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:47:59.719860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:00.719949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:01.720085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:02.720169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:03.720755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:04.720818      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:05.720880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:06.721081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:07.721779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:08.721856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:09.722737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:10.722867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:11.723732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:12.723796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:13.724872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:14.724945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:15.725879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:16.725957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:17.726730      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:18.726810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:19.727814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:20.727995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:21.728099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:22.728200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:23.728341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:24.728413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:25.728965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:26.729146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:27.729881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:28.730086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:29.731078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:30.731285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:31.732077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:32.732202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:33.732348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:34.732469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:35.732584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:36.732878      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:37.733745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:38.734608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:39.734744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:40.734796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:41.735568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:42.735693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:43.736723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:44.736785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:45.737590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:46.737736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:47.738497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:48.738693      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:49.739425      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:50.739845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:51.740261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:52.740391      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:53.740473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:54.741491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:48:55.332744 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/28/24 13:48:55.336
  I1228 13:48:55.336951 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/28/24 13:48:55.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:48:55.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:48:55.363
  STEP: Finding an available node @ 12/28/24 13:48:55.367
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/28/24 13:48:55.367
  E1228 13:48:55.742463      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:56.742587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/28/24 13:48:57.391
  I1228 13:48:57.406401 19 preemption.go:585] found a healthy node: ip-172-31-65-66
  E1228 13:48:57.743052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:58.743948      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:48:59.744812      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:00.745864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:01.746787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:02.746883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:03.473236 19 preemption.go:708] pods created so far: [1 1 1]
  I1228 13:49:03.473267 19 preemption.go:709] length of pods created so far: 3
  E1228 13:49:03.746975      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:04.747036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:05.487864 19 preemption.go:726] pods created so far: [2 2 1]
  E1228 13:49:05.747172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:06.747891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:07.747991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:08.748111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:09.748210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:10.748302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:11.748438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:12.563049 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1016" for this suite. @ 12/28/24 13:49:12.566
  I1228 13:49:12.573685 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6667" for this suite. @ 12/28/24 13:49:12.577
• [77.301 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 12/28/24 13:49:12.586
  I1228 13:49:12.586151 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename services @ 12/28/24 13:49:12.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:49:12.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:49:12.609
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2059 @ 12/28/24 13:49:12.612
  STEP: changing the ExternalName service to type=ClusterIP @ 12/28/24 13:49:12.616
  STEP: creating replication controller externalname-service in namespace services-2059 @ 12/28/24 13:49:12.632
  I1228 13:49:12.638150      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2059, replica count: 2
  E1228 13:49:12.748724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:13.749567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:14.750380      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:15.689465      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1228 13:49:15.689503 19 resource.go:361] Creating new exec pod
  E1228 13:49:15.750952      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:16.751165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:17.751785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:18.710226 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-2059 exec execpodhv4jg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E1228 13:49:18.752799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:18.797137 19 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1228 13:49:18.797170 19 builder.go:147] stdout: "externalname-service-kq8d7"
  I1228 13:49:18.797289 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=services-2059 exec execpodhv4jg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
  I1228 13:49:18.883855 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n"
  I1228 13:49:18.883895 19 builder.go:147] stdout: "externalname-service-2wcnn"
  I1228 13:49:18.883971 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1228 13:49:18.901822 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2059" for this suite. @ 12/28/24 13:49:18.905
• [6.327 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/28/24 13:49:18.912
  I1228 13:49:18.912831 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:49:18.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:49:18.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:49:18.938
  STEP: Creating projection with secret that has name projected-secret-test-8e25a3a6-4949-4b81-914d-698602bf2210 @ 12/28/24 13:49:18.943
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:49:18.948
  E1228 13:49:19.753515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:20.753618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:21.753824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:22.753931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:49:22.977
  I1228 13:49:22.981682 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-projected-secrets-440cd94b-5b3f-4572-a290-5b14ee2cd5de container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:49:22.991
  I1228 13:49:23.011255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1561" for this suite. @ 12/28/24 13:49:23.016
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 12/28/24 13:49:23.025
  I1228 13:49:23.025146 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:49:23.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:49:23.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:49:23.046
  STEP: create deployment with httpd image @ 12/28/24 13:49:23.049
  I1228 13:49:23.049489 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4732 create -f -'
  I1228 13:49:23.115672 19 builder.go:146] stderr: ""
  I1228 13:49:23.115759 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/28/24 13:49:23.115
  I1228 13:49:23.115855 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4732 diff -f -'
  E1228 13:49:23.754850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:24.755847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:25.755951      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:26.756079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:27.411477 19 builder.go:135] rc: 1
  I1228 13:49:27.411562 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-4732 delete -f -'
  I1228 13:49:27.459950 19 builder.go:146] stderr: ""
  I1228 13:49:27.459985 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1228 13:49:27.460098 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4732" for this suite. @ 12/28/24 13:49:27.464
• [4.445 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/28/24 13:49:27.47
  I1228 13:49:27.470432 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename chunking @ 12/28/24 13:49:27.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:49:27.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:49:27.491
  STEP: creating a large number of resources @ 12/28/24 13:49:27.494
  E1228 13:49:27.756639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:28.756958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:29.757142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:30.758044      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:31.758247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:32.759048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:33.759782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:34.760606      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:35.760708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:36.761587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:37.762567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:38.763172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:39.763852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:40.764691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:41.765612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:42.766600      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:43.767156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:44.767371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 12/28/24 13:49:45.178
  I1228 13:49:45.225555 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1228 13:49:45.275978 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1228 13:49:45.326945 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1228 13:49:45.375718 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1228 13:49:45.425403 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1228 13:49:45.477633 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1228 13:49:45.525208 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1228 13:49:45.575609 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1228 13:49:45.627003 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1228 13:49:45.676036 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1228 13:49:45.725587 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  E1228 13:49:45.767744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:45.776428 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1228 13:49:45.826367 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1228 13:49:45.875892 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1228 13:49:45.927092 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1228 13:49:45.976045 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1228 13:49:46.025858 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1228 13:49:46.076685 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1228 13:49:46.125221 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1228 13:49:46.175337 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1228 13:49:46.226818 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1228 13:49:46.275120 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1228 13:49:46.325879 19 chunking.go:98] Retrieved 17/17 results with rv 47174 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1228 13:49:46.377103 19 chunking.go:98] Retrieved 9/17 results with rv 47174 and continue 
  I1228 13:49:46.426111 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1228 13:49:46.475953 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1228 13:49:46.527283 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1228 13:49:46.575680 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1228 13:49:46.625048 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1228 13:49:46.676628 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1228 13:49:46.725572 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E1228 13:49:46.768631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:46.775782 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1228 13:49:46.826839 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1228 13:49:46.875339 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1228 13:49:46.925865 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1228 13:49:46.976520 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1228 13:49:47.025979 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1228 13:49:47.075497 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1228 13:49:47.127229 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1228 13:49:47.175832 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1228 13:49:47.225674 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1228 13:49:47.276715 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1228 13:49:47.325280 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1228 13:49:47.375523 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1228 13:49:47.427306 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1228 13:49:47.475696 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1228 13:49:47.524787 19 chunking.go:98] Retrieved 17/17 results with rv 47175 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1228 13:49:47.575812 19 chunking.go:98] Retrieved 9/17 results with rv 47175 and continue 
  I1228 13:49:47.625097 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1228 13:49:47.675097 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1228 13:49:47.726972 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E1228 13:49:47.769039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:47.775117 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1228 13:49:47.825067 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1228 13:49:47.876803 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1228 13:49:47.924910 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1228 13:49:47.974741 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1228 13:49:48.028952 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1228 13:49:48.075064 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1228 13:49:48.125629 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1228 13:49:48.176570 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1228 13:49:48.225987 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1228 13:49:48.275123 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1228 13:49:48.326977 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1228 13:49:48.375393 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1228 13:49:48.425936 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1228 13:49:48.476868 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1228 13:49:48.525708 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1228 13:49:48.574514 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1228 13:49:48.626982 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1228 13:49:48.676057 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1228 13:49:48.725414 19 chunking.go:98] Retrieved 17/17 results with rv 47177 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDcxNzcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  E1228 13:49:48.769592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:48.776832 19 chunking.go:98] Retrieved 9/17 results with rv 47177 and continue 
  STEP: retrieving those results all at once @ 12/28/24 13:49:48.776
  I1228 13:49:48.829682 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9469" for this suite. @ 12/28/24 13:49:48.876
• [21.459 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 12/28/24 13:49:48.929
  I1228 13:49:48.930007 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubectl @ 12/28/24 13:49:48.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:49:48.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:49:48.956
  STEP: creating a replication controller @ 12/28/24 13:49:48.959
  I1228 13:49:48.959409 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 create -f -'
  I1228 13:49:49.041247 19 builder.go:146] stderr: ""
  I1228 13:49:49.041278 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/28/24 13:49:49.041
  I1228 13:49:49.041446 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1228 13:49:49.089741 19 builder.go:146] stderr: ""
  I1228 13:49:49.089773 19 builder.go:147] stdout: "update-demo-nautilus-7gkc5 update-demo-nautilus-vldw2 "
  I1228 13:49:49.089861 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-7gkc5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:49:49.133399 19 builder.go:146] stderr: ""
  I1228 13:49:49.133429 19 builder.go:147] stdout: ""
  I1228 13:49:49.133443 19 kubectl.go:2502] update-demo-nautilus-7gkc5 is created but not running
  E1228 13:49:49.770257      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:50.770385      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:51.770628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:52.770824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:53.770937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:54.134518 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1228 13:49:54.183280 19 builder.go:146] stderr: ""
  I1228 13:49:54.183316 19 builder.go:147] stdout: "update-demo-nautilus-7gkc5 update-demo-nautilus-vldw2 "
  I1228 13:49:54.183358 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-7gkc5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:49:54.225428 19 builder.go:146] stderr: ""
  I1228 13:49:54.225457 19 builder.go:147] stdout: "true"
  I1228 13:49:54.225492 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-7gkc5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1228 13:49:54.269533 19 builder.go:146] stderr: ""
  I1228 13:49:54.269574 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:49:54.269588 19 kubectl.go:2393] validating pod update-demo-nautilus-7gkc5
  I1228 13:49:54.274484 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:49:54.274527 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:49:54.274537 19 kubectl.go:2520] update-demo-nautilus-7gkc5 is verified up and running
  I1228 13:49:54.274568 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-vldw2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:49:54.318665 19 builder.go:146] stderr: ""
  I1228 13:49:54.318696 19 builder.go:147] stdout: "true"
  I1228 13:49:54.318735 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-vldw2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1228 13:49:54.363259 19 builder.go:146] stderr: ""
  I1228 13:49:54.363300 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:49:54.363313 19 kubectl.go:2393] validating pod update-demo-nautilus-vldw2
  I1228 13:49:54.368470 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:49:54.368529 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:49:54.368543 19 kubectl.go:2520] update-demo-nautilus-vldw2 is verified up and running
  STEP: scaling down the replication controller @ 12/28/24 13:49:54.368
  I1228 13:49:54.369399 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1228 13:49:54.369432 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1228 13:49:54.771063      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:55.440762 19 builder.go:146] stderr: ""
  I1228 13:49:55.440800 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/28/24 13:49:55.44
  I1228 13:49:55.440896 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1228 13:49:55.485406 19 builder.go:146] stderr: ""
  I1228 13:49:55.485451 19 builder.go:147] stdout: "update-demo-nautilus-vldw2 "
  I1228 13:49:55.485489 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-vldw2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:49:55.530142 19 builder.go:146] stderr: ""
  I1228 13:49:55.530178 19 builder.go:147] stdout: "true"
  I1228 13:49:55.530232 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-vldw2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1228 13:49:55.574877 19 builder.go:146] stderr: ""
  I1228 13:49:55.574919 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:49:55.574933 19 kubectl.go:2393] validating pod update-demo-nautilus-vldw2
  I1228 13:49:55.579760 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:49:55.579806 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:49:55.579816 19 kubectl.go:2520] update-demo-nautilus-vldw2 is verified up and running
  STEP: scaling up the replication controller @ 12/28/24 13:49:55.579
  I1228 13:49:55.580674 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1228 13:49:55.580702 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1228 13:49:55.771194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:56.645005 19 builder.go:146] stderr: ""
  I1228 13:49:56.645041 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/28/24 13:49:56.645
  I1228 13:49:56.645127 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1228 13:49:56.693169 19 builder.go:146] stderr: ""
  I1228 13:49:56.693206 19 builder.go:147] stdout: "update-demo-nautilus-vldw2 update-demo-nautilus-zzrlr "
  I1228 13:49:56.693264 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-vldw2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:49:56.736724 19 builder.go:146] stderr: ""
  I1228 13:49:56.736760 19 builder.go:147] stdout: "true"
  I1228 13:49:56.736800 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-vldw2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1228 13:49:56.772550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:49:56.782558 19 builder.go:146] stderr: ""
  I1228 13:49:56.782601 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:49:56.782698 19 kubectl.go:2393] validating pod update-demo-nautilus-vldw2
  I1228 13:49:56.788398 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:49:56.788437 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:49:56.788447 19 kubectl.go:2520] update-demo-nautilus-vldw2 is verified up and running
  I1228 13:49:56.788524 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-zzrlr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1228 13:49:56.830486 19 builder.go:146] stderr: ""
  I1228 13:49:56.830516 19 builder.go:147] stdout: "true"
  I1228 13:49:56.830576 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods update-demo-nautilus-zzrlr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1228 13:49:56.876624 19 builder.go:146] stderr: ""
  I1228 13:49:56.876678 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1228 13:49:56.876689 19 kubectl.go:2393] validating pod update-demo-nautilus-zzrlr
  I1228 13:49:56.882959 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1228 13:49:56.883005 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1228 13:49:56.883016 19 kubectl.go:2520] update-demo-nautilus-zzrlr is verified up and running
  STEP: using delete to clean up resources @ 12/28/24 13:49:56.883
  I1228 13:49:56.883109 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 delete --grace-period=0 --force -f -'
  I1228 13:49:56.932290 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1228 13:49:56.932317 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1228 13:49:56.932351 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get rc,svc -l name=update-demo --no-headers'
  I1228 13:49:56.997413 19 builder.go:146] stderr: "No resources found in kubectl-3203 namespace.\n"
  I1228 13:49:56.997455 19 builder.go:147] stdout: ""
  I1228 13:49:56.997497 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2567517679 --namespace=kubectl-3203 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1228 13:49:57.066872 19 builder.go:146] stderr: ""
  I1228 13:49:57.066952 19 builder.go:147] stdout: ""
  I1228 13:49:57.067095 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3203" for this suite. @ 12/28/24 13:49:57.074
• [8.164 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 12/28/24 13:49:57.094
  I1228 13:49:57.094927 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename sched-pred @ 12/28/24 13:49:57.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:49:57.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:49:57.12
  I1228 13:49:57.123466 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1228 13:49:57.133359 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1228 13:49:57.137253 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-45-142 before test
  I1228 13:49:57.141289 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-g5p6f from ingress-nginx-kubernetes-worker started at 2024-12-28 12:03:46 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.141316 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:49:57.141331 19 predicates.go:957] calico-node-fvkk5 from kube-system started at 2024-12-28 12:09:59 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.141338 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:49:57.141344 19 predicates.go:957] update-demo-nautilus-vldw2 from kubectl-3203 started at 2024-12-28 13:49:49 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.141352 19 predicates.go:959] 	Container update-demo ready: true, restart count 0
  I1228 13:49:57.141358 19 predicates.go:957] sonobuoy-e2e-job-fa890f0e542246f4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:49:57.141364 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1228 13:49:57.141370 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:49:57.141375 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-78kv4 from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:49:57.141379 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:49:57.141384 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:49:57.141393 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-66 before test
  I1228 13:49:57.145800 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-lc442 from ingress-nginx-kubernetes-worker started at 2024-12-28 12:51:14 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.145823 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:49:57.145831 19 predicates.go:957] calico-node-5vw2r from kube-system started at 2024-12-28 12:08:44 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.145837 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:49:57.145842 19 predicates.go:957] update-demo-nautilus-zzrlr from kubectl-3203 started at 2024-12-28 13:49:55 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.145848 19 predicates.go:959] 	Container update-demo ready: true, restart count 0
  I1228 13:49:57.145853 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-28 12:12:27 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.145857 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1228 13:49:57.145862 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-shlws from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:49:57.145868 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:49:57.145873 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1228 13:49:57.145878 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-87-122 before test
  I1228 13:49:57.151494 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-gr62s from ingress-nginx-kubernetes-worker started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.151511 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1228 13:49:57.151519 19 predicates.go:957] calico-node-2xjh4 from kube-system started at 2024-12-28 12:08:55 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.151524 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1228 13:49:57.151530 19 predicates.go:957] coredns-5b4857d7c8-qkzcv from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.151536 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1228 13:49:57.151542 19 predicates.go:957] kube-state-metrics-5d7bdccd49-24hp5 from kube-system started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.151547 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1228 13:49:57.151554 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-9bmck from kube-system started at 2024-12-28 11:53:44 +0000 UTC (2 container statuses recorded)
  I1228 13:49:57.151565 19 predicates.go:959] 	Container metrics-server ready: true, restart count 1
  I1228 13:49:57.151570 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1228 13:49:57.151576 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-h28df from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.151581 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1228 13:49:57.151587 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-874gb from kubernetes-dashboard started at 2024-12-28 11:53:44 +0000 UTC (1 container statuses recorded)
  I1228 13:49:57.151592 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 5
  I1228 13:49:57.151598 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-l94qm from sonobuoy started at 2024-12-28 12:12:29 +0000 UTC (2 container statuses recorded)
  I1228 13:49:57.151603 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1228 13:49:57.151609 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-45-142 @ 12/28/24 13:49:57.166
  STEP: verifying the node has the label node ip-172-31-65-66 @ 12/28/24 13:49:57.178
  STEP: verifying the node has the label node ip-172-31-87-122 @ 12/28/24 13:49:57.194
  I1228 13:49:57.232966 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-g5p6f requesting resource cpu=0m on Node ip-172-31-45-142
  I1228 13:49:57.233071 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-gr62s requesting resource cpu=0m on Node ip-172-31-87-122
  I1228 13:49:57.233103 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-lc442 requesting resource cpu=0m on Node ip-172-31-65-66
  I1228 13:49:57.233131 19 predicates.go:372] Pod calico-node-2xjh4 requesting resource cpu=250m on Node ip-172-31-87-122
  I1228 13:49:57.233140 19 predicates.go:372] Pod calico-node-5vw2r requesting resource cpu=250m on Node ip-172-31-65-66
  I1228 13:49:57.233147 19 predicates.go:372] Pod calico-node-fvkk5 requesting resource cpu=250m on Node ip-172-31-45-142
  I1228 13:49:57.233153 19 predicates.go:372] Pod coredns-5b4857d7c8-qkzcv requesting resource cpu=100m on Node ip-172-31-87-122
  I1228 13:49:57.233161 19 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-24hp5 requesting resource cpu=0m on Node ip-172-31-87-122
  I1228 13:49:57.233168 19 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-9bmck requesting resource cpu=5m on Node ip-172-31-87-122
  I1228 13:49:57.233177 19 predicates.go:372] Pod update-demo-nautilus-zzrlr requesting resource cpu=0m on Node ip-172-31-65-66
  I1228 13:49:57.233186 19 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-h28df requesting resource cpu=0m on Node ip-172-31-87-122
  I1228 13:49:57.233191 19 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-874gb requesting resource cpu=0m on Node ip-172-31-87-122
  I1228 13:49:57.233197 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-65-66
  I1228 13:49:57.233206 19 predicates.go:372] Pod sonobuoy-e2e-job-fa890f0e542246f4 requesting resource cpu=0m on Node ip-172-31-45-142
  I1228 13:49:57.233212 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-78kv4 requesting resource cpu=0m on Node ip-172-31-45-142
  I1228 13:49:57.233218 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-l94qm requesting resource cpu=0m on Node ip-172-31-87-122
  I1228 13:49:57.233227 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-14875ca4b5a3473f-shlws requesting resource cpu=0m on Node ip-172-31-65-66
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/28/24 13:49:57.233
  I1228 13:49:57.233258 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-65-66
  I1228 13:49:57.243334 19 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-87-122
  I1228 13:49:57.249343 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-45-142
  E1228 13:49:57.772912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:49:58.773873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/28/24 13:49:59.275
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b.18155b76cf425022], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6895/filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b to ip-172-31-45-142] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b.18155b76ebc379a9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b.18155b76ecd3cffe], Reason = [Created], Message = [Created container filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b.18155b76ef5afe43], Reason = [Started], Message = [Started container filler-pod-42cb672c-a57c-4d05-9c44-133e6771be7b] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0.18155b76ceae57c6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6895/filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0 to ip-172-31-65-66] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0.18155b76ed7993a8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0.18155b76ee54d5ce], Reason = [Created], Message = [Created container filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0.18155b76f0b2f63c], Reason = [Started], Message = [Started container filler-pod-a50ba60d-627e-4f04-84f5-9abcf0d323a0] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2.18155b76cf1621ff], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6895/filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2 to ip-172-31-87-122] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2.18155b76ec745eca], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2.18155b76ed4f0e10], Reason = [Created], Message = [Created container filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2.18155b76ef7c74d6], Reason = [Started], Message = [Started container filler-pod-d26b832d-4055-43f9-b182-fe683073fbd2] @ 12/28/24 13:49:59.278
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18155b7747f7b5ab], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 12/28/24 13:49:59.295
  E1228 13:49:59.774079      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-87-122 @ 12/28/24 13:50:00.292
  STEP: verifying the node doesn't have the label node @ 12/28/24 13:50:00.304
  STEP: removing the label node off the node ip-172-31-45-142 @ 12/28/24 13:50:00.308
  STEP: verifying the node doesn't have the label node @ 12/28/24 13:50:00.321
  STEP: removing the label node off the node ip-172-31-65-66 @ 12/28/24 13:50:00.326
  STEP: verifying the node doesn't have the label node @ 12/28/24 13:50:00.342
  I1228 13:50:00.346949 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6895" for this suite. @ 12/28/24 13:50:00.353
• [3.265 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/28/24 13:50:00.359
  I1228 13:50:00.359748 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename pods @ 12/28/24 13:50:00.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:50:00.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:50:00.382
  E1228 13:50:00.774614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:01.774779      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:02.775247      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:03.775360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:04.776030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:05.776144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:50:06.436
  I1228 13:50:06.440967 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod client-envvars-eef5137d-927d-4610-a8cd-3e215b8766c0 container env3cont: <nil>
  STEP: delete the pod @ 12/28/24 13:50:06.446
  I1228 13:50:06.467278 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3353" for this suite. @ 12/28/24 13:50:06.471
• [6.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 12/28/24 13:50:06.478
  I1228 13:50:06.478330 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename resourcequota @ 12/28/24 13:50:06.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:50:06.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:50:06.501
  STEP: Creating resourceQuota "e2e-rq-status-dprnm" @ 12/28/24 13:50:06.507
  I1228 13:50:06.519566 19 resource_quota.go:1102] Resource quota "e2e-rq-status-dprnm" reports spec: hard cpu limit of 500m
  I1228 13:50:06.519587 19 resource_quota.go:1104] Resource quota "e2e-rq-status-dprnm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-dprnm" /status @ 12/28/24 13:50:06.519
  STEP: Confirm /status for "e2e-rq-status-dprnm" resourceQuota via watch @ 12/28/24 13:50:06.526
  I1228 13:50:06.528549 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-dprnm" in namespace "resourcequota-171" with hard status: v1.ResourceList(nil)
  I1228 13:50:06.528599 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-dprnm" in namespace "resourcequota-171" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1228 13:50:06.528608 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-dprnm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/28/24 13:50:06.532
  I1228 13:50:06.537271 19 resource_quota.go:1152] Resource quota "e2e-rq-status-dprnm" reports spec: hard cpu limit of 1
  I1228 13:50:06.537293 19 resource_quota.go:1153] Resource quota "e2e-rq-status-dprnm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-dprnm" /status @ 12/28/24 13:50:06.537
  STEP: Confirm /status for "e2e-rq-status-dprnm" resourceQuota via watch @ 12/28/24 13:50:06.543
  I1228 13:50:06.545293 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-dprnm" in namespace "resourcequota-171" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1228 13:50:06.545324 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-dprnm" in namespace "resourcequota-171" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1228 13:50:06.545367 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-dprnm" /status was patched
  STEP: Get "e2e-rq-status-dprnm" /status @ 12/28/24 13:50:06.545
  I1228 13:50:06.551071 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-dprnm" reports status: hard cpu of 1
  I1228 13:50:06.551097 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-dprnm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-dprnm" /status before checking Spec is unchanged @ 12/28/24 13:50:06.554
  I1228 13:50:06.558763 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-dprnm" reports status: hard cpu of 2
  I1228 13:50:06.558786 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-dprnm" reports status: hard memory of 2Gi
  I1228 13:50:06.560377 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-dprnm" in namespace "resourcequota-171" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1228 13:50:06.566174 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c50870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c508e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c50960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:06.776465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:07.776921      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:08.777879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:09.777986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:10.778062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:11.564576 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045226f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045227b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045227f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:11.778784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:12.778998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:13.779176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:14.779430      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:15.779698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:16.566066 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522a80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522ab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522b10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:16.780424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:17.780640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:18.780777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:19.781289      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:20.781443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:21.566789 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522c90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:21.782119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:22.782331      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:23.782452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:24.782556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:25.782789      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:26.565152 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c50db0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c50df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c50e58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:26.783474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:27.783581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:28.783700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:29.783793      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:30.783986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:31.566940 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522f48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004522fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:31.784066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:32.784153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:33.784225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:34.784991      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:35.785084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:36.564793 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045231e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045232c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:36.786076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:37.786170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:38.786242      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:39.786373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:40.786474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:41.565993 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523668), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:41.787284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:42.787512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:43.787618      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:44.787769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:45.787966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:46.566876 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51248), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c512f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c514b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:46.788092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:47.788313      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:48.788502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:49.788601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:50.788760      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:51.565133 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51878), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51908), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:51.789449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:52.789561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:53.789714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:54.789856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:55.790172      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:50:56.564844 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523a70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523ab8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523ae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:50:56.791168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:57.791393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:58.791605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:50:59.791848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:00.792059      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:01.566515 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51d10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c51d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:01.792896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:02.793032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:03.793140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:04.793889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:05.794833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:06.564541 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523dd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004523e60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:06.795876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:07.795970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:08.796085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:09.796139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:10.796221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:11.565091 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e1f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:11.796383      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:12.796891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:13.797893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:14.798148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:15.798278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:16.566126 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e4b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e4e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:16.798366      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:17.798487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:18.798633      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:19.798851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:20.799043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:21.565394 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d401e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:21.799742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:22.799855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:23.799986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:24.800067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:25.800311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:26.564363 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d405a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:26.800745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:27.800973      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:28.801207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:29.801343      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:30.801545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:31.566071 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e8e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e9a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:31.802403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:32.802617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:33.802782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:34.802937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:35.803801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:36.564940 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d408e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40978), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d409c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:36.804263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:37.804356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:38.804424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:39.804583      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:40.804705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:41.564718 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478ed50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478ed98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478edc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:41.804872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:42.804990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:43.805074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:44.805834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:45.805979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:46.567087 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478efa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478eff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:46.806361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:47.806897      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:48.807095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:49.807923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:50.808051      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:51.565442 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:51.808765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:52.808931      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:53.809140      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:54.810133      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:55.810349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:51:56.566029 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f5c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f650), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:51:56.811335      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:57.811594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:58.811809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:51:59.812023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:00.812227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:01.565579 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d401b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:01.812852      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:02.812961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:03.813833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:04.813938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:05.814839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:06.565058 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d404f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:06.815361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:07.816395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:08.816504      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:09.816585      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:10.816781      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:11.567270 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d408d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:11.817548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:12.817862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:13.818069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:14.818294      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:15.818401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:16.566089 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e210), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e240), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:16.819200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:17.819379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:18.819943      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:19.821099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:20.821273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:21.564896 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:21.822256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:22.822440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:23.822543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:24.823154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:25.823249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:26.567025 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e840), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478e888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:26.823337      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:27.824076      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:28.824911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:29.827157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:30.827799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:31.565272 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478eb70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478ebe8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478ec30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:31.828577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:32.828757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:33.828941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:34.829199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:35.829446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:36.566061 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478ee70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478eeb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478ef00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:36.830400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:37.830516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:38.830743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:39.830817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:40.830929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:41.566296 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:41.831668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:42.831806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:43.832152      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:44.833149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:45.833240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:46.565294 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40de0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d40f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:46.833685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:47.833831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:48.833964      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:49.835236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:50.835641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:51.564874 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f488), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f4b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:51.836236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:52.836345      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:53.836415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:54.836502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:55.836684      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:52:56.566541 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d411d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d41248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d412f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:52:56.836807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:57.836902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:58.837061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:52:59.838785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:00.838821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:01.565404 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f7b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478f7e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:53:01.839801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:02.839919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:03.839989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:04.840080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:05.840214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:06.565396 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478fa40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478fa88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00478fae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:53:06.840787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:07.840877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:08.841038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:09.841746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:10.841814      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:11.565798 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d41668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d416b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d41800), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:53:11.841961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:12.842166      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:13.842252      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:14.842341      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:15.842491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:16.566683 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-dprnm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-dprnm", GenerateName:"", Namespace:"resourcequota-171", SelfLink:"", UID:"1183c2b6-459e-48dc-9b23-6cf1a143ea55", ResourceVersion:"47869", Generation:0, CreationTimestamp:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-dprnm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d41a70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d41ab8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 28, 13, 50, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d41b00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1228 13:53:16.843032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:17.843240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:18.843419      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:19.843556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:20.843669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:21.566320 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-dprnm" Spec was unchanged and /status reset
  I1228 13:53:21.566456 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-171" for this suite. @ 12/28/24 13:53:21.571
• [195.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/28/24 13:53:21.58
  I1228 13:53:21.580120 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename downward-api @ 12/28/24 13:53:21.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:53:21.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:53:21.603
  STEP: Creating a pod to test downward API volume plugin @ 12/28/24 13:53:21.607
  E1228 13:53:21.844191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:22.845106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:23.846141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:24.846874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:53:25.63
  I1228 13:53:25.634219 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod downwardapi-volume-34a805c2-30be-45a3-81bb-d5654626ef09 container client-container: <nil>
  STEP: delete the pod @ 12/28/24 13:53:25.649
  I1228 13:53:25.668033 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2128" for this suite. @ 12/28/24 13:53:25.672
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/28/24 13:53:25.68
  I1228 13:53:25.680559 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename emptydir @ 12/28/24 13:53:25.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:53:25.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:53:25.703
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/28/24 13:53:25.706
  E1228 13:53:25.846971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:26.847014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:27.847953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:28.848885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:53:29.731
  I1228 13:53:29.737101 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-51d2fb46-9a09-4010-a4d9-0d146f2d8dc8 container test-container: <nil>
  STEP: delete the pod @ 12/28/24 13:53:29.742
  I1228 13:53:29.761828 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6269" for this suite. @ 12/28/24 13:53:29.765
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/28/24 13:53:29.774
  I1228 13:53:29.774607 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename secrets @ 12/28/24 13:53:29.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:53:29.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:53:29.796
  STEP: Creating secret with name secret-test-c43a72fa-2df3-4a12-af3d-dad5fd0f623a @ 12/28/24 13:53:29.8
  STEP: Creating a pod to test consume secrets @ 12/28/24 13:53:29.804
  E1228 13:53:29.849562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:30.849767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:31.850549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:32.850703      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/28/24 13:53:33.83
  I1228 13:53:33.833737 19 output.go:196] Trying to get logs from node ip-172-31-65-66 pod pod-secrets-66036780-284c-47be-8d8b-df9599fa87d5 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/28/24 13:53:33.843
  E1228 13:53:33.850726      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:33.860070 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5023" for this suite. @ 12/28/24 13:53:33.863
• [4.096 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 12/28/24 13:53:33.87
  I1228 13:53:33.871088 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename job @ 12/28/24 13:53:33.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:53:33.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:53:33.893
  STEP: Creating a job @ 12/28/24 13:53:33.897
  STEP: Ensuring active pods == parallelism @ 12/28/24 13:53:33.903
  E1228 13:53:34.851124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:35.851218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 12/28/24 13:53:35.909
  I1228 13:53:36.426487 19 pod_client.go:173] Successfully updated pod "adopt-release-chk5w"
  STEP: Checking that the Job readopts the Pod @ 12/28/24 13:53:36.426
  E1228 13:53:36.852032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:37.852236      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 12/28/24 13:53:38.435
  E1228 13:53:38.852348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:38.950364 19 pod_client.go:173] Successfully updated pod "adopt-release-chk5w"
  STEP: Checking that the Job releases the Pod @ 12/28/24 13:53:38.95
  E1228 13:53:39.852458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:40.852811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:53:40.959510 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1615" for this suite. @ 12/28/24 13:53:40.965
• [7.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/28/24 13:53:40.973
  I1228 13:53:40.973205 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename projected @ 12/28/24 13:53:40.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:53:40.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:53:40.992
  STEP: Creating configMap with name cm-test-opt-del-f2e4b218-018d-4618-897b-b1091a4fcacd @ 12/28/24 13:53:41
  STEP: Creating configMap with name cm-test-opt-upd-03b447e0-ffa1-4b6c-a618-9e2048ccc91d @ 12/28/24 13:53:41.005
  STEP: Creating the pod @ 12/28/24 13:53:41.01
  E1228 13:53:41.853042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:42.853154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-f2e4b218-018d-4618-897b-b1091a4fcacd @ 12/28/24 13:53:43.066
  STEP: Updating configmap cm-test-opt-upd-03b447e0-ffa1-4b6c-a618-9e2048ccc91d @ 12/28/24 13:53:43.074
  STEP: Creating configMap with name cm-test-opt-create-7eb6956e-3a77-4a40-a82b-108203be1ef6 @ 12/28/24 13:53:43.078
  STEP: waiting to observe update in volume @ 12/28/24 13:53:43.085
  E1228 13:53:43.853543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:44.853804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:45.854627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:46.854841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:47.855674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:48.855816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:49.856396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:50.856794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:51.857162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:52.857269      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:53.858241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:54.858363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:55.859398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:56.859604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:57.859885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:58.860070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:53:59.860876      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:00.861074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:01.861256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:02.861503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:03.861744      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:04.862049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:05.862756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:06.862942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:07.863056      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:08.863266      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:09.864630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:10.864806      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:11.864904      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:12.865000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:13.865099      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:14.865869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:15.866450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:16.866550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:17.866896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:18.867093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:19.867962      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:20.868175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:21.868945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:22.869167      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:23.870240      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:24.870397      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:25.871159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:26.871273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:27.872272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:28.872870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:29.872949      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:30.873102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:31.874138      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:32.874239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:33.874413      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:34.874516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:35.875378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:36.875508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:37.875908      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:38.876041      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:39.876877      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:40.877185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:41.877403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:42.877586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:43.878064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:44.878193      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:45.878879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:46.879081      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:47.879769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:48.880003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:49.880777      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:50.880874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:51.881483      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:52.882464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:54:53.433328 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4009" for this suite. @ 12/28/24 13:54:53.438
• [72.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 12/28/24 13:54:53.448
  I1228 13:54:53.448049 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename kubelet-test @ 12/28/24 13:54:53.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:54:53.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:54:53.466
  E1228 13:54:53.882890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:54.883150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:55.883356      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:56.883874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1228 13:54:57.491114 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-612" for this suite. @ 12/28/24 13:54:57.495
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 12/28/24 13:54:57.503
  I1228 13:54:57.503196 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2567517679
  STEP: Building a namespace api object, basename dns @ 12/28/24 13:54:57.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/28/24 13:54:57.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/28/24 13:54:57.526
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-340.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-340.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/28/24 13:54:57.532
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-340.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-340.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/28/24 13:54:57.532
  STEP: creating a pod to probe /etc/hosts @ 12/28/24 13:54:57.532
  STEP: submitting the pod to kubernetes @ 12/28/24 13:54:57.532
  E1228 13:54:57.884586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1228 13:54:58.884902      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/28/24 13:54:59.554
  STEP: looking for the results for each expected name from probers @ 12/28/24 13:54:59.557
  I1228 13:54:59.576712 19 dns_common.go:527] DNS probes using dns-340/dns-test-2a3883fd-0fb6-4dd7-984c-79ea7d7eb2ee succeeded

  STEP: deleting the pod @ 12/28/24 13:54:59.576
  I1228 13:54:59.590435 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-340" for this suite. @ 12/28/24 13:54:59.594
• [2.098 seconds]
------------------------------
SS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1228 13:54:59.601438 19 suites.go:34] Running AfterSuite actions on node 1
  I1228 13:54:59.601509 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.033 seconds]
------------------------------

Ran 404 of 6605 Specs in 6140.177 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h42m21.029884526s
Test Suite Passed
